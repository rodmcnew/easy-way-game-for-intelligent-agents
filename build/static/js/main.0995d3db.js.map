{"version":3,"sources":["webpack:///webpack/bootstrap 8c8019cf548f927af396","webpack:///./~/moment/moment.js","webpack:///./~/fbjs/lib/invariant.js","webpack:///./~/fbjs/lib/warning.js","webpack:///./~/react-dom/lib/reactProdInvariant.js","webpack:///./~/object-assign/index.js","webpack:///./~/react-dom/lib/ReactDOMComponentTree.js","webpack:///./~/fbjs/lib/ExecutionEnvironment.js","webpack:///./~/fbjs/lib/emptyFunction.js","webpack:///./~/react-dom/lib/ReactInstrumentation.js","webpack:///./~/react-dom/lib/ReactUpdates.js","webpack:///./~/react-dom/lib/SyntheticEvent.js","webpack:///./~/react/lib/ReactCurrentOwner.js","webpack:///./~/react/react.js","webpack:///./src/environment/index.js","webpack:///./~/react-dom/lib/DOMLazyTree.js","webpack:///./~/react-dom/lib/DOMProperty.js","webpack:///./~/react-dom/lib/ReactReconciler.js","webpack:///./~/react/lib/React.js","webpack:///./~/react/lib/ReactElement.js","webpack:///./~/fbjs/lib/emptyObject.js","webpack:///./~/prop-types/index.js","webpack:///./~/react-dom/lib/EventPluginHub.js","webpack:///./~/react-dom/lib/EventPropagators.js","webpack:///./~/react-dom/lib/ReactInstanceMap.js","webpack:///./~/react-dom/lib/SyntheticUIEvent.js","webpack:///./src/environment/nestedFloatMatrixMath.js","webpack:///./~/react-dom/lib/ReactBrowserEventEmitter.js","webpack:///./~/react-dom/lib/SyntheticMouseEvent.js","webpack:///./~/react-dom/lib/Transaction.js","webpack:///./~/react-dom/lib/escapeTextContentForBrowser.js","webpack:///./~/react-dom/lib/setInnerHTML.js","webpack:///./src/App.js","webpack:///./~/fbjs/lib/shallowEqual.js","webpack:///./~/react-dom/lib/DOMChildrenOperations.js","webpack:///./~/react-dom/lib/DOMNamespaces.js","webpack:///./~/react-dom/lib/EventPluginRegistry.js","webpack:///./~/react-dom/lib/EventPluginUtils.js","webpack:///./~/react-dom/lib/KeyEscapeUtils.js","webpack:///./~/react-dom/lib/LinkedValueUtils.js","webpack:///./~/react-dom/lib/ReactComponentEnvironment.js","webpack:///./~/react-dom/lib/ReactErrorUtils.js","webpack:///./~/react-dom/lib/ReactUpdateQueue.js","webpack:///./~/react-dom/lib/createMicrosoftUnsafeLocalFunction.js","webpack:///./~/react-dom/lib/getEventCharCode.js","webpack:///./~/react-dom/lib/getEventModifierState.js","webpack:///./~/react-dom/lib/getEventTarget.js","webpack:///./~/react-dom/lib/isEventSupported.js","webpack:///./~/react-dom/lib/shouldUpdateReactComponent.js","webpack:///./~/react-dom/lib/validateDOMNesting.js","webpack:///./~/react/lib/ReactComponent.js","webpack:///./~/react/lib/ReactNoopUpdateQueue.js","webpack:///./src/agent/hand-programmed/helper/feeler.js","webpack:///./src/agent/machine-learning/helper/RewardCalculator.js","webpack:///./src/agent/machine-learning/helper/qStateRenderer.js","webpack:///./src/modules/deep-q-network/neural-network/NeuralNetwork.js","webpack:///./src/modules/fast-deep-net/layer/OutputLayer.js","webpack:///./~/fbjs/lib/EventListener.js","webpack:///./~/fbjs/lib/focusNode.js","webpack:///./~/fbjs/lib/getActiveElement.js","webpack:///./~/moment/locale/af.js","webpack:///./~/moment/locale/ar-dz.js","webpack:///./~/moment/locale/ar-kw.js","webpack:///./~/moment/locale/ar-ly.js","webpack:///./~/moment/locale/ar-ma.js","webpack:///./~/moment/locale/ar-sa.js","webpack:///./~/moment/locale/ar-tn.js","webpack:///./~/moment/locale/ar.js","webpack:///./~/moment/locale/az.js","webpack:///./~/moment/locale/be.js","webpack:///./~/moment/locale/bg.js","webpack:///./~/moment/locale/bn.js","webpack:///./~/moment/locale/bo.js","webpack:///./~/moment/locale/br.js","webpack:///./~/moment/locale/bs.js","webpack:///./~/moment/locale/ca.js","webpack:///./~/moment/locale/cs.js","webpack:///./~/moment/locale/cv.js","webpack:///./~/moment/locale/cy.js","webpack:///./~/moment/locale/da.js","webpack:///./~/moment/locale/de-at.js","webpack:///./~/moment/locale/de-ch.js","webpack:///./~/moment/locale/de.js","webpack:///./~/moment/locale/dv.js","webpack:///./~/moment/locale/el.js","webpack:///./~/moment/locale/en-au.js","webpack:///./~/moment/locale/en-ca.js","webpack:///./~/moment/locale/en-gb.js","webpack:///./~/moment/locale/en-ie.js","webpack:///./~/moment/locale/en-nz.js","webpack:///./~/moment/locale/eo.js","webpack:///./~/moment/locale/es-do.js","webpack:///./~/moment/locale/es.js","webpack:///./~/moment/locale/et.js","webpack:///./~/moment/locale/eu.js","webpack:///./~/moment/locale/fa.js","webpack:///./~/moment/locale/fi.js","webpack:///./~/moment/locale/fo.js","webpack:///./~/moment/locale/fr-ca.js","webpack:///./~/moment/locale/fr-ch.js","webpack:///./~/moment/locale/fr.js","webpack:///./~/moment/locale/fy.js","webpack:///./~/moment/locale/gd.js","webpack:///./~/moment/locale/gl.js","webpack:///./~/moment/locale/gom-latn.js","webpack:///./~/moment/locale/he.js","webpack:///./~/moment/locale/hi.js","webpack:///./~/moment/locale/hr.js","webpack:///./~/moment/locale/hu.js","webpack:///./~/moment/locale/hy-am.js","webpack:///./~/moment/locale/id.js","webpack:///./~/moment/locale/is.js","webpack:///./~/moment/locale/it.js","webpack:///./~/moment/locale/ja.js","webpack:///./~/moment/locale/jv.js","webpack:///./~/moment/locale/ka.js","webpack:///./~/moment/locale/kk.js","webpack:///./~/moment/locale/km.js","webpack:///./~/moment/locale/kn.js","webpack:///./~/moment/locale/ko.js","webpack:///./~/moment/locale/ky.js","webpack:///./~/moment/locale/lb.js","webpack:///./~/moment/locale/lo.js","webpack:///./~/moment/locale/lt.js","webpack:///./~/moment/locale/lv.js","webpack:///./~/moment/locale/me.js","webpack:///./~/moment/locale/mi.js","webpack:///./~/moment/locale/mk.js","webpack:///./~/moment/locale/ml.js","webpack:///./~/moment/locale/mr.js","webpack:///./~/moment/locale/ms-my.js","webpack:///./~/moment/locale/ms.js","webpack:///./~/moment/locale/my.js","webpack:///./~/moment/locale/nb.js","webpack:///./~/moment/locale/ne.js","webpack:///./~/moment/locale/nl-be.js","webpack:///./~/moment/locale/nl.js","webpack:///./~/moment/locale/nn.js","webpack:///./~/moment/locale/pa-in.js","webpack:///./~/moment/locale/pl.js","webpack:///./~/moment/locale/pt-br.js","webpack:///./~/moment/locale/pt.js","webpack:///./~/moment/locale/ro.js","webpack:///./~/moment/locale/ru.js","webpack:///./~/moment/locale/sd.js","webpack:///./~/moment/locale/se.js","webpack:///./~/moment/locale/si.js","webpack:///./~/moment/locale/sk.js","webpack:///./~/moment/locale/sl.js","webpack:///./~/moment/locale/sq.js","webpack:///./~/moment/locale/sr-cyrl.js","webpack:///./~/moment/locale/sr.js","webpack:///./~/moment/locale/ss.js","webpack:///./~/moment/locale/sv.js","webpack:///./~/moment/locale/sw.js","webpack:///./~/moment/locale/ta.js","webpack:///./~/moment/locale/te.js","webpack:///./~/moment/locale/tet.js","webpack:///./~/moment/locale/th.js","webpack:///./~/moment/locale/tl-ph.js","webpack:///./~/moment/locale/tlh.js","webpack:///./~/moment/locale/tr.js","webpack:///./~/moment/locale/tzl.js","webpack:///./~/moment/locale/tzm-latn.js","webpack:///./~/moment/locale/tzm.js","webpack:///./~/moment/locale/uk.js","webpack:///./~/moment/locale/ur.js","webpack:///./~/moment/locale/uz-latn.js","webpack:///./~/moment/locale/uz.js","webpack:///./~/moment/locale/vi.js","webpack:///./~/moment/locale/x-pseudo.js","webpack:///./~/moment/locale/yo.js","webpack:///./~/moment/locale/zh-cn.js","webpack:///./~/moment/locale/zh-hk.js","webpack:///./~/moment/locale/zh-tw.js","webpack:///./~/process/browser.js","webpack:///./~/promise/lib/core.js","webpack:///./~/prop-types/factory.js","webpack:///./~/react-dom/lib/CSSProperty.js","webpack:///./~/react-dom/lib/CallbackQueue.js","webpack:///./~/react-dom/lib/DOMPropertyOperations.js","webpack:///./~/react-dom/lib/ReactDOMComponentFlags.js","webpack:///./~/react-dom/lib/ReactDOMSelect.js","webpack:///./~/react-dom/lib/ReactEmptyComponent.js","webpack:///./~/react-dom/lib/ReactFeatureFlags.js","webpack:///./~/react-dom/lib/ReactHostComponent.js","webpack:///./~/react-dom/lib/ReactInputSelection.js","webpack:///./~/react-dom/lib/ReactMount.js","webpack:///./~/react-dom/lib/ReactNodeTypes.js","webpack:///./~/react-dom/lib/ViewportMetrics.js","webpack:///./~/react-dom/lib/accumulateInto.js","webpack:///./~/react-dom/lib/forEachAccumulated.js","webpack:///./~/react-dom/lib/getHostComponentFromComposite.js","webpack:///./~/react-dom/lib/getTextContentAccessor.js","webpack:///./~/react-dom/lib/instantiateReactComponent.js","webpack:///./~/react-dom/lib/isTextInputElement.js","webpack:///./~/react-dom/lib/setTextContent.js","webpack:///./~/react-dom/lib/traverseAllChildren.js","webpack:///./~/react/lib/ReactComponentTreeHook.js","webpack:///./~/react/lib/ReactElementSymbol.js","webpack:///./~/react/lib/canDefineProperty.js","webpack:///./~/asap/browser-raw.js","webpack:///./src/GameRunner.js","webpack:///./src/agent/hand-programmed/LookAhead.js","webpack:///./src/agent/hand-programmed/LookAheadIn5x3Viewport.js","webpack:///./src/agent/machine-learning/DeepQNetwork.js","webpack:///./src/agents.js","webpack:///./src/component/BrainExportButton.js","webpack:///./src/component/GameRulesDisplay.js","webpack:///./src/component/ObservationRenderer.js","webpack:///./src/component/ScoreHistoryChart.js","webpack:///./src/component/StatsDisplay.js","webpack:///./src/data/saves/deep-q-network-9x9.js","webpack:///./src/data/saves/tabular-sarsa.js","webpack:///./src/environment/AgentObservation.js","webpack:///./src/environment/State.js","webpack:///./src/environment/generateInitialState.js","webpack:///./src/environment/viewportConversions.js","webpack:///./src/index.js","webpack:///./src/modules/deep-q-network/Agent.js","webpack:///./src/modules/deep-q-network/math/arrayMath.js","webpack:///./src/modules/deep-q-network/math/random.js","webpack:///./src/modules/deep-q-network/neural-network/networkTest.js","webpack:///./src/modules/fast-deep-net/activation-function/LeakyRelu.js","webpack:///./src/modules/fast-deep-net/activation-function/Linear.js","webpack:///./src/modules/fast-deep-net/layer/HiddenLayer.js","webpack:///./src/modules/fast-deep-net/layer/InputLayer.js","webpack:///./src/modules/fast-deep-net/math/arrayShuffle.js","webpack:///./src/modules/fast-deep-net/network/DeepNetwork.js","webpack:///./src/modules/fast-deep-net/trainer/shuffleTrain.js","webpack:///./src/modules/tabular-sarsa-adaptor/TabularSARSA.js","webpack:///./~/chart.js/src/chart.js","webpack:///./~/chart.js/src/charts/Chart.Bar.js","webpack:///./~/chart.js/src/charts/Chart.Bubble.js","webpack:///./~/chart.js/src/charts/Chart.Doughnut.js","webpack:///./~/chart.js/src/charts/Chart.Line.js","webpack:///./~/chart.js/src/charts/Chart.PolarArea.js","webpack:///./~/chart.js/src/charts/Chart.Radar.js","webpack:///./~/chart.js/src/charts/Chart.Scatter.js","webpack:///./~/chart.js/src/controllers/controller.bar.js","webpack:///./~/chart.js/src/controllers/controller.bubble.js","webpack:///./~/chart.js/src/controllers/controller.doughnut.js","webpack:///./~/chart.js/src/controllers/controller.line.js","webpack:///./~/chart.js/src/controllers/controller.polarArea.js","webpack:///./~/chart.js/src/controllers/controller.radar.js","webpack:///./~/chart.js/src/core/core.animation.js","webpack:///./~/chart.js/src/core/core.canvasHelpers.js","webpack:///./~/chart.js/src/core/core.controller.js","webpack:///./~/chart.js/src/core/core.datasetController.js","webpack:///./~/chart.js/src/core/core.element.js","webpack:///./~/chart.js/src/core/core.helpers.js","webpack:///./~/chart.js/src/core/core.interaction.js","webpack:///./~/chart.js/src/core/core.js","webpack:///./~/chart.js/src/core/core.layoutService.js","webpack:///./~/chart.js/src/core/core.legend.js","webpack:///./~/chart.js/src/core/core.plugin.js","webpack:///./~/chart.js/src/core/core.scale.js","webpack:///./~/chart.js/src/core/core.scaleService.js","webpack:///./~/chart.js/src/core/core.ticks.js","webpack:///./~/chart.js/src/core/core.title.js","webpack:///./~/chart.js/src/core/core.tooltip.js","webpack:///./~/chart.js/src/elements/element.arc.js","webpack:///./~/chart.js/src/elements/element.line.js","webpack:///./~/chart.js/src/elements/element.point.js","webpack:///./~/chart.js/src/elements/element.rectangle.js","webpack:///./~/chart.js/src/platforms/platform.dom.js","webpack:///./~/chart.js/src/platforms/platform.js","webpack:///./~/chart.js/src/scales/scale.category.js","webpack:///./~/chart.js/src/scales/scale.linear.js","webpack:///./~/chart.js/src/scales/scale.linearbase.js","webpack:///./~/chart.js/src/scales/scale.logarithmic.js","webpack:///./~/chart.js/src/scales/scale.radialLinear.js","webpack:///./~/chart.js/src/scales/scale.time.js","webpack:///./~/chartjs-color-string/color-string.js","webpack:///./~/chartjs-color/index.js","webpack:///./~/chartjs-color/~/color-convert/conversions.js","webpack:///./~/chartjs-color/~/color-convert/index.js","webpack:///./~/color-name/index.js","webpack:///./src/App.css","webpack:///./~/fbjs/lib/camelize.js","webpack:///./~/fbjs/lib/camelizeStyleName.js","webpack:///./~/fbjs/lib/containsNode.js","webpack:///./~/fbjs/lib/createArrayFromMixed.js","webpack:///./~/fbjs/lib/createNodesFromMarkup.js","webpack:///./~/fbjs/lib/getMarkupWrap.js","webpack:///./~/fbjs/lib/getUnboundedScrollPosition.js","webpack:///./~/fbjs/lib/hyphenate.js","webpack:///./~/fbjs/lib/hyphenateStyleName.js","webpack:///./~/fbjs/lib/isNode.js","webpack:///./~/fbjs/lib/isTextNode.js","webpack:///./~/fbjs/lib/memoizeStringOnly.js","webpack:///./~/moment/locale ^\\.\\/.*$","webpack:///./~/promise/lib/es6-extensions.js","webpack:///./~/promise/lib/rejection-tracking.js","webpack:///./~/prop-types/checkPropTypes.js","webpack:///./~/prop-types/factoryWithThrowingShims.js","webpack:///./~/prop-types/factoryWithTypeCheckers.js","webpack:///./~/prop-types/lib/ReactPropTypesSecret.js","webpack:///./~/react-dom/index.js","webpack:///./~/react-dom/lib/ARIADOMPropertyConfig.js","webpack:///./~/react-dom/lib/AutoFocusUtils.js","webpack:///./~/react-dom/lib/BeforeInputEventPlugin.js","webpack:///./~/react-dom/lib/CSSPropertyOperations.js","webpack:///./~/react-dom/lib/ChangeEventPlugin.js","webpack:///./~/react-dom/lib/Danger.js","webpack:///./~/react-dom/lib/DefaultEventPluginOrder.js","webpack:///./~/react-dom/lib/EnterLeaveEventPlugin.js","webpack:///./~/react-dom/lib/FallbackCompositionState.js","webpack:///./~/react-dom/lib/HTMLDOMPropertyConfig.js","webpack:///./~/react-dom/lib/ReactChildReconciler.js","webpack:///./~/react-dom/lib/ReactComponentBrowserEnvironment.js","webpack:///./~/react-dom/lib/ReactCompositeComponent.js","webpack:///./~/react-dom/lib/ReactDOM.js","webpack:///./~/react-dom/lib/ReactDOMComponent.js","webpack:///./~/react-dom/lib/ReactDOMContainerInfo.js","webpack:///./~/react-dom/lib/ReactDOMEmptyComponent.js","webpack:///./~/react-dom/lib/ReactDOMFeatureFlags.js","webpack:///./~/react-dom/lib/ReactDOMIDOperations.js","webpack:///./~/react-dom/lib/ReactDOMInput.js","webpack:///./~/react-dom/lib/ReactDOMOption.js","webpack:///./~/react-dom/lib/ReactDOMSelection.js","webpack:///./~/react-dom/lib/ReactDOMTextComponent.js","webpack:///./~/react-dom/lib/ReactDOMTextarea.js","webpack:///./~/react-dom/lib/ReactDOMTreeTraversal.js","webpack:///./~/react-dom/lib/ReactDefaultBatchingStrategy.js","webpack:///./~/react-dom/lib/ReactDefaultInjection.js","webpack:///./~/react-dom/lib/ReactEventEmitterMixin.js","webpack:///./~/react-dom/lib/ReactEventListener.js","webpack:///./~/react-dom/lib/ReactInjection.js","webpack:///./~/react-dom/lib/ReactMarkupChecksum.js","webpack:///./~/react-dom/lib/ReactMultiChild.js","webpack:///./~/react-dom/lib/ReactOwner.js","webpack:///./~/react-dom/lib/ReactPropTypesSecret.js","webpack:///./~/react-dom/lib/ReactReconcileTransaction.js","webpack:///./~/react-dom/lib/ReactRef.js","webpack:///./~/react-dom/lib/ReactServerRenderingTransaction.js","webpack:///./~/react-dom/lib/ReactServerUpdateQueue.js","webpack:///./~/react-dom/lib/ReactVersion.js","webpack:///./~/react-dom/lib/SVGDOMPropertyConfig.js","webpack:///./~/react-dom/lib/SelectEventPlugin.js","webpack:///./~/react-dom/lib/SimpleEventPlugin.js","webpack:///./~/react-dom/lib/SyntheticAnimationEvent.js","webpack:///./~/react-dom/lib/SyntheticClipboardEvent.js","webpack:///./~/react-dom/lib/SyntheticCompositionEvent.js","webpack:///./~/react-dom/lib/SyntheticDragEvent.js","webpack:///./~/react-dom/lib/SyntheticFocusEvent.js","webpack:///./~/react-dom/lib/SyntheticInputEvent.js","webpack:///./~/react-dom/lib/SyntheticKeyboardEvent.js","webpack:///./~/react-dom/lib/SyntheticTouchEvent.js","webpack:///./~/react-dom/lib/SyntheticTransitionEvent.js","webpack:///./~/react-dom/lib/SyntheticWheelEvent.js","webpack:///./~/react-dom/lib/adler32.js","webpack:///./~/react-dom/lib/dangerousStyleValue.js","webpack:///./~/react-dom/lib/findDOMNode.js","webpack:///./~/react-dom/lib/flattenChildren.js","webpack:///./~/react-dom/lib/getEventKey.js","webpack:///./~/react-dom/lib/getIteratorFn.js","webpack:///./~/react-dom/lib/getNodeForCharacterOffset.js","webpack:///./~/react-dom/lib/getVendorPrefixedEventName.js","webpack:///./~/react-dom/lib/quoteAttributeValueForBrowser.js","webpack:///./~/react-dom/lib/renderSubtreeIntoContainer.js","webpack:///./~/react-scripts/config/polyfills.js","webpack:///./~/react-scripts/~/whatwg-fetch/fetch.js","webpack:///./~/react/lib/ReactChildren.js","webpack:///./~/react/lib/ReactClass.js","webpack:///./~/react/lib/ReactDOMFactories.js","webpack:///./~/react/lib/ReactPropTypeLocationNames.js","webpack:///./~/react/lib/ReactPropTypes.js","webpack:///./~/react/lib/ReactPureComponent.js","webpack:///./~/react/lib/getNextDebugID.js","webpack:///./~/react/lib/onlyChild.js","webpack:///./~/react/lib/traverseAllChildren.js","webpack:///./~/tabular-sarsa/src/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/react/lib/PooledClass.js"],"names":["config","size","viewPortSize","viewPortOffset","viewPortPosition","verticalDeltaScore","deltaScorePerAction","tileTypeToDeltaScore","actions","Environment","_state","applyAction","bind","getAgentObservation","getGodObservation","viewportOutputMatrix","actionCode","deltaScoreFromHittingEdge","position","score","Error","tileType","tileTypes","isComplete","shiftVector","Math","ceil","trimVector","floor","limit","x","y","createMatrix","shiftAndTrimMatrix","matrixToFlatArray","dimensions","matrix","i","Float64Array","defaultValue","outputMatrix","shiftX","shiftY","fromXLen","length","fromYLen","xLen","yLen","fromX","fromXRow","toXRow","fromY","vectorI","vector","xI","yI","settings","renderingEnabled","speed","ticksPerIntervalWhenNotRendering","autoPlay","App","setupInterval","handleGameRunnerStatusChange","handleSpeedSelectorChange","handleGameRendererRender","handleAgentSelectorChange","handleClearBrainClick","handleManualControlKeyDown","handleManualControlClick","_agents","_settings","state","statsToDisplay","agentObservation","godObservation","universalGameNumber","currentAgentIndex","lastStatusRenderTime","lastStatusChartRenderTime","scoreHistoryChartData","_gameRunner","clearStatsAndNewGame","setState","stats","nowMilliseconds","Date","getTime","currentScore","actionsPerSecond","toLocaleString","lastGameScore","averageFinalScore","scoreSum","gameCount","self","clearInterval","_intervalReference","ticksPerInterval","setInterval","tick","setRenderingEnabled","clearStats","newGame","class","value","newEnableRenderingValue","event","setSpeed","target","prevProps","prevState","clearCurrentAgentBrain","indexOf","key","takeAction","map","agent","index","name","width","description","getFeelerValue","getFeelerValues","filterPathsWithFirstAction","getBestFeeler","getActionViaFeelers","oppositeActions","w","a","s","d","actionVectors","observation","feelerSteps","forEach","step","cost","feelerPaths","feelerPath","path","paths","blacklistedFirstAction","filter","feelersWithValues","reduce","bestFeelerSoFar","feeler","lastAction","safeFeelerPaths","bestFeeler","maxAbsReward","RewardCalculator","_lastScore","reward","isFinite","renderActionResponse","renderReward","actionElements","randomActionElement","rewardElements","randomActionValueElement","ensureElementsExist","document","getElementById","innerHTML","actionResponse","barFrontPadding","maxActionValue","minActionValue","len","weights","fixedValue","style","toFixed","wasRandom","good","bad","inputCount","hiddenCount","outputCount","activationFunction","learningRate","OutputLayer","nodeCount","inputLayer","inputNodeCount","weightI","weightLen","random","outputs","xToY","activationFunctionDerivative","yToSlope","errorGradients","inputs","neuronI","sum","inputI","targetOutputs","historyLength","defaultStats","actionCount","lastSecondsActionCount","lastFinalScores","gameCountToScore","gameCountToAverageScore","lastActionScore","totalReward","GameRunner","onRender","onStatusChange","_universalGameNumber","_renderingEnabled","_onRender","_stats","Object","assign","_onStatusChange","_agentObservation","_godObservation","_agentClass","_nextAction","agentClass","_agent","_environment","_updateObservations","clearBrain","getAction","push","shift","totalScoreFinaleScore","acc","val","slice","lookToSideCount","leftPrepend","rightPrepend","appends","sideWaysAmount","append","LookAhead","action","LookAheadIn5x3Viewport","numberOfStates","rewardCalculator","loadFromJson","MatrixDeepQNetwork","lastReward","calcLastReward","actionIndex","learnAndAct","getLastActionStats","saveToJson","getName","getDescription","BrainExportButton","onExportButtonClick","exportData","gameRunner","props","getCurrentAgentInstance","exportBrain","alert","JSON","stringify","height","propTypes","object","isRequired","GameRulesDisplay","environmentConfig","ObservationRenderer","gameNumber","previousPositions","nextProps","scalarPosition","agentTileColors","calculateAgentTileColors","godTileColors","calculateGodTileColors","row","rowIndex","tileColor","tileIndex","backgroundColor","number","tileColors","xLength","yLength","inPreviousPosition","color","r","g","b","chartGameCount","ScoreHistoryChart","chartCanvas","refs","chart","myChart","type","data","labels","datasets","label","borderColor","borderWidth","lineTension","options","animation","duration","elements","point","radius","scales","yAxes","ticks","min","max","xAxes","display","keys","mapStatsToChartData","dataset","update","StatsDisplay","parse","AgentObservation","State","generateInitialState","generateRandomTileTypes","xi","Array","yi","convert9x9to7x5","convert9x9to5x3","convert9x9to5x2","convert9x9to3x2","convert9x9to7x5OutputMatrix","convert9x9to5x3OutputMatrix","convert9x9to5x2OutputMatrix","convert9x9to3x2OutputMatrix","render","arrayMath","Agent","numberOfActions","defaultOptions","discountFactor","randomActionProbability","experienceRecordInterval","experienceSize","learningStepsPerIteration","tdErrorClamp","_options","_neuralNetwork","numberOfInputs","_lastActionStats","tdError","exp","expi","t","lastObservation","currentObservation","currentAction","_learn","actionWasRandom","actionWeights","actionMatrix","invoke","getIndexOfMaxValue","lastActionStats","r1","_learnFromExample","k","ri","e","estimatedFutureReward","prediction","targetActionValue","learn","error","json","array","maxValue","maxIndex","v","gaussRandom","getRandomInt","getRandomIntWithZeroMin","u","sqrt","log","cos","PI","networkTest","trainingSets","network","LeakyRelu","Linear","HiddenLayer","outputLayer","outputLayerNodeCount","outputLayerWeights","outputLayerInputNodeCount","outputLayerErrorGradients","errorWithRespectToOutput","outputI","InputLayer","arrayShuffle","counter","temp","DeepNetwork","layerConfig","hiddenConfig","hiddenLayer","outputConfig","setOutputLayer","feedForward","backPropagateCalculateErrorGradient","backPropagateOptimize","layers","from","shuffleTrain","epoch","setNumber","errors","console","neuralNetwork","maxEpochs","setI","setCount","set","arrayOfBinariesToInt","viewportConversions","rememberLastAction","viewportPixelCount","stateCount","pow","output","observationToInt","viewportState","TabularSARSA","_lastAction","decide","lastActionStat","wasRandomlyChosen"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;AAEA,EAAC;AACD;AACA;AACA;AACA,EAAC,qBAAqB;;AAEtB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;;AAEA,wBAAuB,SAAS;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,IAAI;AAC3B;;AAEA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAwC,IAAI;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA4B;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAoB,iCAAiC;AACrD;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yLAAwL,IAAI;;AAE5L,kEAAiE,IAAI;;AAErE;;AAEA;;AAEA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uCAAsC,YAAY;AAClD;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA0B;AAC1B,6BAA4B;AAC5B,0BAAyB,EAAE,EAAE;AAC7B,0BAAyB,EAAE,EAAE;AAC7B,+BAA8B,EAAE,EAAE;AAClC,8BAA6B;AAC7B,kCAAiC;AACjC,sCAAqC;AACrC,0BAAyB,IAAI,EAAE;AAC/B,0BAAyB,IAAI,EAAE;AAC/B,+BAA8B,IAAI,EAAE;;AAEpC,4BAA2B;AAC3B,iCAAgC;;AAEhC,2CAA0C;AAC1C,kDAAiD;;AAEjD,qCAAoC,IAAI,IAAI;;AAE5C;AACA;AACA,6HAA4H,IAAI;;;AAGhI;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,2CAA0C;AAC1C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,kBAAkB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB;AACA;AACA;AACA,gBAAe,QAAQ;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;AAED;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;AAED;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,OAAO;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,YAAY;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;;;AAGA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wCAAuC,EAAE,IAAI,EAAE;AAC/C,qCAAoC,EAAE,IAAI,EAAE;;AAE5C;;AAEA;AACA,8BAA6B,EAAE;AAC/B,wBAAuB,EAAE;AACzB,0BAAyB,EAAE;AAC3B,wBAAuB,EAAE;AACzB,sBAAqB,EAAE,IAAI,EAAE;AAC7B,qBAAoB,EAAE;AACtB,4BAA2B,GAAG;AAC9B,sBAAqB,EAAE;AACvB;AACA,wBAAuB,EAAE,IAAI,EAAE;AAC/B,uBAAsB,EAAE,IAAI,EAAE;AAC9B,qBAAoB,EAAE;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA,6MAA4M,EAAE;;AAE9M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kCAAiC;AACjC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,+BAA+B;AAC9C;AACA;;AAEA;AACA,WAAU,OAAO;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,gBAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,sBAAsB;AACrC;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,+BAA8B,gBAAgB;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,6BAA6B;AAClC;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe;;AAEf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,cAAc;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAA+B,qBAAqB;AACpD,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAA+B,qBAAqB;AACpD,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAoB;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,EAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;;;AAGD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAoB,mBAAmB;AACvC;AACA;;AAEA;AACA;AACA;;AAEA,kBAAiB,mBAAmB;AACpgBAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;;AAED;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC;;;;;;;;AC92ID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sDAAqD;AACrD,MAAK;AACL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA,2BAA0B;AAC1B;AACA;AACA;;AAEA,4B;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yFAAwF,aAAa;AACrG;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAe;AACf;;AAEA;AACA,+FAA8F,eAAe;AAC7G;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA,0B;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qDAAoD;;AAEpD,uBAAsB,mBAAmB;AACzC;AACA;;AAEA;;AAEA;AACA;AACA,yBAAwB;;AAExB;AACA;;AAEA,qC;;;;;;ACrCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH,mCAAkC;AAClC;AACA;AACA;;AAEA;AACA,GAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAgB,sBAAsB;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB,oBAAoB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE;AAClE;AACA;AACA;AACA,WAAU,oBAAoB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAQ,4CAA4C;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAQ,gBAAgB;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wC;;;;;;ACjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uC;;;;;;AClCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gC;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAkB,wB;;;;;;ACtBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,eAAe;AAC1B,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAgD;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,+B;;;;;;ACzPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,YAAW,OAAO;AAClB,YAAW,EAAE;AACb,YAAW,OAAO;AAClB,YAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,eAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,oBAAmB,uCAAuC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,QAAQ;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA8B;AAC9B;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,E;;;;;;AC1QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;;AAEA;;AAEA,oC;;;;;;;;AC7BA;;AAEA;;;;;;;;;;;;;;;;ACFA;;AACA;;;;AACA;;;;;;AAEO,KAAMA,0BAAS;AAClB;AACAC,WAAM,CAAC,EAAD,EAAK,EAAL,CAFY;;AAIlB;AACAC,mBAAc,CAAC,CAAD,EAAI,CAAJ,CALI;AAMlBC,qBAAgB,CAAC,CAAD,EAAI,CAAJ,CANE;AAOlBC,uBAAkB,CAAC,CAAD,EAAI,CAAJ,CAPA;;AASlB;AACAC,yBAAoB,EAVF;AAWlBC,0BAAqB,CAAC,CAXJ;AAYlBC,2BAAsB,CAAC,CAAD,EAAI,CAAC,EAAL;AAZJ,EAAf;;AAeA,KAAMC,4BAAU,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAhB;;AAEP;;;;KAGqBC,W;AACjB,4BAAc;AAAA;;AACV,cAAKC,MAAL,GAAc,iDAAd;;AAEA;AACA,cAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,cAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAA3B;AACA,cAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;;AAEA;AACA,cAAKG,oBAAL,GAA4B,yCAAaf,OAAOE,YAApB,CAA5B;AACH;;AAED;;;;;;;;;qCAKYc,U,EAAY;AACpB,iBAAIC,4BAA4B,CAAhC;AACA,qBAAQD,UAAR;AACI,sBAAK,GAAL;AACI,yBAAI,KAAKN,MAAL,CAAYQ,QAAZ,CAAqB,CAArB,IAA0B,CAA9B,EAAiC;AAC7B,8BAAKR,MAAL,CAAYQ,QAAZ,CAAqB,CAArB;AACA,8BAAKR,MAAL,CAAYS,KAAZ,IAAqBnB,OAAOK,kBAA5B;AACH,sBAHD,MAGO;AACHY,qDAA4BjB,OAAOO,oBAAP,CAA4B,CAA5B,CAA5B,CADG,CACwD;AAC9D;AACD;AACJ,sBAAK,GAAL;AACI,yBAAI,KAAKG,MAAL,CAAYQ,QAAZ,CAAqB,CAArB,IAA0B,CAA9B,EAAiC;AAC7B,8BAAKR,MAAL,CAAYQ,QAAZ,CAAqB,CAArB;AACH,sBAFD,MAEO;AACHD,qDAA4BjB,OAAOO,oBAAP,CAA4B,CAA5B,CAA5B,CADG,CACwD;AAC9D;AACD;AACJ,sBAAK,GAAL;AACI,0BAAKG,MAAL,CAAYQ,QAAZ,CAAqB,CAArB;AACA,0BAAKR,MAAL,CAAYS,KAAZ,GAAoB,KAAKT,MAAL,CAAYS,KAAZ,GAAoBnB,OAAOK,kBAA/C;AACA;AACJ,sBAAK,GAAL;AACI,yBAAI,KAAKK,MAAL,CAAYQ,QAAZ,CAAqB,CAArB,IAA0BlB,OAAOC,IAAP,CAAY,CAAZ,IAAiB,CAA/C,EAAkD;AAC9C,8BAAKS,MAAL,CAAYQ,QAAZ,CAAqB,CAArB;AACH,sBAFD,MAEO;AACHD,qDAA4BjB,OAAOO,oBAAP,CAA4B,CAA5B,CAA5B,CADG,CACwD;AAC9D;AACD;AACJ;AACI,2BAAM,IAAIa,KAAJ,CAAU,qBAAqBJ,UAA/B,CAAN;AA5BR;;AA+BA,iBAAMK,WAAW,KAAKX,MAAL,CAAYY,SAAZ,CAAsB,KAAKZ,MAAL,CAAYQ,QAAZ,CAAqB,CAArB,CAAtB,EAA+C,KAAKR,MAAL,CAAYQ,QAAZ,CAAqB,CAArB,CAA/C,CAAjB;;AAEA,kBAAKR,MAAL,CAAYS,KAAZ,IACInB,OAAOO,oBAAP,CAA4Bc,QAA5B,IACArB,OAAOM,mBADP,GAEAW,yBAHJ;;AAKA,kBAAKP,MAAL,CAAYa,UAAZ,GAAyB,KAAKb,MAAL,CAAYQ,QAAZ,CAAqB,CAArB,MAA4BlB,OAAOC,IAAP,CAAY,CAAZ,IAAiB,CAAtE;AACH;;AAED;;;;;;;;+CAKsB;AAClB,iBAAMuB,cAAc,CAChBC,KAAKC,IAAL,CAAU,KAAKhB,MAAL,CAAYQ,QAAZ,CAAqB,CAArB,IAA0BlB,OAAOC,IAAP,CAAY,CAAZ,IAAiB,CAArD,CADgB,EAEhBwB,KAAKC,IAAL,CAAU,KAAKhB,MAAL,CAAYQ,QAAZ,CAAqB,CAArB,IAA0BlB,OAAOC,IAAP,CAAY,CAAZ,IAAiB,CAArD,IAA0DD,OAAOG,cAAP,CAAsB,CAAtB,CAF1C,CAApB;AAIA,iBAAMwB,aAAa,CACfF,KAAKG,KAAL,CAAW,CAAC5B,OAAOC,IAAP,CAAY,CAAZ,IAAiBD,OAAOE,YAAP,CAAoB,CAApB,CAAlB,IAA4C,CAAvD,CADe,EAEfuB,KAAKG,KAAL,CAAW,CAAC5B,OAAOC,IAAP,CAAY,CAAZ,IAAiBD,OAAOE,YAAP,CAAoB,CAApB,CAAlB,IAA4C,CAAvD,CAFe,CAAnB;;AAKA,4DAAmB,KAAKQ,MAAL,CAAYY,SAA/B,EAA0CE,WAA1C,EAAuD,CAAvD,EAA0DG,UAA1D,EAAsE,KAAKZ,oBAA3E;;AAEA;AACA,iBAAMc,QAAQ7B,OAAOC,IAAP,CAAY,CAAZ,IAAiB0B,WAAW,CAAX,CAAjB,GAAiCH,YAAY,CAAZ,CAA/C;AACA,iBAAIK,QAAQ7B,OAAOE,YAAP,CAAoB,CAApB,CAAZ,EAAoC;AAChC,sBAAK,IAAI4B,IAAI,CAAb,EAAgBA,IAAI9B,OAAOE,YAAP,CAAoB,CAApB,CAApB,EAA4C4B,GAA5C,EAAiD;AAC7C,0BAAK,IAAIC,IAAIF,KAAb,EAAoBE,IAAI/B,OAAOE,YAAP,CAAoB,CAApB,CAAxB,EAAgD6B,GAAhD,EAAqD;AACjD,8BAAKhB,oBAAL,CAA0Be,CAA1B,EAA6BC,CAA7B,IAAkC,CAAlC;AACH;AACJ;AACJ;;AAED,oBAAO,+BACH,KAAKhB,oBADF,EAEH,KAAKL,MAAL,CAAYS,KAFT,EAGHnB,OAAOI,gBAHJ,CAAP;AAKH;;;6CAEmB;AAChB,oBAAO,KAAKM,MAAZ;AACH;;;;;;mBAjGgBD,W;;;;;;ACxBrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpiBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA,sCAAoE,yBAAyB;;AAE7F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,oDAAoD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA,8B;;;;;;AChNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,0DAA0D;AACvE,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,aAAa;AAC1B,cAAa,0BAA0B;AACvC,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kC;;;;;;ACtKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA,wB;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,YAAW,EAAE;AACb,YAAW,cAAc;AACzB,YAAW,EAAE;AACb;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb;AACA,YAAW,EAAE;AACb,YAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA,+B;;;;;;;;ACnVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,8B;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;;AAEA;AACA,gBAAe,OAAO;AACtB;AACA;;AAEA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA,yGAAwG;AACxG;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,UAAU;AACxB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA,iC;;;;;;ACpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mC;;;;;;ACpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA,mC;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA,mC;;;;;;;;;;;SCnDgBuB,Y,GAAAA,Y;SAoBAC,kB,GAAAA,kB;SA8CAC,iB,GAAAA,iB;AAxEhB;;;;;;AAMO,UAASF,YAAT,CAAsBG,UAAtB,EAAkC;AACrC,SAAIC,SAAS,EAAb;;AAEA,UAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,WAAW,CAAX,CAApB,EAAmCE,GAAnC,EAAwC;AACpCD,gBAAOC,CAAP,IAAY,IAAIC,YAAJ,CAAiBH,WAAW,CAAX,CAAjB,CAAZ;AACH;;AAED,YAAOC,MAAP;AACH;;AAED;;;;;;;;;;AAUO,UAASH,kBAAT,CAA4BG,MAA5B,EAAoCZ,WAApC,EAAiDe,YAAjD,EAA+DZ,UAA/D,EAA2Ea,YAA3E,EAAyF;AAC5FhB,mBAAc,CAACA,YAAY,CAAZ,IAAiBG,WAAW,CAAX,CAAlB,EAAiCH,YAAY,CAAZ,IAAiBG,WAAW,CAAX,CAAlD,CAAd;AACA,SAAIc,SAASjB,YAAY,CAAZ,CAAb;AACA,SAAIkB,SAASlB,YAAY,CAAZ,CAAb;AACA,SAAImB,WAAWP,OAAOQ,MAAtB;AACA,SAAIC,WAAWT,OAAO,CAAP,EAAUQ,MAAzB;AACA,SAAIE,OAAOH,WAAWhB,WAAW,CAAX,IAAgB,CAAtC;AACA,SAAIoB,OAAOF,WAAWlB,WAAW,CAAX,IAAgB,CAAtC;AACA,SAAIa,aAAaI,MAAb,KAAwBE,IAAxB,IAAgCN,aAAa,CAAb,EAAgBI,MAAhB,KAA2BG,IAA/D,EAAqE;AACjE,eAAM,IAAI3B,KAAJ,CAAU,6CACZ,WADY,GACA0B,IADA,GACK,GADL,GACSC,IADT,GACc,IADd,GAEZ,SAFY,GAEFP,aAAaI,MAFX,GAEkB,GAFlB,GAEsBJ,aAAa,CAAb,EAAgBI,MAFhD,CAAN;AAGH;;AAED,UAAK,IAAId,IAAI,CAAb,EAAgBA,IAAIgB,IAApB,EAA0BhB,GAA1B,EAA+B;AAC3B,aAAIkB,QAAQlB,IAAIW,MAAhB;AACA,aAAIQ,WAAWb,OAAOY,KAAP,CAAf;AACA,aAAIE,SAASV,aAAaV,CAAb,CAAb;AACA,cAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIgB,IAApB,EAA0BhB,GAA1B,EAA+B;AAC3B,iBAAIoB,QAAQpB,IAAIW,MAAhB;AACA,iBAAIM,SAAS,CAAT,IAAcA,QAAQL,QAAtB,IAAkCQ,SAAS,CAA3C,IAAgDA,QAAQN,QAA5D,EAAsE;AAClEK,wBAAOnB,CAAP,IAAYkB,SAASlB,IAAIW,MAAb,CAAZ;AACH,cAFD,MAEO;AACHQ,wBAAOnB,CAAP,IAAYQ,YAAZ;AACH;AACJ;AACJ;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAED;;;;;;AAMO,UAASL,iBAAT,CAA2BE,MAA3B,EAAmC;AACtC,SAAMU,OAAOV,OAAOQ,MAApB;AACA,SAAMG,OAAOX,OAAO,CAAP,EAAUQ,MAAvB;AACA,SAAIQ,UAAU,CAAd;AACA,SAAIC,SAAS,IAAIf,YAAJ,CAAiBQ,OAAOC,IAAxB,CAAb;AACA,UAAK,IAAIO,KAAK,CAAd,EAAiBA,KAAKR,IAAtB,EAA4BQ,IAA5B,EAAkC;AAC9B,cAAK,IAAIC,KAAK,CAAd,EAAiBA,KAAKR,IAAtB,EAA4BQ,IAA5B,EAAkC;AAC9BF,oBAAOD,OAAP,IAAkBhB,OAAOkB,EAAP,EAAWC,EAAX,CAAlB;AACAH;AACH;AACJ;AACD,YAAOC,MAAP;AACH,E;;;;;;ACpyC;;AAEzC;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,eAAc,QAAQ;AACtB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,YAAW;AACX;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED,2C;;;;;;ACtUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA,sC;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,4BAA4B;AACvC;AACA,aAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA,eAAc,0BAA0B;AACxC;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,cAAa,SAAS;AACtB,cAAa,SAAS;AACtB,cAAa,SAAS;AACtB,cAAa,SAAS;AACtB,cAAa,SAAS;AACtB;AACA,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,6BAA4B,gCAAgC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,2DAA0D;AAC1D;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,gCAAgC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,sDAAqD;AACrD;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA,kC;;;;;;AC/NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAY,OAAO;AACnB,aAAY;AACZ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,4BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA,yBAAwB,EAAE,8BAA8B;AACxD;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAW,EAAE;AACb,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8C;;;;;;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,WAAW;AACtB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,+B;;;;;;;;;;;;;;;AChGA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEO,KAAMG,8BAAW,EAAC;AACrB;AACA;AACAC,uBAAkB,IAHE;AAIpBC,YAAO,GAJa,EAIT;AACXC,uCAAkC,GALd,EAKmB;AACvCC,eAAU;AANU,EAAjB;;KAScC,G;;;AACjB,oBAAc;AAAA;;AAAA;;AAEV,eAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBlD,IAAnB,OAArB;AACA,eAAKmD,4BAAL,GAAoC,MAAKA,4BAAL,CAAkCnD,IAAlC,OAApC;AACA,eAAKoD,yBAAL,GAAiC,MAAKA,yBAAL,CAA+BpD,IAA/B,OAAjC;AACA,eAAKqD,wBAAL,GAAgC,MAAKA,wBAAL,CAA8BrD,IAA9B,OAAhC;AACA,eAAKsD,yBAAL,GAAiC,MAAKA,yBAAL,CAA+BtD,IAA/B,OAAjC;AACA,eAAKuD,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BvD,IAA3B,OAA7B;AACA,eAAKwD,0BAAL,GAAkC,MAAKA,0BAAL,CAAgCxD,IAAhC,OAAlC;AACA,eAAKyD,wBAAL,GAAgC,MAAKA,wBAAL,CAA8BzD,IAA9B,OAAhC;;AAEA,eAAK0D,OAAL,oBAXU,CAWY;;AAEtB,eAAKC,SAAL,GAAiBf,QAAjB,CAbU,CAagB;;AAE1B,eAAKgB,KAAL,GAAa;AACTC,6BAAgB,EADP;AAETC,+BAAkB,IAFT;AAGTC,6BAAgB,IAHP;AAITC,kCAAqB,CAJZ;AAKTC,gCAAmB,CALV;AAMTnB,oBAAO,MAAKa,SAAL,CAAeb,KANb;AAOToB,mCAAsB,CAPb;AAQTC,wCAA2B,CARlB;AASTC,oCAAuB;AATd,UAAb;;AAfU;AA2Bb;;;;8CAEoB;AACjB,kBAAKC,WAAL,GAAmB,yBAAe,KAAKhB,wBAApB,EAA8C,KAAKF,4BAAnD,CAAnB;;AAEA,kBAAKmB,oBAAL;AACA,kBAAKpB,aAAL;AACH;;;kDAEwBY,gB,EAAkBC,c,EAAgBC,mB,EAAqB;AAC5E,kBAAKO,QAAL,CAAc;AACVT,mCAAkBA,gBADR;AAEVC,iCAAgBA,cAFN;AAGVC,sCAAqBA;AAHX,cAAd;AAKH;;;sDAE4BQ,K,EAAO;AAChC,iBAAIC,kBAAmB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAAtB;AACA,iBAAIF,kBAAkB,KAAKb,KAAL,CAAWM,oBAAX,GAAkC,GAAxD,EAA6D;AAAC;AAC1D,sBAAKK,QAAL,CAAc;AACVV,qCAAgB;AACZ;AACA,0CAAiBW,MAAMI,YAFX;AAGZ,+CAAsBJ,MAAMK,gBAAN,CAAuBC,cAAvB,EAHV;AAIZ,kDAAyBN,MAAMO,aAJnB;AAKZ,2DAAkCP,MAAMQ,iBAL5B;AAMZ,2DAAmCnE,KAAKG,KAAL,CAAWwD,MAAMS,QAAN,GAAiBT,MAAMU,SAAlC,KAAgD,CANvE;AAOZ;AACA,uCAAcV,MAAMU,SAAN,CAAgBJ,cAAhB;AARF,sBADN;AAWVZ,2CAAsBO;AAXZ,kBAAd;AAaH;;AAED,iBAAIA,kBAAkB,KAAKb,KAAL,CAAWO,yBAAX,GAAuC,EAA7D,EAAiE;AAAC;;AAE9D,qBAAIvB,SAASC,gBAAb,EAA+B;AAAC;AAC5B;AACH;;AAED,sBAAK0B,QAAL,CAAc;AACVH,4CAAuBI,KADb;AAEVL,gDAA2BM;AAFjB,kBAAd;AAIH;AAEJ;;;yCAEe;AACZ,iBAAIU,OAAO,IAAX;AACAC,2BAAc,KAAKC,kBAAnB;AACA,iBAAI,KAAK1B,SAAL,CAAeX,QAAnB,EAA6B;AACzB,qBAAIsC,mBAAmB,KAAK3B,SAAL,CAAeZ,gCAAtC;AACA,qBAAI,KAAKW,OAAL,CAAa,KAAKE,KAAL,CAAWK,iBAAxB,EAA2CqB,gBAA/C,EAAiE;AAC7D;AACAA,wCAAmB,KAAK5B,OAAL,CAAa,KAAKE,KAAL,CAAWK,iBAAxB,EAA2CqB,gBAA9D;AACH;AACD,qBAAI,KAAK3B,SAAL,CAAed,gBAAnB,EAAqC;AACjCyC,wCAAmB,CAAnB;AACH;AACD;AACA,sBAAKD,kBAAL,GAA0BE,YAAY,YAAY;AAC9C,0BAAK,IAAI9D,IAAI,CAAb,EAAgBA,IAAI6D,gBAApB,EAAsC7D,GAAtC,EAA2C;AACvC0D,8BAAKd,WAAL,CAAiBmB,IAAjB;AACH;AACJ,kBAJyB,EAIvB,KAAK7B,SAAL,CAAeb,KAJQ,CAA1B;AAKH;AACJ;;;gDAEsB;AACnB,kBAAKuB,WAAL,CAAiBoB,mBAAjB,CAAqC,KAAK9B,SAAL,CAAed,gBAApD;AACA,kBAAKwB,WAAL,CAAiBqB,UAAjB;AACA,kBAAKrB,WAAL,CAAiBsB,OAAjB,CAAyB,KAAKjC,OAAL,CAAa,KAAKE,KAAL,CAAWK,iBAAxB,EAA2C2B,KAApE,EAA2E,KAAKjC,SAAL,CAAed,gBAA1F;AACH;;;kCAEQgD,K,EAAO;AAAC;AACb,kBAAKtB,QAAL,CAAc,EAACzB,OAAO+C,KAAR,EAAd;AACA,iBAAIC,0BAA0B,IAA9B;AACA,kBAAKnC,SAAL,CAAeX,QAAf,GAA0B,IAA1B;AACA,iBAAI6C,UAAU,WAAd,EAA2B;AACvBC,2CAA0B,KAA1B;AACA,sBAAKnC,SAAL,CAAeb,KAAf,GAAuB,CAAvB;AACH,cAHD,MAGO,IAAI+C,UAAU,QAAd,EAAwB;AAC3B,sBAAKlC,SAAL,CAAeX,QAAf,GAA0B,KAA1B;AACH,cAFM,MAEA;AACH,sBAAKW,SAAL,CAAeb,KAAf,GAAuB+C,KAAvB;AACH;AACD,iBAAIC,4BAA4B,KAAKnC,SAAL,CAAed,gBAA/C,EAAiE;AAC7D,sBAAKc,SAAL,CAAed,gBAAf,GAAkCiD,uBAAlC;AACA,sBAAKzB,WAAL,CAAiBoB,mBAAjB,CAAqC,KAAK9B,SAAL,CAAed,gBAApD;AACH;AACD,kBAAKK,aAAL;AACH;;;mDAEyB6C,K,EAAO;AAC7B,kBAAKC,QAAL,CAAcD,MAAME,MAAN,CAAaJ,KAA3B;AAEH;;;4CAEkBK,S,EAAWC,S,EAAW;AACrC,iBAAIA,UAAUlC,iBAAV,KAAgC,KAAKL,KAAL,CAAWK,iBAA/C,EAAkE;AAC9D;AACA,sBAAKK,oBAAL;AACA,sBAAKpB,aAAL,GAH8D,CAGzC;AACxB;AACJ;;;mDAEyB6C,K,EAAO;AAC7B,kBAAKxB,QAAL,CAAc,EAACN,mBAAmB8B,MAAME,MAAN,CAAaJ,KAAjC,EAAd;AACH;;;iDAEuB;AACpB,kBAAKxB,WAAL,CAAiB+B,sBAAjB;AACA,kBAAK9B,oBAAL;AACH;;;oDAE0ByB,K,EAAO;AAC9B,iBAAI,qBAAQM,OAAR,CAAgBN,MAAMO,GAAtB,MAA+B,CAAC,CAApC,EAAuC;AACnC,sBAAKjC,WAAL,CAAiBkC,UAAjB,CAA4BR,MAAMO,GAAlC;AACH;AACJ;;;oDAE0B;AACvB,kBAAKN,QAAL,CAAc,QAAd;AACH;;;kCAEQ;AACL,oBACI;AAAA;AAAA;AACI;AAAA;AAAA,uBAAK,IAAG,MAAR;AAAA;AACI;AAAA;AAAA,2BAAQ,UAAU,KAAK1C,yBAAvB;AACK,8BAAKI,OAAL,CAAa8C,GAAb,CAAkB,UAACC,KAAD,EAAQC,KAAR;AAAA,oCACX;AAAA;AAAA,mCAAQ,KAAKA,KAAb,EAAoB,OAAOA,KAA3B;AAAmCD,uCAAME;AAAzC,8BADW;AAAA,0BAAlB;AADL,sBADJ;AAAA;AAQI;AAAA;AAAA,2BAAQ,SAAS,KAAKpD,qBAAtB;AAAA;AAAA,sBARJ;AASI,8DATJ;AAAA;AAWI;AAAA;AAAA,2BAAQ,UAAU,KAAKH,yBAAvB,EAAkD,OAAO,KAAKQ,KAAL,CAAWd,KAApE;AACI;AAAA;AAAA,+BAAQ,OAAM,WAAd;AAAA;AAAA,0BADJ;AAEI;AAAA;AAAA,+BAAQ,OAAM,GAAd;AAAA;AAAA,0BAFJ;AAGI;AAAA;AAAA,+BAAQ,OAAM,KAAd;AAAA;AAAA,0BAHJ;AAII;AAAA;AAAA,+BAAQ,OAAM,KAAd;AAAA;AAAA,0BAJJ;AAKI;AAAA;AAAA,+BAAQ,OAAM,KAAd;AAAA;AAAA,0BALJ;AAMI;AAAA;AAAA,+BAAQ,OAAM,QAAd;AAAA;AAAA;AANJ,sBAXJ;AAAA;AAoBI;AAAA;AAAA,2BAAQ,MAAK,MAAb;AACQ,wCAAW,KAAKU,0BADxB;AAEQ,sCAAS,KAAKC,wBAFtB;AAAA;AAAA,sBApBJ;AAwBI,4DAAK,IAAG,OAAR,GAxBJ;AAyBI,6EAAc,OAAO,KAAKG,KAAL,CAAWC,cAAhC,GAzBJ;AA0BI;AA1BJ,kBADJ;AA6BK,kBAAC,KAAKF,SAAL,CAAed,gBAAhB,IAAoC,KAAKe,KAAL,CAAWQ,qBAA/C,IACD;AAAA;AAAA,uBAAK,OAAO,EAACwC,OAAO,MAAR,EAAZ;AACI,kFAAmB,OAAO,KAAKhD,KAAL,CAAWQ,qBAArC;AADJ,kBA9BJ;AAkCK,sBAAKT,SAAL,CAAed,gBAAf,IAAmC,KAAKe,KAAL,CAAWE,gBAA9C,IACD;AAAA;AAAA;AACI;AACI,2CAAkB,KAAKF,KAAL,CAAWE,gBADjC;AAEI,yCAAgB,KAAKF,KAAL,CAAWG,cAF/B;AAGI,qCAAY,KAAKH,KAAL,CAAWI;AAH3B,uBADJ;AAMI,4DAAK,IAAG,wBAAR,GANJ;AAOK,0BAAKN,OAAL,CAAa,KAAKE,KAAL,CAAWK,iBAAxB,EAA2C4C,WAA3C,IACD;AAAA;AAAA;AACK,8BAAKnD,OAAL,CAAa,KAAKE,KAAL,CAAWK,iBAAxB,EAA2C4C;AADhD;AARJ,kBAnCJ;AAiDI,0DAjDJ;AAkDI,6EAAkB,sCAAlB,GAlDJ;AAmDI,0DAnDJ;AAoDI,8EAAmB,YAAY,KAAKxC,WAApC;AApDJ,cADJ;AAwDH;;;;;;mBApNgBpB,G;;;;;;ACpBrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+B;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,WAAW;AACtB,YAAW,WAAW;AACtB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yEAAwE;AACxE;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wC;;;;;;AC/NA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gC;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA8B;;AAE9B;AACA;AACA;AACA,8BAA6B;;AAE7B;AACA;AACA;AACA,mCAAkC;;AAElC;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA,yCAAuE;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,MAAM;AACnB;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sC;;;;;;AC7PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,QAAQ;AACnB,YAAW,SAAS;AACpB,YAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,eAAe;AAC1B,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;;AAEH;AACA;;AAEA,mC;;;;;;AChOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,cAAa,OAAO;AACpB,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,cAAa,OAAO;AACpB,eAAc,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,cAAa,OAAO;AACpB,cAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA,mC;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,4C;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,YAAW,EAAE;AACb,YAAW,EAAE;AACb;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kC;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yRAAwR;AACxR;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,WAAW;AACxB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,UAAU;AACvB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,0IAAyI;AACzI;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA,mC;;;;;;AC1OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;AACH;AACA;AACA;;AAEA,qD;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mC;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wC;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,eAAe;AAC3B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mC;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB,aAAY,QAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA,6C;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD;AACA;AACA,wCAAuC;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAiC;AACjC,iBAAgB;;AAEhkBAAiB,iBAAiB;AAClC;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qC;;;;;;ACvXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,gBAAgB;AAC3B;AACA,YAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,WAAW;AACxB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,UAAU;AACvB;AACA;AACA,0DAAyD;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA,uC;;;;;;;;;;;;SC9EgB6D,c,GAAAA,c;SAiBAC,e,GAAAA,e;SASAC,0B,GAAAA,0B;SAIAC,a,GAAAA,a;SAUAC,mB,GAAAA,mB;;AAxDhB;;AAEO,KAAMC,4CAAkB;AAC3BC,QAAG,GADwB;AAE3BC,QAAG,GAFwB;AAG3BC,QAAG,GAHwB;AAI3BC,QAAG;AAJwB,EAAxB;;AAOP,KAAMC,gBAAgB;AAClB;AACAJ,QAAG,CAAC,CAAD,EAAI,CAAC,CAAL,EAAQ,oBAAO1H,mBAAP,GAA6B,oBAAOD,kBAA5C,CAFe;AAGlB4H,QAAG,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,oBAAO3H,mBAAf,CAHe;AAIlB4H,QAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,oBAAO5H,mBAAP,GAA6B,oBAAOD,kBAA3C,CAJe;AAKlB8H,QAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,oBAAO7H,mBAAd;AALe,EAAtB;AAOO,UAASoH,cAAT,CAAwBW,WAAxB,EAAqCC,WAArC,EAAkD;AACrD,SAAIpH,WAAW,CAACmH,YAAYnH,QAAZ,CAAqB,CAArB,CAAD,EAA0BmH,YAAYnH,QAAZ,CAAqB,CAArB,CAA1B,CAAf;AACA,SAAIuF,QAAQ,CAAZ;AACA6B,iBAAYC,OAAZ,CAAoB,UAACC,IAAD,EAAU;AAC1B,aAAMnF,SAAS+E,cAAcI,IAAd,CAAf;AACAtH,oBAAW,CAACA,SAAS,CAAT,IAAcmC,OAAO,CAAP,CAAf,EAA0BnC,SAAS,CAAT,IAAcmC,OAAO,CAAP,CAAxC,CAAX;AACA,aAAIoF,aAAJ;AACA,aAAI,OAAOJ,YAAY/G,SAAZ,CAAsBJ,SAAS,CAAT,CAAtB,CAAP,KAA8C,WAA9C,IAA6D,OAAOmH,YAAY/G,SAAZ,CAAsBJ,SAAS,CAAT,CAAtB,EAAmCA,SAAS,CAAT,CAAnC,CAAP,KAA2D,WAA5H,EAAyI;AACrIuH,oBAAO,oBAAOlI,oBAAP,CAA4B,CAA5B,CAAP,CADqI,CAC9F;AAC1C,UAFD,MAEO;AACHkI,oBAAO,oBAAOlI,oBAAP,CAA4B8H,YAAY/G,SAAZ,CAAsBJ,SAAS,CAAT,CAAtB,EAAmCA,SAAS,CAAT,CAAnC,CAA5B,CAAP;AACH;AACDuF,iBAAQA,QAAQpD,OAAO,CAAP,CAAR,GAAoBoF,IAA5B;AACH,MAVD;AAWA,YAAOhC,KAAP;AACH;;AAEM,UAASkB,eAAT,CAAyBU,WAAzB,EAAsCK,WAAtC,EAAmD;AACtD,YAAOA,YAAYtB,GAAZ,CAAgB,UAACuB,UAAD,EAAgB;AACnC,gBAAO;AACHC,mBAAMD,UADH;AAEHlC,oBAAOiB,eAAeW,WAAf,EAA4BM,UAA5B;AAFJ,UAAP;AAIH,MALM,CAAP;AAMH;;AAEM,UAASf,0BAAT,CAAoCiB,KAApC,EAA2CC,sBAA3C,EAAmE;AACtE,YAAOD,MAAME,MAAN,CAAa,UAACH,IAAD;AAAA,gBAAUA,KAAK,CAAL,MAAYE,sBAAtB;AAAA,MAAb,CAAP;AACH;;AAEM,UAASjB,aAAT,CAAuBmB,iBAAvB,EAA0C;AAC7C,YAAOA,kBAAkBC,MAAlB,CAAyB,UAACC,eAAD,EAAkBC,MAAlB,EAA6B;AACzD,aAAID,oBAAoB,IAApB,IAA4BC,OAAO1C,KAAP,GAAeyC,gBAAgBzC,KAA/D,EAAsE;AAClE,oBAAO0C,MAAP;AACH,UAFD,MAEO;AACH,oBAAOD,eAAP;AACH;AACJ,MANM,EAMJ,IANI,CAAP;AAOH;;AAEM,UAASpB,mBAAT,CAA6BO,WAA7B,EAA0CK,WAA1C,EAAuDU,UAAvD,EAAmE;AACtE;AACA,SAAMC,kBAAkBzB,2BACpBc,WADoB,EACPX,gBAAgBqB,UAAhB,CADO,CAAxB;;AAIA,SAAMJ,oBAAoBrB,gBAAgBU,WAAhB,EAA6BgB,eAA7B,CAA1B;;AAEA,SAAMC,aAAazB,cAAcmB,iBAAd,CAAnB;;AAEA,YAAOM,WAAWV,IAAX,CAAgB,CAAhB,CAAP;AACH,E;;;;;;;;;;;;;;;;ACnED,KAAMW,eAAe,GAArB;;KACqBC,gB;;;;;;;qCACL;AACR,kBAAKC,UAAL,GAAkB,IAAlB;AACH;;;wCAEcpB,W,EAAa;AACxB,iBAAIqB,SAAS,IAAb;AACA,iBAAI,OAAOrB,YAAYlH,KAAnB,KAA6B,WAAjC,EAA8C;AAC1C;AACAkH,6BAAYlH,KAAZ,GAAoB,CAApB,CAF0C,CAEpB;AACzB;AACD;AACA,iBAAI,KAAKsI,UAAL,KAAoB,IAApB,IAA4BpB,YAAYlH,KAAZ,KAAsB,IAAtD,EAA4D;AACxD;AACAuI,0BAAS,CAACrB,YAAYlH,KAAZ,GAAoB,KAAKsI,UAA1B,IAAwCF,YAAjD;AACH;AACD,kBAAKE,UAAL,GAAkBpB,YAAYlH,KAA9B;AACA,iBAAI,CAACwI,SAASD,MAAT,CAAL,EAAuB;AACnBA,0BAAS,CAAT,CADmB,CACR;AACd;AACD,oBAAOA,MAAP;AACH;;;;;;mBArBgBF,gB;;;;;;;;;;;SCqCLI,oB,GAAAA,oB;SA0BAC,Y,GAAAA,Y;AAhEhB,KAAIC,iBAAiB,IAArB;AACA,KAAIC,sBAAsB,IAA1B;AACA,KAAIC,iBAAiB,IAArB;AACA,KAAIC,iCAAJ;;AAGA,UAASC,mBAAT,GAA+B;AAC3B,SAAIC,SAASC,cAAT,CAAwB,WAAxB,KAAwCN,mBAAmB,IAA/D,EAAqE;AACjE;AACH;AACDK,cAASC,cAAT,CAAwB,wBAAxB,EAAkDC,SAAlD;AAcAP,sBAAiB,CACbK,SAASC,cAAT,CAAwB,SAAxB,CADa,EAEbD,SAASC,cAAT,CAAwB,SAAxB,CAFa,EAGbD,SAASC,cAAT,CAAwB,SAAxB,CAHa,EAIbD,SAASC,cAAT,CAAwB,SAAxB,CAJa,CAAjB;AAMAL,2BAAsBI,SAASC,cAAT,CAAwB,cAAxB,CAAtB;AACAH,gCAA2BE,SAASC,cAAT,CAAwB,mBAAxB,CAA3B;AACAJ,sBAAiB,CACbG,SAASC,cAAT,CAAwB,MAAxB,CADa,EAEbD,SAASC,cAAT,CAAwB,KAAxB,CAFa,CAAjB;AAIH;;AAEM,UAASR,oBAAT,CAA8BU,cAA9B,EAA8C;AAAC;AAClDJ;AACA,SAAMK,kBAAkB,GAAxB;AACA,SAAMC,iBAAiB,CAAvB,CAHiD,CAGxB;;AAEzB,SAAMC,iBAAiB,CAAC,CAAxB;AACA,UAAK,IAAIpI,IAAI,CAAR,EAAWqI,MAAMJ,eAAeK,OAAf,CAAuB/H,MAA7C,EAAqDP,IAAIqI,GAAzD,EAA8DrI,GAA9D,EAAmE;AAC/D,aAAIuI,aAAcN,eAAeK,OAAf,CAAuBtI,CAAvB,IAA4BoI,cAA9C;AACA,aAAIG,aAAaH,cAAjB,EAAiC;AAC7BG,0BAAa,CAAb;AACH,UAFD,MAEO,IAAIA,aAAaJ,iBAAiB,CAAlC,EAAqC;AACxCI,0BAAaJ,iBAAiB,CAA9B;AACH;AACDV,wBAAezH,CAAf,EAAkBwI,KAAlB,CAAwBrD,KAAxB,GAAiCoD,aAAa,GAAb,GAAmBL,eAApB,GAAuC,IAAvE;AACAT,wBAAezH,CAAf,EAAkBgI,SAAlB,GAA8B,CAACC,eAAeK,OAAf,CAAuBtI,CAAvB,IAA4B,GAA7B,EAAkCyI,OAAlC,CAA0C,CAA1C,CAA9B;AACH;;AAED,SAAIR,eAAeS,SAAnB,EAA8B;AAC1Bd,kCAAyBI,SAAzB,GAAqC,UAArC;AACAN,6BAAoBc,KAApB,CAA0BrD,KAA1B,GAAmC,IAAI,GAAJ,GAAU+C,eAAX,GAA8B,IAAhE;AACH,MAHD,MAGO;AACHN,kCAAyBI,SAAzB,GAAqC,GAArC;AACAN,6BAAoBc,KAApB,CAA0BrD,KAA1B,GAAkC,MAAlC;AACH;AACJ;;AAEM,UAASqC,YAAT,CAAsBH,MAAtB,EAA8B;AAAC;AAClCQ;AACAR,eAAU,GAAV;AACA,SAAIsB,OAAO,CAAX;AACA,SAAIC,MAAM,CAAV;AACA,SAAIvB,SAAS,CAAb,EAAgB;AACZuB,eAAM,CAACvB,MAAP;AACH,MAFD,MAEO;AACHsB,gBAAOtB,MAAP;AACH;;AAEDM,oBAAe,CAAf,EAAkBa,KAAlB,CAAwBrD,KAAxB,GAAiCwD,OAAO,EAAP,GAAY,EAAb,GAAmB,IAAnD;AACAhB,oBAAe,CAAf,EAAkBK,SAAlB,GAA8BW,IAA9B;;AAEAhB,oBAAe,CAAf,EAAkBa,KAAlB,CAAwBrD,KAAxB,GAAiCyD,MAAM,EAAN,GAAW,EAAZ,GAAkB,IAAlD;AACAjB,oBAAe,CAAf,EAAkBK,SAAlB,GAA8BY,GAA9B;AACH,E;;;;;;;;;;;;mBC7Ec,UAAUC,UAAV,EAAsBC,WAAtB,EAAmCC,WAAnC,EAAgD;AAC3D,YAAO,0BACH,CACI,EAAE;AACEnL,eAAMiL;AADV,MADJ,EAII,EAAE;AACEjL,eAAMkL,WADV;AAEIE,6BAAoB,yBAFxB;AAGIC,uBAAc;AAHlB,MAJJ,EASI,EAAE;AACErL,eAAMmL,WADV;AAEIC,6BAAoB,sBAFxB;AAGIC,uBAAc;AAHlB,MATJ,CADG,CAAP;AAiBH,E;;AArBD;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;ACFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;KAEqBC,W;AACjB,0BAAYC,SAAZ,EAAuBC,UAAvB,EAAmCJ,kBAAnC,EAAuDC,YAAvD,EAAqE;AAAA;;AACjE,cAAKE,SAAL,GAAiBA,SAAjB;AACA,cAAKN,UAAL,GAAkBO,WAAWD,SAA7B;AACA,cAAKE,cAAL,GAAsB,KAAKR,UAAL,GAAkB,CAAxC,CAHiE,CAGvB;AAC1C,cAAKP,OAAL,GAAe,IAAIrI,YAAJ,CAAiBkJ,YAAY,KAAKE,cAAlC,CAAf;AACA,cAAK,IAAIC,UAAU,CAAd,EAAiBC,YAAY,KAAKjB,OAAL,CAAa/H,MAA/C,EAAuD+I,UAAUC,SAAjE,EAA4ED,SAA5E,EAAuF;AACnF,kBAAKhB,OAAL,CAAagB,OAAb,IAAwBlK,KAAKoK,MAAL,KAAgB,GAAxC,CADmF,CACtC;AAChD;AACD,cAAKC,OAAL,GAAe,IAAIxJ,YAAJ,CAAiBkJ,SAAjB,CAAf;AACA,cAAKH,kBAAL,GAA0BA,mBAAmBU,IAA7C;AACA,cAAKC,4BAAL,GAAoCX,mBAAmBY,QAAvD;AACA,cAAKC,cAAL,GAAsB,IAAI5J,YAAJ,CAAiBkJ,SAAjB,CAAtB;AACA,cAAKF,YAAL,GAAoBA,YAApB;AACA,cAAKG,UAAL,GAAkBA,UAAlB;AACH;;;;uCAEa;AACV,kBAAKU,MAAL,GAAc,KAAKV,UAAL,CAAgBK,OAA9B;;AAEA;AACA,iBAAIJ,iBAAiB,KAAKA,cAA1B;AACA,iBAAIf,UAAU,KAAKA,OAAnB;AACA,iBAAIwB,SAAS,KAAKA,MAAlB;AACA,iBAAId,qBAAqB,KAAKA,kBAA9B;AACA,iBAAIS,UAAU,KAAKA,OAAnB;AACA,iBAAIN,YAAY,KAAKA,SAArB;AACA,iBAAIN,aAAa,KAAKA,UAAtB;;AAEA,kBAAK,IAAIkB,UAAU,CAAnB,EAAsBA,UAAUZ,SAAhC,EAA2CY,SAA3C,EAAsD;AAClD,qBAAIC,MAAM,CAAV;AACA,sBAAK,IAAIC,SAAS,CAAlB,EAAqBA,SAASpB,UAA9B,EAA0CoB,QAA1C,EAAoD;AAChD;AACAD,4BAAOF,OAAOG,MAAP,IAAiB3B,QAAQyB,UAAUV,cAAV,GAA2BY,MAAnC,CAAxB;AACH;AACDD,wBAAO1B,QAAQyB,UAAUV,cAAV,GAA2BR,UAAnC,CAAP,CANkD,CAMI;;AAEtDY,yBAAQM,OAAR,IAAmBf,mBAAmBgB,GAAnB,CAAnB;;AAEA;AACH;;AAED,oBAAOP,OAAP;AACH;;;6DAEmCS,a,EAAe;AAC/C;AACA,iBAAIf,YAAY,KAAKA,SAArB;AACA,iBAAIU,iBAAiB,KAAKA,cAA1B;AACA,iBAAIJ,UAAU,KAAKA,OAAnB;AACA,iBAAIE,+BAA+B,KAAKA,4BAAxC;;AAEA,kBAAK,IAAII,UAAU,CAAnB,EAAsBA,UAAUZ,SAAhC,EAA2CY,SAA3C,EAAsD;AAClDF,gCAAeE,OAAf,IAA0B,CAACN,QAAQM,OAAR,IAAmBG,cAAcH,OAAd,CAApB,IACpBJ,6BAA6BF,QAAQM,OAAR,CAA7B,CADN;AAEA;AACH;AACJ;;;iDAEuB;AACpB;AACA,iBAAIV,iBAAiB,KAAKA,cAA1B;AACA,iBAAIf,UAAU,KAAKA,OAAnB;AACA,iBAAIa,YAAY,KAAKA,SAArB;AACA,iBAAIN,aAAa,KAAKA,UAAtB;AACA,iBAAIiB,SAAS,KAAKA,MAAlB;AACA,iBAAIb,eAAe,KAAKA,YAAxB;AACA,iBAAIY,iBAAiB,KAAKA,cAA1B;;AAEA,kBAAK,IAAIE,UAAU,CAAnB,EAAsBA,UAAUZ,SAAhC,EAA2CY,SAA3C,EAAsD;AAClD,sBAAK,IAAIE,SAAS,CAAlB,EAAqBA,SAASpB,UAA9B,EAA0CoB,QAA1C,EAAoD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA3B,6BAAQyB,UAAUV,cAAV,GAA2BY,MAAnC,KACIhB,eAAea,OAAOG,MAAP,CAAf,GAAgCJ,eAAeE,OAAf,CADpC;;AAGA;AACH;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAzB,yBAAQyB,UAAUV,cAAV,GAA2BR,UAAnC,KAAkD;AAC9CI,gCAAeY,eAAeE,OAAf,CADnB;;AAGA;AACH;AACJ;;;;;;mBAnGgBb,W;;;;;;ACXrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,SAAS;AACtB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA,gC;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,YAAW,WAAW;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA,4B;;;;;;ACzBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,aAAa;AACxB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA,mC;;;;;;ACrCA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA,yFAAwF;AACxF,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACxED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC1DD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC1DD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC7HD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC3DD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACxGD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC1DD;AACA;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC7ID;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACxGD;AACA;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACrID;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACzFD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACtHD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACtHD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC3GD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC9ID;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACvFD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,kCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC3KD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC9DD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AChFD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC3DD;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC9ED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC7ED;AACA;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC7ED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACnGD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;AAE5B;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,kEAAkE;AAC3E;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,8BAA6B;AAC7B,6BAA4B;AAC5B,6BAA4B;AAC5B,4BAA2B;AAC3B;AACA;AACA;AACA,sDAAqD;AACrD;AACA,uDAAsD;AACtD;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACnGD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AClED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC9DD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AClED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AClED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AClED;AACA;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACxED;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,kCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACjFD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,kCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AClFD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC/ED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACjED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC1GD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC1GD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC3DD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACzED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC7ED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AClFD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC1ED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,kCAAiC,IAAI;AACrC;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC3ED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,kCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC5ED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,kCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACzHD;AACA;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AClGD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC3HD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AChJD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC5GD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL,iCAAgC,IAAI,IAAI,IAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC9FD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AClFD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC9HD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,kCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACrED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,kCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC/ED;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AClFD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,2CAA0C,IAAI,IAAI,IAAI;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACxFD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACtFD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACzDD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC7HD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,kCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACpED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;;AAI5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACvFD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACxID;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,sCAAqC,IAAI;AACzC;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACrED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACpHD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AChGD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC9GD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA,oDAAmD,IAAI;AACvD,0DAAyD,IAAI;AAC7D,yDAAwD,IAAI;AAC5D,+DAA8D,IAAI;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC/DD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACzFD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AChFD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C,2CAA0C;AAC1C,6CAA4C;AAC5C,yCAAwC;AACxC,0CAAyC;AACzC,0CAAyC;AACzC,2CAA0C;AAC1C,2CAA0C;AAC1C,4CAA2C;AAC3C,0CAAyC;AACzC,4CAA2C;AAC3C;AACA;AACA;AACA;AACA,+CAA8C;AAC9C,6CAA4C;AAC5C,8CAA6C;AAC7C,2CAA0C;AAC1C,4CAA2C;AAC3C,4CAA2C;AAC3C,6CAA4C;AAC5C,8CAA6C;AAC7C,+CAA8C;AAC9C,4CAA2C;AAC3C,6CAA4C;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC9JD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AClFD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACjFD;AACA;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC/FD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC9DD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC1HD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACvFD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACvFD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC3DD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC3HD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC1GD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC5DD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AChED;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC1ED;AACA;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACtLD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACjGD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;;AAI5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC5DD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACtED;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACrJD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACjKD;AACA;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACrED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC7GD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC7GD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;;AAI5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACxFD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACpED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC1DD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,6BAA4B;AAC5B,UAAS;AACT,4BAA2B;AAC3B,UAAS;AACT,+BAA8B;AAC9B,UAAS;AACT,+BAA8B;AAC9B,UAAS;AACT,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACjID;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,kCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACxFD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACnED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AClED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC7DD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACvHD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACzFD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,EAAC;;;;;;;AC1FD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACzDD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACzDD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACtJD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AClGD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACzDD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACzDD;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC9ED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACnED;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,wCAAuC,IAAI;AAC3C;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC3DD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;AC9GD;AACA;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACxGD;AACA;AACA;AACA;;AAEA,EAAC;AACD,SACA;AACA;AACA;AACA,EAAC,2BAA2B;;;AAG5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,iCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,EAAC;;;;;;;ACvGD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;;AAErC;AACA;AACA;;AAEA,4BAA2B;AAC3B;AACA;AACA;AACA,6BAA4B,UAAU;;;;;;;ACvLtC;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAqD,cAAc;AACnE;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;ACpNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8B;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,SAAS;AACtB,cAAa,QAAQ;AACrB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA,EAAC;;AAED,0D;;;;;;ACrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,EAAE;AACf,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,EAAE;AACf,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB,cAAa,EAAE;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;;AAEA,wC;;;;;;AC3OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,yC;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yEAAuG;AACvG;AACA;;AAEA,kBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,YAAW,kBAAkB;AAC7B,YAAW,QAAQ;AACnB,YAAW,EAAE;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,sBAAsB;AACrC;AACA;AACA,gBAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,gBAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACtMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sC;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oC;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,aAAa;AACxB,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,UAAU;AACrB,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA,YAAW,eAAe;AAC1B,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qC;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA,0BAAyB;AACzB,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA,sC;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAY,OAAO;AACnB;AACA;AACA;AACA,kBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,uBAAuB;AAClC;AACA,aAAY,GAAG;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,WAAW;AACtB,YAAW,0BAA0B;AACrC,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,WAAW;AACtB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,eAAe;AAC1B,YAAW,WAAW;AACtB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,YAAY;AACvB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,YAAY;AACvB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,YAAY;AACvB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,YAAY;AACvB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,SAAS;AACtB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,aAAa;AAC1B,cAAa,WAAW;AACxB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,aAAa;AAC1B,cAAa,WAAW;AACxB,cAAa,QAAQ;AACrB,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA,sJAAoL;;AAEpL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,aAAa;AAC1B,cAAa,WAAW;AACxB,cAAa,UAAU;AACvB,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oEAAmE,qBAAqB;;AAExF;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,aAAa;AAC1B,cAAa,WAAW;AACxB,cAAa,UAAU;AACvB,eAAc,eAAe;AAC7B;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qJAAmL;;AAEnL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA,6B;;;;;;ACxhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,kC;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA,aAAY,WAAW;AACvB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iC;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,YAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA,qC;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA,gD;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yC;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,QAAQ;AACnB,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAC;;AAED,4C;;;;;;AC/HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,qC;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,WAAW;AACtB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,EAAE;AACb,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,GAAG;AACd,YAAW,QAAQ;AACnB,YAAW,UAAU;AACrB,YAAW,GAAG;AACd;AACA,aAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB;AACvB;;AAEA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4JAA2L,yCAAyC,+GAA+G,yCAAyC;AAC5X;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,GAAG;AACd,YAAW,UAAU;AACrB,YAAW,GAAG;AACd,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sC;;;;;;AC9KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;;;AAGH;AACA;AACA;;AAEA,yC;;;;;;AC5UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,qC;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,6BAA4B,QAAQ,oBAAoB,EAAE;AAC1D;AACA,IAAG;AACH;AACA;AACA;;AAEA,oC;;;;;;ACxBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE,kBAAkB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9NA;;;;;;;;AAEA,KAAMiB,gBAAgB,IAAtB;;AAEA,KAAMC,eAAe;AACjBjH,mBAAc,CADG;AAEjBG,oBAAe,CAFE;AAGjBE,eAAU,CAHO;AAIjBC,gBAAW,CAJM;AAKjB4G,kBAAa,CALI;AAMjBjH,uBAAkB,CAND;AAOjBkH,6BAAwB,CAPP;AAQjBC,sBAAiB,EARA;AASjBC,uBAAkB,EATD;AAUjBC,8BAAyB,EAVR;AAWjBlH,wBAAmB,CAXF;AAYjBmH,sBAAiB,CAZA;AAajBC,kBAAa;AAbI,EAArB;;KAgBqBC,U;AACjB,yBAAYC,QAAZ,EAAsBC,cAAtB,EAAsC;AAAA;;AAAA;;AAClC,cAAKC,oBAAL,GAA4B,CAA5B;AACA,cAAKC,iBAAL,GAAyB,KAAzB;AACA,cAAKC,SAAL,GAAiBJ,QAAjB;AACA,cAAKK,MAAL,GAAcC,OAAOC,MAAP,CAAc,EAAd,EAAkBhB,YAAlB,CAAd;AACA,cAAKiB,eAAL,GAAuBP,cAAvB;AACA,cAAKQ,iBAAL,GAAyB,IAAzB;AACA,cAAKC,eAAL,GAAuB,IAAvB;AACA,cAAKC,WAAL,GAAmB,IAAnB;AACA,cAAKC,WAAL,GAAmB,IAAnB;;AAEA,cAAKvH,OAAL,GAAe,KAAKA,OAAL,CAAa3F,IAAb,CAAkB,IAAlB,CAAf;AACA,cAAKuG,UAAL,GAAkB,KAAKA,UAAL,CAAgBvG,IAAhB,CAAqB,IAArB,CAAlB;AACA,cAAKwF,IAAL,GAAY,KAAKA,IAAL,CAAUxF,IAAV,CAAe,IAAf,CAAZ;AACA,cAAK0F,UAAL,GAAkB,KAAKA,UAAL,CAAgB1F,IAAhB,CAAqB,IAArB,CAAlB;AACA,cAAKyF,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBzF,IAAzB,CAA8B,IAA9B,CAA3B;;AAEAuF,qBAAY,YAAM;AAAC;AACf,mBAAKoH,MAAL,CAAY9H,gBAAZ,GAA+B,MAAK8H,MAAL,CAAYb,WAAZ,GAA0B,MAAKa,MAAL,CAAYZ,sBAArE;AACA,mBAAKY,MAAL,CAAYZ,sBAAZ,GAAqC,MAAKY,MAAL,CAAYb,WAAjD;AACH,UAHD,EAGG,IAHH;AAIH;;;;iCAEOqB,U,EAAY;AAChB,kBAAKX,oBAAL;AACA,kBAAKS,WAAL,GAAmBE,UAAnB;AACA,kBAAKC,MAAL,GAAc,IAAI,KAAKH,WAAT,EAAd;AACA;AACA,kBAAKI,YAAL,GAAoB,2BAApB;AACA,kBAAKV,MAAL,CAAY/H,YAAZ,GAA2B,CAA3B,CANgB,CAMa;AAC7B,iBAAI,KAAK6H,iBAAT,EAA4B;AACxB;AACA;AACA,sBAAKC,SAAL,CACI,KAAKW,YAAL,CAAkBpN,mBAAlB,EADJ,EAEI,KAAKoN,YAAL,CAAkBnN,iBAAlB,EAFJ,EAGI,KAAKsM,oBAHT;AAKH,cARD,MAQO;AACH,sBAAKM,eAAL,CAAqB,KAAKH,MAA1B;AACH;AACD,kBAAKW,mBAAL;AACH;;;kDAEwB;AACrB,iBAAI,KAAKF,MAAL,CAAYG,UAAhB,EAA4B;AACxB,sBAAKH,MAAL,CAAYG,UAAZ;AACH;AACJ;;AAED;;;;;;;oCAIWnN,U,EAAY;AACnB,iBAAIoE,QAAQ,KAAKmI,MAAjB;AACA;AACA,iBAAIvM,eAAe,IAAnB,EAAyB;AACrB,sBAAKiN,YAAL,CAAkBtN,WAAlB,CAA8BK,UAA9B;AACH;AACD,kBAAKkN,mBAAL;;AAEA,iBAAI,KAAKN,eAAL,CAAqBrM,UAAzB,EAAqC;AAAC;AAClC,sBAAKyM,MAAL,CAAYI,SAAZ,CAAsB,KAAKT,iBAA3B,EADiC,CACa;AAC9CvI,uBAAMO,aAAN,GAAsB,KAAKgI,iBAAL,CAAuBxM,KAA7C;AACAiE,uBAAMwH,eAAN,CAAsByB,IAAtB,CAA2B,KAAKV,iBAAL,CAAuBxM,KAAlD;AACA,qBAAIiE,MAAMwH,eAAN,CAAsBhK,MAAtB,GAA+B,GAAnC,EAAwC;AACpCwC,2BAAMwH,eAAN,CAAsB0B,KAAtB;AACH;AACD,qBAAIC,wBAAwBnJ,MAAMwH,eAAN,CAAsB3D,MAAtB,CAA6B,UAACuF,GAAD,EAAMC,GAAN;AAAA,4BAAcD,MAAMC,GAApB;AAAA,kBAA7B,EAAsD,CAAtD,CAA5B;AACArJ,uBAAMQ,iBAAN,GAA0BnE,KAAKG,KAAL,CAAW2M,wBAAwBnJ,MAAMwH,eAAN,CAAsBhK,MAAzD,KAAoE,CAA9F;AACAwC,uBAAMS,QAAN,IAAkB,KAAK8H,iBAAL,CAAuBxM,KAAzC;AACAiE,uBAAMyH,gBAAN,CAAuBwB,IAAvB,CAA4BjJ,MAAMO,aAAlC;AACAP,uBAAM0H,uBAAN,CAA8BuB,IAA9B,CAAmCjJ,MAAMQ,iBAAzC;AACAR,uBAAMU,SAAN,IAAmB,CAAnB;;AAEA;AACA,qBAAIV,MAAMyH,gBAAN,CAAuBjK,MAAvB,GAAgC4J,gBAAgB,CAApD,EAAuD;AACnDpH,2BAAMyH,gBAAN,GAAyBzH,MAAMyH,gBAAN,CAAuB6B,KAAvB,CAA6B,CAAClC,aAA9B,CAAzB;AACApH,2BAAM0H,uBAAN,GAAgC1H,MAAM0H,uBAAN,CAA8B4B,KAA9B,CAAoC,CAAClC,aAArC,CAAhC;AACH;;AAED,sBAAKjG,OAAL,CAAa,KAAKsH,WAAlB,EAA+B,KAAKR,iBAApC;AACH;;AAED,iBAAI,KAAKA,iBAAT,EAA4B;AACxB,sBAAKC,SAAL,CAAe,KAAKK,iBAApB,EAAuC,KAAKC,eAA5C,EAA6D,KAAKR,oBAAlE;AACAhI,uBAAMI,YAAN,GAAqB,KAAKmI,iBAAL,CAAuBxM,KAA5C;AACA,sBAAKuM,eAAL,CAAqBtI,KAArB;AACH;;AAEDA,mBAAMsH,WAAN;AACA,iBAAIhD,SAAS,KAAKiE,iBAAL,CAAuBxM,KAAvB,GAA+BiE,MAAM2H,eAAlD;AACA3H,mBAAM2H,eAAN,GAAwB,KAAKY,iBAAL,CAAuBxM,KAA/C;AACAiE,mBAAM4H,WAAN,IAAqBtD,MAArB;;AAEA,kBAAKoE,WAAL,GAAmB,KAAKE,MAAL,CAAYI,SAAZ,CAAsB,KAAKT,iBAA3B,CAAnB;AACH;;;6CAEmBlK,gB,EAAkB;AAClC,kBAAK4J,iBAAL,GAAyB5J,gBAAzB;AACH;;;mDAEyB;AACtB,oBAAO,KAAKuK,MAAZ;AACH;;;gCAEM;AACH,kBAAK7G,UAAL,CAAgB,KAAK2G,WAArB;AACH;;;sCAEY;AACT,kBAAKP,MAAL,GAAcC,OAAOC,MAAP,CAAc,EAAd,EAAkBhB,YAAlB,CAAd;AACA,kBAAKc,MAAL,CAAYX,eAAZ,GAA8B,EAA9B;AACA,kBAAKW,MAAL,CAAYV,gBAAZ,GAA+B,EAA/B;AACA,kBAAKU,MAAL,CAAYT,uBAAZ,GAAsC,EAAtC;AACH;;;+CAEqB;AAClB,kBAAKa,iBAAL,GAAyB,KAAKM,YAAL,CAAkBpN,mBAAlB,EAAzB;AACA,kBAAK+M,eAAL,GAAuB,KAAKK,YAAL,CAAkBnN,iBAAlB,EAAvB;AACH;;;;;;mBA1HgBmM,U;;;;;;;;;;;;;;ACpBrB;;;;;;AACA;;AAEA,KAAMvE,cAAc,EAApB;AACA,KAAIiG,kBAAkB,CAAtB,C,CAAwB;AACxB,KAAIC,cAAc,EAAlB;AACA,KAAIC,eAAe,EAAnB;AACA,KAAIC,UAAU,CACV,CAAC,GAAD,EAAM,GAAN,CADU,EAGV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAHU,EAIV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAJU,EAKV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CALU,EAMV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CANU,EAOV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAPU,EAQV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CARU,EAUV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAVU,EAWV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAXU,EAYV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,CAZU,EAaV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CAbU,EAcV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,CAdU,EAeV,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAfU,CAAd;AAiBApG,aAAY2F,IAAZ,CAAiB,CAAC,GAAD,EAAM,GAAN,CAAjB;AACA,MAAK,IAAIU,iBAAiB,CAA1B,EAA6BA,kBAAkBJ,eAA/C,EAAgEI,gBAAhE,EAAkF;AAC9EH,iBAAYP,IAAZ,CAAiB,GAAjB;AACAQ,kBAAaR,IAAb,CAAkB,GAAlB;;AAEAS,aAAQvG,OAAR,CAAgB,UAACyG,MAAD,EAAW;AACvBtG,qBAAY2F,IAAZ,WAAqBO,WAArB,qBAAqCI,MAArC;AACAtG,qBAAY2F,IAAZ,WAAqBQ,YAArB,qBAAsCG,MAAtC;AACH,MAHD;AAKH;;KACoBC,S;AACjB,0BAAc;AAAA;;AACV,cAAKvO,MAAL,GAAc,EAAC0I,YAAY,IAAb,EAAd;AACH;;AAED;;;;;;;;;mCAKUf,W,EAAa;AACnB,iBAAI6G,SAAS,iCAAoB7G,WAApB,EAAiCK,WAAjC,EAA8C,KAAKhI,MAAL,CAAY0I,UAA1D,CAAb;;AAEA,kBAAK1I,MAAL,CAAY0I,UAAZ,GAAyB8F,MAAzB;;AAEA,oBAAOA,MAAP;AACH;;;;;;mBAhBgBD,S;;;;;;;;;;;;;;ACnCrB;;;;AAEA,KAAMvG,cAAc,CAChB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CADgB,EAEhB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAFgB,EAGhB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAHgB,EAIhB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAJgB,EAMhB,CAAC,GAAD,EAAM,GAAN,CANgB,EAQhB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CARgB,EAShB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CATgB,EAUhB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAVgB,EAWhB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAXgB,CAApB;;KAcqByG,sB;;;;;;;;AACjB;;;;;mCAKU9G,W,EAAa;AACnB,oBAAO,iCAAoBA,WAApB,EAAiCK,WAAjC,EAA8C,IAA9C,CAAP;AACH;;;;;;mBARgByG,sB;;;;;;;;;;;;;ACdrB;AAEmC;;;AAJnC;;AACA;;AAEA;;;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA;AACA,KAAMC,iBAAiB,oBAAOlP,YAAP,CAAoB,CAApB,IAAyB,oBAAOA,YAAP,CAAoB,CAApB,CAAhD;;AAEA,KAAImH,QAAQ,oBAAU+H,cAAV,EAA0B,qBAAQxM,MAAlC,CAAZ;AACA,KAAIyM,mBAAmB,gCAAvB;;AAEAhI,OAAMiI,YAAN;;KAEqBC,kB;AACjB,mCAAc;AAAA;;AACVF,4BAAmB,gCAAnB;AACH;;AAED;;;;;;;;;mCAKUhH,W,EAAa;AACnB,iBAAMmH,aAAaH,iBAAiBI,cAAjB,CAAgCpH,WAAhC,CAAnB;AACA;AACA,iBAAM7D,QAAQ,8CAAkB6D,YAAY/G,SAA9B,CAAd;;AAEA;AACA,iBAAIoO,cAAcrI,MAAMsI,WAAN,CAAkBH,UAAlB,EAA8BhL,KAA9B,CAAlB;AACA,iBAAI8F,iBAAiBjD,MAAMuI,kBAAN,EAArB;AACR;;AAEQ,iBAAI,cAASnM,gBAAb,EAA+B;AAC3B,2DAAqB6G,cAArB;AACA,qBAAIkF,eAAe,IAAnB,EAAyB;AACrB,uDAAaA,UAAb;AACH;AACJ;;AAED,iBAAIN,SAAS,qBAAQQ,WAAR,CAAb;;AAEA,kBAAKjG,UAAL,GAAkBpB,YAAYlH,KAA9B;AACA,oBAAO+N,MAAP;AACH;;;sCAEY;AACT7H,qBAAQ,oBAAU+H,cAAV,EAA0B,qBAAQxM,MAAlC,CAAR;AACAyM,gCAAmB,gCAAnB;AACH;;;uCAEa;AACV,oBAAOhI,MAAMwI,UAAN,EAAP;AACH;;;;;;mBAxCgBN,kB;;;;;;;;;;;;ACjBrB;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAFA;mBAGe,CACX;AACIhI,WAAM,qDADV;AAEIf;AAFJ,EADW,EAKX;AACIA,kCADJ;AAEIe,WAAM,uBAAauI,OAAb,EAFV;AAGIrI,kBAAa,uBAAasI,cAAb,EAHjB;AAII7J,uBAAkB,KAJtB,CAI4B;AAJ5B,EALW,EAWX;AACIqB,WAAM,yCADV;AAEIf;AAFJ,EAXW,EAeX;AACIe,WAAM,sDADV;AAEIf;AAFJ,EAfW,C;;;;;;;;;;;;;;ACLf;;;;AACA;;;;;;;;;;;;KAEqBwJ,iB;;;AACjB,kCAAc;AAAA;;AAAA;;AAEV,eAAKC,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBrP,IAAzB,OAA3B;AACA,eAAK4D,KAAL,GAAa,EAAC0L,YAAY,IAAb,EAAb;AAHU;AAIb;;;;+CAEqB;AAClB,iBAAMC,aAAa,KAAKC,KAAL,CAAWD,UAA9B;AACA,iBAAI,CAACA,WAAWE,uBAAX,GAAqCC,WAA1C,EAAuD;AACnDC,uBAAM,8CAAN;AACA;AACH;;AAED,kBAAKpL,QAAL,CAAc;AACV+K,6BAAY,sCACZM,KAAKC,SAAL,CAAeN,WAAWE,uBAAX,GAAqCC,WAArC,EAAf,CADY,GAEZ;AAHU,cAAd;AAKH;;;kCAEQ;AACL,oBACI;AAAA;AAAA;AACI;AAAA;AAAA,uBAAQ,SAAS,KAAKL,mBAAtB;AAAA;AAAA,kBADJ;AAEK,sBAAKzL,KAAL,CAAW0L,UAAX,IACD;AAAA;AAAA;AACI,8DADJ;AAEI;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAGI;AACI,wCADJ;AAEI,uCAFJ;AAGI,gCAAO,EAAC1I,OAAO,MAAR,EAAgBkJ,QAAQ,MAAxB,EAHX;AAII,gCAAO,KAAKlM,KAAL,CAAW0L,UAJtB;AAHJ;AAHJ,cADJ;AAgBH;;;;;;mBAtCgBF,iB;;;AAyCrBA,mBAAkBW,SAAlB,GAA8B;AAC1BR,iBAAY,oBAAUS,MAAV,CAAiBC;AADH,EAA9B,C;;;;;;;;;;;;;;AC5CA;;;;AACA;;;;;;;;;;;;KAEqBC,gB;;;;;;;;;;;kCACR;AACL,iBAAMC,oBAAoB,KAAKX,KAAL,CAAWW,iBAArC;AACA,oBACI;AAAA;AAAA;AAAA;AAEI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,sBADJ;AAEI;AAAA;AAAA;AAAA;AAAUA,2CAAkB1Q,kBAA5B;AAAA;AAAA,sBAFJ;AAGI;AAAA;AAAA;AAAA;AAAW0Q,2CAAkB1Q,kBAA7B;AAAA;AAAA,sBAHJ;AAII;AAAA;AAAA;AAAA;AAAW,0BAAC0Q,kBAAkBxQ,oBAAlB,CAAuC,CAAvC,CAAZ;AAAA;AAAA,sBAJJ;AAKI;AAAA;AAAA;AAAA;AAAW,0BAACwQ,kBAAkBzQ,mBAA9B;AAAA;AAAA;AALJ;AAFJ,cADJ;AAYH;;;;;;mBAfgBwQ,gB;;;AAkBrBA,kBAAiBH,SAAjB,GAA6B;AACzBI,wBAAmB,oBAAUH,MAAV,CAAiBC;AADX,EAA7B,C;;;;;;;;;;;;;;ACpBA;;;;AACA;;;;;;;;;;gfAFA;;;KAIqBG,mB;;;AACjB,oCAAc;AAAA;;AAAA;;AAEV,eAAKxM,KAAL,GAAa;AACTyM,yBAAY,CADH;AAETC,gCAAmB,EAFV,CAEa;AAFb,UAAb;AAFU;AAMb;;;;mDAEyBC,S,EAAW;AACjC,iBAAIA,UAAUF,UAAV,KAAyB,KAAKzM,KAAL,CAAWyM,UAAxC,EAAoD;AAChD;AACA,sBAAK9L,QAAL,CAAc;AACV8L,iCAAYE,UAAUF,UADZ;AAEVC,wCAAmB;AAFT,kBAAd;AAIH,cAND,MAMO;AACH;AACA,qBAAMA,oBAAoB,KAAK1M,KAAL,CAAW0M,iBAAX,CAA6BxC,KAA7B,EAA1B,CAFG,CAE4D;AAC/D,qBAAM0C,iBACFD,UAAUxM,cAAV,CAAyBzD,QAAzB,CAAkC,CAAlC,IAAuCiQ,UAAUxM,cAAV,CAAyBrD,SAAzB,CAAmCsB,MAA1E,GACEuO,UAAUxM,cAAV,CAAyBzD,QAAzB,CAAkC,CAAlC,CAFN;AAGAgQ,mCAAkBE,cAAlB,IAAoC,IAApC;AACA,sBAAKjM,QAAL,CAAc;AACV+L,wCAAmBA;AADT,kBAAd;AAGH;AACJ;;;kCAEQ;AACL,iBAAMG,kBAAkBC;AACpB;AACA,kBAAKlB,KAAL,CAAW1L,gBAAX,CAA4BpD,SAFR;AAGpB;AACA,kBAAK8O,KAAL,CAAW1L,gBAAX,CAA4BxD,QAJR,CAAxB;AAMA,iBAAMqQ,gBAAgBC,uBAClB,KAAKpB,KAAL,CAAWzL,cAAX,CAA0BrD,SADR,EAElB,KAAK8O,KAAL,CAAWzL,cAAX,CAA0BzD,QAFR,EAGlB,KAAKsD,KAAL,CAAW0M,iBAHO,CAAtB;;AAMA,oBAAO;AAAA;AAAA,mBAAK,WAAU,8BAAf;AACH;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,sBADJ;AAEI;AAAA;AAAA,2BAAO,WAAU,6BAAjB;AACI;AAAA;AAAA;AACCG,6CAAgBjK,GAAhB,CAAoB,UAACqK,GAAD,EAAMC,QAAN;AAAA,wCACjB;AAAA;AAAA,uCAAI,KAAKA,QAAT;AACKD,yCAAIrK,GAAJ,CAAQ,UAACuK,SAAD,EAAYC,SAAZ;AAAA,gDACL,sCAAI,KAAKA,SAAT,EAAoB,OAAO,EAACC,iBAAiBF,SAAlB,EAA3B,GADK;AAAA,sCAAR;AADL,kCADiB;AAAA,8BAApB;AADD;AADJ;AAFJ,kBADG;AAeH;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA,sBADJ;AAEI;AAAA;AAAA,2BAAO,WAAU,2BAAjB;AACI;AAAA;AAAA;AACCJ,2CAAcnK,GAAd,CAAkB,UAACqK,GAAD,EAAMC,QAAN;AAAA,wCACf;AAAA;AAAA,uCAAI,KAAKA,QAAT;AACKD,yCAAIrK,GAAJ,CAAQ,UAACuK,SAAD,EAAYC,SAAZ;AAAA,gDACL,sCAAI,KAAKA,SAAT,EAAoB,OAAO,EAACC,iBAAiBF,SAAlB,EAA3B,GADK;AAAA,sCAAR;AADL,kCADe;AAAA,8BAAlB;AADD;AADJ;AAFJ;AAfG,cAAP;AA8BH;;;;;;mBAxEgBX,mB;;;AA2ErBA,qBAAoBL,SAApB,GAAgC;AAC5BjM,uBAAkB,oBAAUkM,MAAV,CAAiBC,UADP;AAE5BlM,qBAAgB,oBAAUiM,MAAV,CAAiBC,UAFL;AAG5BI,iBAAY,oBAAUa,MAAV,CAAiBjB;AAHD,EAAhC;;AAMA,UAASW,sBAAT,CAAgClQ,SAAhC,EAA2CJ,QAA3C,EAAqDgQ,iBAArD,EAAwE;AACpE,SAAMa,aAAa,EAAnB;AACA,SAAMC,UAAU1Q,UAAUsB,MAA1B;AACA,SAAMqP,UAAU3Q,UAAU,CAAV,EAAasB,MAA7B;AACA,UAAK,IAAId,IAAI,CAAb,EAAgBA,IAAIkQ,OAApB,EAA6BlQ,GAA7B,EAAkC;AAC9B,cAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIkQ,OAApB,EAA6BlQ,GAA7B,EAAkC;AAC9B,iBAAIqP,iBAAiBtP,IAAIkQ,OAAJ,GAAcjQ,CAAnC;AACA,iBAAImQ,qBAAqBhB,kBAAkBE,cAAlB,CAAzB;AACA,iBAAIe,QAAQ,EAACC,GAAG,EAAJ,EAAQC,GAAG,EAAX,EAAeC,GAAG,EAAlB,EAAZ;AACA,iBAAIxQ,MAAMZ,SAAS,CAAT,CAAN,IAAqBa,MAAMb,SAAS,CAAT,CAA3B,IAA0CI,UAAUQ,CAAV,EAAaC,CAAb,MAAoB,CAAlE,EAAqE;AACjEoQ,yBAAQ,EAACC,GAAG,GAAJ,EAASC,GAAG,GAAZ,EAAiBC,GAAG,CAApB,EAAR;AACH,cAFD,MAEO,IAAIxQ,MAAMZ,SAAS,CAAT,CAAN,IAAqBa,MAAMb,SAAS,CAAT,CAA/B,EAA4C;AAC/CiR,yBAAQ,EAACC,GAAG,CAAJ,EAAOC,GAAG,GAAV,EAAeC,GAAG,CAAlB,EAAR;AACH,cAFM,MAEA,IAAIJ,sBAAsB5Q,UAAUQ,CAAV,EAAaC,CAAb,MAAoB,CAA9C,EAAiD;AACpDoQ,yBAAQ,EAACC,GAAG,GAAJ,EAASC,GAAG,GAAZ,EAAiBC,GAAG,GAApB,EAAR;AACH,cAFM,MAEA,IAAIJ,kBAAJ,EAAwB;AAC3BC,yBAAQ,EAACC,GAAG,CAAJ,EAAOC,GAAG,GAAV,EAAeC,GAAG,CAAlB,EAAR;AACH,cAFM,MAEA,IAAIhR,UAAUQ,CAAV,EAAaC,CAAb,MAAoB,CAAxB,EAA2B;AAC9BoQ,yBAAQ,EAACC,GAAG,GAAJ,EAASC,GAAG,CAAZ,EAAeC,GAAG,CAAlB,EAAR;AACH;AACD,iBAAI,CAACP,WAAWhQ,CAAX,CAAL,EAAoB;AAChBgQ,4BAAWhQ,CAAX,IAAgB,EAAhB;AACH;AACDgQ,wBAAWhQ,CAAX,EAAcD,CAAd,IAAmB,SAASqQ,MAAMC,CAAf,GAAmB,GAAnB,GAAyBD,MAAME,CAA/B,GAAmC,GAAnC,GAAyCF,MAAMG,CAA/C,GAAmD,GAAtE;AACH;AACJ;;AAED,YAAOP,UAAP;AACH;;AAED,UAAST,wBAAT,CAAkChQ,SAAlC,EAA6CJ,QAA7C,EAAuD;AACnD,SAAM6Q,aAAa,EAAnB;AACA,SAAMC,UAAU1Q,UAAUsB,MAA1B;AACA,SAAMqP,UAAU3Q,UAAU,CAAV,EAAasB,MAA7B;AACA,UAAK,IAAId,IAAI,CAAb,EAAgBA,IAAIkQ,OAApB,EAA6BlQ,GAA7B,EAAkC;AAC9B,cAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIkQ,OAApB,EAA6BlQ,GAA7B,EAAkC;AAC9B,iBAAIoQ,QAAQ,EAACC,GAAG,EAAJ,EAAQC,GAAG,EAAX,EAAeC,GAAG,EAAlB,EAAZ;AACA,iBAAIxQ,MAAMZ,SAAS,CAAT,CAAN,IAAqBa,MAAMb,SAAS,CAAT,CAA3B,IAA0CI,UAAUQ,CAAV,EAAaC,CAAb,MAAoB,CAAlE,EAAqE;AACjEoQ,yBAAQ,EAACC,GAAG,GAAJ,EAASC,GAAG,GAAZ,EAAiBC,GAAG,CAApB,EAAR;AACH,cAFD,MAEO,IAAIxQ,MAAMZ,SAAS,CAAT,CAAN,IAAqBa,MAAMb,SAAS,CAAT,CAA/B,EAA4C;AAC/CiR,yBAAQ,EAACC,GAAG,CAAJ,EAAOC,GAAG,GAAV,EAAeC,GAAG,CAAlB,EAAR;AACH,cAFM,MAEA,IAAIhR,UAAUQ,CAAV,EAAaC,CAAb,MAAoB,CAAxB,EAA2B;AAC9BoQ,yBAAQ,EAACC,GAAG,GAAJ,EAASC,GAAG,CAAZ,EAAeC,GAAG,CAAlB,EAAR;AACH;AACD,iBAAI,CAACP,WAAWhQ,CAAX,CAAL,EAAoB;AAChBgQ,4BAAWhQ,CAAX,IAAgB,EAAhB;AACH;AACDgQ,wBAAWhQ,CAAX,EAAcD,CAAd,IAAmB,SAASqQ,MAAMC,CAAf,GAAmB,GAAnB,GAAyBD,MAAME,CAA/B,GAAmC,GAAnC,GAAyCF,MAAMG,CAA/C,GAAmD,GAAtE;AACH;AACJ;AACD,YAAOP,UAAP;AACH,E;;;;;;;;;;;;;;ACxID;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,KAAMQ,iBAAiB,GAAvB;;KAEqBC,iB;;;;;;;;;;;6CACG;AAChB,iBAAIC,cAAc,KAAKC,IAAL,CAAUC,KAA5B;;AAEA,iBAAIC,UAAU,oBAAUH,WAAV,EAAuB;AACjCI,uBAAM,MAD2B;AAEjCC,uBAAM;AACFC,6BAAQ,EADN;AAEFC,+BAAU,CACN;AACIC,gCAAO,qBADX;AAEIH,+BAAM,EAFV;AAGIjB,0CAAiB,aAHrB;AAIIqB,sCAAa,MAJjB;AAKIC,sCAAa,CALjB;AAMIC,sCAAa;AANjB,sBADM,EASN;AACIH,gCAAO,aADX;AAEIH,+BAAM,EAFV;AAGIjB,0CAAiB,aAHrB;AAIIqB,sCAAa,WAJjB;AAKIC,sCAAa,CALjB;AAMIC,sCAAa;AANjB,sBATM;AAFR,kBAF2B;AAuBjCC,0BAAS;AACLC,gCAAW;AACPC,mCAAU;AADH,sBADN;AAILC,+BAAU,EAACC,OAAO,EAACC,QAAQ,CAAT,EAAR,EAJL;AAKLC,6BAAQ;AACJC,gCAAO,CAAC;AACJC,oCAAO;AACHC,sCAAK,GADF;AAEHC,sCAAK;AAFF;AADH,0BAAD,CADH;AAOJC,gCAAO,CAAC;AACJC,sCAAS;AADL,0BAAD;AAPH;AALH;AAvBwB,cAAvB,CAAd;;AA0CA,kBAAK9O,QAAL,CAAc,EAACwN,OAAOC,OAAR,EAAd;AACH;;;6CAEmBxN,K,EAAO;AACvB,oBAAO;AACH4N,2BAAU,CACN;AACIF,2BAAM1N,MAAM0H,uBAAN,CAA8B4B,KAA9B,CAAoC,CAAC6D,cAArC;AADV,kBADM,EAIN;AACIO,2BAAM1N,MAAMyH,gBAAN,CAAuB6B,KAAvB,CAA6B,CAAC6D,cAA9B;AADV,kBAJM,CADP;AASHQ,yBAAQvF,OAAO0G,IAAP,CAAY9O,MAAMyH,gBAAlB,EAAoC6B,KAApC,CAA0C,CAAC6D,cAA3C;AATL,cAAP;AAWH;;;8CAEoB;AACjB,iBAAMI,QAAQ,KAAKnO,KAAL,CAAWmO,KAAzB;AACA,iBAAMG,OAAO,KAAKqB,mBAAL,CAAyB,KAAK/D,KAAL,CAAWhL,KAApC,CAAb;;AAEA0N,kBAAKE,QAAL,CAAczK,OAAd,CAAsB,UAAC6L,OAAD,EAAU/R,CAAV;AAAA,wBAAgBsQ,MAAMG,IAAN,CAAWE,QAAX,CAAoB3Q,CAApB,EAAuByQ,IAAvB,GAA8BsB,QAAQtB,IAAtD;AAAA,cAAtB;;AAEAH,mBAAMG,IAAN,CAAWC,MAAX,GAAoBD,KAAKC,MAAzB;AACAJ,mBAAM0B,MAAN;AACH;;;kCAGQ;AACL,oBACI,0CAAQ,KAAK,OAAb,EAAsB,QAAQ,KAA9B,EAAqC,OAAO,KAA5C,GADJ;AAGH;;;;;;mBA9EgB7B,iB;;;AAiFrBA,mBAAkB7B,SAAlB,GAA8B;AAC1BvL,YAAO,oBAAUwL,MAAV,CAAiBC;AADE,EAA9B,C;;;;;;;;;;;;;;ACvFA;;;;AACA;;;;;;;;;;;;KAEqByD,Y;;;;;;;;;;;kCACR;AACL,iBAAMlP,QAAQ,KAAKgL,KAAL,CAAWhL,KAAzB;AACA,oBACI;AAAA;AAAA;AACI;AAAA;AAAA;AACCoI,4BAAO0G,IAAP,CAAY9O,KAAZ,EAAmBgC,GAAnB,CAAuB,UAACF,GAAD;AAAA,gCACpB;AAAA;AAAA,+BAAI,KAAKA,GAAT;AACI;AAAA;AAAA;AAAKA,oCAAL;AAAA;AAAY9B,uCAAM8B,GAAN;AAAZ;AADJ,0BADoB;AAAA,sBAAvB;AADD;AADJ,cADJ;AAWH;;;;;;mBAdgBoN,Y;;;AAiBrBA,cAAa3D,SAAb,GAAyB;AACrBvL,YAAO,oBAAUwL,MAAV,CAAiBC;AADH,EAAzB,C;;;;;;;;;;;ACpBO,KAAMiC,sBAAOtC,KAAK+D,KAAL,CAAW,sw1KAAX,CAAb,C;;;;;;uECAP;AACO,IAAMzB,mBAAOtC,KAAK+D,KAAL,CAAW,6o4oDAAX,CAAb,C;;;;;;;;;;;;;;ACDP;;;KAGqBC,gB;AACjB;;;;;;AAMA,2BAAYlT,SAAZ,EAAuBH,KAAvB,EAA8BD,QAA9B,EAAwC;AAAA;;AACpC;;;AAGA,QAAKI,SAAL,GAAiBA,SAAjB;;AAEA;;;AAGA,QAAKH,KAAL,GAAaA,KAAb;;AAEA;;;;AAIA,QAAKD,QAAL,GAAgBA,QAAhB;AACH,E;;mBAvBgBsT,gB;;;;;;;;;;;;;;ACHrB;;;KAGqBC,K;AACjB;;;;;;AAMA,gBAAYnT,SAAZ,EAAuBJ,QAAvB,EAAiCC,KAAjC,EAAwCI,UAAxC,EAAoD;AAAA;;AAChD;;;AAGA,QAAKD,SAAL,GAAiBA,SAAjB;AACA;;;AAGA,QAAKJ,QAAL,GAAgBA,QAAhB;AACA;;;AAGA,QAAKC,KAAL,GAAaA,KAAb;AACA;;;AAGA,QAAKI,UAAL,GAAkBA,UAAlB;AACH,E;;mBAxBgBkT,K;;;;;;;;;;;;;ACHrB;;;;AACA;;;;AAEA;;;;;AAKO,KAAMC,sDAAuB,SAAvBA,oBAAuB,GAAM;AACtC,YAAO,oBACHC,wBAAwB,cAAO1U,IAA/B,CADG,EAEH,CAACwB,KAAKG,KAAL,CAAW,cAAO3B,IAAP,CAAY,CAAZ,IAAiB,CAA5B,CAAD,EAAiC,CAAjC,CAFG,EAGH,CAHG,EAIH,KAJG,CAAP;AAMH,EAPM;;AASP;;;;;;AAMA,UAAS0U,uBAAT,CAAiC1U,IAAjC,EAAuC;AACnC,SAAMqB,YAAY,EAAlB;AACA,SAAIwB,OAAO7C,KAAK,CAAL,CAAX;AACA,SAAI8C,OAAO9C,KAAK,CAAL,CAAX;AACA,UAAK,IAAI2U,KAAK,CAAd,EAAiBA,KAAK9R,IAAtB,EAA4B8R,IAA5B,EAAkC;AAC9BtT,mBAAUsT,EAAV,IAAgB,IAAIC,KAAJ,CAAU9R,IAAV,CAAhB;AACA,cAAK,IAAI+R,KAAK,CAAd,EAAiBA,KAAK7U,KAAK,CAAL,CAAtB,EAA+B6U,IAA/B,EAAqC;AACjC;AACAxT,uBAAUsT,EAAV,EAAcE,EAAd,IAAoBrT,KAAKoK,MAAL,KAAgB,GAAhB,GAAsB,CAAtB,GAA0B,CAA9C;AACH;AACJ;AACD,YAAOvK,SAAP;AACH,E;;;;;;;;;;;SC5BeyT,e,GAAAA,e;SAYAC,e,GAAAA,e;SAMAC,e,GAAAA,e;SAMAC,e,GAAAA,e;;AA/BhB;;AAEA;AACA;AACA;;AAEA,KAAIC,8BAA8B,yCAAa,CAAC,CAAD,EAAI,CAAJ,CAAb,CAAlC,C,CAAuD;AAChD,UAASJ,eAAT,CAAyB3S,MAAzB,EAAiC;AACpC,oDAAmBA,MAAnB,EAA2B,CAAC,CAAD,EAAI,CAAC,CAAL,CAA3B,EAAoC,CAApC,EAAuC,CAAC,CAAD,EAAI,CAAJ,CAAvC,EAA+C+S,2BAA/C;AACA,YAAOA,2BAAP;AACH;;AAED;AACA;AACA;AACA;AACA;;AAEA,KAAIC,8BAA8B,yCAAa,CAAC,CAAD,EAAI,CAAJ,CAAb,CAAlC,C,CAAuD;AAChD,UAASJ,eAAT,CAAyB5S,MAAzB,EAAiC;AACpC,oDAAmBA,MAAnB,EAA2B,CAAC,CAAD,EAAI,CAAC,CAAL,CAA3B,EAAoC,CAApC,EAAuC,CAAC,CAAD,EAAI,CAAJ,CAAvC,EAA+CgT,2BAA/C;AACA,YAAOA,2BAAP;AACH;;AAED,KAAIC,8BAA8B,yCAAa,CAAC,CAAD,EAAI,CAAJ,CAAb,CAAlC,C,CAAuD;AAChD,UAASJ,eAAT,CAAyB7S,MAAzB,EAAiC;AACpC,oDAAmBA,MAAnB,EAA2B,CAAC,CAAD,EAAI,CAAC,CAAL,CAA3B,EAAoC,CAApC,EAAuC,CAAC,CAAD,EAAI,CAAJ,CAAvC,EAA+CiT,2BAA/C;AACA,YAAOA,2BAAP;AACH;;AAED,KAAIC,8BAA8B,yCAAa,CAAC,CAAD,EAAI,CAAJ,CAAb,CAAlC,C,CAAuD;AAChD,UAASJ,eAAT,CAAyB9S,MAAzB,EAAiC;AACpC,oDAAmBA,MAAnB,EAA2B,CAAC,CAAD,EAAI,CAAC,CAAL,CAA3B,EAAoC,CAApC,EAAuC,CAAC,CAAD,EAAI,CAAJ,CAAvC,EAA+CkT,2BAA/C;AACA,YAAOA,2BAAP;AACH,E;;;;;;;;AClCD;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,oBAASC,MAAT,CACE,kDADF,EAEEpL,SAASC,cAAT,CAAwB,MAAxB,CAFF;;AAOA,+D;;;;;;;;;;;;sjBCZA;;;AACA;;AACA;;KAAYoL,S;;AACZ;;AACA;;;;;;;;;;KACqBC,K;AACjB,oBAAYrG,cAAZ,EAA4BsG,eAA5B,EAA6CrC,OAA7C,EAAsD;AAAA;;AAClD,aAAIsC,iBAAiB;AACjBC,6BAAgB,IADC,EACK;AACtBC,sCAAyB,IAFR,EAEa;AAC9BvK,2BAAc,IAHG,EAGE;AACnBwK,uCAA0B,EAJT,EAIY;AAC7BC,6BAAgB,IALC,EAKI;AACrBC,wCAA2B,EANV;AAOjBC,2BAAc;AAPG,UAArB;;AAUA,cAAKC,QAAL,GAAgB1I,OAAOC,MAAP,CAAckI,cAAd,EAA8BtC,OAA9B,CAAhB;;AAEA,cAAK8C,cAAL,GAAsB,4BAAkB/G,cAAlB,EAAkC,GAAlC,EAAuCsG,eAAvC,CAAtB,CAbkD,CAa4B;;AAE9E,cAAKU,cAAL,GAAsBhH,cAAtB;AACA,cAAKsG,eAAL,GAAuBA,eAAvB;;AAEA,cAAKW,gBAAL,GAAwB;AACpBnH,qBAAQ,CADY;AAEpBnE,wBAAW,KAFS;AAGpBJ,sBAAS,IAAIrI,YAAJ,CAAiBoT,eAAjB,CAHW;AAIpBY,sBAAS;AAJW,UAAxB;;AAOA,cAAKC,GAAL,GAAW,EAAX,CAzBkD,CAyBnC;AACf,cAAKC,IAAL,GAAY,CAAZ,CA1BkD,CA0BnC;;AAEf,cAAKC,CAAL,GAAS,CAAT;;AAEA,cAAKjH,UAAL,GAAkB,IAAlB;AACA,cAAKkH,eAAL,GAAuB,IAAvB;AACA,cAAKC,kBAAL,GAA0B,IAA1B;AACA,cAAKvN,UAAL,GAAkB,IAAlB;AACA,cAAKwN,aAAL,GAAqB,IAArB;AACH;;AAED;;;;;;;;;;qCAMYpH,U,EAAYmH,kB,EAAoB;AACxC,iBAAIL,UAAU,CAAd;AACA,iBAAI9G,eAAe,IAAnB,EAAyB;AACrB8G,2BAAU,KAAKO,MAAL,CAAYrH,UAAZ,CAAV;AACH;;AAED;AACA;AACA;;AAEA,iBAAIhL,QAAQmS,kBAAZ;;AAEA,iBAAIG,kBAAkB,KAAtB;AACA,iBAAIC,gBAAgB,IAApB;AACA,iBAAI7H,eAAJ;;AAGA;AACA,iBAAI8H,eAAe,KAAKb,cAAL,CAAoBc,MAApB,CAA2BzS,KAA3B,CAAnB;;AAEAuS,6BAAgBC,YAAhB;AACA9H,sBAASsG,UAAU0B,kBAAV,CAA6BF,YAA7B,CAAT,CArBwC,CAqBa;;AAErD;AACA,iBAAIvV,KAAKoK,MAAL,KAAgB,KAAKqK,QAAL,CAAcL,uBAAlC,EAA2D;AACvD3G,0BAAS,qCAAwB,KAAKwG,eAA7B,CAAT;AACAoB,mCAAkB,IAAlB;AACH;;AAED;;AAEA;;AAEA;AACA,kBAAKJ,eAAL,GAAuB,KAAKC,kBAA5B;AACA,kBAAKvN,UAAL,GAAkB,KAAKwN,aAAvB;AACA,kBAAKD,kBAAL,GAA0BnS,KAA1B;AACA,kBAAKoS,aAAL,GAAqB1H,MAArB;;AAEA,iBAAIiI,kBAAkB,KAAKd,gBAA3B;AACAc,6BAAgBjI,MAAhB,GAAyBA,MAAzB;AACAiI,6BAAgBpM,SAAhB,GAA4B+L,eAA5B;AACAK,6BAAgBxM,OAAhB,GAA0BoM,aAA1B;AACAI,6BAAgBb,OAAhB,GAA0BA,OAA1B;;AAEA,oBAAOpH,MAAP;AACH;;;8CAEoB;AACjB,oBAAO,KAAKmH,gBAAZ;AACH;;;gCAEMe,E,EAAI;AACP;AACA,iBAAI,KAAKV,eAAL,KAAyB,IAAzB,IAAiC,KAAKlH,UAAL,KAAoB,IAArD,IAA6D,KAAK0G,QAAL,CAAc5K,YAAd,GAA6B,CAA9F,EAAiG;;AAE7F;AACA,qBAAIgL,UAAU,KAAKe,iBAAL,CAAuB,KAAKX,eAA5B,EAA6C,KAAKtN,UAAlD,EAA8D,KAAKoG,UAAnE,EAA+E,KAAKmH,kBAApF,CAAd;;AAEA;AACA,qBAAI,KAAKF,CAAL,GAAS,KAAKP,QAAL,CAAcJ,wBAAvB,KAAoD,CAAxD,EAA2D;AACvD,0BAAKS,GAAL,CAAS,KAAKC,IAAd,IAAsB,CAAC,KAAKE,eAAN,EAAuB,KAAKtN,UAA5B,EAAwC,KAAKoG,UAA7C,EAAyD,KAAKmH,kBAA9D,CAAtB;AACA,0BAAKH,IAAL,IAAa,CAAb;AACA,yBAAI,KAAKA,IAAL,GAAY,KAAKN,QAAL,CAAcH,cAA9B,EAA8C;AAC1C,8BAAKS,IAAL,GAAY,CAAZ;AACH,sBALsD,CAKrD;AACL;AACD,sBAAKC,CAAL,IAAU,CAAV;;AAEA;AACA,sBAAK,IAAIa,IAAI,CAAb,EAAgBA,IAAI,KAAKpB,QAAL,CAAcF,yBAAlC,EAA6DsB,GAA7D,EAAkE;AAC9D,yBAAIC,KAAK,qCAAwB,KAAKhB,GAAL,CAAS3T,MAAjC,CAAT;AACA,yBAAI4U,IAAI,KAAKjB,GAAL,CAASgB,EAAT,CAAR;AACA,0BAAKF,iBAAL,CAAuBG,EAAE,CAAF,CAAvB,EAA6BA,EAAE,CAAF,CAA7B,EAAmCA,EAAE,CAAF,CAAnC,EAAyCA,EAAE,CAAF,CAAzC;AACH;AACJ;AACD,kBAAKhI,UAAL,GAAkB4H,EAAlB,CAxBO,CAwBe;AACtB,oBAAOd,OAAP;AACH;;;2CAEiBI,e,EAAiBtN,U,EAAYoG,U,EAAYmH,kB,EAAoB;;AAE3E;;AAEA,iBAAIK,eAAe,KAAKb,cAAL,CAAoBc,MAApB,CAA2BN,kBAA3B,CAAnB;AACA,iBAAIc,wBAAwBT,aAAaxB,UAAU0B,kBAAV,CAA6BF,YAA7B,CAAb,CAA5B;;AAEA,iBAAIU,aAAa,KAAKvB,cAAL,CAAoBc,MAApB,CAA2BP,eAA3B,CAAjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACR;AACQ,iBAAI7P,SAAS6Q,WAAWhJ,KAAX,EAAb;AACA,iBAAIiJ,oBAAoBnI,aAAaiI,wBAAwB,KAAKvB,QAAL,CAAcN,cAA3E,CAnB2E,CAmBe;AAC1F/O,oBAAOuC,UAAP,IAAqBuO,iBAArB;;AAEA;AACA;AACA,kBAAKxB,cAAL,CAAoByB,KAApB,CAA0B/Q,MAA1B;AACA;AACA;AACR;AACQ,iBAAIgR,QAASH,WAAWtO,UAAX,IAAyBuO,iBAAtC;AACA;AACA,oBAAOE,KAAP,CA9B2E,CA8B7D;AACjB;;;sCAEYC,I,EAAM;AACf,kBAAK3B,cAAL,CAAoB7G,YAApB,CAAiCwI,IAAjC;AACH;;;sCAEY;AACT,oBAAO,KAAK3B,cAAL,CAAoBtG,UAApB,EAAP;AACH;;;;;;mBAnKgB4F,K;AAoKpB,E;;;;;;;;;;;SCzKeyB,kB,GAAAA,kB;AAAT,UAASA,kBAAT,CAA4Ba,KAA5B,EAAmC;AACtC,SAAIC,WAAWD,MAAM,CAAN,CAAf;AACA,SAAIE,WAAW,CAAf;AACA,UAAK,IAAI5V,IAAI,CAAR,EAAWO,SAASmV,MAAMnV,MAA/B,EAAuCP,IAAIO,MAA3C,EAAmDP,GAAnD,EAAwD;AACpD,aAAI6V,IAAIH,MAAM1V,CAAN,CAAR;AACA,aAAI6V,IAAIF,QAAR,EAAkB;AACdC,wBAAW5V,CAAX;AACA2V,wBAAWE,CAAX;AACH;AACJ;AACD,YAAOD,QAAP;AACH,E;;;;;;;;;;;SCHeE,W,GAAAA,W;SAMAC,Y,GAAAA,Y;SAIAC,uB,GAAAA,uB;AAlBhB;;;;;;;;AAQO,UAASF,WAAT,GAAuB;AAC1B,SAAIG,IAAI,IAAI7W,KAAKoK,MAAL,EAAZ,CAD0B,CACC;AAC3B,SAAIqM,IAAI,IAAIzW,KAAKoK,MAAL,EAAZ;AACA,YAAOpK,KAAK8W,IAAL,CAAW,CAAC,GAAD,GAAO9W,KAAK+W,GAAL,CAAUF,CAAV,CAAlB,IAAoC7W,KAAKgX,GAAL,CAAU,MAAMhX,KAAKiX,EAAX,GAAgBR,CAA1B,CAA3C;AACH;;AAEM,UAASE,YAAT,CAAsBtE,GAAtB,EAA2BC,GAA3B,EAAgC;AACnC,YAAOtS,KAAKG,KAAL,CAAWH,KAAKoK,MAAL,MAAiBkI,MAAMD,GAAvB,IAA8BA,GAAzC,CAAP;AACH;;AAEM,UAASuE,uBAAT,CAAiCtE,GAAjC,EAAsC;AACzC,YAAOtS,KAAKG,KAAL,CAAWH,KAAKoK,MAAL,KAAgBkI,GAA3B,CAAP;AACH,E;;;;;;;;;;;SCjBe4E,W,GAAAA,W;;AAHhB;;;;AACA;;;;;;AAEO,UAASA,WAAT,GAAsB;AACzB,SAAIC,eAAe,CAAC;AAChB,MAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAC,CAAC,IAAF,EAAQ,IAAR,EAAc,CAAC,IAAf,CAAZ,CADe,EAEf,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAC,CAAC,IAAF,EAAQ,IAAR,EAAc,CAAC,IAAf,CAAZ,CAFe,EAGf,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAC,CAAC,IAAF,EAAQ,CAAC,IAAT,EAAe,CAAC,IAAhB,CAAZ,CAHe,EAIf,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAC,CAAC,IAAF,EAAQ,CAAC,IAAT,EAAe,CAAC,IAAhB,CAAZ,CAJe,EAKf,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAC,CAAC,IAAF,EAAQ,IAAR,EAAc,CAAC,IAAf,CAAZ,CALe,EAMf,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAC,CAAC,IAAF,EAAQ,IAAR,EAAc,CAAC,IAAf,CAAZ,CANe,EAOf,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAC,CAAC,IAAF,EAAQ,CAAC,IAAT,EAAe,CAAC,IAAhB,CAAZ,CAPe,EAQf,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAD,EAAY,CAAC,CAAC,IAAF,EAAQ,CAAC,IAAT,EAAe,CAAC,IAAhB,CAAZ,CARe,CAAnB;AAUA,SAAIC,UAAU,4BAAkB,CAAlB,EAAqB,GAArB,EAA0B,CAA1B,CAAd;AACA,iCAAaA,OAAb,EAAsBD,YAAtB,EAAoC,IAApC;AACH;;AAED;;AAEA;AACA;AACA;AACA,sB;;;;;;;;;;;;;;;;KCvBqBE,S;;;;;;;8BACZhX,C,EAAG;AACJ,iBAAIA,IAAI,CAAR,EAAW;AACP,wBAAOA,CAAP;AACH,cAFD,MAEO;AACH,wBAAO,OAAOA,CAAd;AACH;AACJ;;;kCAEQC,C,EAAG;AACR,iBAAIA,IAAI,CAAR,EAAW;AACP,wBAAO,CAAP;AACH,cAFD,MAEO;AACH,wBAAO,IAAP;AACH;AACJ;;;;;;mBAfgB+W,S;;;;;;;;;;;;;;;;KCAAC,M;;;;;;;8BACZjX,C,EAAG;AACJ,oBAAOA,CAAP;AACH;;;kCAEQC,C,EAAG;AACR,oBAAO,CAAP;AACH;;;;;;mBAPgBgX,M;;;;;;;;;;;;;;ACArB;;;;;;;;;;;;AACA;;KAEqBC,W;;;;;;;;;;;wCACFC,W,EAAa;AACxB,kBAAKA,WAAL,GAAmBA,WAAnB;AACH;;;+DAEqC;AAClC;AACA,iBAAIzN,YAAY,KAAKA,SAArB;AACA,iBAAIU,iBAAiB,KAAKA,cAA1B;AACA,iBAAIJ,UAAU,KAAKA,OAAnB;AACA,iBAAIE,+BAA+B,KAAKA,4BAAxC;AACA,iBAAIkN,uBAAuB,KAAKD,WAAL,CAAiBzN,SAA5C;AACA,iBAAI2N,qBAAqB,KAAKF,WAAL,CAAiBtO,OAA1C;AACA,iBAAIyO,4BAA4B,KAAKH,WAAL,CAAiBvN,cAAjD;AACA,iBAAI2N,4BAA4B,KAAKJ,WAAL,CAAiB/M,cAAjD;;AAEA,kBAAK,IAAIE,UAAU,CAAnB,EAAsBA,UAAUZ,SAAhC,EAA2CY,SAA3C,EAAsD;AAClD,qBAAIkN,2BAA2B,CAA/B;AACA,sBAAK,IAAIC,UAAU,CAAnB,EAAsBA,UAAUL,oBAAhC,EAAsDK,SAAtD,EAAiE;AAC7DD,iDAA4BD,0BAA0BE,OAA1B,IACtBJ,mBAAmBI,UAAUH,yBAAV,GAAsChN,OAAzD,CADN;AAGH;;AAEDF,gCAAeE,OAAf,IAA0BkN,2BACpBtN,6BAA6BF,QAAQM,OAAR,CAA7B,CADN;;AAGA;AACH;AACJ;;;;;;mBA7BgB4M,W;;;;;;;;;;;;;;;;KCHAQ,U;AACjB,yBAAYhO,SAAZ,EAAuB;AAAA;;AACnB,cAAKA,SAAL,GAAiBA,SAAjB;AACA,cAAKM,OAAL,GAAe,IAAIxJ,YAAJ,CAAiBkJ,SAAjB,CAAf,CAFmB,CAEwB;AAC9C;;;;qCAEWW,M,EAAQ;AAChB,kBAAKL,OAAL,GAAeK,MAAf;AACH;;;;;;mBARgBqN,U;;;;;;;;;;;mBCAGC,Y;AAAT,UAASA,YAAT,CAAsB1B,KAAtB,EAA6B;AACxC,SAAI2B,UAAU3B,MAAMnV,MAApB;;AAEA;AACA,YAAO8W,UAAU,CAAjB,EAAoB;AAChB;AACA,aAAIpS,QAAQ7F,KAAKG,KAAL,CAAWH,KAAKoK,MAAL,KAAgB6N,OAA3B,CAAZ;;AAEA;AACAA;;AAEA;AACA,aAAIC,OAAO5B,MAAM2B,OAAN,CAAX;AACA3B,eAAM2B,OAAN,IAAiB3B,MAAMzQ,KAAN,CAAjB;AACAyQ,eAAMzQ,KAAN,IAAeqS,IAAf;AACH;;AAED,YAAO5B,KAAP;AACH,E;;;;;;;;;;;;;;AClBD;;;;AACA;;;;AACA;;;;;;;;KAEqB6B,W;AACjB,0BAAYC,WAAZ,EAAyB;AAAA;;AACrB,cAAKpO,UAAL,GAAkB,yBAAeoO,YAAY,CAAZ,EAAe5Z,IAA9B,CAAlB;;AAEA,aAAI4Z,YAAYjX,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,mBAAM,IAAIxB,KAAJ,CAAU,+DAAV,CAAN;AACH;;AAED,aAAI0Y,eAAeD,YAAY,CAAZ,CAAnB;AACA,cAAKE,WAAL,GAAmB,0BACfD,aAAa7Z,IADE,EACI,KAAKwL,UADT,EACqBqO,aAAazO,kBADlC,EACsDyO,aAAaxO,YADnE,CAAnB;;AAIA,aAAI0O,eAAeH,YAAY,CAAZ,CAAnB;AACA,cAAKZ,WAAL,GAAmB,0BACfe,aAAa/Z,IADE,EACI,KAAK8Z,WADT,EACsBC,aAAa3O,kBADnC,EACuD2O,aAAa1O,YADpE,CAAnB;AAGA,cAAKyO,WAAL,CAAiBE,cAAjB,CAAgC,KAAKhB,WAArC;;AAEA;AACA;AACH;;;;gCAEM9M,M,EAAQ;AACX;AACA;AACA;AACA;AACA;;AAEA,kBAAKV,UAAL,CAAgByO,WAAhB,CAA4B/N,MAA5B;AACA,kBAAK4N,WAAL,CAAiBG,WAAjB;AACA,iBAAIpO,UAAU,KAAKmN,WAAL,CAAiBiB,WAAjB,EAAd;;AAEA,kBAAK,IAAI7X,IAAI,CAAR,EAAWqI,MAAMoB,QAAQlJ,MAA9B,EAAsCP,IAAIqI,GAA1C,EAA+CrI,GAA/C,EAAoD;AAChD,qBAAI,CAACsH,SAASmC,QAAQzJ,CAAR,CAAT,CAAL,EAA2B;AACvB,2BAAM,IAAIjB,KAAJ,CAAU,+CAAV,CAAN;AACH;AACJ;;AAED,oBAAO0K,OAAP;AACH;;;+BAEKS,a,EAAe;AACjB,kBAAK0M,WAAL,CAAiBkB,mCAAjB,CAAqD5N,aAArD;AACA,kBAAKwN,WAAL,CAAiBI,mCAAjB;AACA,kBAAKlB,WAAL,CAAiBmB,qBAAjB;AACA,kBAAKL,WAAL,CAAiBK,qBAAjB;AACH;;;sCAEYtC,I,EAAM;AACf,iBAAInN,UAAUmN,KAAKuC,MAAL,CAAY,CAAZ,EAAe1P,OAA7B;AACA,kBAAK,IAAItI,IAAI,CAAb,EAAgBA,IAAIsI,QAAQ/H,MAA5B,EAAoCP,GAApC,EAAyC;AAAE;AACvC,sBAAK0X,WAAL,CAAiBpP,OAAjB,CAAyBtI,CAAzB,IAA8BsI,QAAQtI,CAAR,CAA9B;AACH;AACDsI,uBAAUmN,KAAKuC,MAAL,CAAY,CAAZ,EAAe1P,OAAzB;AACA,kBAAKtI,IAAI,CAAT,EAAYA,IAAIsI,QAAQ/H,MAAxB,EAAgCP,GAAhC,EAAqC;AAAE;AACnC,sBAAK4W,WAAL,CAAiBtO,OAAjB,CAAyBtI,CAAzB,IAA8BsI,QAAQtI,CAAR,CAA9B;AACH;AACJ;;;sCAEY;AAAC;AACV,oBAAO;AACHgY,yBAAQ,CACJ,EADI,EACD;AACH,mBAAC1P,SAASkK,MAAMyF,IAAN,CAAW,KAAKP,WAAL,CAAiBpP,OAA5B,CAAV,EAFI,EAE4C;AAChD,mBAACA,SAASkK,MAAMyF,IAAN,CAAW,KAAKrB,WAAL,CAAiBtO,OAA5B,CAAV,EAHI,CAG2C;AAH3C;AADL,cAAP,CADS,CAON;AACN;;;;;;mBArEgBiP,W;;;;;;;;;;;mBCWGW,Y;;AAfxB;;;;;;AAEA,UAAS/B,GAAT,CAAagC,KAAb,EAAoBC,SAApB,EAA+BtO,MAA/B,EAAuCI,aAAvC,EAAsDT,OAAtD,EAA+D;AAC3D;AACA,SAAI4O,SAAS,IAAI7F,KAAJ,CAAU/I,QAAQlJ,MAAlB,CAAb;AACA,UAAK,IAAIP,IAAI,CAAR,EAAWqI,MAAMoB,QAAQlJ,MAA9B,EAAsCP,IAAIqI,GAA1C,EAA+CrI,GAA/C,EAAoD;AAChDqY,gBAAOrY,CAAP,IAAY,CAACkK,cAAclK,CAAd,IAAmByJ,QAAQzJ,CAAR,CAApB,EAAgCyI,OAAhC,CAAwC,CAAxC,CAAZ;AACH;AACD6P,aAAQnC,GAAR,CACIgC,QAAQ,GAAR,GAAcC,SADlB,EAEI,QAFJ,EAEcC,MAFd;AAKH;;AAEc,UAASH,YAAT,CAAsBK,aAAtB,EAAqChC,YAArC,EAAmDiC,SAAnD,EAA8D;AACzE,UAAK,IAAIL,QAAQ,CAAjB,EAAoBA,QAAQK,SAA5B,EAAuCL,OAAvC,EAAgD;AAC5C5B,wBAAe,4BAAaA,YAAb,CAAf;;AAEA,cAAK,IAAIkC,OAAO,CAAX,EAAcC,WAAWnC,aAAahW,MAA3C,EAAmDkY,OAAOC,QAA1D,EAAoED,MAApE,EAA4E;;AAExE,iBAAIE,MAAMpC,aAAakC,IAAb,CAAV;;AAEA,iBAAIhP,UAAU8O,cAAc3D,MAAd,CAAqB+D,IAAI,CAAJ,CAArB,CAAd;;AAEAJ,2BAAchD,KAAd,CAAoBoD,IAAI,CAAJ,CAApB;;AAEAxC,iBAAIgC,KAAJ,EAAWM,IAAX,EAAiBE,IAAI,CAAJ,CAAjB,EAAyBA,IAAI,CAAJ,CAAzB,EAAiClP,OAAjC;AACH;AACJ;AACJ,E;;;;;;;;;;;;;;;SCAemP,oB,GAAAA,oB;;AA9BhB;;KAAYC,mB;;AACZ;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA;;;;;;AAMA,KAAMC,qBAAqB,KAA3B;;AAEA,KAAMC,qBAAqB,IAAI,CAA/B;AACO,KAAMC,kCAAa5Z,KAAK6Z,GAAL,CAAS,CAAT,EAAYF,kBAAZ,KAAmCD,qBAAqB,qBAAQvY,MAA7B,GAAsC,CAAzE,CAAnB;;AAEP,KAAIyE,QAAQ,yBAAUgU,UAAV,EAAsB,qBAAQzY,MAA9B,CAAZ;AACA,KAAIyM,mBAAmB,gCAAvB;;AAEAhI,OAAMiI,YAAN,qB,CAA+B;AAC/B;;;;;;AAMO,UAAS2L,oBAAT,CAA8BlD,KAA9B,EAAqC;AACxC,SAAIwD,SAAS,CAAb;AACA,UAAK,IAAIlZ,IAAI,CAAR,EAAWqI,MAAMqN,MAAMnV,MAA5B,EAAoCP,IAAIqI,GAAxC,EAA6CrI,GAA7C,EAAkD;AAC9CkZ,mBAAUxD,MAAM1V,CAAN,IAAWZ,KAAK6Z,GAAL,CAAS,CAAT,EAAYjZ,CAAZ,CAArB;AACH;AACD,YAAOkZ,MAAP;AACH;;AAED;;;;;;;AAOA,UAASC,gBAAT,CAA0BnT,WAA1B,EAAuCe,UAAvC,EAAmD;AAC/C,SAAIqS,gBAAgBR,qBAChB,8CACIC,oBAAoBlG,eAApB,EAAoC;AAChC3M,iBAAY/G,SADhB,CADJ,CADgB,CAApB;AAOA,SAAI6Z,kBAAJ,EAAwB;AACpB,gBAAOM,iBAAiBrS,aAAa,CAA9B,CAAP;AACH,MAFD,MAEO;AACH,gBAAOqS,aAAP;AACH;AACJ;;KAGoBC,Y;AACjB,6BAAc;AAAA;;AACV,cAAKjS,UAAL,GAAkB,IAAlB;AACA,cAAKkS,WAAL,GAAmB,CAAnB;AACAtM,4BAAmB,gCAAnB;AACH;;AAED;;;;;;;;;mCAKUhH,W,EAAa;AACnB,iBAAIqB,SAAS2F,iBAAiBI,cAAjB,CAAgCpH,WAAhC,CAAb;AACA,iBAAI7D,QAAQgX,iBAAiBnT,WAAjB,EAA8B,KAAKsT,WAAnC,CAAZ;AACA,iBAAIjM,cAAcrI,MAAMuU,MAAN,CAAalS,MAAb,EAAqBlF,KAArB,CAAlB;AACA,iBAAI0K,SAAS,qBAAQQ,WAAR,CAAb;AACA,iBAAImM,iBAAiBxU,MAAMuI,kBAAN,EAArB;AACA,iBAAI,cAASnM,gBAAb,EAA+B;AAC3B,2DAAqB,EAACkH,SAASkR,eAAelR,OAAzB,EAAkCI,WAAW8Q,eAAeC,iBAA5D,EAArB;AACA,mDAAapS,MAAb;AACH;AACD,kBAAKiS,WAAL,GAAmBjM,WAAnB;AACA,oBAAOR,MAAP;AACH;;;sCAEY;AACT7H,qBAAQ,yBAAUgU,UAAV,EAAsB,qBAAQzY,MAA9B,CAAR;AACAyM,gCAAmB,gCAAnB;AACH;;;uCAEa;AACV,oBAAOhI,MAAMwI,UAAN,EAAP;AACH;;;mCAEgB;AACb,oBAAO,mDAAP;AACH;;;0CAEuB;AACpB,oBAAO,mEAAmEwL,UAAnE,GAAgF,oBAAhF,GACH,qEADJ;AAEH;;;;;;mBA1CgBK,Y;;;;;;AC7DrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnDA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACVA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACTA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACVA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACVA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACVA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;ACVA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC9CA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;AACJ;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,GAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAkC;AAClC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;;;;;;AC3hBA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;;;;;;;ACzHA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA,2DAA0D,UAAU;AACpE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;;;AAGF;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,mBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf,gBAAe;AACf,iBAAgB;AAChB;AACA,eAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,YAAY;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;;;;;;AC9SA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAgC,QAAQ;AACxC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAgC,QAAQ;AACxC;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA,KAAI;AACJ;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA,KAAI;AACJ;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA,KAAI;AACJ;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ,sCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAgC,QAAQ;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAgC,QAAQ;AACxC;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;;;;;;AClVA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA,2DAA0D,UAAU;AACpE;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB,WAAW;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;;;;;;ACtNA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;;;;;;ACpLA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA2B,gBAAgB;AAC3C,8BAA6B,WAAW;AACxC,uBAAsB,OAAO;AAC7B,mBAAkB,QAAQ;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAsB,8BAA8B;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1IA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;AC3HA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB;;AAEvB;AACA;;AAEA;AACA;AACA,mBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAmB;AACnB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd,OAAM;AACN;AACA,eAAc;AACd,OAAM;AACN;AACA;;AAEA;AACA,iBAAgB,+DAA+D;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,KAAI;;AAEJ;AACA,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mDAAkD,UAAU;AAC5D;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0EAAyE;AACzE;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,mDAAkD,gBAAgB;AAClE,IAAG;;AAEH;AACA,uDAAsD,gBAAgB;AACtE,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA,qDAAoD,gBAAgB;AACpE,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA,qDAAoD,QAAQ;AAC5D;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA,+CAA8C,UAAU;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;AACA;;AAEA,mCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAE;AACF;;;;;;;AC/uBA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA,KAAI;AACJ,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;;AAEA;AACA;AACA,aAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA8B,QAAQ;AACtC;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA,sCAAqC,SAAS;AAC9C;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,kCAAiC;AACjC;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,iBAAgB,SAAS;AACzB;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;;;;;;;ACpTA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,OAAM;AACN;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,KAAI;;AAEJ;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,GAAE;;AAEF;;AAEA;;;;;;;AC/FA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,QAAQ;AAC7B;AACA;AACA,KAAI;AACJ,gBAAe,SAAS;AACxB;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,eAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA,KAAI;AACJ;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,KAAI;AACJ,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,OAAM;AACN,MAAK;AACL;AACA;AACA;AACA;AACA,OAAM;AACN;AACA,KAAI;AACJ;AACA;;AAEA,KAAI;AACJ;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,wCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,wCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,0BAA0B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAmB;AACnB;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,eAAe;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA,KAAI;AACJ;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,cAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,eAAe;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA,KAAI;AACJ;AACA,KAAI;AACJ;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,KAAI;AACJ;AACA,KAAI;AACJ;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA,mBAAkB,WAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA6B,UAAU;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ,mEAAkE,KAAK,KAAK;AAC5E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACx8BA;;AAEA;AACA;;AAEA;AACA;AACA,aAAY,aAAa;AACzB,aAAY,MAAM;AAClB,eAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAkB,MAAM;AACxB,qBAAoB,SAAS;AAC7B;AACA;AACA;AACA;;AAEA,sCAAqC,UAAU;AAC/C;AACA;AACA;;AAEA;AACA,wCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB,eAAe;AACjC,sBAAqB,MAAM;AAC3B,cAAa,eAAe;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA,mBAAkB,MAAM;AACxB,sBAAqB,MAAM;AAC3B,uBAAsB,QAAQ;AAC9B,4BAA2B,SAAS;AACpC,cAAa,eAAe;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAoB,MAAM;AAC1B,iBAAgB,MAAM;AACtB,uBAAsB,oBAAoB;AAC1C,gBAAe,gBAAgB;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAoB,MAAM;AAC1B,iBAAgB,MAAM;AACtB,uBAAsB,oBAAoB;AAC1C,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA,qBAAoB,MAAM;AAC1B,iBAAgB,MAAM;AACtB,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,qBAAoB,MAAM;AAC1B,iBAAgB,MAAM;AACtB,uBAAsB,oBAAoB;AAC1C,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAM;AACN;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,qBAAoB,MAAM;AAC1B,iBAAgB,MAAM;AACtB,uBAAsB,oBAAoB;AAC1C,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,qBAAoB,MAAM;AAC1B,iBAAgB,MAAM;AACtB,uBAAsB,oBAAoB;AAC1C,gBAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvTA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAe;;AAEf;AACA;AACA;AACA;AACA,oBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACvDA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,eAAc;;AAEd;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAuC;AACvC,0CAAyC;;AAEzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA,KAAI;AACJ;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAI;AACJ;AACA;AACA;;;;;;;AChXA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,uBAAsB,OAAO;AAC7B,sBAAqB,OAAO;AAC5B,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yFAAwF;AACxF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAgC;AAChC;AACA,KAAI;AACJ;AACA,mCAAkC;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAM;;AAEN;;AAEA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA0C;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;;AAEN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAgC;AAChC,+BAA8B;AAC9B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAM;AACN;AACA;;AAEA,MAAK;AACL;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB,eAAe;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;;;;;;ACvhBA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA,IAAG;;AAEH;AACA;AACA,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,MAAM;AACnB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA,gBAAe,MAAM,GAAG,kBAAkB;AAC1C;AACA;AACA;AACA,sDAAqD;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,aAAY,iBAAiB;AAC7B,aAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;;;;;;;ACpUA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA,yFAAwF;AACxF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAG;AACH;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ,mCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uHAAsH;AACtH;AACA,OAAM;AACN,gDAA+C;AAC/C;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;;AAEA,iFAAgF;AAChF,8FAA6F;;AAE7F;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;;AAEA;;AAEA,iDAAgD;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,KAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA4B,kBAAkB;AAC9C;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAwD;AACxD;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;;;;;;ACtvBA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;;;;;;ACvCA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAgC,8BAA8B;AAC9D,yBAAwB,OAAO;AAC/B,iBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,oBAAmB,eAAe;AAClC;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,iCAAgC,8BAA8B;AAC9D,yBAAwB,OAAO;AAC/B,iBAAgB,cAAc;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,aAAa;AAC5B;AACA;AACA;AACA,KAAI;;AAEJ;AACA;AACA;AACA,yBAAwB,OAAO;AAC/B,qBAAoB,OAAO;AAC3B,qBAAoB,cAAc;AAClC,gBAAe,OAAO;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yDAAwD;AACxD;AACA,MAAK;AACL,uBAAsB;AACtB;;AAEA;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/MA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;;AAEA,yFAAwF;AACxF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAgC;AAChC;AACA,KAAI;AACJ;AACA,mCAAkC;AAClC;;AAEA;AACA;;AAEA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qFAAoF;AACpF;;AAEA;AACA;AACA,2CAA0C;AAC1C,0CAAyC;AACzC;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,GAAE;AACF;;;;;;;AC3NA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAM;AACN;AACA;AACA;;AAEA;AACA,KAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kDAAiD;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAwB,OAAO;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mCAAkC;AAClC;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA,4CAA2C;AAC3C,4EAA2E;AAC3E,0DAAyD;AACzD,+CAA8C;AAC9C,mFAAkF;AAClF,yDAAwD;AACxD,gDAA+C;AAC/C,+EAA8E;;AAE9E;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA,cAAa;AACb,gBAAe;AACf,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAoC,SAAS;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAM;AACN;;AAEA;AACA;AACA;AACA;AACA,OAAM;AACN;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAmC,SAAS;AAC5C;AACA,2CAA0C;;AAE1C;AACA,mDAAkD;AAClD;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA,wBAAuB;AACvB,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB,eAAe;AACrC,gBAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,uBAAsB,gBAAgB;AACtC,4BAA2B,MAAM;AACjC,gBAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sCAAqC,SAAS;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/2BA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAE;AACF;;;;;;;ACvGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,oBAAmB,uBAAuB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAkB,uBAAuB;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;;;;;;;ACvLA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;;;;;;;ACnGA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAgB,wBAAwB;AACxC,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA,YAAW;AACX,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;;;;;;;AC/MA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAkB;AAClB,qBAAoB;AACpB,cAAa;AACb,cAAa;AACb,WAAU;AACV,YAAW;AACX,cAAa;AACb,aAAY;AACZ,iBAAgB;AAChB,gBAAe;AACf,uBAAsB;AACtB,yBAAwB;AACxB,gBAAe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,KAAI;;AAEJ,oCAAmC;AACnC;AACA,KAAI;;AAEJ;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2DAA0D;AAC1D,oDAAmD;AACnD;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACpRA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,uCAAuC;AACrF,cAAa,EAAE;AACf,cAAa,OAAO;AACpB,gBAAe,yBAAyB;AACxC;AACA,gCAA+B;;AAE/B;AACA;AACA;AACA,cAAa,yBAAyB;AACtC,gBAAe,QAAQ;AACvB;AACA,gCAA+B;;AAE/B;AACA;AACA,cAAa,MAAM;AACnB,cAAa,OAAO,cAAc,aAAa;AAC/C,cAAa,SAAS;AACtB,WAAU,aAAa;AACvB;AACA,kCAAiC;;AAEjC;AACA;AACA,cAAa,MAAM;AACnB,cAAa,OAAO,cAAc,aAAa;AAC/C,cAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA,YAAW,EAAE;AACb,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;;AAEA;AACA;;;;;;;ACpEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA,GAAE;;AAEF;;AAEA;;;;;;;AC5HA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAQ;AACR;AACA,SAAQ;AACR;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA;AACA,SAAQ;AACR;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,GAAE;AACF;;AAEA;;;;;;;ACvLA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;;;;;;;ACjGA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA;AACA,SAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0DAAyD;AACzD;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA,OAAM;AACN;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,OAAM;AACN;AACA,OAAM;AACN;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAI,OAAO;AACX;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;AAEA;;;;;;;ACnPA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,cAAa,gBAAgB;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAkB,iBAAiB;AACnC;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,yCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAkB,gBAAgB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAM;AACN;AACA,KAAI;;AAEJ;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,KAAI;AACJ;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;AAEA;;;;;;;AChgBA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,KAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN,MAAK;AACL;AACA;AACA;;AAEA;AACA,KAAI;;AAEJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN,MAAK;AACL;AACA;AACA;;AAEA;AACA,KAAI;AACJ,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAoB;AACpB,4BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAM;AACN;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,8BAA6B,0BAA0B;AACvD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;AAEA;;;;;;;ACvcA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAA+B,EAAE;AACjC,+BAA8B,EAAE;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA,sBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,sBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA,sBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAkB,gBAAgB;AAClkBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAgB,kBAAkB;AAClC;AACA;;AAEA;AACA;AACA;;AAEA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,GAAE;AACF,OAAM;AACN,cAAa,kBAAkB;AAC/B;AACA;;AAEA;AACA,GAAE;AACF,OAAM;AACN;;AAEA,cAAa,kBAAkB;AAC/B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,aAAY,kBAAkB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACpeA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;;AAExB;AACA;AACA;AACA,mBAAkB,OAAO,QAAQ;AACjC,mBAAkB,OAAO,QAAQ;AACjC,oBAAmB,OAAO,OAAO;AACjC,oBAAmB,OAAO,OAAO;AACjC,mBAAkB,QAAQ,OAAO;AACjC,mBAAkB,QAAQ,OAAO;AACjC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACzrBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA,wD;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB;;AAEnB,sBAAqB,gBAAgB;AACrC;AACA;AACA;AACA,IAAG;AACH;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED,0B;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACrJA,0C;;;;;;;;ACAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA,2B;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;;AAEA,oC;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA,+B;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,yBAAyB;AACpC,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,qJAAmL;;AAEnL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB,aAAa;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,EAAE;AACb,aAAY;AACZ;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;;AAEA,uC;;;;;;AC7HA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,UAAU;AACrB,aAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wC;;;;;;AClFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA,gC;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,qBAAqB;AAChC,aAAY,OAAO;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6C;;;;;;ACrCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;;AAEA,4B;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;;AAEA,qC;;;;;;ACrCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,EAAE;AACb,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA,yB;;;;;;ACvBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,YAAW,EAAE;AACb,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA,6B;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,okCAAiC,uDAAuD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnPA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;;AAEA;AACA;AACA;;;;;;;AC1GA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA,IAAG;AACH,E;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAgG;AAChG;AACA,UAAS;AACT;AACA;AACA,iGAAgG;AAChG;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV,8BAA6B;AAC7B,SAAQ;AACR;AACA;AACA;AACA;AACA,gCAA+B,KAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,6BAA4B;AAC5B,QAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;AC7dA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;ACbA;;AAEA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,wBAAuB;AACvB;AACA;;AAEA,wC;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAmC;AACnC;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,yC;;;;;;AC/XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6CAA4C;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,cAAa,EAAE;AACf,cAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAgC,0BAA0B;AAC1D,qBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,kBAAkB;AAC/B,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAgF;AAChF;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB,cAAa,kBAAkB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wC;;;;;;AC/MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oC;;;;;;ACxVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA,yB;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,0C;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,wC;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA,2C;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,uBAAsB;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wC;;;;;;AC1OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sKAAqK;AACrK;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,cAAa,0BAA0B;AACvC,cAAa,OAAO;AACpB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uC;;;;;;;ACxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA,mD;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT,QAAO;AACP;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,cAAa,OAAO;AACpB,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,0BAA0B;AACvC,cAAa,aAAa;AAC1B,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+BAA8B;AAC9B,kCAAiC,kBAAkB;AACnD;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,aAAa;AAC1B,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,cAAa,0BAA0B;AACvC,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,eAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;;AAEA,0C;;;;;;ACp4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,+HAA8H;;AAE9H;AACA;AACA;;AAEA,oBAAmB,6BAA6B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2B;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,yBAAyB;AACxC;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sLAAoN,YAAY;AAChO;AACA;AACA;AACA;AACA;AACA;AACA,iMAA+N,+BAA+B;AAC9P;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,EAAC;;AAED;AACA;AACA;;AAEA,qDAAoD;AACpD;AACA,wBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,cAAa,mBAAmB;AAChC,cAAa,QAAQ;AACrB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,aAAa;AAC1B,cAAa,0DAA0D;AACvE,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,0BAA0B;AACvC,cAAa,aAAa;AAC1B,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,YAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,uCAAsC,KAAK;AAC3C;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD;AACzD,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,0BAA0B;AACvC,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,sBAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;;AAEA,oC;;;;;;ACv+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wC;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,mCAAkC;AAClC;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,EAAC;;AAED,yC;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,uC;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uC;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA,2GAA0G;AAC1G;AACA;AACA;AACA,6GAA4G;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gC;;;;;;AC3RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,wBAAuB,wBAAwB;AAC/C;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA,2BAA0B;AAC1B,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,8BAA6B,2CAA2C;;AAExE;AACA,iBAAgB;AAChB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,iC;;;;;;ACzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,WAAW;AACtB,aAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,WAAW;AACtB,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,uBAAuB;AAClC,YAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,uBAAuB;AAClC,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAa,WAAW;AACxB;AACA;;AAEA;AACA,cAAa,uBAAuB;AACpC,cAAa,OAAO;AACpB;AACA;AACA;;AAEA,oC;;;;;;AClNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAa,0DAA0D;AACvE,eAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,UAAU;AACvB,cAAa,0BAA0B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA,EAAC;;AAED,wC;;;;;;AClKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,8GAA6G;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mC;;;;;;AC9JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAAyB,OAAO;AAChC;AACA;AACA;AACA,0BAAyB,OAAO;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,SAAS;AAChC;AACA;AACA,cAAa,iBAAiB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,qBAAqB;AAClC;AACA;AACA,0BAAyB,SAAS;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA,+C;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,G;;;;;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yC;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH,kBAAiB,kCAAkC;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,cAAa,OAAO;AACpB,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA,qC;;;;;;ACzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,cAAa,OAAO;AACpB,eAAc,OAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA,cAAa,OAAO;AACpB,cAAa,WAAW;AACxB,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sC;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,iBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,QAAQ;AACvB,gBAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,gBAAe,QAAQ;AACvB,gBAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,gBAAe,eAAe;AAC9B,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,gBAAe,eAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,kC;;;;;;AChcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA,YAAW,QAAQ;AACnB,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB,iBAAiB;AAC1C;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,cAAa,eAAe;AAC5B,cAAa,OAAO;AACpB,cAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,6B;;;;;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uC;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,UAAU;AACxB;AACA;AACA;AACA,cAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,cAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA,IAAG;;AAEH;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,4C;;;;;;AChLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2B;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAc,MAAM;AACpB;AACA;AACA;AACA,IAAG;;AAEH;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA,IAAG;;AAEH;AACA,eAAc,OAAO;AACrB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,6BAA4B;;AAE5B,6BAA4B;;AAE5B;AACA;;AAEA;;AAEA;;AAEA,kD;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,YAAY;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAa,WAAW;AACxB,eAAc,QAAQ;AACtB;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,UAAU;AACvB;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB;AACA;;;AAGA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,gBAAgB;AAC7B;AACA;;;AAGA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB,cAAa,gBAAgB;AAC7B;AACA;;;AAGA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA,EAAC;;AAED,yC;;;;;;ACzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,2B;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED,uC;;;;;;AC5SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,WAAW;AACtB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA,oC;;;;;;AC7LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,OAAM;AACN;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oC;;;;;;AClOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA,0C;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA,0C;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA,4C;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA,qC;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA,sC;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA,sC;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA,yC;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA,sC;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA,2C;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA,sC;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA,SAAQ,OAAO;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA,0B;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,EAAE;AACb,YAAW,kBAAkB;AAC7B,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sC;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,0BAA0B;AACrC,aAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA,8B;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,SAAS;AACpB,YAAW,gBAAgB;AAC3B,YAAW,QAAQ;AACnB,YAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wKAAuK;AACvK;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;;AAEA,kC;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,yCAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gC;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,uBAAuB;AAClC,aAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW,uBAAuB;AAClC,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,uBAAuB;AAClC,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,4C;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,cAAa;AACb;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6C;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,EAAE;AACb,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA,gD;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,wD;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;ACzBA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAwC,mBAAmB;AAC3D;AACA;;AAEA;AACA;AACA,mCAAkC,oBAAoB;AACtD;AACA;;AAEA;AACA;AACA,yCAAwC,4BAA4B;AACpE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA,wDAAuD;AACvD,UAAS;AACT;AACA,UAAS;AACT,+EAA8E;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,uBAAuB;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,wCAAuC,0BAA0B;AACjE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,gCAA+B,0BAA0B,eAAe;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;AACL;AACA;AACA,EAAC;;;;;;;;;;;ACzcD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,UAAU;AACrB,YAAW,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,GAAG;AACd,YAAW,iBAAiB;AAC5B,YAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW,GAAG;AACd,YAAW,UAAU;AACrB,YAAW,GAAG;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,GAAG;AACd,YAAW,iBAAiB;AAC5B,YAAW,EAAE;AACb,aAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,GAAG;AACd,aAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gC;;;;;;AC7LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA,eAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,KAAK;AAClC;AACA;AACA,eAAc;AACd;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,WAAW;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,eAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,cAAa,0BAA0B;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,cAAa,QAAQ;AACrB,cAAa,QAAQ;AACrB,cAAa,WAAW;AACxB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,0BAA0B;AACvC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,sBAAqB,mBAAmB;AACxC;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,+CAA8C;AAC9C,IAAG;AACH;AACA;AACA;AACA;AACA,0CAAyC;AACzC,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,uCAAsC;AACtC,IAAG;AACH;AACA;AACA,IAAG;AACH,2BAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA,8FAA4H;AAC5H;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sMAAoO;;AAEpO;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,OAAO;AAClB,aAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA,sLAAoN;AACpN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB,YAAW,SAAS;AACpB,aAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAwF,aAAa;AACrG;AACA;;AAEA,uDAAsD;AACtD;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAW,OAAO;AAClB;AACA;AACA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,eAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB,eAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA,6B;;;;;;ACjtoC;;;;;;ACxKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6C;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,0C;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qC;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,iC;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,QAAQ;AACnB,aAAY,aAAa;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA,4B;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAW,EAAE;AACb,YAAW,OAAO;AAClB,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAW,GAAG;AACd,YAAW,QAAQ;AACnB,YAAW,UAAU;AACrB,YAAW,GAAG;AACd;AACA,aAAY,QAAQ;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB;AACvB;;AAEA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4JAA2L,yCAAyC,+GAA+G,yCAAyC;AAC5X;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,GAAG;AACd,YAAW,UAAU;AACrB,YAAW,GAAG;AACd,aAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sC;;;;;;AC9KA;AACA;AACA,gBAAe,IAAI;AACnB,gBAAe,IAAI;AACnB,gBAAe,OAAO;AACtB;AACA,8EAA6E;AAC7E;AACA;;AAEA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,WAAW;AAC1B,gBAAe,IAAI;AACnB,kBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,8BAA6B,6BAA6B;AAC1D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAe,IAAI;AACnB,gBAAe,IAAI;AACnB,gBAAe,MAAM;AACrB,gBAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2DAA0D;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA,6FAA4F,SAAS;AACrG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA,oEAAmE,SAAS;AAC5E;AACA;AACA;AACA,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA,iBAAgB,+BAA+B;AAC/C;AACA;AACA,oEAAmE,SAAS;AAC5E;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW,SAAS;AACpB,YAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8B","file":"static/js/main.0995d3db.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8c8019cf548f927af396","//! moment.js\n//! version : 2.18.1\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\nvar hookCallback;\n\nfunction hooks () {\n    return hookCallback.apply(null, arguments);\n}\n\n// This is done to register the method called with moment()\n// without creating circular dependencies.\nfunction setHookCallback (callback) {\n    hookCallback = callback;\n}\n\nfunction isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n\nfunction isObjectEmpty(obj) {\n    var k;\n    for (k in obj) {\n        // even if its not own property I'd still call it non-empty\n        return false;\n    }\n    return true;\n}\n\nfunction isUndefined(input) {\n    return input === void 0;\n}\n\nfunction isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n}\n\nfunction isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n}\n\nfunction map(arr, fn) {\n    var res = [], i;\n    for (i = 0; i < arr.length; ++i) {\n        res.push(fn(arr[i], i));\n    }\n    return res;\n}\n\nfunction hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n\nfunction extend(a, b) {\n    for (var i in b) {\n        if (hasOwnProp(b, i)) {\n            a[i] = b[i];\n        }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n        a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n        a.valueOf = b.valueOf;\n    }\n\n    return a;\n}\n\nfunction createUTC (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n}\n\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty           : false,\n        unusedTokens    : [],\n        unusedInput     : [],\n        overflow        : -2,\n        charsLeftOver   : 0,\n        nullInput       : false,\n        invalidMonth    : null,\n        invalidFormat   : false,\n        userInvalidated : false,\n        iso             : false,\n        parsedDateParts : [],\n        meridiem        : null,\n        rfc2822         : false,\n        weekdayMismatch : false\n    };\n}\n\nfunction getParsingFlags(m) {\n    if (m._pf == null) {\n        m._pf = defaultParsingFlags();\n    }\n    return m._pf;\n}\n\nvar some;\nif (Array.prototype.some) {\n    some = Array.prototype.some;\n} else {\n    some = function (fun) {\n        var t = Object(this);\n        var len = t.length >>> 0;\n\n        for (var i = 0; i < len; i++) {\n            if (i in t && fun.call(this, t[i], i, t)) {\n                return true;\n            }\n        }\n\n        return false;\n    };\n}\n\nvar some$1 = some;\n\nfunction isValid(m) {\n    if (m._isValid == null) {\n        var flags = getParsingFlags(m);\n        var parsedParts = some$1.call(flags.parsedDateParts, function (i) {\n            return i != null;\n        });\n        var isNowValid = !isNaN(m._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n\n        if (m._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return m._isValid;\n}\n\nfunction createInvalid (flags) {\n    var m = createUTC(NaN);\n    if (flags != null) {\n        extend(getParsingFlags(m), flags);\n    }\n    else {\n        getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n}\n\n// Plugins that add properties should also add the key here (null value),\n// so we can properly clone ourselves.\nvar momentProperties = hooks.momentProperties = [];\n\nfunction copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n        to._isAMomentObject = from._isAMomentObject;\n    }\n    if (!isUndefined(from._i)) {\n        to._i = from._i;\n    }\n    if (!isUndefined(from._f)) {\n        to._f = from._f;\n    }\n    if (!isUndefined(from._l)) {\n        to._l = from._l;\n    }\n    if (!isUndefined(from._strict)) {\n        to._strict = from._strict;\n    }\n    if (!isUndefined(from._tzm)) {\n        to._tzm = from._tzm;\n    }\n    if (!isUndefined(from._isUTC)) {\n        to._isUTC = from._isUTC;\n    }\n    if (!isUndefined(from._offset)) {\n        to._offset = from._offset;\n    }\n    if (!isUndefined(from._pf)) {\n        to._pf = getParsingFlags(from);\n    }\n    if (!isUndefined(from._locale)) {\n        to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n        for (i = 0; i < momentProperties.length; i++) {\n            prop = momentProperties[i];\n            val = from[prop];\n            if (!isUndefined(val)) {\n                to[prop] = val;\n            }\n        }\n    }\n\n    return to;\n}\n\nvar updateInProgress = false;\n\n// Moment prototype object\nfunction Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n    if (!this.isValid()) {\n        this._d = new Date(NaN);\n    }\n    // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n    if (updateInProgress === false) {\n        updateInProgress = true;\n        hooks.updateOffset(this);\n        updateInProgress = false;\n    }\n}\n\nfunction isMoment (obj) {\n    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n}\n\nfunction absFloor (number) {\n    if (number < 0) {\n        // -0 -> 0\n        return Math.ceil(number) || 0;\n    } else {\n        return Math.floor(number);\n    }\n}\n\nfunction toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n\n    return value;\n}\n\n// compare two arrays, return the number of differences\nfunction compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i]) ||\n            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\nfunction warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false &&\n            (typeof console !==  'undefined') && console.warn) {\n        console.warn('Deprecation warning: ' + msg);\n    }\n}\n\nfunction deprecate(msg, fn) {\n    var firstTime = true;\n\n    return extend(function () {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(null, msg);\n        }\n        if (firstTime) {\n            var args = [];\n            var arg;\n            for (var i = 0; i < arguments.length; i++) {\n                arg = '';\n                if (typeof arguments[i] === 'object') {\n                    arg += '\\n[' + i + '] ';\n                    for (var key in arguments[0]) {\n                        arg += key + ': ' + arguments[0][key] + ', ';\n                    }\n                    arg = arg.slice(0, -2); // Remove trailing comma and space\n                } else {\n                    arg = arguments[i];\n                }\n                args.push(arg);\n            }\n            warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + (new Error()).stack);\n            firstTime = false;\n        }\n        return fn.apply(this, arguments);\n    }, fn);\n}\n\nvar deprecations = {};\n\nfunction deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(name, msg);\n    }\n    if (!deprecations[name]) {\n        warn(msg);\n        deprecations[name] = true;\n    }\n}\n\nhooks.suppressDeprecationWarnings = false;\nhooks.deprecationHandler = null;\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\nfunction set (config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (isFunction(prop)) {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n    this._config = config;\n    // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    this._dayOfMonthOrdinalParseLenient = new RegExp(\n        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n            '|' + (/\\d{1,2}/).source);\n}\n\nfunction mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig), prop;\n    for (prop in childConfig) {\n        if (hasOwnProp(childConfig, prop)) {\n            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                res[prop] = {};\n                extend(res[prop], parentConfig[prop]);\n                extend(res[prop], childConfig[prop]);\n            } else if (childConfig[prop] != null) {\n                res[prop] = childConfig[prop];\n            } else {\n                delete res[prop];\n            }\n        }\n    }\n    for (prop in parentConfig) {\n        if (hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])) {\n            // make sure changes to properties don't modify parent config\n            res[prop] = extend({}, res[prop]);\n        }\n    }\n    return res;\n}\n\nfunction Locale(config) {\n    if (config != null) {\n        this.set(config);\n    }\n}\n\nvar keys;\n\nif (Object.keys) {\n    keys = Object.keys;\n} else {\n    keys = function (obj) {\n        var i, res = [];\n        for (i in obj) {\n            if (hasOwnProp(obj, i)) {\n                res.push(i);\n            }\n        }\n        return res;\n    };\n}\n\nvar keys$1 = keys;\n\nvar defaultCalendar = {\n    sameDay : '[Today at] LT',\n    nextDay : '[Tomorrow at] LT',\n    nextWeek : 'dddd [at] LT',\n    lastDay : '[Yesterday at] LT',\n    lastWeek : '[Last] dddd [at] LT',\n    sameElse : 'L'\n};\n\nfunction calendar (key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n}\n\nvar defaultLongDateFormat = {\n    LTS  : 'h:mm:ss A',\n    LT   : 'h:mm A',\n    L    : 'MM/DD/YYYY',\n    LL   : 'MMMM D, YYYY',\n    LLL  : 'MMMM D, YYYY h:mm A',\n    LLLL : 'dddd, MMMM D, YYYY h:mm A'\n};\n\nfunction longDateFormat (key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n        return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n        return val.slice(1);\n    });\n\n    return this._longDateFormat[key];\n}\n\nvar defaultInvalidDate = 'Invalid date';\n\nfunction invalidDate () {\n    return this._invalidDate;\n}\n\nvar defaultOrdinal = '%d';\nvar defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\nfunction ordinal (number) {\n    return this._ordinal.replace('%d', number);\n}\n\nvar defaultRelativeTime = {\n    future : 'in %s',\n    past   : '%s ago',\n    s  : 'a few seconds',\n    ss : '%d seconds',\n    m  : 'a minute',\n    mm : '%d minutes',\n    h  : 'an hour',\n    hh : '%d hours',\n    d  : 'a day',\n    dd : '%d days',\n    M  : 'a month',\n    MM : '%d months',\n    y  : 'a year',\n    yy : '%d years'\n};\n\nfunction relativeTime (number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return (isFunction(output)) ?\n        output(number, withoutSuffix, string, isFuture) :\n        output.replace(/%d/i, number);\n}\n\nfunction pastFuture (diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n}\n\nvar aliases = {};\n\nfunction addUnitAlias (unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n}\n\nfunction normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n\nfunction normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n\n    return normalizedInput;\n}\n\nvar priorities = {};\n\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\nfunction getPrioritizedUnits(unitsObj) {\n    var units = [];\n    for (var u in unitsObj) {\n        units.push({unit: u, priority: priorities[u]});\n    }\n    units.sort(function (a, b) {\n        return a.priority - b.priority;\n    });\n    return units;\n}\n\nfunction makeGetSet (unit, keepTime) {\n    return function (value) {\n        if (value != null) {\n            set$1(this, unit, value);\n            hooks.updateOffset(this, keepTime);\n            return this;\n        } else {\n            return get(this, unit);\n        }\n    };\n}\n\nfunction get (mom, unit) {\n    return mom.isValid() ?\n        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n}\n\nfunction set$1 (mom, unit, value) {\n    if (mom.isValid()) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n}\n\n// MOMENTS\n\nfunction stringGet (units) {\n    units = normalizeUnits(units);\n    if (isFunction(this[units])) {\n        return this[units]();\n    }\n    return this;\n}\n\n\nfunction stringSet (units, value) {\n    if (typeof units === 'object') {\n        units = normalizeObjectUnits(units);\n        var prioritized = getPrioritizedUnits(units);\n        for (var i = 0; i < prioritized.length; i++) {\n            this[prioritized[i].unit](units[prioritized[i].unit]);\n        }\n    } else {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units](value);\n        }\n    }\n    return this;\n}\n\nfunction zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? (forceSign ? '+' : '') : '-') +\n        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n}\n\nvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\nvar localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\nvar formatFunctions = {};\n\nvar formatTokenFunctions = {};\n\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\nfunction addFormatToken (token, padded, ordinal, callback) {\n    var func = callback;\n    if (typeof callback === 'string') {\n        func = function () {\n            return this[callback]();\n        };\n    }\n    if (token) {\n        formatTokenFunctions[token] = func;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = function () {\n            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n        };\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = function () {\n            return this.localeData().ordinal(func.apply(this, arguments), token);\n        };\n    }\n}\n\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\nfunction makeFormatFunction(format) {\n    var array = format.match(formattingTokens), i, length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n        if (formatTokenFunctions[array[i]]) {\n            array[i] = formatTokenFunctions[array[i]];\n        } else {\n            array[i] = removeFormattingTokens(array[i]);\n        }\n    }\n\n    return function (mom) {\n        var output = '', i;\n        for (i = 0; i < length; i++) {\n            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n        }\n        return output;\n    };\n}\n\n// format date using native date object\nfunction formatMoment(m, format) {\n    if (!m.isValid()) {\n        return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n    return formatFunctions[format](m);\n}\n\nfunction expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n        return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n\n    return format;\n}\n\nvar match1         = /\\d/;            //       0 - 9\nvar match2         = /\\d\\d/;          //      00 - 99\nvar match3         = /\\d{3}/;         //     000 - 999\nvar match4         = /\\d{4}/;         //    0000 - 9999\nvar match6         = /[+-]?\\d{6}/;    // -999999 - 999999\nvar match1to2      = /\\d\\d?/;         //       0 - 99\nvar match3to4      = /\\d\\d\\d\\d?/;     //     999 - 9999\nvar match5to6      = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nvar match1to3      = /\\d{1,3}/;       //       0 - 999\nvar match1to4      = /\\d{1,4}/;       //       0 - 9999\nvar match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\nvar matchUnsigned  = /\\d+/;           //       0 - inf\nvar matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\nvar matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nvar matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\nvar matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\nvar matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n\nvar regexes = {};\n\nfunction addRegexToken (token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\n\nfunction getParseRegexForToken (token, config) {\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n}\n\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n        return p1 || p2 || p3 || p4;\n    }));\n}\n\nfunction regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nvar tokens = {};\n\nfunction addParseToken (token, callback) {\n    var i, func = callback;\n    if (typeof token === 'string') {\n        token = [token];\n    }\n    if (isNumber(callback)) {\n        func = function (input, array) {\n            array[callback] = toInt(input);\n        };\n    }\n    for (i = 0; i < token.length; i++) {\n        tokens[token[i]] = func;\n    }\n}\n\nfunction addWeekParseToken (token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n        config._w = config._w || {};\n        callback(input, config._w, config, token);\n    });\n}\n\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n}\n\nvar YEAR = 0;\nvar MONTH = 1;\nvar DATE = 2;\nvar HOUR = 3;\nvar MINUTE = 4;\nvar SECOND = 5;\nvar MILLISECOND = 6;\nvar WEEK = 7;\nvar WEEKDAY = 8;\n\nvar indexOf;\n\nif (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n} else {\n    indexOf = function (o) {\n        // I know\n        var i;\n        for (i = 0; i < this.length; ++i) {\n            if (this[i] === o) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\nvar indexOf$1 = indexOf;\n\nfunction daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n});\n\naddFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n});\n\naddFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n});\n\n// ALIASES\n\naddUnitAlias('month', 'M');\n\n// PRIORITY\n\naddUnitPriority('month', 8);\n\n// PARSING\n\naddRegexToken('M',    match1to2);\naddRegexToken('MM',   match1to2, match2);\naddRegexToken('MMM',  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n});\naddRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n});\n\naddParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n});\n\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict);\n    // if we didn't find a month name, mark the date as invalid.\n    if (month != null) {\n        array[MONTH] = month;\n    } else {\n        getParsingFlags(config).invalidMonth = input;\n    }\n});\n\n// LOCALES\n\nvar MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\nvar defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\nfunction localeMonths (m, format) {\n    if (!m) {\n        return isArray(this._months) ? this._months :\n            this._months['standalone'];\n    }\n    return isArray(this._months) ? this._months[m.month()] :\n        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nvar defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\nfunction localeMonthsShort (m, format) {\n    if (!m) {\n        return isArray(this._monthsShort) ? this._monthsShort :\n            this._monthsShort['standalone'];\n    }\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :\n        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n}\n\nfunction handleStrictParse(monthName, format, strict) {\n    var i, ii, mom, llc = monthName.toLocaleLowerCase();\n    if (!this._monthsParse) {\n        // this is not used\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n        for (i = 0; i < 12; ++i) {\n            mom = createUTC([2000, i]);\n            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'MMM') {\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._longMonthsParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortMonthsParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeMonthsParse (monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n        return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n        this._monthsParse = [];\n        this._longMonthsParse = [];\n        this._shortMonthsParse = [];\n    }\n\n    // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        if (strict && !this._longMonthsParse[i]) {\n            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n        }\n        if (!strict && !this._monthsParse[i]) {\n            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n            return i;\n        } else if (!strict && this._monthsParse[i].test(monthName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction setMonth (mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n        // No op\n        return mom;\n    }\n\n    if (typeof value === 'string') {\n        if (/^\\d+$/.test(value)) {\n            value = toInt(value);\n        } else {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (!isNumber(value)) {\n                return mom;\n            }\n        }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n    return mom;\n}\n\nfunction getSetMonth (value) {\n    if (value != null) {\n        setMonth(this, value);\n        hooks.updateOffset(this, true);\n        return this;\n    } else {\n        return get(this, 'Month');\n    }\n}\n\nfunction getDaysInMonth () {\n    return daysInMonth(this.year(), this.month());\n}\n\nvar defaultMonthsShortRegex = matchWord;\nfunction monthsShortRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsShortStrictRegex;\n        } else {\n            return this._monthsShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n}\n\nvar defaultMonthsRegex = matchWord;\nfunction monthsRegex (isStrict) {\n    if (this._monthsParseExact) {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            computeMonthsParse.call(this);\n        }\n        if (isStrict) {\n            return this._monthsStrictRegex;\n        } else {\n            return this._monthsRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n}\n\nfunction computeMonthsParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom;\n    for (i = 0; i < 12; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, i]);\n        shortPieces.push(this.monthsShort(mom, ''));\n        longPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.months(mom, ''));\n        mixedPieces.push(this.monthsShort(mom, ''));\n    }\n    // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 12; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n    }\n    for (i = 0; i < 24; i++) {\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\naddFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n});\n\naddFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n});\n\naddFormatToken(0, ['YYYY',   4],       0, 'year');\naddFormatToken(0, ['YYYYY',  5],       0, 'year');\naddFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n// ALIASES\n\naddUnitAlias('year', 'y');\n\n// PRIORITIES\n\naddUnitPriority('year', 1);\n\n// PARSING\n\naddRegexToken('Y',      matchSigned);\naddRegexToken('YY',     match1to2, match2);\naddRegexToken('YYYY',   match1to4, match4);\naddRegexToken('YYYYY',  match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\n\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n});\naddParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n});\naddParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n});\n\n// HELPERS\n\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n// HOOKS\n\nhooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n};\n\n// MOMENTS\n\nvar getSetYear = makeGetSet('FullYear', true);\n\nfunction getIsLeapYear () {\n    return isLeapYear(this.year());\n}\n\nfunction createDate (y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date = new Date(y, m, d, h, M, s, ms);\n\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\nfunction createUTCDate (y) {\n    var date = new Date(Date.UTC.apply(null, arguments));\n\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n\n// start-of-first-week - start-of-year\nfunction firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n        fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n    return -fwdlw + fwd - 1;\n}\n\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear, resDayOfYear;\n\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n\nfunction weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek, resYear;\n\n    if (week < 1) {\n        resYear = mom.year() - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n        resWeek = week - weeksInYear(mom.year(), dow, doy);\n        resYear = mom.year() + 1;\n    } else {\n        resYear = mom.year();\n        resWeek = week;\n    }\n\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n\nfunction weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n// FORMATTING\n\naddFormatToken('w', ['ww', 2], 'wo', 'week');\naddFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n// ALIASES\n\naddUnitAlias('week', 'w');\naddUnitAlias('isoWeek', 'W');\n\n// PRIORITIES\n\naddUnitPriority('week', 5);\naddUnitPriority('isoWeek', 5);\n\n// PARSING\n\naddRegexToken('w',  match1to2);\naddRegexToken('ww', match1to2, match2);\naddRegexToken('W',  match1to2);\naddRegexToken('WW', match1to2, match2);\n\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n});\n\n// HELPERS\n\n// LOCALES\n\nfunction localeWeek (mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n}\n\nvar defaultLocaleWeek = {\n    dow : 0, // Sunday is the first day of the week.\n    doy : 6  // The week that contains Jan 1st is the first week of the year.\n};\n\nfunction localeFirstDayOfWeek () {\n    return this._week.dow;\n}\n\nfunction localeFirstDayOfYear () {\n    return this._week.doy;\n}\n\n// MOMENTS\n\nfunction getSetWeek (input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\nfunction getSetISOWeek (input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n}\n\n// FORMATTING\n\naddFormatToken('d', 0, 'do', 'day');\n\naddFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n});\n\naddFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n});\n\naddFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n});\n\naddFormatToken('e', 0, 0, 'weekday');\naddFormatToken('E', 0, 0, 'isoWeekday');\n\n// ALIASES\n\naddUnitAlias('day', 'd');\naddUnitAlias('weekday', 'e');\naddUnitAlias('isoWeekday', 'E');\n\n// PRIORITY\naddUnitPriority('day', 11);\naddUnitPriority('weekday', 11);\naddUnitPriority('isoWeekday', 11);\n\n// PARSING\n\naddRegexToken('d',    match1to2);\naddRegexToken('e',    match1to2);\naddRegexToken('E',    match1to2);\naddRegexToken('dd',   function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n});\naddRegexToken('ddd',   function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n});\naddRegexToken('dddd',   function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n});\n\naddWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict);\n    // if we didn't get a weekday name, mark the date as invalid\n    if (weekday != null) {\n        week.d = weekday;\n    } else {\n        getParsingFlags(config).invalidWeekday = input;\n    }\n});\n\naddWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n});\n\n// HELPERS\n\nfunction parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n        return input;\n    }\n\n    if (!isNaN(input)) {\n        return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n    if (typeof input === 'number') {\n        return input;\n    }\n\n    return null;\n}\n\nfunction parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNaN(input) ? null : input;\n}\n\n// LOCALES\n\nvar defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\nfunction localeWeekdays (m, format) {\n    if (!m) {\n        return isArray(this._weekdays) ? this._weekdays :\n            this._weekdays['standalone'];\n    }\n    return isArray(this._weekdays) ? this._weekdays[m.day()] :\n        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];\n}\n\nvar defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\nfunction localeWeekdaysShort (m) {\n    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n}\n\nvar defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\nfunction localeWeekdaysMin (m) {\n    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n}\n\nfunction handleStrictParse$1(weekdayName, format, strict) {\n    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._minWeekdaysParse = [];\n\n        for (i = 0; i < 7; ++i) {\n            mom = createUTC([2000, 1]).day(i);\n            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n        }\n    }\n\n    if (strict) {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    } else {\n        if (format === 'dddd') {\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else if (format === 'ddd') {\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        } else {\n            ii = indexOf$1.call(this._minWeekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._weekdaysParse, llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = indexOf$1.call(this._shortWeekdaysParse, llc);\n            return ii !== -1 ? ii : null;\n        }\n    }\n}\n\nfunction localeWeekdaysParse (weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n        return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n        this._weekdaysParse = [];\n        this._minWeekdaysParse = [];\n        this._shortWeekdaysParse = [];\n        this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n\n        mom = createUTC([2000, 1]).day(i);\n        if (strict && !this._fullWeekdaysParse[i]) {\n            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$', 'i');\n            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$', 'i');\n        }\n        if (!this._weekdaysParse[i]) {\n            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n        }\n        // test the regex\n        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n            return i;\n        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n            return i;\n        }\n    }\n}\n\n// MOMENTS\n\nfunction getSetDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n    if (input != null) {\n        input = parseWeekday(input, this.localeData());\n        return this.add(input - day, 'd');\n    } else {\n        return day;\n    }\n}\n\nfunction getSetLocaleDayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n}\n\nfunction getSetISODayOfWeek (input) {\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n    if (input != null) {\n        var weekday = parseIsoWeekday(input, this.localeData());\n        return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n        return this.day() || 7;\n    }\n}\n\nvar defaultWeekdaysRegex = matchWord;\nfunction weekdaysRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysStrictRegex;\n        } else {\n            return this._weekdaysRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            this._weekdaysRegex = defaultWeekdaysRegex;\n        }\n        return this._weekdaysStrictRegex && isStrict ?\n            this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n}\n\nvar defaultWeekdaysShortRegex = matchWord;\nfunction weekdaysShortRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysShortStrictRegex;\n        } else {\n            return this._weekdaysShortRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n            this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n        }\n        return this._weekdaysShortStrictRegex && isStrict ?\n            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n}\n\nvar defaultWeekdaysMinRegex = matchWord;\nfunction weekdaysMinRegex (isStrict) {\n    if (this._weekdaysParseExact) {\n        if (!hasOwnProp(this, '_weekdaysRegex')) {\n            computeWeekdaysParse.call(this);\n        }\n        if (isStrict) {\n            return this._weekdaysMinStrictRegex;\n        } else {\n            return this._weekdaysMinRegex;\n        }\n    } else {\n        if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n            this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n        }\n        return this._weekdaysMinStrictRegex && isStrict ?\n            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n}\n\n\nfunction computeWeekdaysParse () {\n    function cmpLenRev(a, b) {\n        return b.length - a.length;\n    }\n\n    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],\n        i, mom, minp, shortp, longp;\n    for (i = 0; i < 7; i++) {\n        // make the regex if we don't have it already\n        mom = createUTC([2000, 1]).day(i);\n        minp = this.weekdaysMin(mom, '');\n        shortp = this.weekdaysShort(mom, '');\n        longp = this.weekdays(mom, '');\n        minPieces.push(minp);\n        shortPieces.push(shortp);\n        longPieces.push(longp);\n        mixedPieces.push(minp);\n        mixedPieces.push(shortp);\n        mixedPieces.push(longp);\n    }\n    // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n    for (i = 0; i < 7; i++) {\n        shortPieces[i] = regexEscape(shortPieces[i]);\n        longPieces[i] = regexEscape(longPieces[i]);\n        mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n}\n\n// FORMATTING\n\nfunction hFormat() {\n    return this.hours() % 12 || 12;\n}\n\nfunction kFormat() {\n    return this.hours() || 24;\n}\n\naddFormatToken('H', ['HH', 2], 0, 'hour');\naddFormatToken('h', ['hh', 2], 0, hFormat);\naddFormatToken('k', ['kk', 2], 0, kFormat);\n\naddFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\naddFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n});\n\naddFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) +\n        zeroFill(this.seconds(), 2);\n});\n\nfunction meridiem (token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n}\n\nmeridiem('a', true);\nmeridiem('A', false);\n\n// ALIASES\n\naddUnitAlias('hour', 'h');\n\n// PRIORITY\naddUnitPriority('hour', 13);\n\n// PARSING\n\nfunction matchMeridiem (isStrict, locale) {\n    return locale._meridiemParse;\n}\n\naddRegexToken('a',  matchMeridiem);\naddRegexToken('A',  matchMeridiem);\naddRegexToken('H',  match1to2);\naddRegexToken('h',  match1to2);\naddRegexToken('k',  match1to2);\naddRegexToken('HH', match1to2, match2);\naddRegexToken('hh', match1to2, match2);\naddRegexToken('kk', match1to2, match2);\n\naddRegexToken('hmm', match3to4);\naddRegexToken('hmmss', match5to6);\naddRegexToken('Hmm', match3to4);\naddRegexToken('Hmmss', match5to6);\n\naddParseToken(['H', 'HH'], HOUR);\naddParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n});\naddParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n});\naddParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n});\naddParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n});\naddParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n});\n\n// LOCALES\n\nfunction localeIsPM (input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return ((input + '').toLowerCase().charAt(0) === 'p');\n}\n\nvar defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\nfunction localeMeridiem (hours, minutes, isLower) {\n    if (hours > 11) {\n        return isLower ? 'pm' : 'PM';\n    } else {\n        return isLower ? 'am' : 'AM';\n    }\n}\n\n\n// MOMENTS\n\n// Setting the hour should keep the time, because the user explicitly\n// specified which hour he wants. So trying to maintain the same hour (in\n// a new timezone) makes sense. Adding/subtracting hours does not follow\n// this rule.\nvar getSetHour = makeGetSet('Hours', true);\n\n// months\n// week\n// weekdays\n// meridiem\nvar baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n\n    week: defaultLocaleWeek,\n\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n// internal storage for locale config files\nvar locales = {};\nvar localeFamilies = {};\nvar globalLocale;\n\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\nfunction chooseLocale(names) {\n    var i = 0, j, next, locale, split;\n\n    while (i < names.length) {\n        split = normalizeLocale(names[i]).split('-');\n        j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                //the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n\nfunction loadLocale(name) {\n    var oldLocale = null;\n    // TODO: Find a better way to register and load all the locales in Node\n    if (!locales[name] && (typeof module !== 'undefined') &&\n            module && module.exports) {\n        try {\n            oldLocale = globalLocale._abbr;\n            require('./locale/' + name);\n            // because defineLocale currently also sets the global locale, we\n            // want to undo that for lazy loaded locales\n            getSetGlobalLocale(oldLocale);\n        } catch (e) { }\n    }\n    return locales[name];\n}\n\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\nfunction getSetGlobalLocale (key, values) {\n    var data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else {\n            data = defineLocale(key, values);\n        }\n\n        if (data) {\n            // moment.duration._locale = moment._locale = data;\n            globalLocale = data;\n        }\n    }\n\n    return globalLocale._abbr;\n}\n\nfunction defineLocale (name, config) {\n    if (config !== null) {\n        var parentConfig = baseConfig;\n        config.abbr = name;\n        if (locales[name] != null) {\n            deprecateSimple('defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                    'an existing locale. moment.defineLocale(localeName, ' +\n                    'config) should only be used for creating a new locale ' +\n                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n            parentConfig = locales[name]._config;\n        } else if (config.parentLocale != null) {\n            if (locales[config.parentLocale] != null) {\n                parentConfig = locales[config.parentLocale]._config;\n            } else {\n                if (!localeFamilies[config.parentLocale]) {\n                    localeFamilies[config.parentLocale] = [];\n                }\n                localeFamilies[config.parentLocale].push({\n                    name: name,\n                    config: config\n                });\n                return null;\n            }\n        }\n        locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n        if (localeFamilies[name]) {\n            localeFamilies[name].forEach(function (x) {\n                defineLocale(x.name, x.config);\n            });\n        }\n\n        // backwards compat for now: also set the locale\n        // make sure we set the locale AFTER all child locales have been\n        // created, so we won't end up with the child locale set.\n        getSetGlobalLocale(name);\n\n\n        return locales[name];\n    } else {\n        // useful for testing\n        delete locales[name];\n        return null;\n    }\n}\n\nfunction updateLocale(name, config) {\n    if (config != null) {\n        var locale, parentConfig = baseConfig;\n        // MERGE\n        if (locales[name] != null) {\n            parentConfig = locales[name]._config;\n        }\n        config = mergeConfigs(parentConfig, config);\n        locale = new Locale(config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    } else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            } else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n\n// returns locale data\nfunction getLocale (key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n        key = key._locale._abbr;\n    }\n\n    if (!key) {\n        return globalLocale;\n    }\n\n    if (!isArray(key)) {\n        //short-circuit everything else\n        locale = loadLocale(key);\n        if (locale) {\n            return locale;\n        }\n        key = [key];\n    }\n\n    return chooseLocale(key);\n}\n\nfunction listLocales() {\n    return keys$1(locales);\n}\n\nfunction checkOverflow (m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n        overflow =\n            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n            -1;\n\n        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n\n        getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n}\n\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\nvar extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\nvar basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nvar tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n\nvar isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/],\n    ['YYYYMMDD', /\\d{8}/],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/]\n];\n\n// iso time formats and regexes\nvar isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n\nvar aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n// date from iso format\nfunction configFromISO(config) {\n    var i, l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime, dateFormat, timeFormat, tzFormat;\n\n    if (match) {\n        getParsingFlags(config).iso = true;\n\n        for (i = 0, l = isoDates.length; i < l; i++) {\n            if (isoDates[i][1].exec(match[1])) {\n                dateFormat = isoDates[i][0];\n                allowTime = isoDates[i][2] !== false;\n                break;\n            }\n        }\n        if (dateFormat == null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[3]) {\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(match[3])) {\n                    // match[2] should be 'T' or space\n                    timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (timeFormat == null) {\n                config._isValid = false;\n                return;\n            }\n        }\n        if (!allowTime && timeFormat != null) {\n            config._isValid = false;\n            return;\n        }\n        if (match[4]) {\n            if (tzRegex.exec(match[4])) {\n                tzFormat = 'Z';\n            } else {\n                config._isValid = false;\n                return;\n            }\n        }\n        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n        configFromStringAndFormat(config);\n    } else {\n        config._isValid = false;\n    }\n}\n\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\nvar basicRfcRegex = /^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d?\\d\\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(?:\\d\\d)?\\d\\d\\s)(\\d\\d:\\d\\d)(\\:\\d\\d)?(\\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\\d{4}))$/;\n\n// date and time from ref 2822 format\nfunction configFromRFC2822(config) {\n    var string, match, dayFormat,\n        dateFormat, timeFormat, tzFormat;\n    var timezones = {\n        ' GMT': ' +0000',\n        ' EDT': ' -0400',\n        ' EST': ' -0500',\n        ' CDT': ' -0500',\n        ' CST': ' -0600',\n        ' MDT': ' -0600',\n        ' MST': ' -0700',\n        ' PDT': ' -0700',\n        ' PST': ' -0800'\n    };\n    var military = 'YXWVUTSRQPONZABCDEFGHIKLM';\n    var timezone, timezoneIndex;\n\n    string = config._i\n        .replace(/\\([^\\)]*\\)|[\\n\\t]/g, ' ') // Remove comments and folding whitespace\n        .replace(/(\\s\\s+)/g, ' ') // Replace multiple-spaces with a single space\n        .replace(/^\\s|\\s$/g, ''); // Remove leading and trailing spaces\n    match = basicRfcRegex.exec(string);\n\n    if (match) {\n        dayFormat = match[1] ? 'ddd' + ((match[1].length === 5) ? ', ' : ' ') : '';\n        dateFormat = 'D MMM ' + ((match[2].length > 10) ? 'YYYY ' : 'YY ');\n        timeFormat = 'HH:mm' + (match[4] ? ':ss' : '');\n\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        if (match[1]) { // day of week given\n            var momentDate = new Date(match[2]);\n            var momentDay = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'][momentDate.getDay()];\n\n            if (match[1].substr(0,3) !== momentDay) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return;\n            }\n        }\n\n        switch (match[5].length) {\n            case 2: // military\n                if (timezoneIndex === 0) {\n                    timezone = ' +0000';\n                } else {\n                    timezoneIndex = military.indexOf(match[5][1].toUpperCase()) - 12;\n                    timezone = ((timezoneIndex < 0) ? ' -' : ' +') +\n                        (('' + timezoneIndex).replace(/^-?/, '0')).match(/..$/)[0] + '00';\n                }\n                break;\n            case 4: // Zone\n                timezone = timezones[match[5]];\n                break;\n            default: // UT or +/-9999\n                timezone = timezones[' GMT'];\n        }\n        match[5] = timezone;\n        config._i = match.splice(1).join('');\n        tzFormat = ' ZZ';\n        config._f = dayFormat + dateFormat + timeFormat + tzFormat;\n        configFromStringAndFormat(config);\n        getParsingFlags(config).rfc2822 = true;\n    } else {\n        config._isValid = false;\n    }\n}\n\n// date from iso format or fallback\nfunction configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return;\n    }\n\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    } else {\n        return;\n    }\n\n    // Final attempt, use Input Fallback\n    hooks.createFromInputFallback(config);\n}\n\nhooks.createFromInputFallback = deprecate(\n    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n    'discouraged and will be removed in an upcoming major release. Please refer to ' +\n    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n    function (config) {\n        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n    }\n);\n\n// Pick the first defined of two or three arguments.\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\nfunction currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\nfunction configFromArray (config) {\n    var i, date, input = [], currentDate, yearToUse;\n\n    if (config._d) {\n        return;\n    }\n\n    currentDate = currentDateArray(config);\n\n    //compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n\n    //if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n\n        date = createUTCDate(yearToUse, 0, config._dayOfYear);\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n}\n\nfunction dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    } else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n\n        var curWeek = weekOfYear(createLocal(), dow, doy);\n\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        } else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        } else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    } else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n}\n\n// constant that refers to the ISO standard\nhooks.ISO_8601 = function () {};\n\n// constant that refers to the RFC 2822 form\nhooks.RFC_2822 = function () {};\n\n// date from string and format string\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n        configFromISO(config);\n        return;\n    }\n    if (config._f === hooks.RFC_2822) {\n        configFromRFC2822(config);\n        return;\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    var string = '' + config._i,\n        i, parsedInput, tokens, token, skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n        // console.log('token', token, 'parsedInput', parsedInput,\n        //         'regex', getParseRegexForToken(token, config));\n        if (parsedInput) {\n            skipped = string.substr(0, string.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n    if (string.length > 0) {\n        getParsingFlags(config).unusedInput.push(string);\n    }\n\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n    configFromArray(config);\n    checkOverflow(config);\n}\n\n\nfunction meridiemFixWrap (locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n        // Fallback\n        isPm = locale.isPM(meridiem);\n        if (isPm && hour < 12) {\n            hour += 12;\n        }\n        if (!isPm && hour === 12) {\n            hour = 0;\n        }\n        return hour;\n    } else {\n        // this is not supposed to happen\n        return hour;\n    }\n}\n\n// date from string and array of format strings\nfunction configFromStringAndArray(config) {\n    var tempConfig,\n        bestMoment,\n\n        scoreToBeat,\n        i,\n        currentScore;\n\n    if (config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        config._d = new Date(NaN);\n        return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = copyConfig({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n        //or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n        getParsingFlags(tempConfig).score = currentScore;\n\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n\n    extend(config, bestMoment || tempConfig);\n}\n\nfunction configFromObject(config) {\n    if (config._d) {\n        return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n        return obj && parseInt(obj, 10);\n    });\n\n    configFromArray(config);\n}\n\nfunction createFromConfig (config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n    if (res._nextDay) {\n        // Adding is smart enough around DST\n        res.add(1, 'd');\n        res._nextDay = undefined;\n    }\n\n    return res;\n}\n\nfunction prepareConfig (config) {\n    var input = config._i,\n        format = config._f;\n\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid({nullInput: true});\n    }\n\n    if (typeof input === 'string') {\n        config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n        return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n        config._d = input;\n    } else if (isArray(format)) {\n        configFromStringAndArray(config);\n    } else if (format) {\n        configFromStringAndFormat(config);\n    }  else {\n        configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n        config._d = null;\n    }\n\n    return config;\n}\n\nfunction configFromInput(config) {\n    var input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n        config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n        configFromString(config);\n    } else if (isArray(input)) {\n        config._a = map(input.slice(0), function (obj) {\n            return parseInt(obj, 10);\n        });\n        configFromArray(config);\n    } else if (isObject(input)) {\n        configFromObject(config);\n    } else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    } else {\n        hooks.createFromInputFallback(config);\n    }\n}\n\nfunction createLocalOrUTC (input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n        strict = locale;\n        locale = undefined;\n    }\n\n    if ((isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)) {\n        input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n\n    return createFromConfig(c);\n}\n\nfunction createLocal (input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n}\n\nvar prototypeMin = deprecate(\n    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other < this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\nvar prototypeMax = deprecate(\n    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n    function () {\n        var other = createLocal.apply(null, arguments);\n        if (this.isValid() && other.isValid()) {\n            return other > this ? this : other;\n        } else {\n            return createInvalid();\n        }\n    }\n);\n\n// Pick a moment m from moments so that m[fn](other) is true for all\n// other. This relies on the function fn to be transitive.\n//\n// moments should either be an array of moment objects or an array, whose\n// first element is an array of moment objects.\nfunction pickBy(fn, moments) {\n    var res, i;\n    if (moments.length === 1 && isArray(moments[0])) {\n        moments = moments[0];\n    }\n    if (!moments.length) {\n        return createLocal();\n    }\n    res = moments[0];\n    for (i = 1; i < moments.length; ++i) {\n        if (!moments[i].isValid() || moments[i][fn](res)) {\n            res = moments[i];\n        }\n    }\n    return res;\n}\n\n// TODO: Use [].sort instead?\nfunction min () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isBefore', args);\n}\n\nfunction max () {\n    var args = [].slice.call(arguments, 0);\n\n    return pickBy('isAfter', args);\n}\n\nvar now = function () {\n    return Date.now ? Date.now() : +(new Date());\n};\n\nvar ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\nfunction isDurationValid(m) {\n    for (var key in m) {\n        if (!(ordering.indexOf(key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n            return false;\n        }\n    }\n\n    var unitHasDecimal = false;\n    for (var i = 0; i < ordering.length; ++i) {\n        if (m[ordering[i]]) {\n            if (unitHasDecimal) {\n                return false; // only allow non-integers for smallest unit\n            }\n            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n\n    return true;\n}\n\nfunction isValid$1() {\n    return this._isValid;\n}\n\nfunction createInvalid$1() {\n    return createDuration(NaN);\n}\n\nfunction Duration (duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n\n    this._isValid = isDurationValid(normalizedInput);\n\n    // representation for dateAddRemove\n    this._milliseconds = +milliseconds +\n        seconds * 1e3 + // 1000\n        minutes * 6e4 + // 1000 * 60\n        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n    this._days = +days +\n        weeks * 7;\n    // It is impossible translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n    this._months = +months +\n        quarters * 3 +\n        years * 12;\n\n    this._data = {};\n\n    this._locale = getLocale();\n\n    this._bubble();\n}\n\nfunction isDuration (obj) {\n    return obj instanceof Duration;\n}\n\nfunction absRound (number) {\n    if (number < 0) {\n        return Math.round(-1 * number) * -1;\n    } else {\n        return Math.round(number);\n    }\n}\n\n// FORMATTING\n\nfunction offset (token, separator) {\n    addFormatToken(token, 0, 0, function () {\n        var offset = this.utcOffset();\n        var sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    });\n}\n\noffset('Z', ':');\noffset('ZZ', '');\n\n// PARSING\n\naddRegexToken('Z',  matchShortOffset);\naddRegexToken('ZZ', matchShortOffset);\naddParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n});\n\n// HELPERS\n\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\nvar chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\nfunction offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n        return null;\n    }\n\n    var chunk   = matches[matches.length - 1] || [];\n    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n    return minutes === 0 ?\n      0 :\n      parts[0] === '+' ? minutes : -minutes;\n}\n\n// Return a moment from input, that is local/utc/zone equivalent to model.\nfunction cloneWithOffset(input, model) {\n    var res, diff;\n    if (model._isUTC) {\n        res = model.clone();\n        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();\n        // Use low-level api, because this fn is low-level api.\n        res._d.setTime(res._d.valueOf() + diff);\n        hooks.updateOffset(res, false);\n        return res;\n    } else {\n        return createLocal(input).local();\n    }\n}\n\nfunction getDateOffset (m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n}\n\n// HOOKS\n\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\nhooks.updateOffset = function () {};\n\n// MOMENTS\n\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\nfunction getSetOffset (input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n    if (!this.isValid()) {\n        return input != null ? this : NaN;\n    }\n    if (input != null) {\n        if (typeof input === 'string') {\n            input = offsetFromString(matchShortOffset, input);\n            if (input === null) {\n                return this;\n            }\n        } else if (Math.abs(input) < 16 && !keepMinutes) {\n            input = input * 60;\n        }\n        if (!this._isUTC && keepLocalTime) {\n            localAdjust = getDateOffset(this);\n        }\n        this._offset = input;\n        this._isUTC = true;\n        if (localAdjust != null) {\n            this.add(localAdjust, 'm');\n        }\n        if (offset !== input) {\n            if (!keepLocalTime || this._changeInProgress) {\n                addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n            } else if (!this._changeInProgress) {\n                this._changeInProgress = true;\n                hooks.updateOffset(this, true);\n                this._changeInProgress = null;\n            }\n        }\n        return this;\n    } else {\n        return this._isUTC ? offset : getDateOffset(this);\n    }\n}\n\nfunction getSetZone (input, keepLocalTime) {\n    if (input != null) {\n        if (typeof input !== 'string') {\n            input = -input;\n        }\n\n        this.utcOffset(input, keepLocalTime);\n\n        return this;\n    } else {\n        return -this.utcOffset();\n    }\n}\n\nfunction setOffsetToUTC (keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n}\n\nfunction setOffsetToLocal (keepLocalTime) {\n    if (this._isUTC) {\n        this.utcOffset(0, keepLocalTime);\n        this._isUTC = false;\n\n        if (keepLocalTime) {\n            this.subtract(getDateOffset(this), 'm');\n        }\n    }\n    return this;\n}\n\nfunction setOffsetToParsedOffset () {\n    if (this._tzm != null) {\n        this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n        var tZone = offsetFromString(matchOffset, this._i);\n        if (tZone != null) {\n            this.utcOffset(tZone);\n        }\n        else {\n            this.utcOffset(0, true);\n        }\n    }\n    return this;\n}\n\nfunction hasAlignedHourOffset (input) {\n    if (!this.isValid()) {\n        return false;\n    }\n    input = input ? createLocal(input).utcOffset() : 0;\n\n    return (this.utcOffset() - input) % 60 === 0;\n}\n\nfunction isDaylightSavingTime () {\n    return (\n        this.utcOffset() > this.clone().month(0).utcOffset() ||\n        this.utcOffset() > this.clone().month(5).utcOffset()\n    );\n}\n\nfunction isDaylightSavingTimeShifted () {\n    if (!isUndefined(this._isDSTShifted)) {\n        return this._isDSTShifted;\n    }\n\n    var c = {};\n\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n        this._isDSTShifted = this.isValid() &&\n            compareArrays(c._a, other.toArray()) > 0;\n    } else {\n        this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n}\n\nfunction isLocal () {\n    return this.isValid() ? !this._isUTC : false;\n}\n\nfunction isUtcOffset () {\n    return this.isValid() ? this._isUTC : false;\n}\n\nfunction isUtc () {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n}\n\n// ASP.NET json date format regex\nvar aspNetRegex = /^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\nvar isoRegex = /^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;\n\nfunction createDuration (input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n        match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n        duration = {\n            ms : input._milliseconds,\n            d  : input._days,\n            M  : input._months\n        };\n    } else if (isNumber(input)) {\n        duration = {};\n        if (key) {\n            duration[key] = input;\n        } else {\n            duration.milliseconds = input;\n        }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y  : 0,\n            d  : toInt(match[DATE])                         * sign,\n            h  : toInt(match[HOUR])                         * sign,\n            m  : toInt(match[MINUTE])                       * sign,\n            s  : toInt(match[SECOND])                       * sign,\n            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n        };\n    } else if (!!(match = isoRegex.exec(input))) {\n        sign = (match[1] === '-') ? -1 : 1;\n        duration = {\n            y : parseIso(match[2], sign),\n            M : parseIso(match[3], sign),\n            w : parseIso(match[4], sign),\n            d : parseIso(match[5], sign),\n            h : parseIso(match[6], sign),\n            m : parseIso(match[7], sign),\n            s : parseIso(match[8], sign)\n        };\n    } else if (duration == null) {// checks for null or undefined\n        duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n\n        duration = {};\n        duration.ms = diffRes.milliseconds;\n        duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n        ret._locale = input._locale;\n    }\n\n    return ret;\n}\n\ncreateDuration.fn = Duration.prototype;\ncreateDuration.invalid = createInvalid$1;\n\nfunction parseIso (inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n\nfunction positiveMomentsDifference(base, other) {\n    var res = {milliseconds: 0, months: 0};\n\n    res.months = other.month() - base.month() +\n        (other.year() - base.year()) * 12;\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n        --res.months;\n    }\n\n    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n    return res;\n}\n\nfunction momentsDifference(base, other) {\n    var res;\n    if (!(base.isValid() && other.isValid())) {\n        return {milliseconds: 0, months: 0};\n    }\n\n    other = cloneWithOffset(other, base);\n    if (base.isBefore(other)) {\n        res = positiveMomentsDifference(base, other);\n    } else {\n        res = positiveMomentsDifference(other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n\n    return res;\n}\n\n// TODO: remove 'name' arg after deprecation is removed\nfunction createAdder(direction, name) {\n    return function (val, period) {\n        var dur, tmp;\n        //invert the arguments, but complain about it\n        if (period !== null && !isNaN(+period)) {\n            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +\n            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n            tmp = val; val = period; period = tmp;\n        }\n\n        val = typeof val === 'string' ? +val : val;\n        dur = createDuration(val, period);\n        addSubtract(this, dur, direction);\n        return this;\n    };\n}\n\nfunction addSubtract (mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n        // No op\n        return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (milliseconds) {\n        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n    if (days) {\n        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n    if (months) {\n        setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n    if (updateOffset) {\n        hooks.updateOffset(mom, days || months);\n    }\n}\n\nvar add      = createAdder(1, 'add');\nvar subtract = createAdder(-1, 'subtract');\n\nfunction getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' : 'sameElse';\n}\n\nfunction calendar$1 (time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n}\n\nfunction clone () {\n    return new Moment(this);\n}\n\nfunction isAfter (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() > localInput.valueOf();\n    } else {\n        return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n}\n\nfunction isBefore (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() < localInput.valueOf();\n    } else {\n        return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n}\n\nfunction isBetween (from, to, units, inclusivity) {\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&\n        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));\n}\n\nfunction isSame (input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n    if (!(this.isValid() && localInput.isValid())) {\n        return false;\n    }\n    units = normalizeUnits(units || 'millisecond');\n    if (units === 'millisecond') {\n        return this.valueOf() === localInput.valueOf();\n    } else {\n        inputMs = localInput.valueOf();\n        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n}\n\nfunction isSameOrAfter (input, units) {\n    return this.isSame(input, units) || this.isAfter(input,units);\n}\n\nfunction isSameOrBefore (input, units) {\n    return this.isSame(input, units) || this.isBefore(input,units);\n}\n\nfunction diff (input, units, asFloat) {\n    var that,\n        zoneDelta,\n        delta, output;\n\n    if (!this.isValid()) {\n        return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n        return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n    units = normalizeUnits(units);\n\n    if (units === 'year' || units === 'month' || units === 'quarter') {\n        output = monthDiff(this, that);\n        if (units === 'quarter') {\n            output = output / 3;\n        } else if (units === 'year') {\n            output = output / 12;\n        }\n    } else {\n        delta = this - that;\n        output = units === 'second' ? delta / 1e3 : // 1000\n            units === 'minute' ? delta / 6e4 : // 1000 * 60\n            units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n            units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n            units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n            delta;\n    }\n    return asFloat ? output : absFloor(output);\n}\n\nfunction monthDiff (a, b) {\n    // difference in months\n    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n        anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2, adjust;\n\n    if (b - anchor < 0) {\n        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n        // linear across the month\n        adjust = (b - anchor) / (anchor2 - anchor);\n    }\n\n    //check for negative zero, return zero if negative zero\n    return -(wholeMonthDiff + adjust) || 0;\n}\n\nhooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\nhooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\nfunction toString () {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n}\n\nfunction toISOString() {\n    if (!this.isValid()) {\n        return null;\n    }\n    var m = this.clone().utc();\n    if (m.year() < 0 || m.year() > 9999) {\n        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n    }\n    if (isFunction(Date.prototype.toISOString)) {\n        // native implementation is ~50x faster, use it when we can\n        return this.toDate().toISOString();\n    }\n    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n}\n\n/**\n * Return a human readable representation of a moment that can\n * also be evaluated to get a new moment which is the same\n *\n * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n */\nfunction inspect () {\n    if (!this.isValid()) {\n        return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n    var func = 'moment';\n    var zone = '';\n    if (!this.isLocal()) {\n        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n        zone = 'Z';\n    }\n    var prefix = '[' + func + '(\"]';\n    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n\n    return this.format(prefix + year + datetime + suffix);\n}\n\nfunction format (inputString) {\n    if (!inputString) {\n        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n}\n\nfunction from (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction fromNow (withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n}\n\nfunction to (time, withoutSuffix) {\n    if (this.isValid() &&\n            ((isMoment(time) && time.isValid()) ||\n             createLocal(time).isValid())) {\n        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n        return this.localeData().invalidDate();\n    }\n}\n\nfunction toNow (withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n}\n\n// If passed a locale key, it will set the locale for this\n// instance.  Otherwise, it will return the locale configuration\n// variables for this instance.\nfunction locale (key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n        return this._locale._abbr;\n    } else {\n        newLocaleData = getLocale(key);\n        if (newLocaleData != null) {\n            this._locale = newLocaleData;\n        }\n        return this;\n    }\n}\n\nvar lang = deprecate(\n    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n    function (key) {\n        if (key === undefined) {\n            return this.localeData();\n        } else {\n            return this.locale(key);\n        }\n    }\n);\n\nfunction localeData () {\n    return this._locale;\n}\n\nfunction startOf (units) {\n    units = normalizeUnits(units);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n    }\n\n    // weeks are a special case\n    if (units === 'week') {\n        this.weekday(0);\n    }\n    if (units === 'isoWeek') {\n        this.isoWeekday(1);\n    }\n\n    // quarters are also special\n    if (units === 'quarter') {\n        this.month(Math.floor(this.month() / 3) * 3);\n    }\n\n    return this;\n}\n\nfunction endOf (units) {\n    units = normalizeUnits(units);\n    if (units === undefined || units === 'millisecond') {\n        return this;\n    }\n\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (units === 'date') {\n        units = 'day';\n    }\n\n    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n}\n\nfunction valueOf () {\n    return this._d.valueOf() - ((this._offset || 0) * 60000);\n}\n\nfunction unix () {\n    return Math.floor(this.valueOf() / 1000);\n}\n\nfunction toDate () {\n    return new Date(this.valueOf());\n}\n\nfunction toArray () {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n}\n\nfunction toObject () {\n    var m = this;\n    return {\n        years: m.year(),\n        months: m.month(),\n        date: m.date(),\n        hours: m.hours(),\n        minutes: m.minutes(),\n        seconds: m.seconds(),\n        milliseconds: m.milliseconds()\n    };\n}\n\nfunction toJSON () {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n}\n\nfunction isValid$2 () {\n    return isValid(this);\n}\n\nfunction parsingFlags () {\n    return extend({}, getParsingFlags(this));\n}\n\nfunction invalidAt () {\n    return getParsingFlags(this).overflow;\n}\n\nfunction creationData() {\n    return {\n        input: this._i,\n        format: this._f,\n        locale: this._locale,\n        isUTC: this._isUTC,\n        strict: this._strict\n    };\n}\n\n// FORMATTING\n\naddFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n});\n\naddFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n});\n\nfunction addWeekYearFormatToken (token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n}\n\naddWeekYearFormatToken('gggg',     'weekYear');\naddWeekYearFormatToken('ggggg',    'weekYear');\naddWeekYearFormatToken('GGGG',  'isoWeekYear');\naddWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n// ALIASES\n\naddUnitAlias('weekYear', 'gg');\naddUnitAlias('isoWeekYear', 'GG');\n\n// PRIORITY\n\naddUnitPriority('weekYear', 1);\naddUnitPriority('isoWeekYear', 1);\n\n\n// PARSING\n\naddRegexToken('G',      matchSigned);\naddRegexToken('g',      matchSigned);\naddRegexToken('GG',     match1to2, match2);\naddRegexToken('gg',     match1to2, match2);\naddRegexToken('GGGG',   match1to4, match4);\naddRegexToken('gggg',   match1to4, match4);\naddRegexToken('GGGGG',  match1to6, match6);\naddRegexToken('ggggg',  match1to6, match6);\n\naddWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n});\n\naddWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n});\n\n// MOMENTS\n\nfunction getSetWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy);\n}\n\nfunction getSetISOWeekYear (input) {\n    return getSetWeekYearHelper.call(this,\n            input, this.isoWeek(), this.isoWeekday(), 1, 4);\n}\n\nfunction getISOWeeksInYear () {\n    return weeksInYear(this.year(), 1, 4);\n}\n\nfunction getWeeksInYear () {\n    var weekInfo = this.localeData()._week;\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n}\n\nfunction getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n    if (input == null) {\n        return weekOfYear(this, dow, doy).year;\n    } else {\n        weeksTarget = weeksInYear(input, dow, doy);\n        if (week > weeksTarget) {\n            week = weeksTarget;\n        }\n        return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n}\n\nfunction setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n}\n\n// FORMATTING\n\naddFormatToken('Q', 0, 'Qo', 'quarter');\n\n// ALIASES\n\naddUnitAlias('quarter', 'Q');\n\n// PRIORITY\n\naddUnitPriority('quarter', 7);\n\n// PARSING\n\naddRegexToken('Q', match1);\naddParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n});\n\n// MOMENTS\n\nfunction getSetQuarter (input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n}\n\n// FORMATTING\n\naddFormatToken('D', ['DD', 2], 'Do', 'date');\n\n// ALIASES\n\naddUnitAlias('date', 'D');\n\n// PRIOROITY\naddUnitPriority('date', 9);\n\n// PARSING\n\naddRegexToken('D',  match1to2);\naddRegexToken('DD', match1to2, match2);\naddRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ?\n      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :\n      locale._dayOfMonthOrdinalParseLenient;\n});\n\naddParseToken(['D', 'DD'], DATE);\naddParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0], 10);\n});\n\n// MOMENTS\n\nvar getSetDayOfMonth = makeGetSet('Date', true);\n\n// FORMATTING\n\naddFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n// ALIASES\n\naddUnitAlias('dayOfYear', 'DDD');\n\n// PRIORITY\naddUnitPriority('dayOfYear', 4);\n\n// PARSING\n\naddRegexToken('DDD',  match1to3);\naddRegexToken('DDDD', match3);\naddParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n});\n\n// HELPERS\n\n// MOMENTS\n\nfunction getSetDayOfYear (input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n}\n\n// FORMATTING\n\naddFormatToken('m', ['mm', 2], 0, 'minute');\n\n// ALIASES\n\naddUnitAlias('minute', 'm');\n\n// PRIORITY\n\naddUnitPriority('minute', 14);\n\n// PARSING\n\naddRegexToken('m',  match1to2);\naddRegexToken('mm', match1to2, match2);\naddParseToken(['m', 'mm'], MINUTE);\n\n// MOMENTS\n\nvar getSetMinute = makeGetSet('Minutes', false);\n\n// FORMATTING\n\naddFormatToken('s', ['ss', 2], 0, 'second');\n\n// ALIASES\n\naddUnitAlias('second', 's');\n\n// PRIORITY\n\naddUnitPriority('second', 15);\n\n// PARSING\n\naddRegexToken('s',  match1to2);\naddRegexToken('ss', match1to2, match2);\naddParseToken(['s', 'ss'], SECOND);\n\n// MOMENTS\n\nvar getSetSecond = makeGetSet('Seconds', false);\n\n// FORMATTING\n\naddFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n});\n\naddFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n});\n\naddFormatToken(0, ['SSS', 3], 0, 'millisecond');\naddFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n});\naddFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n});\naddFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n});\naddFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n});\naddFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n});\naddFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n});\n\n\n// ALIASES\n\naddUnitAlias('millisecond', 'ms');\n\n// PRIORITY\n\naddUnitPriority('millisecond', 16);\n\n// PARSING\n\naddRegexToken('S',    match1to3, match1);\naddRegexToken('SS',   match1to3, match2);\naddRegexToken('SSS',  match1to3, match3);\n\nvar token;\nfor (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n}\n\nfunction parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n}\n\nfor (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n}\n// MOMENTS\n\nvar getSetMillisecond = makeGetSet('Milliseconds', false);\n\n// FORMATTING\n\naddFormatToken('z',  0, 0, 'zoneAbbr');\naddFormatToken('zz', 0, 0, 'zoneName');\n\n// MOMENTS\n\nfunction getZoneAbbr () {\n    return this._isUTC ? 'UTC' : '';\n}\n\nfunction getZoneName () {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n}\n\nvar proto = Moment.prototype;\n\nproto.add               = add;\nproto.calendar          = calendar$1;\nproto.clone             = clone;\nproto.diff              = diff;\nproto.endOf             = endOf;\nproto.format            = format;\nproto.from              = from;\nproto.fromNow           = fromNow;\nproto.to                = to;\nproto.toNow             = toNow;\nproto.get               = stringGet;\nproto.invalidAt         = invalidAt;\nproto.isAfter           = isAfter;\nproto.isBefore          = isBefore;\nproto.isBetween         = isBetween;\nproto.isSame            = isSame;\nproto.isSameOrAfter     = isSameOrAfter;\nproto.isSameOrBefore    = isSameOrBefore;\nproto.isValid           = isValid$2;\nproto.lang              = lang;\nproto.locale            = locale;\nproto.localeData        = localeData;\nproto.max               = prototypeMax;\nproto.min               = prototypeMin;\nproto.parsingFlags      = parsingFlags;\nproto.set               = stringSet;\nproto.startOf           = startOf;\nproto.subtract          = subtract;\nproto.toArray           = toArray;\nproto.toObject          = toObject;\nproto.toDate            = toDate;\nproto.toISOString       = toISOString;\nproto.inspect           = inspect;\nproto.toJSON            = toJSON;\nproto.toString          = toString;\nproto.unix              = unix;\nproto.valueOf           = valueOf;\nproto.creationData      = creationData;\n\n// Year\nproto.year       = getSetYear;\nproto.isLeapYear = getIsLeapYear;\n\n// Week Year\nproto.weekYear    = getSetWeekYear;\nproto.isoWeekYear = getSetISOWeekYear;\n\n// Quarter\nproto.quarter = proto.quarters = getSetQuarter;\n\n// Month\nproto.month       = getSetMonth;\nproto.daysInMonth = getDaysInMonth;\n\n// Week\nproto.week           = proto.weeks        = getSetWeek;\nproto.isoWeek        = proto.isoWeeks     = getSetISOWeek;\nproto.weeksInYear    = getWeeksInYear;\nproto.isoWeeksInYear = getISOWeeksInYear;\n\n// Day\nproto.date       = getSetDayOfMonth;\nproto.day        = proto.days             = getSetDayOfWeek;\nproto.weekday    = getSetLocaleDayOfWeek;\nproto.isoWeekday = getSetISODayOfWeek;\nproto.dayOfYear  = getSetDayOfYear;\n\n// Hour\nproto.hour = proto.hours = getSetHour;\n\n// Minute\nproto.minute = proto.minutes = getSetMinute;\n\n// Second\nproto.second = proto.seconds = getSetSecond;\n\n// Millisecond\nproto.millisecond = proto.milliseconds = getSetMillisecond;\n\n// Offset\nproto.utcOffset            = getSetOffset;\nproto.utc                  = setOffsetToUTC;\nproto.local                = setOffsetToLocal;\nproto.parseZone            = setOffsetToParsedOffset;\nproto.hasAlignedHourOffset = hasAlignedHourOffset;\nproto.isDST                = isDaylightSavingTime;\nproto.isLocal              = isLocal;\nproto.isUtcOffset          = isUtcOffset;\nproto.isUtc                = isUtc;\nproto.isUTC                = isUtc;\n\n// Timezone\nproto.zoneAbbr = getZoneAbbr;\nproto.zoneName = getZoneName;\n\n// Deprecations\nproto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\nproto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\nproto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\nproto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\nproto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\nfunction createUnix (input) {\n    return createLocal(input * 1000);\n}\n\nfunction createInZone () {\n    return createLocal.apply(null, arguments).parseZone();\n}\n\nfunction preParsePostFormat (string) {\n    return string;\n}\n\nvar proto$1 = Locale.prototype;\n\nproto$1.calendar        = calendar;\nproto$1.longDateFormat  = longDateFormat;\nproto$1.invalidDate     = invalidDate;\nproto$1.ordinal         = ordinal;\nproto$1.preparse        = preParsePostFormat;\nproto$1.postformat      = preParsePostFormat;\nproto$1.relativeTime    = relativeTime;\nproto$1.pastFuture      = pastFuture;\nproto$1.set             = set;\n\n// Month\nproto$1.months            =        localeMonths;\nproto$1.monthsShort       =        localeMonthsShort;\nproto$1.monthsParse       =        localeMonthsParse;\nproto$1.monthsRegex       = monthsRegex;\nproto$1.monthsShortRegex  = monthsShortRegex;\n\n// Week\nproto$1.week = localeWeek;\nproto$1.firstDayOfYear = localeFirstDayOfYear;\nproto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n// Day of Week\nproto$1.weekdays       =        localeWeekdays;\nproto$1.weekdaysMin    =        localeWeekdaysMin;\nproto$1.weekdaysShort  =        localeWeekdaysShort;\nproto$1.weekdaysParse  =        localeWeekdaysParse;\n\nproto$1.weekdaysRegex       =        weekdaysRegex;\nproto$1.weekdaysShortRegex  =        weekdaysShortRegex;\nproto$1.weekdaysMinRegex    =        weekdaysMinRegex;\n\n// Hours\nproto$1.isPM = localeIsPM;\nproto$1.meridiem = localeMeridiem;\n\nfunction get$1 (format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n}\n\nfunction listMonthsImpl (format, index, field) {\n    if (isNumber(format)) {\n        index = format;\n        format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n        return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 12; i++) {\n        out[i] = get$1(format, i, field, 'month');\n    }\n    return out;\n}\n\n// ()\n// (5)\n// (fmt, 5)\n// (fmt)\n// (true)\n// (true, 5)\n// (true, fmt, 5)\n// (true, fmt)\nfunction listWeekdaysImpl (localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    } else {\n        format = localeSorted;\n        index = format;\n        localeSorted = false;\n\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n        return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n    for (i = 0; i < 7; i++) {\n        out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n    return out;\n}\n\nfunction listMonths (format, index) {\n    return listMonthsImpl(format, index, 'months');\n}\n\nfunction listMonthsShort (format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n}\n\nfunction listWeekdays (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n}\n\nfunction listWeekdaysShort (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n}\n\nfunction listWeekdaysMin (localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n}\n\ngetSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (toInt(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\n// Side effect imports\nhooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\nhooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n\nvar mathAbs = Math.abs;\n\nfunction abs () {\n    var data           = this._data;\n\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days         = mathAbs(this._days);\n    this._months       = mathAbs(this._months);\n\n    data.milliseconds  = mathAbs(data.milliseconds);\n    data.seconds       = mathAbs(data.seconds);\n    data.minutes       = mathAbs(data.minutes);\n    data.hours         = mathAbs(data.hours);\n    data.months        = mathAbs(data.months);\n    data.years         = mathAbs(data.years);\n\n    return this;\n}\n\nfunction addSubtract$1 (duration, input, value, direction) {\n    var other = createDuration(input, value);\n\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days         += direction * other._days;\n    duration._months       += direction * other._months;\n\n    return duration._bubble();\n}\n\n// supports only 2.0-style add(1, 's') or add(duration)\nfunction add$1 (input, value) {\n    return addSubtract$1(this, input, value, 1);\n}\n\n// supports only 2.0-style subtract(1, 's') or subtract(duration)\nfunction subtract$1 (input, value) {\n    return addSubtract$1(this, input, value, -1);\n}\n\nfunction absCeil (number) {\n    if (number < 0) {\n        return Math.floor(number);\n    } else {\n        return Math.ceil(number);\n    }\n}\n\nfunction bubble () {\n    var milliseconds = this._milliseconds;\n    var days         = this._days;\n    var months       = this._months;\n    var data         = this._data;\n    var seconds, minutes, hours, years, monthsFromDays;\n\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n            (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n\n    seconds           = absFloor(milliseconds / 1000);\n    data.seconds      = seconds % 60;\n\n    minutes           = absFloor(seconds / 60);\n    data.minutes      = minutes % 60;\n\n    hours             = absFloor(minutes / 60);\n    data.hours        = hours % 24;\n\n    days += absFloor(hours / 24);\n\n    // convert days to months\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n\n    // 12 months -> 1 year\n    years = absFloor(months / 12);\n    months %= 12;\n\n    data.days   = days;\n    data.months = months;\n    data.years  = years;\n\n    return this;\n}\n\nfunction daysToMonths (days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n}\n\nfunction monthsToDays (months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n}\n\nfunction as (units) {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'year') {\n        days   = this._days   + milliseconds / 864e5;\n        months = this._months + daysToMonths(days);\n        return units === 'month' ? months : months / 12;\n    } else {\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week'   : return days / 7     + milliseconds / 6048e5;\n            case 'day'    : return days         + milliseconds / 864e5;\n            case 'hour'   : return days * 24    + milliseconds / 36e5;\n            case 'minute' : return days * 1440  + milliseconds / 6e4;\n            case 'second' : return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n            default: throw new Error('Unknown unit ' + units);\n        }\n    }\n}\n\n// TODO: Use this.as('ms')?\nfunction valueOf$1 () {\n    if (!this.isValid()) {\n        return NaN;\n    }\n    return (\n        this._milliseconds +\n        this._days * 864e5 +\n        (this._months % 12) * 2592e6 +\n        toInt(this._months / 12) * 31536e6\n    );\n}\n\nfunction makeAs (alias) {\n    return function () {\n        return this.as(alias);\n    };\n}\n\nvar asMilliseconds = makeAs('ms');\nvar asSeconds      = makeAs('s');\nvar asMinutes      = makeAs('m');\nvar asHours        = makeAs('h');\nvar asDays         = makeAs('d');\nvar asWeeks        = makeAs('w');\nvar asMonths       = makeAs('M');\nvar asYears        = makeAs('y');\n\nfunction get$2 (units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n}\n\nfunction makeGetter(name) {\n    return function () {\n        return this.isValid() ? this._data[name] : NaN;\n    };\n}\n\nvar milliseconds = makeGetter('milliseconds');\nvar seconds      = makeGetter('seconds');\nvar minutes      = makeGetter('minutes');\nvar hours        = makeGetter('hours');\nvar days         = makeGetter('days');\nvar months       = makeGetter('months');\nvar years        = makeGetter('years');\n\nfunction weeks () {\n    return absFloor(this.days() / 7);\n}\n\nvar round = Math.round;\nvar thresholds = {\n    ss: 44,         // a few seconds to seconds\n    s : 45,         // seconds to minute\n    m : 45,         // minutes to hour\n    h : 22,         // hours to day\n    d : 26,         // days to month\n    M : 11          // months to year\n};\n\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\nfunction substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n}\n\nfunction relativeTime$1 (posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds  = round(duration.as('s'));\n    var minutes  = round(duration.as('m'));\n    var hours    = round(duration.as('h'));\n    var days     = round(duration.as('d'));\n    var months   = round(duration.as('M'));\n    var years    = round(duration.as('y'));\n\n    var a = seconds <= thresholds.ss && ['s', seconds]  ||\n            seconds < thresholds.s   && ['ss', seconds] ||\n            minutes <= 1             && ['m']           ||\n            minutes < thresholds.m   && ['mm', minutes] ||\n            hours   <= 1             && ['h']           ||\n            hours   < thresholds.h   && ['hh', hours]   ||\n            days    <= 1             && ['d']           ||\n            days    < thresholds.d   && ['dd', days]    ||\n            months  <= 1             && ['M']           ||\n            months  < thresholds.M   && ['MM', months]  ||\n            years   <= 1             && ['y']           || ['yy', years];\n\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n}\n\n// This function allows you to set the rounding function for relative time strings\nfunction getSetRelativeTimeRounding (roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof(roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n\n// This function allows you to set a threshold for relative time strings\nfunction getSetRelativeTimeThreshold (threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\nfunction humanize (withSuffix) {\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n        output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n}\n\nvar abs$1 = Math.abs;\n\nfunction toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n        return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days         = abs$1(this._days);\n    var months       = abs$1(this._months);\n    var minutes, hours, years;\n\n    // 3600 seconds -> 60 minutes -> 1 hour\n    minutes           = absFloor(seconds / 60);\n    hours             = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60;\n\n    // 12 months -> 1 year\n    years  = absFloor(months / 12);\n    months %= 12;\n\n\n    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds;\n    var total = this.asSeconds();\n\n    if (!total) {\n        // this is the same as C#'s (Noda) and python (isodate)...\n        // but not other JS (goog.date)\n        return 'P0D';\n    }\n\n    return (total < 0 ? '-' : '') +\n        'P' +\n        (Y ? Y + 'Y' : '') +\n        (M ? M + 'M' : '') +\n        (D ? D + 'D' : '') +\n        ((h || m || s) ? 'T' : '') +\n        (h ? h + 'H' : '') +\n        (m ? m + 'M' : '') +\n        (s ? s + 'S' : '');\n}\n\nvar proto$2 = Duration.prototype;\n\nproto$2.isValid        = isValid$1;\nproto$2.abs            = abs;\nproto$2.add            = add$1;\nproto$2.subtract       = subtract$1;\nproto$2.as             = as;\nproto$2.asMilliseconds = asMilliseconds;\nproto$2.asSeconds      = asSeconds;\nproto$2.asMinutes      = asMinutes;\nproto$2.asHours        = asHours;\nproto$2.asDays         = asDays;\nproto$2.asWeeks        = asWeeks;\nproto$2.asMonths       = asMonths;\nproto$2.asYears        = asYears;\nproto$2.valueOf        = valueOf$1;\nproto$2._bubble        = bubble;\nproto$2.get            = get$2;\nproto$2.milliseconds   = milliseconds;\nproto$2.seconds        = seconds;\nproto$2.minutes        = minutes;\nproto$2.hours          = hours;\nproto$2.days           = days;\nproto$2.weeks          = weeks;\nproto$2.months         = months;\nproto$2.years          = years;\nproto$2.humanize       = humanize;\nproto$2.toISOString    = toISOString$1;\nproto$2.toString       = toISOString$1;\nproto$2.toJSON         = toISOString$1;\nproto$2.locale         = locale;\nproto$2.localeData     = localeData;\n\n// Deprecations\nproto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\nproto$2.lang = lang;\n\n// Side effect imports\n\n// FORMATTING\n\naddFormatToken('X', 0, 0, 'unix');\naddFormatToken('x', 0, 0, 'valueOf');\n\n// PARSING\n\naddRegexToken('x', matchSigned);\naddRegexToken('X', matchTimestamp);\naddParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n});\naddParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n});\n\n// Side effect imports\n\n\nhooks.version = '2.18.1';\n\nsetHookCallback(createLocal);\n\nhooks.fn                    = proto;\nhooks.min                   = min;\nhooks.max                   = max;\nhooks.now                   = now;\nhooks.utc                   = createUTC;\nhooks.unix                  = createUnix;\nhooks.months                = listMonths;\nhooks.isDate                = isDate;\nhooks.locale                = getSetGlobalLocale;\nhooks.invalid               = createInvalid;\nhooks.duration              = createDuration;\nhooks.isMoment              = isMoment;\nhooks.weekdays              = listWeekdays;\nhooks.parseZone             = createInZone;\nhooks.localeData            = getLocale;\nhooks.isDuration            = isDuration;\nhooks.monthsShort           = listMonthsShort;\nhooks.weekdaysMin           = listWeekdaysMin;\nhooks.defineLocale          = defineLocale;\nhooks.updateLocale          = updateLocale;\nhooks.locales               = listLocales;\nhooks.weekdaysShort         = listWeekdaysShort;\nhooks.normalizeUnits        = normalizeUnits;\nhooks.relativeTimeRounding = getSetRelativeTimeRounding;\nhooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\nhooks.calendarFormat        = getCalendarFormat;\nhooks.prototype             = proto;\n\nreturn hooks;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/moment.js\n// module id = 1\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/invariant.js\n// module id = 2\n// module chunks = 0","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var printWarning = function printWarning(format) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n\n    warning = function warning(condition, format) {\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n\n      if (format.indexOf('Failed Composite propType: ') === 0) {\n        return; // Ignore CompositeComponent proptype check.\n      }\n\n      if (!condition) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        printWarning.apply(undefined, [format].concat(args));\n      }\n    };\n  })();\n}\n\nmodule.exports = warning;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/warning.js\n// module id = 3\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n'use strict';\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\nfunction reactProdInvariant(code) {\n  var argCount = arguments.length - 1;\n\n  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;\n\n  for (var argIdx = 0; argIdx < argCount; argIdx++) {\n    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);\n  }\n\n  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';\n\n  var error = new Error(message);\n  error.name = 'Invariant Violation';\n  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame\n\n  throw error;\n}\n\nmodule.exports = reactProdInvariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/reactProdInvariant.js\n// module id = 4\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 5\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDOMComponentFlags = require('./ReactDOMComponentFlags');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar Flags = ReactDOMComponentFlags;\n\nvar internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);\n\n/**\n * Check if a given node should be cached.\n */\nfunction shouldPrecacheNode(node, nodeID) {\n  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';\n}\n\n/**\n * Drill down (through composites and empty components) until we get a host or\n * host text component.\n *\n * This is pretty polymorphic but unavoidable with the current structure we have\n * for `_renderedChildren`.\n */\nfunction getRenderedHostOrTextFromComponent(component) {\n  var rendered;\n  while (rendered = component._renderedComponent) {\n    component = rendered;\n  }\n  return component;\n}\n\n/**\n * Populate `_hostNode` on the rendered host/text component with the given\n * DOM node. The passed `inst` can be a composite.\n */\nfunction precacheNode(inst, node) {\n  var hostInst = getRenderedHostOrTextFromComponent(inst);\n  hostInst._hostNode = node;\n  node[internalInstanceKey] = hostInst;\n}\n\nfunction uncacheNode(inst) {\n  var node = inst._hostNode;\n  if (node) {\n    delete node[internalInstanceKey];\n    inst._hostNode = null;\n  }\n}\n\n/**\n * Populate `_hostNode` on each child of `inst`, assuming that the children\n * match up with the DOM (element) children of `node`.\n *\n * We cache entire levels at once to avoid an n^2 problem where we access the\n * children of a node sequentially and have to walk from the start to our target\n * node every time.\n *\n * Since we update `_renderedChildren` and the actual DOM at (slightly)\n * different times, we could race here and see a newer `_renderedChildren` than\n * the DOM nodes we see. To avoid this, ReactMultiChild calls\n * `prepareToManageChildren` before we change `_renderedChildren`, at which\n * time the container's child nodes are always cached (until it unmounts).\n */\nfunction precacheChildNodes(inst, node) {\n  if (inst._flags & Flags.hasCachedChildNodes) {\n    return;\n  }\n  var children = inst._renderedChildren;\n  var childNode = node.firstChild;\n  outer: for (var name in children) {\n    if (!children.hasOwnProperty(name)) {\n      continue;\n    }\n    var childInst = children[name];\n    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;\n    if (childID === 0) {\n      // We're currently unmounting this child in ReactMultiChild; skip it.\n      continue;\n    }\n    // We assume the child nodes are in the same order as the child instances.\n    for (; childNode !== null; childNode = childNode.nextSibling) {\n      if (shouldPrecacheNode(childNode, childID)) {\n        precacheNode(childInst, childNode);\n        continue outer;\n      }\n    }\n    // We reached the end of the DOM children without finding an ID match.\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;\n  }\n  inst._flags |= Flags.hasCachedChildNodes;\n}\n\n/**\n * Given a DOM node, return the closest ReactDOMComponent or\n * ReactDOMTextComponent instance ancestor.\n */\nfunction getClosestInstanceFromNode(node) {\n  if (node[internalInstanceKey]) {\n    return node[internalInstanceKey];\n  }\n\n  // Walk up the tree until we find an ancestor whose instance we have cached.\n  var parents = [];\n  while (!node[internalInstanceKey]) {\n    parents.push(node);\n    if (node.parentNode) {\n      node = node.parentNode;\n    } else {\n      // Top of the tree. This node must not be part of a React tree (or is\n      // unmounted, potentially).\n      return null;\n    }\n  }\n\n  var closest;\n  var inst;\n  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {\n    closest = inst;\n    if (parents.length) {\n      precacheChildNodes(inst, node);\n    }\n  }\n\n  return closest;\n}\n\n/**\n * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent\n * instance, or null if the node was not rendered by this React.\n */\nfunction getInstanceFromNode(node) {\n  var inst = getClosestInstanceFromNode(node);\n  if (inst != null && inst._hostNode === node) {\n    return inst;\n  } else {\n    return null;\n  }\n}\n\n/**\n * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding\n * DOM node.\n */\nfunction getNodeFromInstance(inst) {\n  // Without this first invariant, passing a non-DOM-component triggers the next\n  // invariant for a missing parent, which is super confusing.\n  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\n  if (inst._hostNode) {\n    return inst._hostNode;\n  }\n\n  // Walk up the tree until we find an ancestor whose DOM node we have cached.\n  var parents = [];\n  while (!inst._hostNode) {\n    parents.push(inst);\n    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;\n    inst = inst._hostParent;\n  }\n\n  // Now parents contains each ancestor that does *not* have a cached native\n  // node, and `inst` is the deepest ancestor that does.\n  for (; parents.length; inst = parents.pop()) {\n    precacheChildNodes(inst, inst._hostNode);\n  }\n\n  return inst._hostNode;\n}\n\nvar ReactDOMComponentTree = {\n  getClosestInstanceFromNode: getClosestInstanceFromNode,\n  getInstanceFromNode: getInstanceFromNode,\n  getNodeFromInstance: getNodeFromInstance,\n  precacheChildNodes: precacheChildNodes,\n  precacheNode: precacheNode,\n  uncacheNode: uncacheNode\n};\n\nmodule.exports = ReactDOMComponentTree;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMComponentTree.js\n// module id = 6\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/ExecutionEnvironment.js\n// module id = 7\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyFunction.js\n// module id = 8\n// module chunks = 0","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n// Trust the developer to only use ReactInstrumentation with a __DEV__ check\n\nvar debugTool = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactDebugTool = require('./ReactDebugTool');\n  debugTool = ReactDebugTool;\n}\n\nmodule.exports = { debugTool: debugTool };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInstrumentation.js\n// module id = 9\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactReconciler = require('./ReactReconciler');\nvar Transaction = require('./Transaction');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar dirtyComponents = [];\nvar updateBatchNumber = 0;\nvar asapCallbackQueue = CallbackQueue.getPooled();\nvar asapEnqueued = false;\n\nvar batchingStrategy = null;\n\nfunction ensureInjected() {\n  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;\n}\n\nvar NESTED_UPDATES = {\n  initialize: function () {\n    this.dirtyComponentsLength = dirtyComponents.length;\n  },\n  close: function () {\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n      // Additional updates were enqueued by componentDidUpdate handlers or\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n      // these new updates so that if A's componentDidUpdate calls setState on\n      // B, B will update before the callback A's updater provided when calling\n      // setState.\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\n      flushBatchedUpdates();\n    } else {\n      dirtyComponents.length = 0;\n    }\n  }\n};\n\nvar UPDATE_QUEUEING = {\n  initialize: function () {\n    this.callbackQueue.reset();\n  },\n  close: function () {\n    this.callbackQueue.notifyAll();\n  }\n};\n\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\nfunction ReactUpdatesFlushTransaction() {\n  this.reinitializeTransaction();\n  this.dirtyComponentsLength = null;\n  this.callbackQueue = CallbackQueue.getPooled();\n  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */true);\n}\n\n_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  destructor: function () {\n    this.dirtyComponentsLength = null;\n    CallbackQueue.release(this.callbackQueue);\n    this.callbackQueue = null;\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n    this.reconcileTransaction = null;\n  },\n\n  perform: function (method, scope, a) {\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n    // with this transaction's wrappers around it.\n    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\n  }\n});\n\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\nfunction batchedUpdates(callback, a, b, c, d, e) {\n  ensureInjected();\n  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\n}\n\n/**\n * Array comparator for ReactComponents by mount ordering.\n *\n * @param {ReactComponent} c1 first component you're comparing\n * @param {ReactComponent} c2 second component you're comparing\n * @return {number} Return value usable by Array.prototype.sort().\n */\nfunction mountOrderComparator(c1, c2) {\n  return c1._mountOrder - c2._mountOrder;\n}\n\nfunction runBatchedUpdates(transaction) {\n  var len = transaction.dirtyComponentsLength;\n  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;\n\n  // Since reconciling a component higher in the owner hierarchy usually (not\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n  // them before their children by sorting the array.\n  dirtyComponents.sort(mountOrderComparator);\n\n  // Any updates enqueued while reconciling must be performed after this entire\n  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and\n  // C, B could update twice in a single batch if C's render enqueues an update\n  // to B (since B would have already updated, we should skip it, and the only\n  // way we can know to do so is by checking the batch counter).\n  updateBatchNumber++;\n\n  for (var i = 0; i < len; i++) {\n    // If a component is unmounted before pending changes apply, it will still\n    // be here, but we assume that it has cleared its _pendingCallbacks and\n    // that performUpdateIfNecessary is a noop.\n    var component = dirtyComponents[i];\n\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\n    // shouldn't execute the callbacks until the next render happens, so\n    // stash the callbacks first\n    var callbacks = component._pendingCallbacks;\n    component._pendingCallbacks = null;\n\n    var markerName;\n    if (ReactFeatureFlags.logTopLevelRenders) {\n      var namedComponent = component;\n      // Duck type TopLevelWrapper. This is probably always true.\n      if (component._currentElement.type.isReactTopLevelWrapper) {\n        namedComponent = component._renderedComponent;\n      }\n      markerName = 'React update: ' + namedComponent.getName();\n      console.time(markerName);\n    }\n\n    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);\n\n    if (markerName) {\n      console.timeEnd(markerName);\n    }\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\n      }\n    }\n  }\n}\n\nvar flushBatchedUpdates = function () {\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n  // componentDidUpdate) but we need to check here too in order to catch\n  // updates enqueued by setState callbacks and asap calls.\n  while (dirtyComponents.length || asapEnqueued) {\n    if (dirtyComponents.length) {\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\n      transaction.perform(runBatchedUpdates, null, transaction);\n      ReactUpdatesFlushTransaction.release(transaction);\n    }\n\n    if (asapEnqueued) {\n      asapEnqueued = false;\n      var queue = asapCallbackQueue;\n      asapCallbackQueue = CallbackQueue.getPooled();\n      queue.notifyAll();\n      CallbackQueue.release(queue);\n    }\n  }\n};\n\n/**\n * Mark a component as needing a rerender, adding an optional callback to a\n * list of functions which will be executed once the rerender occurs.\n */\nfunction enqueueUpdate(component) {\n  ensureInjected();\n\n  // Various parts of our code (such as ReactCompositeComponent's\n  // _renderValidatedComponent) assume that calls to render aren't nested;\n  // verify that that's the case. (This is called by each top-level update\n  // function, like setState, forceUpdate, etc.; creation and\n  // destruction of top-level components is guarded in ReactMount.)\n\n  if (!batchingStrategy.isBatchingUpdates) {\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n\n  dirtyComponents.push(component);\n  if (component._updateBatchNumber == null) {\n    component._updateBatchNumber = updateBatchNumber + 1;\n  }\n}\n\n/**\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\n * if no updates are currently being performed.\n */\nfunction asap(callback, context) {\n  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;\n  asapCallbackQueue.enqueue(callback, context);\n  asapEnqueued = true;\n}\n\nvar ReactUpdatesInjection = {\n  injectReconcileTransaction: function (ReconcileTransaction) {\n    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n  },\n\n  injectBatchingStrategy: function (_batchingStrategy) {\n    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;\n    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;\n    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;\n    batchingStrategy = _batchingStrategy;\n  }\n};\n\nvar ReactUpdates = {\n  /**\n   * React references `ReactReconcileTransaction` using this property in order\n   * to allow dependency injection.\n   *\n   * @internal\n   */\n  ReactReconcileTransaction: null,\n\n  batchedUpdates: batchedUpdates,\n  enqueueUpdate: enqueueUpdate,\n  flushBatchedUpdates: flushBatchedUpdates,\n  injection: ReactUpdatesInjection,\n  asap: asap\n};\n\nmodule.exports = ReactUpdates;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactUpdates.js\n// module id = 10\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnForAddedNewProperty = false;\nvar isProxySupported = typeof Proxy === 'function';\n\nvar shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {\n  if (process.env.NODE_ENV !== 'production') {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n  return this;\n}\n\n_assign(SyntheticEvent.prototype, {\n\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      // eslint-disable-line valid-typeof\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // eslint-disable-line valid-typeof\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      if (process.env.NODE_ENV !== 'production') {\n        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));\n      } else {\n        this[propName] = null;\n      }\n    }\n    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {\n      this[shouldBeReleasedProperties[i]] = null;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));\n      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));\n      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));\n    }\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (isProxySupported) {\n    /*eslint-disable no-func-assign */\n    SyntheticEvent = new Proxy(SyntheticEvent, {\n      construct: function (target, args) {\n        return this.apply(target, Object.create(target.prototype), args);\n      },\n      apply: function (constructor, that, args) {\n        return new Proxy(constructor.apply(that, args), {\n          set: function (target, prop, value) {\n            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {\n              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;\n              didWarnForAddedNewProperty = true;\n            }\n            target[prop] = value;\n            return true;\n          }\n        });\n      }\n    });\n    /*eslint-enable no-func-assign */\n  }\n}\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n\n  var E = function () {};\n  E.prototype = Super.prototype;\n  var prototype = new E();\n\n  _assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = _assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n\n/**\n  * Helper to nullify syntheticEvent instance properties when destructing\n  *\n  * @param {object} SyntheticEvent\n  * @param {String} propName\n  * @return {object} defineProperty object\n  */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  var isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get\n  };\n\n  function set(val) {\n    var action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    var action = isFunction ? 'accessing the method' : 'accessing the property';\n    var result = isFunction ? 'This is a no-op function' : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    var warningCondition = false;\n    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\\'re seeing this, ' + 'you\\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticEvent.js\n// module id = 11\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactCurrentOwner.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./lib/React');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/react.js\n// module id = 14\n// module chunks = 0","import {shiftAndTrimMatrix, createMatrix} from './nestedFloatMatrixMath'\nimport AgentObservation from './AgentObservation'\nimport {generateInitialState} from './generateInitialState'\n\nexport const config = {\n    //Environment size\n    size: [31, 31],\n\n    //Viewport settings\n    viewPortSize: [9, 9],\n    viewPortOffset: [0, 2],\n    viewPortPosition: [4, 2],\n\n    //Scoring settings\n    verticalDeltaScore: 10,\n    deltaScorePerAction: -1,\n    tileTypeToDeltaScore: [0, -50]\n};\n\nexport const actions = ['w', 'a', 's', 'd'];\n\n/**\n * The main environment class for this game. This is the public interface for the game.\n */\nexport default class Environment {\n    constructor() {\n        this._state = generateInitialState();\n\n        //Bind these to create proper JavaScript \"this\" context\n        this.applyAction = this.applyAction.bind(this);\n        this.getAgentObservation = this.getAgentObservation.bind(this);\n        this.getGodObservation = this.getGodObservation.bind(this);\n\n        //This viewport output matrix is only instantiated once to increase performance\n        this.viewportOutputMatrix = createMatrix(config.viewPortSize);\n    }\n\n    /**\n     * Mutates the environment's internal state by processing the given action\n     *\n     * @param actionCode\n     */\n    applyAction(actionCode) {\n        var deltaScoreFromHittingEdge = 0;\n        switch (actionCode) {\n            case \"w\":\n                if (this._state.position[1] > 0) {\n                    this._state.position[1]--;\n                    this._state.score -= config.verticalDeltaScore;\n                } else {\n                    deltaScoreFromHittingEdge = config.tileTypeToDeltaScore[1];//Edges are tileType 1 (red)\n                }\n                break;\n            case \"a\":\n                if (this._state.position[0] > 0) {\n                    this._state.position[0]--;\n                } else {\n                    deltaScoreFromHittingEdge = config.tileTypeToDeltaScore[1];//Edges are tileType 1 (red)\n                }\n                break;\n            case \"s\":\n                this._state.position[1]++;\n                this._state.score = this._state.score + config.verticalDeltaScore;\n                break;\n            case \"d\":\n                if (this._state.position[0] < config.size[0] - 1) {\n                    this._state.position[0]++;\n                } else {\n                    deltaScoreFromHittingEdge = config.tileTypeToDeltaScore[1];//Edges are tileType 1 (red)\n                }\n                break;\n            default:\n                throw new Error('Unknown action: ' + actionCode)\n        }\n\n        const tileType = this._state.tileTypes[this._state.position[0]][this._state.position[1]];\n\n        this._state.score +=\n            config.tileTypeToDeltaScore[tileType] +\n            config.deltaScorePerAction +\n            deltaScoreFromHittingEdge;\n\n        this._state.isComplete = this._state.position[1] === config.size[1] - 1;\n    }\n\n    /**\n     * Returns what the agent can see about the current environment state\n     *\n     * @returns {AgentObservation}\n     */\n    getAgentObservation() {\n        const shiftVector = [\n            Math.ceil(this._state.position[0] - config.size[0] / 2),\n            Math.ceil(this._state.position[1] - config.size[0] / 2) + config.viewPortOffset[1]\n        ];\n        const trimVector = [\n            Math.floor((config.size[0] - config.viewPortSize[0]) / 2),\n            Math.floor((config.size[1] - config.viewPortSize[1]) / 2)\n        ];\n\n        shiftAndTrimMatrix(this._state.tileTypes, shiftVector, 1, trimVector, this.viewportOutputMatrix);\n\n        //Make the bottom exit edge look safe by making its tiles not red\n        const limit = config.size[1] - trimVector[1] - shiftVector[1];\n        if (limit < config.viewPortSize[1]) {\n            for (var x = 0; x < config.viewPortSize[0]; x++) {\n                for (var y = limit; y < config.viewPortSize[1]; y++) {\n                    this.viewportOutputMatrix[x][y] = 0;\n                }\n            }\n        }\n\n        return new AgentObservation(\n            this.viewportOutputMatrix,\n            this._state.score,\n            config.viewPortPosition\n        );\n    }\n\n    getGodObservation() {\n        return this._state\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/environment/index.js","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMNamespaces = require('./DOMNamespaces');\nvar setInnerHTML = require('./setInnerHTML');\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setTextContent = require('./setTextContent');\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\n/**\n * In IE (8-11) and Edge, appending nodes with no children is dramatically\n * faster than appending a full subtree, so we essentially queue up the\n * .appendChild calls here and apply them so each node is added to its parent\n * before any children are added.\n *\n * In other browsers, doing so is slower or neutral compared to the other order\n * (in Firefox, twice as slow) so we only do this inversion in IE.\n *\n * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.\n */\nvar enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\\bEdge\\/\\d/.test(navigator.userAgent);\n\nfunction insertTreeChildren(tree) {\n  if (!enableLazy) {\n    return;\n  }\n  var node = tree.node;\n  var children = tree.children;\n  if (children.length) {\n    for (var i = 0; i < children.length; i++) {\n      insertTreeBefore(node, children[i], null);\n    }\n  } else if (tree.html != null) {\n    setInnerHTML(node, tree.html);\n  } else if (tree.text != null) {\n    setTextContent(node, tree.text);\n  }\n}\n\nvar insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {\n  // DocumentFragments aren't actually part of the DOM after insertion so\n  // appending children won't update the DOM. We need to ensure the fragment\n  // is properly populated first, breaking out of our lazy approach for just\n  // this level. Also, some <object> plugins (like Flash Player) will read\n  // <param> nodes immediately upon insertion into the DOM, so <object>\n  // must also be populated prior to insertion into the DOM.\n  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {\n    insertTreeChildren(tree);\n    parentNode.insertBefore(tree.node, referenceNode);\n  } else {\n    parentNode.insertBefore(tree.node, referenceNode);\n    insertTreeChildren(tree);\n  }\n});\n\nfunction replaceChildWithTree(oldNode, newTree) {\n  oldNode.parentNode.replaceChild(newTree.node, oldNode);\n  insertTreeChildren(newTree);\n}\n\nfunction queueChild(parentTree, childTree) {\n  if (enableLazy) {\n    parentTree.children.push(childTree);\n  } else {\n    parentTree.node.appendChild(childTree.node);\n  }\n}\n\nfunction queueHTML(tree, html) {\n  if (enableLazy) {\n    tree.html = html;\n  } else {\n    setInnerHTML(tree.node, html);\n  }\n}\n\nfunction queueText(tree, text) {\n  if (enableLazy) {\n    tree.text = text;\n  } else {\n    setTextContent(tree.node, text);\n  }\n}\n\nfunction toString() {\n  return this.node.nodeName;\n}\n\nfunction DOMLazyTree(node) {\n  return {\n    node: node,\n    children: [],\n    html: null,\n    text: null,\n    toString: toString\n  };\n}\n\nDOMLazyTree.insertTreeBefore = insertTreeBefore;\nDOMLazyTree.replaceChildWithTree = replaceChildWithTree;\nDOMLazyTree.queueChild = queueChild;\nDOMLazyTree.queueHTML = queueHTML;\nDOMLazyTree.queueText = queueText;\n\nmodule.exports = DOMLazyTree;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMLazyTree.js\n// module id = 16\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_PROPERTY: 0x1,\n  HAS_BOOLEAN_VALUE: 0x4,\n  HAS_NUMERIC_VALUE: 0x8,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n   * attribute namespace URL. (Attribute names not specified use no namespace.)\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function (domPropertyConfig) {\n    var Injection = DOMPropertyInjection;\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n    }\n\n    for (var propName in Properties) {\n      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property \\'%s\\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;\n\n      var lowerCased = propName.toLowerCase();\n      var propConfig = Properties[propName];\n\n      var propertyInfo = {\n        attributeName: lowerCased,\n        attributeNamespace: null,\n        propertyName: propName,\n        mutationMethod: null,\n\n        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n      };\n      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;\n\n      if (process.env.NODE_ENV !== 'production') {\n        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n      }\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        propertyInfo.attributeName = attributeName;\n        if (process.env.NODE_ENV !== 'production') {\n          DOMProperty.getPossibleStandardName[attributeName] = propName;\n        }\n      }\n\n      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n      }\n\n      if (DOMPropertyNames.hasOwnProperty(propName)) {\n        propertyInfo.propertyName = DOMPropertyNames[propName];\n      }\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n      }\n\n      DOMProperty.properties[propName] = propertyInfo;\n    }\n  }\n};\n\n/* eslint-disable max-len */\nvar ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n/* eslint-enable max-len */\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n  ROOT_ATTRIBUTE_NAME: 'data-reactroot',\n\n  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,\n  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040',\n\n  /**\n   * Map from property \"standard name\" to an object with info about how to set\n   * the property in the DOM. Each object contains:\n   *\n   * attributeName:\n   *   Used when rendering markup or with `*Attribute()`.\n   * attributeNamespace\n   * propertyName:\n   *   Used on DOM node instances. (This includes properties that mutate due to\n   *   external factors.)\n   * mutationMethod:\n   *   If non-null, used instead of the property or `setAttribute()` after\n   *   initial render.\n   * mustUseProperty:\n   *   Whether the property must be accessed and mutated as an object property.\n   * hasBooleanValue:\n   *   Whether the property should be removed when set to a falsey value.\n   * hasNumericValue:\n   *   Whether the property must be numeric or parse as a numeric and should be\n   *   removed when set to a falsey value.\n   * hasPositiveNumericValue:\n   *   Whether the property must be positive numeric or parse as a positive\n   *   numeric and should be removed when set to a falsey value.\n   * hasOverloadedBooleanValue:\n   *   Whether the property can be used as a flag as well as with a value.\n   *   Removed when strictly equal to false; present without a value when\n   *   strictly equal to true; present with a value otherwise.\n   */\n  properties: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties. Available only in __DEV__.\n   *\n   * autofocus is predefined, because adding it to the property whitelist\n   * causes unintended side effects.\n   *\n   * @type {Object}\n   */\n  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function (attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMProperty.js\n// module id = 17\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactRef = require('./ReactRef');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} the containing host component instance\n   * @param {?object} info about the host container\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID // 0 in production and for roots\n  ) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);\n      }\n    }\n    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);\n    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);\n      }\n    }\n    return markup;\n  },\n\n  /**\n   * Returns a value that can be passed to\n   * ReactComponentEnvironment.replaceNodeWithMarkup.\n   */\n  getHostNode: function (internalInstance) {\n    return internalInstance.getHostNode();\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (internalInstance, safely) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);\n      }\n    }\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent(safely);\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && context === internalInstance._context) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n\n      // TODO: Bailing out early is just a perf optimization right?\n      // TODO: Removing the return statement should affect correctness?\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);\n      }\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {\n    if (internalInstance._updateBatchNumber !== updateBatchNumber) {\n      // The component's enqueued batch number should always be the current\n      // batch or the following one.\n      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);\n      }\n    }\n    internalInstance.performUpdateIfNecessary(transaction);\n    if (process.env.NODE_ENV !== 'production') {\n      if (internalInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactReconciler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactReconciler.js\n// module id = 18\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactComponent = require('./ReactComponent');\nvar ReactPureComponent = require('./ReactPureComponent');\nvar ReactClass = require('./ReactClass');\nvar ReactDOMFactories = require('./ReactDOMFactories');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactVersion = require('./ReactVersion');\n\nvar onlyChild = require('./onlyChild');\nvar warning = require('fbjs/lib/warning');\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (process.env.NODE_ENV !== 'production') {\n  var canDefineProperty = require('./canDefineProperty');\n  var ReactElementValidator = require('./ReactElementValidator');\n  var didWarnPropTypesDeprecated = false;\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar __spread = _assign;\n\nif (process.env.NODE_ENV !== 'production') {\n  var warned = false;\n  __spread = function () {\n    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;\n    warned = true;\n    return _assign.apply(null, arguments);\n  };\n}\n\nvar React = {\n\n  // Modern\n\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    toArray: ReactChildren.toArray,\n    only: onlyChild\n  },\n\n  Component: ReactComponent,\n  PureComponent: ReactPureComponent,\n\n  createElement: createElement,\n  cloneElement: cloneElement,\n  isValidElement: ReactElement.isValidElement,\n\n  // Classic\n\n  PropTypes: ReactPropTypes,\n  createClass: ReactClass.createClass,\n  createFactory: createFactory,\n  createMixin: function (mixin) {\n    // Currently a noop. Will be used to validate and trace mixins.\n    return mixin;\n  },\n\n  // This looks DOM specific but these are actually isomorphic helpers\n  // since they are just generating DOM strings.\n  DOM: ReactDOMFactories,\n\n  version: ReactVersion,\n\n  // Deprecated hook for JSX spread, don't use this for anything.\n  __spread: __spread\n};\n\n// TODO: Fix tests so that this deprecation warning doesn't cause failures.\nif (process.env.NODE_ENV !== 'production') {\n  if (canDefineProperty) {\n    Object.defineProperty(React, 'PropTypes', {\n      get: function () {\n        process.env.NODE_ENV !== 'production' ? warning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated. Use ' + 'the prop-types package from npm instead.') : void 0;\n        didWarnPropTypesDeprecated = true;\n        return ReactPropTypes;\n      }\n    });\n  }\n}\n\nmodule.exports = React;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/React.js\n// module id = 19\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar warning = require('fbjs/lib/warning');\nvar canDefineProperty = require('./canDefineProperty');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown, specialPropRefWarningShown;\n\nfunction hasValidRef(config) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      });\n      // self and source are DEV only properties.\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      });\n      // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._source = source;\n    }\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement\n */\nReactElement.createElement = function (type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (key || ref) {\n      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n        if (key) {\n          defineKeyPropWarningGetter(props, displayName);\n        }\n        if (ref) {\n          defineRefPropWarningGetter(props, displayName);\n        }\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory\n */\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n};\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement\n */\nReactElement.cloneElement = function (element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n\n/**\n * Verifies the object is a ReactElement.\n * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\n\nmodule.exports = ReactElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactElement.js\n// module id = 20\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyObject.js\n// module id = 22\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/index.js\n// module id = 23\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @private\n */\nvar executeDispatchesAndRelease = function (event, simulated) {\n  if (event) {\n    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nvar executeDispatchesAndReleaseSimulated = function (e) {\n  return executeDispatchesAndRelease(e, true);\n};\nvar executeDispatchesAndReleaseTopLevel = function (e) {\n  return executeDispatchesAndRelease(e, false);\n};\n\nvar getDictionaryKey = function (inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n};\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nfunction shouldPreventMouseEvent(name, type, props) {\n  switch (name) {\n    case 'onClick':\n    case 'onClickCapture':\n    case 'onDoubleClick':\n    case 'onDoubleClickCapture':\n    case 'onMouseDown':\n    case 'onMouseDownCapture':\n    case 'onMouseMove':\n    case 'onMouseMoveCapture':\n    case 'onMouseUp':\n    case 'onMouseUpCapture':\n      return !!(props.disabled && isInteractive(type));\n    default:\n      return false;\n  }\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\n  },\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {function} listener The callback to store.\n   */\n  putListener: function (inst, registrationName, listener) {\n    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;\n\n    var key = getDictionaryKey(inst);\n    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[key] = listener;\n\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.didPutListener) {\n      PluginModule.didPutListener(inst, registrationName, listener);\n    }\n  },\n\n  /**\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function (inst, registrationName) {\n    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not\n    // live here; needs to be moved to a better place soon\n    var bankForRegistrationName = listenerBank[registrationName];\n    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {\n      return null;\n    }\n    var key = getDictionaryKey(inst);\n    return bankForRegistrationName && bankForRegistrationName[key];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function (inst, registrationName) {\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.willDeleteListener) {\n      PluginModule.willDeleteListener(inst, registrationName);\n    }\n\n    var bankForRegistrationName = listenerBank[registrationName];\n    // TODO: This should never be null -- when is it?\n    if (bankForRegistrationName) {\n      var key = getDictionaryKey(inst);\n      delete bankForRegistrationName[key];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {object} inst The instance, which is the source of events.\n   */\n  deleteAllListeners: function (inst) {\n    var key = getDictionaryKey(inst);\n    for (var registrationName in listenerBank) {\n      if (!listenerBank.hasOwnProperty(registrationName)) {\n        continue;\n      }\n\n      if (!listenerBank[registrationName][key]) {\n        continue;\n      }\n\n      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n      if (PluginModule && PluginModule.willDeleteListener) {\n        PluginModule.willDeleteListener(inst, registrationName);\n      }\n\n      delete listenerBank[registrationName][key];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0; i < plugins.length; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function (events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function (simulated) {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    if (simulated) {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n    } else {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n    }\n    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;\n    // This would be a good time to rethrow if any of the event handlers threw.\n    ReactErrorUtils.rethrowCaughtError();\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function () {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function () {\n    return listenerBank;\n  }\n\n};\n\nmodule.exports = EventPluginHub;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPluginHub.js\n// module id = 24\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginUtils = require('./EventPluginUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar warning = require('fbjs/lib/warning');\n\nvar getListener = EventPluginHub.getListener;\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(inst, event, propagationPhase) {\n  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;\n  }\n  var listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We cannot perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n */\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    var targetInst = event._targetInst;\n    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;\n    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(inst, ignoredDirection, event) {\n  if (event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nfunction accumulateEnterLeaveDispatches(leave, enter, from, to) {\n  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);\n}\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing event a\n * single one.\n *\n * @constructor EventPropagators\n */\nvar EventPropagators = {\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\n  accumulateDirectDispatches: accumulateDirectDispatches,\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n};\n\nmodule.exports = EventPropagators;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPropagators.js\n// module id = 25\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function (key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function (key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function (key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function (key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInstanceMap.js\n// module id = 26\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function (event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function (event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticUIEvent.js\n// module id = 27\n// module chunks = 0","/**\n * Creates a matrix out of nested Float64Arrays and returns it\n *\n * @param {Array} dimensions [xLength, yLength]\n * @returns {Array}\n */\nexport function createMatrix(dimensions) {\n    let matrix = [];\n\n    for (let i = 0; i < dimensions[0]; i++) {\n        matrix[i] = new Float64Array(dimensions[1]);\n    }\n\n    return matrix;\n}\n\n/**\n * Shifts and trims the given matrix by the given amounts. Is useful for creating viewport output.\n *\n * @param matrix\n * @param shiftVector\n * @param defaultValue\n * @param trimVector\n * @param outputMatrix Output is written here rather than returned because instantiating arrays is slow in JS\n * @returns {*}\n */\nexport function shiftAndTrimMatrix(matrix, shiftVector, defaultValue, trimVector, outputMatrix) {\n    shiftVector = [shiftVector[0] + trimVector[0], shiftVector[1] + trimVector[1]];\n    var shiftX = shiftVector[0];\n    var shiftY = shiftVector[1];\n    var fromXLen = matrix.length;\n    var fromYLen = matrix[0].length;\n    var xLen = fromXLen - trimVector[0] * 2;\n    var yLen = fromYLen - trimVector[1] * 2;\n    if (outputMatrix.length !== xLen || outputMatrix[0].length !== yLen) {\n        throw new Error('Output matrix has the wrong dimensions. ' +\n            'Expected:'+xLen+'x'+yLen+' ,' +\n            'Actual:'+outputMatrix.length+'x'+outputMatrix[0].length);\n    }\n\n    for (var x = 0; x < xLen; x++) {\n        var fromX = x + shiftX;\n        var fromXRow = matrix[fromX];\n        var toXRow = outputMatrix[x];\n        for (var y = 0; y < yLen; y++) {\n            var fromY = y + shiftY;\n            if (fromX >= 0 && fromX < fromXLen && fromY >= 0 && fromY < fromYLen) {\n                toXRow[y] = fromXRow[y + shiftY]\n            } else {\n                toXRow[y] = defaultValue;\n            }\n        }\n    }\n\n    //Thought this was may be faster but it was not\n    // for (var x = 0; x < xLen; x++) {\n    //     for (var y = 0; y < yLen; y++) {\n    //         if (x + shiftX >= 0 && x + shiftX < fromXLen && y + shiftY >= 0 && y + shiftY < fromYLen) {\n    //             outputMatrix[x][y] = matrix[x + shiftX][y + shiftY]\n    //         } else {\n    //             outputMatrix[x][y] = defaultValue;\n    //         }\n    //     }\n    // }\n}\n\n/**\n * Converts a matrix made of nested arrays to a single flat array and returns it\n *\n * @param {Array} matrix\n * @returns {Float64Array}\n */\nexport function matrixToFlatArray(matrix) {\n    const xLen = matrix.length;\n    const yLen = matrix[0].length;\n    var vectorI = 0;\n    var vector = new Float64Array(xLen * yLen);\n    for (var xI = 0; xI < xLen; xI++) {\n        for (var yI = 0; yI < yLen; yI++) {\n            vector[vectorI] = matrix[xI][yI];\n            vectorI++;\n        }\n    }\n    return vector;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/environment/nestedFloatMatrixMath.js","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactEventEmitterMixin = require('./ReactEventEmitterMixin');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getVendorPrefixedEventName = require('./getVendorPrefixedEventName');\nvar isEventSupported = require('./isEventSupported');\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar hasEventPageXY;\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topAbort: 'abort',\n  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',\n  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',\n  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',\n  topBlur: 'blur',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topScroll: 'scroll',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topSelectionChange: 'selectionchange',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTextInput: 'textInput',\n  topTimeUpdate: 'timeupdate',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   EventPluginHub.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function (ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function (registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\n    for (var i = 0; i < dependencies.length; i++) {\n      var dependency = dependencies[i];\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n        if (dependency === 'topWheel') {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);\n          }\n        } else if (dependency === 'topScroll') {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n          }\n        } else if (dependency === 'topFocus' || dependency === 'topBlur') {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening.topBlur = true;\n          isListening.topFocus = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  /**\n   * Protect against document.createEvent() returning null\n   * Some popup blocker extensions appear to do this:\n   * https://github.com/facebook/react/issues/6887\n   */\n  supportsEventPageXY: function () {\n    if (!document.createEvent) {\n      return false;\n    }\n    var ev = document.createEvent('MouseEvent');\n    return ev != null && 'pageX' in ev;\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when\n   * pageX/pageY isn't supported (legacy browsers).\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function () {\n    if (hasEventPageXY === undefined) {\n      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();\n    }\n    if (!hasEventPageXY && !isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  }\n\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactBrowserEventEmitter.js\n// module id = 29\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function (event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  // \"Proprietary\" Interface.\n  pageX: function (event) {\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function (event) {\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticMouseEvent.js\n// module id = 30\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar OBSERVED_ERROR = {};\n\n/**\n * `Transaction` creates a black box that is able to wrap any method such that\n * certain invariants are maintained before and after the method is invoked\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\n * instantiates a transaction can provide enforcers of the invariants at\n * creation time. The `Transaction` class itself will supply one additional\n * automatic invariant for you - the invariant that any transaction instance\n * should not be run while it is already being run. You would typically create a\n * single instance of a `Transaction` for reuse multiple times, that potentially\n * is used to wrap several different methods. Wrappers are extremely simple -\n * they only require implementing two methods.\n *\n * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n *\n * Use cases:\n * - Preserving the input selection ranges before/after reconciliation.\n *   Restoring selection even in the event of an unexpected error.\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n *   while guaranteeing that afterwards, the event system is reactivated.\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\n *   reconciliation takes place in a worker thread.\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n *   content.\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n * - (Future use case): Layout calculations before and after DOM updates.\n *\n * Transactional plugin API:\n * - A module that has an `initialize` method that returns any precomputation.\n * - and a `close` method that accepts the precomputation. `close` is invoked\n *   when the wrapped process is completed, or has failed.\n *\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n * that implement `initialize` and `close`.\n * @return {Transaction} Single transaction for reuse in thread.\n *\n * @class Transaction\n */\nvar TransactionImpl = {\n  /**\n   * Sets up this instance so that it is prepared for collecting metrics. Does\n   * so such that this setup method may be used on an instance that is already\n   * initialized, in a way that does not consume additional memory upon reuse.\n   * That can be useful if you decide to make your subclass of this mixin a\n   * \"PooledClass\".\n   */\n  reinitializeTransaction: function () {\n    this.transactionWrappers = this.getTransactionWrappers();\n    if (this.wrapperInitData) {\n      this.wrapperInitData.length = 0;\n    } else {\n      this.wrapperInitData = [];\n    }\n    this._isInTransaction = false;\n  },\n\n  _isInTransaction: false,\n\n  /**\n   * @abstract\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n   */\n  getTransactionWrappers: null,\n\n  isInTransaction: function () {\n    return !!this._isInTransaction;\n  },\n\n  /**\n   * Executes the function within a safety window. Use this for the top level\n   * methods that result in large amounts of computation/mutations that would\n   * need to be safety checked. The optional arguments helps prevent the need\n   * to bind in many cases.\n   *\n   * @param {function} method Member of scope to call.\n   * @param {Object} scope Scope to invoke from.\n   * @param {Object?=} a Argument to pass to the method.\n   * @param {Object?=} b Argument to pass to the method.\n   * @param {Object?=} c Argument to pass to the method.\n   * @param {Object?=} d Argument to pass to the method.\n   * @param {Object?=} e Argument to pass to the method.\n   * @param {Object?=} f Argument to pass to the method.\n   *\n   * @return {*} Return value from `method`.\n   */\n  perform: function (method, scope, a, b, c, d, e, f) {\n    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;\n    var errorThrown;\n    var ret;\n    try {\n      this._isInTransaction = true;\n      // Catching errors makes debugging more difficult, so we start with\n      // errorThrown set to true before setting it to false after calling\n      // close -- if it's still set to true in the finally block, it means\n      // one of these calls threw.\n      errorThrown = true;\n      this.initializeAll(0);\n      ret = method.call(scope, a, b, c, d, e, f);\n      errorThrown = false;\n    } finally {\n      try {\n        if (errorThrown) {\n          // If `method` throws, prefer to show that stack trace over any thrown\n          // by invoking `closeAll`.\n          try {\n            this.closeAll(0);\n          } catch (err) {}\n        } else {\n          // Since `method` didn't throw, we don't want to silence the exception\n          // here.\n          this.closeAll(0);\n        }\n      } finally {\n        this._isInTransaction = false;\n      }\n    }\n    return ret;\n  },\n\n  initializeAll: function (startIndex) {\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      try {\n        // Catching errors makes debugging more difficult, so we start with the\n        // OBSERVED_ERROR state before overwriting it with the real return value\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n        // block, it means wrapper.initialize threw.\n        this.wrapperInitData[i] = OBSERVED_ERROR;\n        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\n      } finally {\n        if (this.wrapperInitData[i] === OBSERVED_ERROR) {\n          // The initializer for wrapper i threw an error; initialize the\n          // remaining wrappers but silence any exceptions from them to ensure\n          // that the first error is the one to bubble up.\n          try {\n            this.initializeAll(i + 1);\n          } catch (err) {}\n        }\n      }\n    }\n  },\n\n  /**\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n   * them the respective return values of `this.transactionWrappers.init[i]`\n   * (`close`rs that correspond to initializers that failed will not be\n   * invoked).\n   */\n  closeAll: function (startIndex) {\n    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      var initData = this.wrapperInitData[i];\n      var errorThrown;\n      try {\n        // Catching errors makes debugging more difficult, so we start with\n        // errorThrown set to true before setting it to false after calling\n        // close -- if it's still set to true in the finally block, it means\n        // wrapper.close threw.\n        errorThrown = true;\n        if (initData !== OBSERVED_ERROR && wrapper.close) {\n          wrapper.close.call(this, initData);\n        }\n        errorThrown = false;\n      } finally {\n        if (errorThrown) {\n          // The closer for wrapper i threw an error; close the remaining\n          // wrappers but silence any exceptions from them to ensure that the\n          // first error is the one to bubble up.\n          try {\n            this.closeAll(i + 1);\n          } catch (e) {}\n        }\n      }\n    }\n    this.wrapperInitData.length = 0;\n  }\n};\n\nmodule.exports = TransactionImpl;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/Transaction.js\n// module id = 31\n// module chunks = 0","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * Based on the escape-html library, which is used under the MIT License below:\n *\n * Copyright (c) 2012-2013 TJ Holowaychuk\n * Copyright (c) 2015 Andreas Lubbe\n * Copyright (c) 2015 Tiancheng \"Timothy\" Gu\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * 'Software'), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\n'use strict';\n\n// code copied and modified from escape-html\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        // \"\n        escape = '&quot;';\n        break;\n      case 38:\n        // &\n        escape = '&amp;';\n        break;\n      case 39:\n        // '\n        escape = '&#x27;'; // modified from escape-html; used to be '&#39'\n        break;\n      case 60:\n        // <\n        escape = '&lt;';\n        break;\n      case 62:\n        // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\n}\n// end code copied and modified from escape-html\n\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  if (typeof text === 'boolean' || typeof text === 'number') {\n    // this shortcircuit helps perf for types that we know will never have\n    // special characters, especially given that this function is used often\n    // for numeric dom ids.\n    return '' + text;\n  }\n  return escapeHtml(text);\n}\n\nmodule.exports = escapeTextContentForBrowser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/escapeTextContentForBrowser.js\n// module id = 32\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar DOMNamespaces = require('./DOMNamespaces');\n\nvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\n\n// SVG temp container for IE lacking innerHTML\nvar reusableSVGContainer;\n\n/**\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\n * even in IE8.\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {\n  // IE does not have innerHTML for SVG nodes, so instead we inject the\n  // new markup in a temp node and then move the child nodes across into\n  // the target node\n  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {\n    reusableSVGContainer = reusableSVGContainer || document.createElement('div');\n    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';\n    var svgNode = reusableSVGContainer.firstChild;\n    while (svgNode.firstChild) {\n      node.appendChild(svgNode.firstChild);\n    }\n  } else {\n    node.innerHTML = html;\n  }\n});\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8: When updating a just created node with innerHTML only leading\n  // whitespace is removed. When updating an existing node with innerHTML\n  // whitespace in root TextNodes is also collapsed.\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\n  // Feature detection; only IE8 is known to behave improperly like this.\n  var testElement = document.createElement('div');\n  testElement.innerHTML = ' ';\n  if (testElement.innerHTML === '') {\n    setInnerHTML = function (node, html) {\n      // Magic theory: IE8 supposedly differentiates between added and updated\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n      // from worse whitespace behavior. Re-adding a node like this triggers\n      // the initial and more favorable whitespace behavior.\n      // TODO: What to do on a detached node?\n      if (node.parentNode) {\n        node.parentNode.replaceChild(node, node);\n      }\n\n      // We also implement a workaround for non-visible tags disappearing into\n      // thin air on IE8, this only happens if there is no visible text\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\n      // and simply check if any non-visible tags appear in the source.\n      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n        // Recover leading whitespace by temporarily prepending any character.\n        // \\uFEFF has the potential advantage of being zero-width/invisible.\n        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\n        // in hopes that this is preserved even if \"\\uFEFF\" is transformed to\n        // the actual Unicode character (by Babel, for example).\n        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\n        node.innerHTML = String.fromCharCode(0xFEFF) + html;\n\n        // deleteData leaves an empty `TextNode` which offsets the index of all\n        // children. Definitely want to avoid this.\n        var textNode = node.firstChild;\n        if (textNode.data.length === 1) {\n          node.removeChild(textNode);\n        } else {\n          textNode.deleteData(0, 1);\n        }\n      } else {\n        node.innerHTML = html;\n      }\n    };\n  }\n  testElement = null;\n}\n\nmodule.exports = setInnerHTML;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/setInnerHTML.js\n// module id = 33\n// module chunks = 0","import './App.css';\nimport React, {Component} from 'react';\nimport {config as environmentConfig, actions} from './environment'\nimport ObservationRenderer from './component/ObservationRenderer'\nimport BrainExportButton from './component/BrainExportButton'\nimport ScoreHistoryChart from './component/ScoreHistoryChart'\nimport GameRulesDisplay from './component/GameRulesDisplay'\nimport agents from './agents'\nimport GameRunner from './GameRunner'\nimport StatsDisplay from './component/StatsDisplay'\n\nexport const settings = {//@TODO move out of global?\n    // renderingEnabled: false,\n    // speed: 10000000000,\n    renderingEnabled: true,\n    speed: 250,//250,\n    ticksPerIntervalWhenNotRendering: 100, //100 is good for speed, 10 is good for precise \"actions per second\" readout\n    autoPlay: true,\n};\n\nexport default class App extends Component {\n    constructor() {\n        super();\n        this.setupInterval = this.setupInterval.bind(this);\n        this.handleGameRunnerStatusChange = this.handleGameRunnerStatusChange.bind(this);\n        this.handleSpeedSelectorChange = this.handleSpeedSelectorChange.bind(this);\n        this.handleGameRendererRender = this.handleGameRendererRender.bind(this);\n        this.handleAgentSelectorChange = this.handleAgentSelectorChange.bind(this);\n        this.handleClearBrainClick = this.handleClearBrainClick.bind(this);\n        this.handleManualControlKeyDown = this.handleManualControlKeyDown.bind(this);\n        this.handleManualControlClick = this.handleManualControlClick.bind(this);\n\n        this._agents = agents;//@TODO take as construct arg?\n\n        this._settings = settings;//@TODO take as construct arg?\n\n        this.state = {\n            statsToDisplay: {},\n            agentObservation: null,\n            godObservation: null,\n            universalGameNumber: 0,\n            currentAgentIndex: 0,\n            speed: this._settings.speed,\n            lastStatusRenderTime: 0,\n            lastStatusChartRenderTime: 0,\n            scoreHistoryChartData: null\n        };\n\n    }\n\n    componentWillMount() {\n        this._gameRunner = new GameRunner(this.handleGameRendererRender, this.handleGameRunnerStatusChange);\n\n        this.clearStatsAndNewGame();\n        this.setupInterval();\n    }\n\n    handleGameRendererRender(agentObservation, godObservation, universalGameNumber) {\n        this.setState({\n            agentObservation: agentObservation,\n            godObservation: godObservation,\n            universalGameNumber: universalGameNumber\n        })\n    }\n\n    handleGameRunnerStatusChange(stats) {\n        var nowMilliseconds = (new Date()).getTime();\n        if (nowMilliseconds > this.state.lastStatusRenderTime + 250) {//Refuse to render status html faster than 4fps\n            this.setState({\n                statsToDisplay: {\n                    // 'Agent' :currentAgentName ,\n                    'Current Score': stats.currentScore,\n                    'Actions per second': stats.actionsPerSecond.toLocaleString(),\n                    'Last Game Final Score': stats.lastGameScore,\n                    'Average Final Score (trailing)': stats.averageFinalScore,\n                    'Average Final Score (all time)': (Math.floor(stats.scoreSum / stats.gameCount) || 0),\n                    // 'Average Reward' : (stats.totalReward / stats.actionCount).toFixed(2) ,\n                    'Game Count': stats.gameCount.toLocaleString()\n                },\n                lastStatusRenderTime: nowMilliseconds\n            });\n        }\n\n        if (nowMilliseconds > this.state.lastStatusChartRenderTime + 50) {//Refuse to render status chart faster than 20fps\n\n            if (settings.renderingEnabled) {//Don't draw chart if rendering games\n                return;\n            }\n\n            this.setState({\n                scoreHistoryChartData: stats,\n                lastStatusChartRenderTime: nowMilliseconds\n            });\n        }\n\n    }\n\n    setupInterval() {\n        var self = this;\n        clearInterval(this._intervalReference);\n        if (this._settings.autoPlay) {\n            var ticksPerInterval = this._settings.ticksPerIntervalWhenNotRendering;\n            if (this._agents[this.state.currentAgentIndex].ticksPerInterval) {\n                //Allow very fast or very slow agents to have their own setting\n                ticksPerInterval = this._agents[this.state.currentAgentIndex].ticksPerInterval;\n            }\n            if (this._settings.renderingEnabled) {\n                ticksPerInterval = 1\n            }\n            //Normal ticking takes 3ms between ticks which is not fast enough, so tick 100 times\n            this._intervalReference = setInterval(function () {\n                for (let i = 0; i < ticksPerInterval; i++) {\n                    self._gameRunner.tick();\n                }\n            }, this._settings.speed);\n        }\n    }\n\n    clearStatsAndNewGame() {\n        this._gameRunner.setRenderingEnabled(this._settings.renderingEnabled);\n        this._gameRunner.clearStats();\n        this._gameRunner.newGame(this._agents[this.state.currentAgentIndex].class, this._settings.renderingEnabled);\n    }\n\n    setSpeed(value) {//@TODO use setState in here\n        this.setState({speed: value});\n        let newEnableRenderingValue = true;\n        this._settings.autoPlay = true;\n        if (value === 'no-render') {\n            newEnableRenderingValue = false;\n            this._settings.speed = 0;\n        } else if (value === 'paused') {\n            this._settings.autoPlay = false;\n        } else {\n            this._settings.speed = value;\n        }\n        if (newEnableRenderingValue !== this._settings.renderingEnabled) {\n            this._settings.renderingEnabled = newEnableRenderingValue;\n            this._gameRunner.setRenderingEnabled(this._settings.renderingEnabled);\n        }\n        this.setupInterval();\n    }\n\n    handleSpeedSelectorChange(event) {\n        this.setSpeed(event.target.value);\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.currentAgentIndex !== this.state.currentAgentIndex) {\n            //Is the agent was changed, clear stats and start a new game\n            this.clearStatsAndNewGame();\n            this.setupInterval();//Some agents have their own speed interval so re setup the interval\n        }\n    }\n\n    handleAgentSelectorChange(event) {\n        this.setState({currentAgentIndex: event.target.value});\n    }\n\n    handleClearBrainClick() {\n        this._gameRunner.clearCurrentAgentBrain();\n        this.clearStatsAndNewGame();\n    }\n\n    handleManualControlKeyDown(event) {\n        if (actions.indexOf(event.key) !== -1) {\n            this._gameRunner.takeAction(event.key);\n        }\n    }\n\n    handleManualControlClick() {\n        this.setSpeed('paused');\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"info\">Agent:\n                    <select onChange={this.handleAgentSelectorChange}>\n                        {this._agents.map(((agent, index) =>\n                                <option key={index} value={index}>{agent.name}</option>\n                        ))\n                        }\n                    </select>\n                    &nbsp;\n                    <button onClick={this.handleClearBrainClick}>Clear Brain and Retrain</button>\n                    <br/>\n                    Speed:\n                    <select onChange={this.handleSpeedSelectorChange} value={this.state.speed}>\n                        <option value=\"no-render\">Ludicrous Speed (no rendering)</option>\n                        <option value=\"0\">Very Fast</option>\n                        <option value=\"100\">Fast</option>\n                        <option value=\"250\">Medium</option>\n                        <option value=\"500\">Slow</option>\n                        <option value=\"paused\">Paused</option>\n                    </select>\n                    &nbsp;\n                    <button type=\"text\"\n                            onKeyDown={this.handleManualControlKeyDown}\n                            onClick={this.handleManualControlClick}>Enable Manual Control (WASD)\n                    </button>\n                    <pre id=\"score\"/>\n                    <StatsDisplay stats={this.state.statsToDisplay}/>\n                    <br/>\n                </div>\n                {!this._settings.renderingEnabled && this.state.scoreHistoryChartData &&\n                <div style={{width: '30em'}}>\n                    <ScoreHistoryChart stats={this.state.scoreHistoryChartData}/>\n                </div>\n                }\n                {this._settings.renderingEnabled && this.state.agentObservation &&\n                <div>\n                    <ObservationRenderer\n                        agentObservation={this.state.agentObservation}\n                        godObservation={this.state.godObservation}\n                        gameNumber={this.state.universalGameNumber}\n                    />\n                    <div id=\"agentRendererContainer\"></div>\n                    {this._agents[this.state.currentAgentIndex].description &&\n                    <div>\n                        {this._agents[this.state.currentAgentIndex].description}\n                    </div>\n                    }\n                </div>\n                }\n                <br/>\n                <GameRulesDisplay environmentConfig={environmentConfig}/>\n                <br/>\n                <BrainExportButton gameRunner={this._gameRunner}/>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.js","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/shallowEqual.js\n// module id = 35\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar Danger = require('./Danger');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar createMicrosoftUnsafeLocalFunction = require('./createMicrosoftUnsafeLocalFunction');\nvar setInnerHTML = require('./setInnerHTML');\nvar setTextContent = require('./setTextContent');\n\nfunction getNodeAfter(parentNode, node) {\n  // Special case for text components, which return [open, close] comments\n  // from getHostNode.\n  if (Array.isArray(node)) {\n    node = node[1];\n  }\n  return node ? node.nextSibling : parentNode.firstChild;\n}\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nvar insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {\n  // We rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so\n  // we are careful to use `null`.)\n  parentNode.insertBefore(childNode, referenceNode);\n});\n\nfunction insertLazyTreeChildAt(parentNode, childTree, referenceNode) {\n  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);\n}\n\nfunction moveChild(parentNode, childNode, referenceNode) {\n  if (Array.isArray(childNode)) {\n    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);\n  } else {\n    insertChildAt(parentNode, childNode, referenceNode);\n  }\n}\n\nfunction removeChild(parentNode, childNode) {\n  if (Array.isArray(childNode)) {\n    var closingComment = childNode[1];\n    childNode = childNode[0];\n    removeDelimitedText(parentNode, childNode, closingComment);\n    parentNode.removeChild(closingComment);\n  }\n  parentNode.removeChild(childNode);\n}\n\nfunction moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {\n  var node = openingComment;\n  while (true) {\n    var nextNode = node.nextSibling;\n    insertChildAt(parentNode, node, referenceNode);\n    if (node === closingComment) {\n      break;\n    }\n    node = nextNode;\n  }\n}\n\nfunction removeDelimitedText(parentNode, startNode, closingComment) {\n  while (true) {\n    var node = startNode.nextSibling;\n    if (node === closingComment) {\n      // The closing comment is removed by ReactMultiChild.\n      break;\n    } else {\n      parentNode.removeChild(node);\n    }\n  }\n}\n\nfunction replaceDelimitedText(openingComment, closingComment, stringText) {\n  var parentNode = openingComment.parentNode;\n  var nodeAfterComment = openingComment.nextSibling;\n  if (nodeAfterComment === closingComment) {\n    // There are no text nodes between the opening and closing comments; insert\n    // a new one if stringText isn't empty.\n    if (stringText) {\n      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);\n    }\n  } else {\n    if (stringText) {\n      // Set the text content of the first node after the opening comment, and\n      // remove all following nodes up until the closing comment.\n      setTextContent(nodeAfterComment, stringText);\n      removeDelimitedText(parentNode, nodeAfterComment, closingComment);\n    } else {\n      removeDelimitedText(parentNode, openingComment, closingComment);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onHostOperation({\n      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,\n      type: 'replace text',\n      payload: stringText\n    });\n  }\n}\n\nvar dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;\nif (process.env.NODE_ENV !== 'production') {\n  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {\n    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);\n    if (prevInstance._debugID !== 0) {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: prevInstance._debugID,\n        type: 'replace with',\n        payload: markup.toString()\n      });\n    } else {\n      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);\n      if (nextInstance._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: nextInstance._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  };\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,\n\n  replaceDelimitedText: replaceDelimitedText,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  processUpdates: function (parentNode, updates) {\n    if (process.env.NODE_ENV !== 'production') {\n      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      var update = updates[k];\n      switch (update.type) {\n        case 'INSERT_MARKUP':\n          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'insert child',\n              payload: { toIndex: update.toIndex, content: update.content.toString() }\n            });\n          }\n          break;\n        case 'MOVE_EXISTING':\n          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'move child',\n              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }\n            });\n          }\n          break;\n        case 'SET_MARKUP':\n          setInnerHTML(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'replace children',\n              payload: update.content.toString()\n            });\n          }\n          break;\n        case 'TEXT_CONTENT':\n          setTextContent(parentNode, update.content);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'replace text',\n              payload: update.content.toString()\n            });\n          }\n          break;\n        case 'REMOVE_NODE':\n          removeChild(parentNode, update.fromNode);\n          if (process.env.NODE_ENV !== 'production') {\n            ReactInstrumentation.debugTool.onHostOperation({\n              instanceID: parentNodeDebugID,\n              type: 'remove child',\n              payload: { fromIndex: update.fromIndex }\n            });\n          }\n          break;\n      }\n    }\n  }\n\n};\n\nmodule.exports = DOMChildrenOperations;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMChildrenOperations.js\n// module id = 36\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg'\n};\n\nmodule.exports = DOMNamespaces;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMNamespaces.js\n// module id = 37\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Injectable ordering of event plugins.\n */\nvar eventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!eventPluginOrder) {\n    // Wait until an `eventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var pluginModule = namesToPlugins[pluginName];\n    var pluginIndex = eventPluginOrder.indexOf(pluginName);\n    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;\n    if (EventPluginRegistry.plugins[pluginIndex]) {\n      continue;\n    }\n    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;\n    EventPluginRegistry.plugins[pluginIndex] = pluginModule;\n    var publishedEvents = pluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, pluginModule, eventName) {\n  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events and\n * can be used with `EventPluginHub.putListener` to register listeners.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, pluginModule, eventName) {\n  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;\n  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;\n  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var lowerCasedName = registrationName.toLowerCase();\n    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\nvar EventPluginRegistry = {\n\n  /**\n   * Ordered list of injected plugins.\n   */\n  plugins: [],\n\n  /**\n   * Mapping from event name to dispatch config\n   */\n  eventNameDispatchConfigs: {},\n\n  /**\n   * Mapping from registration name to plugin module\n   */\n  registrationNameModules: {},\n\n  /**\n   * Mapping from registration name to event name\n   */\n  registrationNameDependencies: {},\n\n  /**\n   * Mapping from lowercase registration names to the properly cased version,\n   * used to warn in the case of missing event handlers. Available\n   * only in __DEV__.\n   * @type {Object}\n   */\n  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,\n  // Trust the developer to only use possibleRegistrationNames in __DEV__\n\n  /**\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\n   * to be decoupled from injection of the actual plugins so that ordering is\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\n   *\n   * @param {array} InjectedEventPluginOrder\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\n   */\n  injectEventPluginOrder: function (injectedEventPluginOrder) {\n    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;\n    // Clone the ordering so it cannot be dynamically mutated.\n    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n    recomputePluginOrdering();\n  },\n\n  /**\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n   * in the ordering injected by `injectEventPluginOrder`.\n   *\n   * Plugins can be injected as part of page initialization or on-the-fly.\n   *\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\n   */\n  injectEventPluginsByName: function (injectedNamesToPlugins) {\n    var isOrderingDirty = false;\n    for (var pluginName in injectedNamesToPlugins) {\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n        continue;\n      }\n      var pluginModule = injectedNamesToPlugins[pluginName];\n      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {\n        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;\n        namesToPlugins[pluginName] = pluginModule;\n        isOrderingDirty = true;\n      }\n    }\n    if (isOrderingDirty) {\n      recomputePluginOrdering();\n    }\n  },\n\n  /**\n   * Looks up the plugin for the supplied event.\n   *\n   * @param {object} event A synthetic event.\n   * @return {?object} The plugin that created the supplied event.\n   * @internal\n   */\n  getPluginModuleForEvent: function (event) {\n    var dispatchConfig = event.dispatchConfig;\n    if (dispatchConfig.registrationName) {\n      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\n    }\n    if (dispatchConfig.phasedRegistrationNames !== undefined) {\n      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see\n      // that it is not undefined.\n      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\n      for (var phase in phasedRegistrationNames) {\n        if (!phasedRegistrationNames.hasOwnProperty(phase)) {\n          continue;\n        }\n        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];\n        if (pluginModule) {\n          return pluginModule;\n        }\n      }\n    }\n    return null;\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _resetEventPlugins: function () {\n    eventPluginOrder = null;\n    for (var pluginName in namesToPlugins) {\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\n        delete namesToPlugins[pluginName];\n      }\n    }\n    EventPluginRegistry.plugins.length = 0;\n\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n    for (var eventName in eventNameDispatchConfigs) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        delete eventNameDispatchConfigs[eventName];\n      }\n    }\n\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n    for (var registrationName in registrationNameModules) {\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\n        delete registrationNameModules[registrationName];\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;\n      for (var lowerCasedName in possibleRegistrationNames) {\n        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {\n          delete possibleRegistrationNames[lowerCasedName];\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = EventPluginRegistry;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPluginRegistry.js\n// module id = 38\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `ComponentTree`: [required] Module that can convert between React instances\n *   and actual node references.\n */\nvar ComponentTree;\nvar TreeTraversal;\nvar injection = {\n  injectComponentTree: function (Injected) {\n    ComponentTree = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;\n    }\n  },\n  injectTreeTraversal: function (Injected) {\n    TreeTraversal = Injected;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;\n    }\n  }\n};\n\nfunction isEndish(topLevelType) {\n  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';\n}\n\nvar validateEventDispatches;\nif (process.env.NODE_ENV !== 'production') {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchInstances = event._dispatchInstances;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\n    var instancesIsArr = Array.isArray(dispatchInstances);\n    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nfunction executeDispatch(event, simulated, listener, inst) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);\n  if (simulated) {\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);\n  } else {\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event);\n  }\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, simulated) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchInstances = event._dispatchInstances;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchInstance = event._dispatchInstances;\n  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;\n  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;\n  var res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n\n  getInstanceFromNode: function (node) {\n    return ComponentTree.getInstanceFromNode(node);\n  },\n  getNodeFromInstance: function (node) {\n    return ComponentTree.getNodeFromInstance(node);\n  },\n  isAncestor: function (a, b) {\n    return TreeTraversal.isAncestor(a, b);\n  },\n  getLowestCommonAncestor: function (a, b) {\n    return TreeTraversal.getLowestCommonAncestor(a, b);\n  },\n  getParentInstance: function (inst) {\n    return TreeTraversal.getParentInstance(inst);\n  },\n  traverseTwoPhase: function (target, fn, arg) {\n    return TreeTraversal.traverseTwoPhase(target, fn, arg);\n  },\n  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {\n    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);\n  },\n\n  injection: injection\n};\n\nmodule.exports = EventPluginUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EventPluginUtils.js\n// module id = 39\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * Unescape and unwrap key for human-readable display\n *\n * @param {string} key to unescape.\n * @return {string} the unescaped key.\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\n\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\n\nmodule.exports = KeyEscapeUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/KeyEscapeUtils.js\n// module id = 40\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\nvar propTypesFactory = require('prop-types/factory');\n\nvar React = require('react/lib/React');\nvar PropTypes = propTypesFactory(React.isValidElement);\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: PropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/LinkedValueUtils.js\n// module id = 41\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkup: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function (environment) {\n      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactComponentEnvironment.js\n// module id = 42\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar caughtError = null;\n\n/**\n * Call a function while guarding against errors that happens within it.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} a First argument\n * @param {*} b Second argument\n */\nfunction invokeGuardedCallback(name, func, a) {\n  try {\n    func(a);\n  } catch (x) {\n    if (caughtError === null) {\n      caughtError = x;\n    }\n  }\n}\n\nvar ReactErrorUtils = {\n  invokeGuardedCallback: invokeGuardedCallback,\n\n  /**\n   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\n   * handler are sure to be rethrown by rethrowCaughtError.\n   */\n  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\n\n  /**\n   * During execution of guarded functions we will capture the first error which\n   * we will rethrow to be handled by the top level error handler.\n   */\n  rethrowCaughtError: function () {\n    if (caughtError) {\n      var error = caughtError;\n      caughtError = null;\n      throw error;\n    }\n  }\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  /**\n   * To help development we can get better devtools integration by simulating a\n   * real browser event.\n   */\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {\n      var boundFunc = func.bind(null, a);\n      var evtType = 'react-' + name;\n      fakeNode.addEventListener(evtType, boundFunc, false);\n      var evt = document.createEvent('Event');\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n      fakeNode.removeEventListener(evtType, boundFunc, false);\n    };\n  }\n}\n\nmodule.exports = ReactErrorUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactErrorUtils.js\n// module id = 43\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction enqueueUpdate(internalInstance) {\n  ReactUpdates.enqueueUpdate(internalInstance);\n}\n\nfunction formatUnexpectedArgument(arg) {\n  var type = typeof arg;\n  if (type !== 'object') {\n    return type;\n  }\n  var displayName = arg.constructor && arg.constructor.name || type;\n  var keys = Object.keys(arg);\n  if (keys.length > 0 && keys.length < 20) {\n    return displayName + ' (keys: ' + keys.join(', ') + ')';\n  }\n  return displayName;\n}\n\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n  var internalInstance = ReactInstanceMap.get(publicInstance);\n  if (!internalInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      var ctor = publicInstance.constructor;\n      // Only warn when we have a callerName. Otherwise we should be silent.\n      // We're probably calling from enqueueCallback. We don't want to warn\n      // there because we already warned for the corresponding lifecycle method.\n      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;\n    }\n    return null;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;\n  }\n\n  return internalInstance;\n}\n\n/**\n * ReactUpdateQueue allows for state updates to be scheduled into a later\n * reconciliation step.\n */\nvar ReactUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n        owner._warnedAboutRefsInRender = true;\n      }\n    }\n    var internalInstance = ReactInstanceMap.get(publicInstance);\n    if (internalInstance) {\n      // During componentWillMount and render this will still be null but after\n      // that will always render to something. At least for now. So we can use\n      // this hack.\n      return !!internalInstance._renderedComponent;\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @param {string} callerName Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback, callerName) {\n    ReactUpdateQueue.validateCallback(callback, callerName);\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\n    // Previously we would throw an error if we didn't have an internal\n    // instance. Since we want to make it a no-op instead, we mirror the same\n    // behavior we have in other enqueue* methods.\n    // We also need to ignore callbacks in componentWillMount. See\n    // enqueueUpdates.\n    if (!internalInstance) {\n      return null;\n    }\n\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    // TODO: The callback here is ignored when setState is called from\n    // componentWillMount. Either fix it or disallow doing so completely in\n    // favor of getInitialState. Alternatively, we can disallow\n    // componentWillMount during server-side rendering.\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueCallbackInternal: function (internalInstance, callback) {\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingForceUpdate = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingStateQueue = [completeState];\n    internalInstance._pendingReplaceState = true;\n\n    // Future-proof 15.5\n    if (callback !== undefined && callback !== null) {\n      ReactUpdateQueue.validateCallback(callback, 'replaceState');\n      if (internalInstance._pendingCallbacks) {\n        internalInstance._pendingCallbacks.push(callback);\n      } else {\n        internalInstance._pendingCallbacks = [callback];\n      }\n    }\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onSetState();\n      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;\n    }\n\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\n    queue.push(partialState);\n\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {\n    internalInstance._pendingElement = nextElement;\n    // TODO: introduce _pendingContext instead of setting it directly.\n    internalInstance._context = nextContext;\n    enqueueUpdate(internalInstance);\n  },\n\n  validateCallback: function (callback, callerName) {\n    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;\n  }\n\n};\n\nmodule.exports = ReactUpdateQueue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactUpdateQueue.js\n// module id = 44\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* globals MSApp */\n\n'use strict';\n\n/**\n * Create a function which has 'unsafe' privileges (required by windows8 apps)\n */\n\nvar createMicrosoftUnsafeLocalFunction = function (func) {\n  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n    return function (arg0, arg1, arg2, arg3) {\n      MSApp.execUnsafeLocalFunction(function () {\n        return func(arg0, arg1, arg2, arg3);\n      });\n    };\n  } else {\n    return func;\n  }\n};\n\nmodule.exports = createMicrosoftUnsafeLocalFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/createMicrosoftUnsafeLocalFunction.js\n// module id = 45\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\n\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventCharCode.js\n// module id = 46\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  'Alt': 'altKey',\n  'Control': 'ctrlKey',\n  'Meta': 'metaKey',\n  'Shift': 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventModifierState.js\n// module id = 47\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\n\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\n  // Normalize SVG <use> element events #4963\n  if (target.correspondingUseElement) {\n    target = target.correspondingUseElement;\n  }\n\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventTarget.js\n// module id = 48\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature = document.implementation && document.implementation.hasFeature &&\n  // always returns true in newer browsers as per the standard.\n  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n  document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = eventName in document;\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/isEventSupported.js\n// module id = 49\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\n\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n  if (prevEmpty || nextEmpty) {\n    return prevEmpty === nextEmpty;\n  }\n\n  var prevType = typeof prevElement;\n  var nextType = typeof nextElement;\n  if (prevType === 'string' || prevType === 'number') {\n    return nextType === 'string' || nextType === 'number';\n  } else {\n    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n  }\n}\n\nmodule.exports = shouldUpdateReactComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/shouldUpdateReactComponent.js\n// module id = 50\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\nvar validateDOMNesting = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n  // TODO: Distinguish by namespace here -- for <title>, including it here\n  // errs on the side of fewer warnings\n  'foreignObject', 'desc', 'title'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n  var buttonScopeTags = inScopeTags.concat(['button']);\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\n  var emptyAncestorInfo = {\n    current: null,\n\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null\n  };\n\n  var updatedAncestorInfo = function (oldInfo, tag, instance) {\n    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);\n    var info = { tag: tag, instance: instance };\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    }\n\n    // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.current = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    return ancestorInfo;\n  };\n\n  /**\n   * Returns whether\n   */\n  var isTagValidWithParent = function (tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n      case 'option':\n        return tag === '#text';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n      case 'tr':\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n      case 'table':\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n      case 'head':\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n      case 'html':\n        return tag === 'head' || tag === 'body';\n      case '#document':\n        return tag === 'html';\n    }\n\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'body':\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frame':\n      case 'head':\n      case 'html':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns whether\n   */\n  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n      case 'pre':\n      case 'listing':\n      case 'table':\n      case 'hr':\n      case 'xmp':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  /**\n   * Given a ReactCompositeComponent instance, return a list of its recursive\n   * owners, starting at the root and ending with the instance itself.\n   */\n  var findOwnerStack = function (instance) {\n    if (!instance) {\n      return [];\n    }\n\n    var stack = [];\n    do {\n      stack.push(instance);\n    } while (instance = instance._currentElement._owner);\n    stack.reverse();\n    return stack;\n  };\n\n  var didWarn = {};\n\n  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n\n    if (childText != null) {\n      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;\n      childTag = '#text';\n    }\n\n    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n    var problematic = invalidParent || invalidAncestor;\n\n    if (problematic) {\n      var ancestorTag = problematic.tag;\n      var ancestorInstance = problematic.instance;\n\n      var childOwner = childInstance && childInstance._currentElement._owner;\n      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\n\n      var childOwners = findOwnerStack(childOwner);\n      var ancestorOwners = findOwnerStack(ancestorOwner);\n\n      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\n      var i;\n\n      var deepestCommon = -1;\n      for (i = 0; i < minStackLen; i++) {\n        if (childOwners[i] === ancestorOwners[i]) {\n          deepestCommon = i;\n        } else {\n          break;\n        }\n      }\n\n      var UNKNOWN = '(unknown)';\n      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ownerInfo = [].concat(\n      // If the parent and child instances have a common owner ancestor, start\n      // with that -- otherwise we just start with the parent's owners.\n      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\n      // If we're warning about an invalid (non-parent) ancestry, add '...'\n      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\n\n      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\n      if (didWarn[warnKey]) {\n        return;\n      }\n      didWarn[warnKey] = true;\n\n      var tagDisplayName = childTag;\n      var whitespaceInfo = '';\n      if (childTag === '#text') {\n        if (/\\S/.test(childText)) {\n          tagDisplayName = 'Text nodes';\n        } else {\n          tagDisplayName = 'Whitespace text nodes';\n          whitespaceInfo = ' Make sure you don\\'t have any extra whitespace between tags on ' + 'each line of your source code.';\n        }\n      } else {\n        tagDisplayName = '<' + childTag + '>';\n      }\n\n      if (invalidParent) {\n        var info = '';\n        if (ancestorTag === 'table' && childTag === 'tr') {\n          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n        }\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;\n      } else {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;\n      }\n    }\n  };\n\n  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\n\n  // For testing\n  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.current;\n    var parentTag = parentInfo && parentInfo.tag;\n    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\n  };\n}\n\nmodule.exports = validateDOMNesting;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/validateDOMNesting.js\n// module id = 51\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nReactComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;\n  this.updater.enqueueSetState(this, partialState);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'setState');\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback, 'forceUpdate');\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    if (canDefineProperty) {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function () {\n          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;\n          return undefined;\n        }\n      });\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nmodule.exports = ReactComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactComponent.js\n// module id = 52\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar warning = require('fbjs/lib/warning');\n\nfunction warnNoop(publicInstance, callerName) {\n  if (process.env.NODE_ENV !== 'production') {\n    var constructor = publicInstance.constructor;\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback) {},\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nmodule.exports = ReactNoopUpdateQueue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactNoopUpdateQueue.js\n// module id = 53\n// module chunks = 0","import {config} from '../../../environment'\n\nexport const oppositeActions = {\n    w: 's',\n    a: 'd',\n    s: 'w',\n    d: 'a'\n};\n\nconst actionVectors = {\n    //[dX, dY, dScore]\n    w: [0, -1, config.deltaScorePerAction - config.verticalDeltaScore],\n    a: [-1, 0, config.deltaScorePerAction],\n    s: [0, 1, config.deltaScorePerAction + config.verticalDeltaScore],\n    d: [1, 0, config.deltaScorePerAction],\n};\nexport function getFeelerValue(observation, feelerSteps) {\n    let position = [observation.position[0], observation.position[1]];\n    let value = 0;\n    feelerSteps.forEach((step) => {\n        const vector = actionVectors[step];\n        position = [position[0] + vector[0], position[1] + vector[1]];\n        let cost;\n        if (typeof observation.tileTypes[position[0]] === 'undefined' || typeof observation.tileTypes[position[0]][position[1]] === 'undefined') {\n            cost = config.tileTypeToDeltaScore[1]; //If going off map, make look very expensive\n        } else {\n            cost = config.tileTypeToDeltaScore[observation.tileTypes[position[0]][position[1]]]\n        }\n        value = value + vector[2] + cost;\n    });\n    return value;\n}\n\nexport function getFeelerValues(observation, feelerPaths) {\n    return feelerPaths.map((feelerPath) => {\n        return {\n            path: feelerPath,\n            value: getFeelerValue(observation, feelerPath)\n        }\n    });\n}\n\nexport function filterPathsWithFirstAction(paths, blacklistedFirstAction) {\n    return paths.filter((path) => path[0] !== blacklistedFirstAction);\n}\n\nexport function getBestFeeler(feelersWithValues) {\n    return feelersWithValues.reduce((bestFeelerSoFar, feeler) => {\n        if (bestFeelerSoFar === null || feeler.value > bestFeelerSoFar.value) {\n            return feeler;\n        } else {\n            return bestFeelerSoFar\n        }\n    }, null)\n}\n\nexport function getActionViaFeelers(observation, feelerPaths, lastAction) {\n    //This filter prevents infinite back-and-forth movement\n    const safeFeelerPaths = filterPathsWithFirstAction(\n        feelerPaths, oppositeActions[lastAction]\n    );\n\n    const feelersWithValues = getFeelerValues(observation, safeFeelerPaths);\n\n    const bestFeeler = getBestFeeler(feelersWithValues);\n\n    return bestFeeler.path[0];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/agent/hand-programmed/helper/feeler.js","const maxAbsReward = 100;\nexport default class RewardCalculator {\n    construct() {\n        this._lastScore = null;\n    }\n\n    calcLastReward(observation) {\n        let reward = null;\n        if (typeof observation.score === 'undefined') {\n            // throw new Error();\n            observation.score = 0;//@TODO fix this. stop it from happening during new games\n        }\n        // console.log(this._lastScore, observation.score);\n        if (this._lastScore !== null && observation.score !== null) {\n            //Scale reward to between -1 and 1 to not blow up the NN\n            reward = (observation.score - this._lastScore) / maxAbsReward;\n        }\n        this._lastScore = observation.score;\n        if (!isFinite(reward)) {\n            reward = 0;//@TODO fix this. stop it from happening during new games\n        }\n        return reward;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/agent/machine-learning/helper/RewardCalculator.js","let actionElements = null;\nlet randomActionElement = null;\nlet rewardElements = null;\nlet randomActionValueElement;\n\n\nfunction ensureElementsExist() {\n    if (document.getElementById('DQNRender') && actionElements !== null) {\n        return;\n    }\n    document.getElementById('agentRendererContainer').innerHTML =\n        `<div id=\"DQNRender\">\nPredicted expected reward from each action:\n    <div style=\"overflow: auto\"><div style=\"float: left\">w:&nbsp;</div> <div id=\"action0\" style=\"background-color: lightgoldenrodyellow\"></div></div>\n    <div style=\"overflow: auto\"><div style=\"float: left\">a:&nbsp;</div> <div id=\"action1\" style=\"background-color: lightsalmon\"></div></div>\n    <div style=\"overflow: auto\"><div style=\"float: left\">s:&nbsp;</div> <div id=\"action2\" style=\"background-color: lightskyblue\"></div></div>\n    <div style=\"overflow: auto\"><div style=\"float: left\">d:&nbsp;</div> <div id=\"action3\" style=\"background-color: lightseagreen\"></div></div>\n        <div style=\"overflow: auto\"><div style=\"float: left\">random action:&nbsp;<span id=\"actionRandomValue\"></span></div><div id=\"actionRandom\" style=\"background-color: lightcoral;height: 1em\"></div></div>\n        <br>\n        Reward from last action:\n        <div style=\"overflow: auto\"><div style=\"float: left\">good&nbsp;</div> <div id=\"good\" style=\"background-color: greenyellow\"></div></div>\n    <div style=\"overflow: auto\"><div style=\"float: left\">bad&nbsp;</div> <div id=\"bad\" style=\"background-color: orangered\"></div></div>\n<br />\n</div>`;\n    actionElements = [\n        document.getElementById('action0'),\n        document.getElementById('action1'),\n        document.getElementById('action2'),\n        document.getElementById('action3'),\n    ];\n    randomActionElement = document.getElementById('actionRandom');\n    randomActionValueElement = document.getElementById('actionRandomValue');\n    rewardElements = [\n        document.getElementById('good'),\n        document.getElementById('bad'),\n    ];\n}\n\nexport function renderActionResponse(actionResponse) {//@TODO move out\n    ensureElementsExist();\n    const barFrontPadding = 100;\n    const maxActionValue = 1;//actionResponse.weights[maxAction];\n\n    const minActionValue = -1;\n    for (var i = 0, len = actionResponse.weights.length; i < len; i++) {\n        let fixedValue = (actionResponse.weights[i] - minActionValue);\n        if (fixedValue < minActionValue) {\n            fixedValue = 0;\n        } else if (fixedValue > maxActionValue * 2) {\n            fixedValue = maxActionValue * 2;\n        }\n        actionElements[i].style.width = (fixedValue * 150 + barFrontPadding) + 'px';\n        actionElements[i].innerHTML = (actionResponse.weights[i] * 100).toFixed(0);\n    }\n\n    if (actionResponse.wasRandom) {\n        randomActionValueElement.innerHTML = 'Infinity';\n        randomActionElement.style.width = (3 * 150 + barFrontPadding) + 'px';\n    } else {\n        randomActionValueElement.innerHTML = '0';\n        randomActionElement.style.width = '10px';\n    }\n}\n\nexport function renderReward(reward) {//@TODO move out\n    ensureElementsExist();\n    reward *= 100;\n    let good = 0;\n    let bad = 0;\n    if (reward < 0) {\n        bad = -reward;\n    } else {\n        good = reward;\n    }\n\n    rewardElements[0].style.width = (good * 15 + 50) + 'px';\n    rewardElements[0].innerHTML = good;\n\n    rewardElements[1].style.width = (bad * 15 + 50) + 'px';\n    rewardElements[1].innerHTML = bad;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/agent/machine-learning/helper/qStateRenderer.js","import DeepNetwork from '../../fast-deep-net/network/DeepNetwork'\nimport Linear from '../../fast-deep-net/activation-function/Linear'\nimport LeakyRelu from '../../fast-deep-net/activation-function/LeakyRelu'\nexport default function (inputCount, hiddenCount, outputCount) {\n    return new DeepNetwork(\n        [\n            { //Input layer\n                size: inputCount\n            },\n            { //Hidden layer\n                size: hiddenCount,\n                activationFunction: new LeakyRelu(),\n                learningRate: 0.01\n            },\n            { //Output layer\n                size: outputCount,\n                activationFunction: new Linear(),\n                learningRate: 0.01\n            }\n        ],\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/deep-q-network/neural-network/NeuralNetwork.js","// import {gaussRandom} from '../math/random'\n// import {assertIsNumber} from '../assert/assert'\n\n// function logWeightUpdate(description, update, oldValue, newValue, gradient) {\n//     console.log(\n//         'Updating weight ' + description + ' by: ' + update,\n//         'weight:' + oldValue + '->' + newValue,\n//         'gradient:' + gradient\n//     )\n// }\n\nexport default class OutputLayer {\n    constructor(nodeCount, inputLayer, activationFunction, learningRate) {\n        this.nodeCount = nodeCount;\n        this.inputCount = inputLayer.nodeCount;\n        this.inputNodeCount = this.inputCount + 1;//Add 1 for the bias node\n        this.weights = new Float64Array(nodeCount * this.inputNodeCount);\n        for (var weightI = 0, weightLen = this.weights.length; weightI < weightLen; weightI++) {\n            this.weights[weightI] = Math.random() - 0.5; //gaussRandom(); //@TODO do better?\n        }\n        this.outputs = new Float64Array(nodeCount);\n        this.activationFunction = activationFunction.xToY;\n        this.activationFunctionDerivative = activationFunction.yToSlope;\n        this.errorGradients = new Float64Array(nodeCount);\n        this.learningRate = learningRate;\n        this.inputLayer = inputLayer;\n    }\n\n    feedForward() {\n        this.inputs = this.inputLayer.outputs;\n\n        //Defining these locally speeds up the loop below by reducing object property access\n        var inputNodeCount = this.inputNodeCount;\n        var weights = this.weights;\n        var inputs = this.inputs;\n        var activationFunction = this.activationFunction;\n        var outputs = this.outputs;\n        var nodeCount = this.nodeCount;\n        var inputCount = this.inputCount;\n\n        for (var neuronI = 0; neuronI < nodeCount; neuronI++) {\n            var sum = 0;\n            for (var inputI = 0; inputI < inputCount; inputI++) {\n                // assertIsNumber(this.inputs[inputI], 'Input');\n                sum += inputs[inputI] * weights[neuronI * inputNodeCount + inputI];\n            }\n            sum += weights[neuronI * inputNodeCount + inputCount];//Bias node that always inputs \"1\"\n\n            outputs[neuronI] = activationFunction(sum);\n\n            // assertIsNumber(this.outputs[neuronI], 'Neuron output');\n        }\n\n        return outputs;\n    }\n\n    backPropagateCalculateErrorGradient(targetOutputs) {\n        //Defining these locally speeds up the loop below by reducing object property access\n        var nodeCount = this.nodeCount;\n        var errorGradients = this.errorGradients;\n        var outputs = this.outputs;\n        var activationFunctionDerivative = this.activationFunctionDerivative;\n\n        for (var neuronI = 0; neuronI < nodeCount; neuronI++) {\n            errorGradients[neuronI] = (outputs[neuronI] - targetOutputs[neuronI])\n                * activationFunctionDerivative(outputs[neuronI]);\n            // assertIsNumber(this.errorGradients[neuronI], 'Error gradient');\n        }\n    }\n\n    backPropagateOptimize() {\n        //Defining these locally speeds up the loop below by reducing object property access\n        var inputNodeCount = this.inputNodeCount;\n        var weights = this.weights;\n        var nodeCount = this.nodeCount;\n        var inputCount = this.inputCount;\n        var inputs = this.inputs;\n        var learningRate = this.learningRate;\n        var errorGradients = this.errorGradients;\n\n        for (var neuronI = 0; neuronI < nodeCount; neuronI++) {\n            for (var inputI = 0; inputI < inputCount; inputI++) {\n                // logWeightUpdate(\n                //     neuronI + ':' + inputI,\n                //     -this.learningRate * this.inputs[inputI] * this.errorGradients[neuronI],\n                //     this.weights[neuronI * this.inputCount + inputI],\n                //     this.weights[neuronI * this.inputCount + inputI] -\n                //     this.learningRate * this.inputs[inputI] * this.errorGradients[neuronI],\n                //     this.errorGradients[neuronI]\n                // );\n\n                weights[neuronI * inputNodeCount + inputI] -=\n                    learningRate * inputs[inputI] * errorGradients[neuronI];\n\n                // assertIsNumber(this.weights[neuronI * this.inputNodeCount + inputI], 'Weight');\n            }\n\n            // logWeightUpdate(\n            //     neuronI + ':' + inputI,\n            //     -this.learningRate * this.errorGradients[neuronI],\n            //     this.weights[neuronI * this.inputCount + inputI],\n            //     this.weights[neuronI * this.inputCount + inputI] -\n            //     this.learningRate * this.errorGradients[neuronI],\n            //     this.errorGradients[neuronI]\n            // );\n            weights[neuronI * inputNodeCount + inputCount] -= //Do the bias node weight\n                learningRate * errorGradients[neuronI];\n\n            // assertIsNumber(this.weights[neuronI * this.inputNodeCount + this.inputCount], 'Bias weight');\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/fast-deep-net/layer/OutputLayer.js","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @typechecks\n */\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/EventListener.js\n// module id = 59\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\n\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/focusNode.js\n// module id = 60\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/getActiveElement.js\n// module id = 61\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Afrikaans [af]\n//! author : Werner Mollentze : https://github.com/wernerm\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar af = moment.defineLocale('af', {\n    months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),\n    monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),\n    weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),\n    weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),\n    weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),\n    meridiemParse: /vm|nm/i,\n    isPM : function (input) {\n        return /^nm$/i.test(input);\n    },\n    meridiem : function (hours, minutes, isLower) {\n        if (hours < 12) {\n            return isLower ? 'vm' : 'VM';\n        } else {\n            return isLower ? 'nm' : 'NM';\n        }\n    },\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[Vandag om] LT',\n        nextDay : '[Môre om] LT',\n        nextWeek : 'dddd [om] LT',\n        lastDay : '[Gister om] LT',\n        lastWeek : '[Laas] dddd [om] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'oor %s',\n        past : '%s gelede',\n        s : '\\'n paar sekondes',\n        m : '\\'n minuut',\n        mm : '%d minute',\n        h : '\\'n uur',\n        hh : '%d ure',\n        d : '\\'n dag',\n        dd : '%d dae',\n        M : '\\'n maand',\n        MM : '%d maande',\n        y : '\\'n jaar',\n        yy : '%d jaar'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    ordinal : function (number) {\n        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter\n    },\n    week : {\n        dow : 1, // Maandag is die eerste dag van die week.\n        doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n    }\n});\n\nreturn af;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/af.js\n// module id = 62\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Arabic (Algeria) [ar-dz]\n//! author : Noureddine LOUAHEDJ : https://github.com/noureddineme\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar arDz = moment.defineLocale('ar-dz', {\n    months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n    monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[اليوم على الساعة] LT',\n        nextDay: '[غدا على الساعة] LT',\n        nextWeek: 'dddd [على الساعة] LT',\n        lastDay: '[أمس على الساعة] LT',\n        lastWeek: 'dddd [على الساعة] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'في %s',\n        past : 'منذ %s',\n        s : 'ثوان',\n        m : 'دقيقة',\n        mm : '%d دقائق',\n        h : 'ساعة',\n        hh : '%d ساعات',\n        d : 'يوم',\n        dd : '%d أيام',\n        M : 'شهر',\n        MM : '%d أشهر',\n        y : 'سنة',\n        yy : '%d سنوات'\n    },\n    week : {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 4  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn arDz;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ar-dz.js\n// module id = 63\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Arabic (Kuwait) [ar-kw]\n//! author : Nusret Parlak: https://github.com/nusretparlak\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar arKw = moment.defineLocale('ar-kw', {\n    months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n    monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n    weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[اليوم على الساعة] LT',\n        nextDay: '[غدا على الساعة] LT',\n        nextWeek: 'dddd [على الساعة] LT',\n        lastDay: '[أمس على الساعة] LT',\n        lastWeek: 'dddd [على الساعة] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'في %s',\n        past : 'منذ %s',\n        s : 'ثوان',\n        m : 'دقيقة',\n        mm : '%d دقائق',\n        h : 'ساعة',\n        hh : '%d ساعات',\n        d : 'يوم',\n        dd : '%d أيام',\n        M : 'شهر',\n        MM : '%d أشهر',\n        y : 'سنة',\n        yy : '%d سنوات'\n    },\n    week : {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 12  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn arKw;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ar-kw.js\n// module id = 64\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Arabic (Lybia) [ar-ly]\n//! author : Ali Hmer: https://github.com/kikoanis\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar symbolMap = {\n    '1': '1',\n    '2': '2',\n    '3': '3',\n    '4': '4',\n    '5': '5',\n    '6': '6',\n    '7': '7',\n    '8': '8',\n    '9': '9',\n    '0': '0'\n};\nvar pluralForm = function (n) {\n    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n};\nvar plurals = {\n    s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n    m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n    h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n    d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n    M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n    y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n};\nvar pluralize = function (u) {\n    return function (number, withoutSuffix, string, isFuture) {\n        var f = pluralForm(number),\n            str = plurals[u][pluralForm(number)];\n        if (f === 2) {\n            str = str[withoutSuffix ? 0 : 1];\n        }\n        return str.replace(/%d/i, number);\n    };\n};\nvar months = [\n    'يناير',\n    'فبراير',\n    'مارس',\n    'أبريل',\n    'مايو',\n    'يونيو',\n    'يوليو',\n    'أغسطس',\n    'سبتمبر',\n    'أكتوبر',\n    'نوفمبر',\n    'ديسمبر'\n];\n\nvar arLy = moment.defineLocale('ar-ly', {\n    months : months,\n    monthsShort : months,\n    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'D/\\u200FM/\\u200FYYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ص|م/,\n    isPM : function (input) {\n        return 'م' === input;\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ص';\n        } else {\n            return 'م';\n        }\n    },\n    calendar : {\n        sameDay: '[اليوم عند الساعة] LT',\n        nextDay: '[غدًا عند الساعة] LT',\n        nextWeek: 'dddd [عند الساعة] LT',\n        lastDay: '[أمس عند الساعة] LT',\n        lastWeek: 'dddd [عند الساعة] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'بعد %s',\n        past : 'منذ %s',\n        s : pluralize('s'),\n        m : pluralize('m'),\n        mm : pluralize('m'),\n        h : pluralize('h'),\n        hh : pluralize('h'),\n        d : pluralize('d'),\n        dd : pluralize('d'),\n        M : pluralize('M'),\n        MM : pluralize('M'),\n        y : pluralize('y'),\n        yy : pluralize('y')\n    },\n    preparse: function (string) {\n        return string.replace(/\\u200f/g, '').replace(/،/g, ',');\n    },\n    postformat: function (string) {\n        return string.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        }).replace(/,/g, '،');\n    },\n    week : {\n        dow : 6, // Saturday is the first day of the week.\n        doy : 12  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn arLy;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ar-ly.js\n// module id = 65\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Arabic (Morocco) [ar-ma]\n//! author : ElFadili Yassine : https://github.com/ElFadiliY\n//! author : Abdel Said : https://github.com/abdelsaid\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar arMa = moment.defineLocale('ar-ma', {\n    months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n    monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),\n    weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[اليوم على الساعة] LT',\n        nextDay: '[غدا على الساعة] LT',\n        nextWeek: 'dddd [على الساعة] LT',\n        lastDay: '[أمس على الساعة] LT',\n        lastWeek: 'dddd [على الساعة] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'في %s',\n        past : 'منذ %s',\n        s : 'ثوان',\n        m : 'دقيقة',\n        mm : '%d دقائق',\n        h : 'ساعة',\n        hh : '%d ساعات',\n        d : 'يوم',\n        dd : '%d أيام',\n        M : 'شهر',\n        MM : '%d أشهر',\n        y : 'سنة',\n        yy : '%d سنوات'\n    },\n    week : {\n        dow : 6, // Saturday is the first day of the week.\n        doy : 12  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn arMa;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ar-ma.js\n// module id = 66\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Arabic (Saudi Arabia) [ar-sa]\n//! author : Suhail Alkowaileet : https://github.com/xsoh\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar symbolMap = {\n    '1': '١',\n    '2': '٢',\n    '3': '٣',\n    '4': '٤',\n    '5': '٥',\n    '6': '٦',\n    '7': '٧',\n    '8': '٨',\n    '9': '٩',\n    '0': '٠'\n};\nvar numberMap = {\n    '١': '1',\n    '٢': '2',\n    '٣': '3',\n    '٤': '4',\n    '٥': '5',\n    '٦': '6',\n    '٧': '7',\n    '٨': '8',\n    '٩': '9',\n    '٠': '0'\n};\n\nvar arSa = moment.defineLocale('ar-sa', {\n    months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n    monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ص|م/,\n    isPM : function (input) {\n        return 'م' === input;\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ص';\n        } else {\n            return 'م';\n        }\n    },\n    calendar : {\n        sameDay: '[اليوم على الساعة] LT',\n        nextDay: '[غدا على الساعة] LT',\n        nextWeek: 'dddd [على الساعة] LT',\n        lastDay: '[أمس على الساعة] LT',\n        lastWeek: 'dddd [على الساعة] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'في %s',\n        past : 'منذ %s',\n        s : 'ثوان',\n        m : 'دقيقة',\n        mm : '%d دقائق',\n        h : 'ساعة',\n        hh : '%d ساعات',\n        d : 'يوم',\n        dd : '%d أيام',\n        M : 'شهر',\n        MM : '%d أشهر',\n        y : 'سنة',\n        yy : '%d سنوات'\n    },\n    preparse: function (string) {\n        return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n            return numberMap[match];\n        }).replace(/،/g, ',');\n    },\n    postformat: function (string) {\n        return string.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        }).replace(/,/g, '،');\n    },\n    week : {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn arSa;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ar-sa.js\n// module id = 67\n// module chunks = 0","//! moment.js locale configuration\n//! locale  :  Arabic (Tunisia) [ar-tn]\n//! author : Nader Toukabri : https://github.com/naderio\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar arTn = moment.defineLocale('ar-tn', {\n    months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n    monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),\n    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[اليوم على الساعة] LT',\n        nextDay: '[غدا على الساعة] LT',\n        nextWeek: 'dddd [على الساعة] LT',\n        lastDay: '[أمس على الساعة] LT',\n        lastWeek: 'dddd [على الساعة] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'في %s',\n        past: 'منذ %s',\n        s: 'ثوان',\n        m: 'دقيقة',\n        mm: '%d دقائق',\n        h: 'ساعة',\n        hh: '%d ساعات',\n        d: 'يوم',\n        dd: '%d أيام',\n        M: 'شهر',\n        MM: '%d أشهر',\n        y: 'سنة',\n        yy: '%d سنوات'\n    },\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn arTn;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ar-tn.js\n// module id = 68\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar symbolMap = {\n    '1': '١',\n    '2': '٢',\n    '3': '٣',\n    '4': '٤',\n    '5': '٥',\n    '6': '٦',\n    '7': '٧',\n    '8': '٨',\n    '9': '٩',\n    '0': '٠'\n};\nvar numberMap = {\n    '١': '1',\n    '٢': '2',\n    '٣': '3',\n    '٤': '4',\n    '٥': '5',\n    '٦': '6',\n    '٧': '7',\n    '٨': '8',\n    '٩': '9',\n    '٠': '0'\n};\nvar pluralForm = function (n) {\n    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;\n};\nvar plurals = {\n    s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n    m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n    h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n    d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n    M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n    y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n};\nvar pluralize = function (u) {\n    return function (number, withoutSuffix, string, isFuture) {\n        var f = pluralForm(number),\n            str = plurals[u][pluralForm(number)];\n        if (f === 2) {\n            str = str[withoutSuffix ? 0 : 1];\n        }\n        return str.replace(/%d/i, number);\n    };\n};\nvar months = [\n    'كانون الثاني يناير',\n    'شباط فبراير',\n    'آذار مارس',\n    'نيسان أبريل',\n    'أيار مايو',\n    'حزيران يونيو',\n    'تموز يوليو',\n    'آب أغسطس',\n    'أيلول سبتمبر',\n    'تشرين الأول أكتوبر',\n    'تشرين الثاني نوفمبر',\n    'كانون الأول ديسمبر'\n];\n\nvar ar = moment.defineLocale('ar', {\n    months : months,\n    monthsShort : months,\n    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'D/\\u200FM/\\u200FYYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ص|م/,\n    isPM : function (input) {\n        return 'م' === input;\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ص';\n        } else {\n            return 'م';\n        }\n    },\n    calendar : {\n        sameDay: '[اليوم عند الساعة] LT',\n        nextDay: '[غدًا عند الساعة] LT',\n        nextWeek: 'dddd [عند الساعة] LT',\n        lastDay: '[أمس عند الساعة] LT',\n        lastWeek: 'dddd [عند الساعة] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'بعد %s',\n        past : 'منذ %s',\n        s : pluralize('s'),\n        m : pluralize('m'),\n        mm : pluralize('m'),\n        h : pluralize('h'),\n        hh : pluralize('h'),\n        d : pluralize('d'),\n        dd : pluralize('d'),\n        M : pluralize('M'),\n        MM : pluralize('M'),\n        y : pluralize('y'),\n        yy : pluralize('y')\n    },\n    preparse: function (string) {\n        return string.replace(/\\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n            return numberMap[match];\n        }).replace(/،/g, ',');\n    },\n    postformat: function (string) {\n        return string.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        }).replace(/,/g, '،');\n    },\n    week : {\n        dow : 6, // Saturday is the first day of the week.\n        doy : 12  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn ar;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ar.js\n// module id = 69\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Azerbaijani [az]\n//! author : topchiyev : https://github.com/topchiyev\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar suffixes = {\n    1: '-inci',\n    5: '-inci',\n    8: '-inci',\n    70: '-inci',\n    80: '-inci',\n    2: '-nci',\n    7: '-nci',\n    20: '-nci',\n    50: '-nci',\n    3: '-üncü',\n    4: '-üncü',\n    100: '-üncü',\n    6: '-ncı',\n    9: '-uncu',\n    10: '-uncu',\n    30: '-uncu',\n    60: '-ıncı',\n    90: '-ıncı'\n};\n\nvar az = moment.defineLocale('az', {\n    months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),\n    monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n    weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),\n    weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n    weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[bugün saat] LT',\n        nextDay : '[sabah saat] LT',\n        nextWeek : '[gələn həftə] dddd [saat] LT',\n        lastDay : '[dünən] LT',\n        lastWeek : '[keçən həftə] dddd [saat] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s sonra',\n        past : '%s əvvəl',\n        s : 'birneçə saniyyə',\n        m : 'bir dəqiqə',\n        mm : '%d dəqiqə',\n        h : 'bir saat',\n        hh : '%d saat',\n        d : 'bir gün',\n        dd : '%d gün',\n        M : 'bir ay',\n        MM : '%d ay',\n        y : 'bir il',\n        yy : '%d il'\n    },\n    meridiemParse: /gecə|səhər|gündüz|axşam/,\n    isPM : function (input) {\n        return /^(gündüz|axşam)$/.test(input);\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'gecə';\n        } else if (hour < 12) {\n            return 'səhər';\n        } else if (hour < 17) {\n            return 'gündüz';\n        } else {\n            return 'axşam';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n    ordinal : function (number) {\n        if (number === 0) {  // special case for zero\n            return number + '-ıncı';\n        }\n        var a = number % 10,\n            b = number % 100 - a,\n            c = number >= 100 ? 100 : null;\n        return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn az;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/az.js\n// module id = 70\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Belarusian [be]\n//! author : Dmitry Demidov : https://github.com/demidov91\n//! author: Praleska: http://praleska.pro/\n//! Author : Menelion Elensúle : https://github.com/Oire\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction plural(word, num) {\n    var forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n    var format = {\n        'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n        'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n        'dd': 'дзень_дні_дзён',\n        'MM': 'месяц_месяцы_месяцаў',\n        'yy': 'год_гады_гадоў'\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'хвіліна' : 'хвіліну';\n    }\n    else if (key === 'h') {\n        return withoutSuffix ? 'гадзіна' : 'гадзіну';\n    }\n    else {\n        return number + ' ' + plural(format[key], +number);\n    }\n}\n\nvar be = moment.defineLocale('be', {\n    months : {\n        format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),\n        standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')\n    },\n    monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n    weekdays : {\n        format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),\n        standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),\n        isFormat: /\\[ ?[Вв] ?(?:мінулую|наступную)? ?\\] ?dddd/\n    },\n    weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n    weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY г.',\n        LLL : 'D MMMM YYYY г., HH:mm',\n        LLLL : 'dddd, D MMMM YYYY г., HH:mm'\n    },\n    calendar : {\n        sameDay: '[Сёння ў] LT',\n        nextDay: '[Заўтра ў] LT',\n        lastDay: '[Учора ў] LT',\n        nextWeek: function () {\n            return '[У] dddd [ў] LT';\n        },\n        lastWeek: function () {\n            switch (this.day()) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return '[У мінулую] dddd [ў] LT';\n                case 1:\n                case 2:\n                case 4:\n                    return '[У мінулы] dddd [ў] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'праз %s',\n        past : '%s таму',\n        s : 'некалькі секунд',\n        m : relativeTimeWithPlural,\n        mm : relativeTimeWithPlural,\n        h : relativeTimeWithPlural,\n        hh : relativeTimeWithPlural,\n        d : 'дзень',\n        dd : relativeTimeWithPlural,\n        M : 'месяц',\n        MM : relativeTimeWithPlural,\n        y : 'год',\n        yy : relativeTimeWithPlural\n    },\n    meridiemParse: /ночы|раніцы|дня|вечара/,\n    isPM : function (input) {\n        return /^(дня|вечара)$/.test(input);\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночы';\n        } else if (hour < 12) {\n            return 'раніцы';\n        } else if (hour < 17) {\n            return 'дня';\n        } else {\n            return 'вечара';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(і|ы|га)/,\n    ordinal: function (number, period) {\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';\n            case 'D':\n                return number + '-га';\n            default:\n                return number;\n        }\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn be;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/be.js\n// module id = 71\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Krasen Borisov : https://github.com/kraz\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar bg = moment.defineLocale('bg', {\n    months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n    monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n    weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n    weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n    weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat : {\n        LT : 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'D.MM.YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY H:mm',\n        LLLL : 'dddd, D MMMM YYYY H:mm'\n    },\n    calendar : {\n        sameDay : '[Днес в] LT',\n        nextDay : '[Утре в] LT',\n        nextWeek : 'dddd [в] LT',\n        lastDay : '[Вчера в] LT',\n        lastWeek : function () {\n            switch (this.day()) {\n                case 0:\n                case 3:\n                case 6:\n                    return '[В изминалата] dddd [в] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[В изминалия] dddd [в] LT';\n            }\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'след %s',\n        past : 'преди %s',\n        s : 'няколко секунди',\n        m : 'минута',\n        mm : '%d минути',\n        h : 'час',\n        hh : '%d часа',\n        d : 'ден',\n        dd : '%d дни',\n        M : 'месец',\n        MM : '%d месеца',\n        y : 'година',\n        yy : '%d години'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n    ordinal : function (number) {\n        var lastDigit = number % 10,\n            last2Digits = number % 100;\n        if (number === 0) {\n            return number + '-ев';\n        } else if (last2Digits === 0) {\n            return number + '-ен';\n        } else if (last2Digits > 10 && last2Digits < 20) {\n            return number + '-ти';\n        } else if (lastDigit === 1) {\n            return number + '-ви';\n        } else if (lastDigit === 2) {\n            return number + '-ри';\n        } else if (lastDigit === 7 || lastDigit === 8) {\n            return number + '-ми';\n        } else {\n            return number + '-ти';\n        }\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn bg;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/bg.js\n// module id = 72\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Bengali [bn]\n//! author : Kaushik Gandhi : https://github.com/kaushikgandhi\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar symbolMap = {\n    '1': '১',\n    '2': '২',\n    '3': '৩',\n    '4': '৪',\n    '5': '৫',\n    '6': '৬',\n    '7': '৭',\n    '8': '৮',\n    '9': '৯',\n    '0': '০'\n};\nvar numberMap = {\n    '১': '1',\n    '২': '2',\n    '৩': '3',\n    '৪': '4',\n    '৫': '5',\n    '৬': '6',\n    '৭': '7',\n    '৮': '8',\n    '৯': '9',\n    '০': '0'\n};\n\nvar bn = moment.defineLocale('bn', {\n    months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),\n    monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),\n    weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),\n    weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n    weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),\n    longDateFormat : {\n        LT : 'A h:mm সময়',\n        LTS : 'A h:mm:ss সময়',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY, A h:mm সময়',\n        LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'\n    },\n    calendar : {\n        sameDay : '[আজ] LT',\n        nextDay : '[আগামীকাল] LT',\n        nextWeek : 'dddd, LT',\n        lastDay : '[গতকাল] LT',\n        lastWeek : '[গত] dddd, LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s পরে',\n        past : '%s আগে',\n        s : 'কয়েক সেকেন্ড',\n        m : 'এক মিনিট',\n        mm : '%d মিনিট',\n        h : 'এক ঘন্টা',\n        hh : '%d ঘন্টা',\n        d : 'এক দিন',\n        dd : '%d দিন',\n        M : 'এক মাস',\n        MM : '%d মাস',\n        y : 'এক বছর',\n        yy : '%d বছর'\n    },\n    preparse: function (string) {\n        return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n            return numberMap[match];\n        });\n    },\n    postformat: function (string) {\n        return string.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        });\n    },\n    meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if ((meridiem === 'রাত' && hour >= 4) ||\n                (meridiem === 'দুপুর' && hour < 5) ||\n                meridiem === 'বিকাল') {\n            return hour + 12;\n        } else {\n            return hour;\n        }\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'রাত';\n        } else if (hour < 10) {\n            return 'সকাল';\n        } else if (hour < 17) {\n            return 'দুপুর';\n        } else if (hour < 20) {\n            return 'বিকাল';\n        } else {\n            return 'রাত';\n        }\n    },\n    week : {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn bn;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/bn.js\n// module id = 73\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Tibetan [bo]\n//! author : Thupten N. Chakrishar : https://github.com/vajradog\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar symbolMap = {\n    '1': '༡',\n    '2': '༢',\n    '3': '༣',\n    '4': '༤',\n    '5': '༥',\n    '6': '༦',\n    '7': '༧',\n    '8': '༨',\n    '9': '༩',\n    '0': '༠'\n};\nvar numberMap = {\n    '༡': '1',\n    '༢': '2',\n    '༣': '3',\n    '༤': '4',\n    '༥': '5',\n    '༦': '6',\n    '༧': '7',\n    '༨': '8',\n    '༩': '9',\n    '༠': '0'\n};\n\nvar bo = moment.defineLocale('bo', {\n    months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n    monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),\n    weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),\n    weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n    weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),\n    longDateFormat : {\n        LT : 'A h:mm',\n        LTS : 'A h:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY, A h:mm',\n        LLLL : 'dddd, D MMMM YYYY, A h:mm'\n    },\n    calendar : {\n        sameDay : '[དི་རིང] LT',\n        nextDay : '[སང་ཉིན] LT',\n        nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',\n        lastDay : '[ཁ་སང] LT',\n        lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s ལ་',\n        past : '%s སྔན་ལ',\n        s : 'ལམ་སང',\n        m : 'སྐར་མ་གཅིག',\n        mm : '%d སྐར་མ',\n        h : 'ཆུ་ཚོད་གཅིག',\n        hh : '%d ཆུ་ཚོད',\n        d : 'ཉིན་གཅིག',\n        dd : '%d ཉིན་',\n        M : 'ཟླ་བ་གཅིག',\n        MM : '%d ཟླ་བ',\n        y : 'ལོ་གཅིག',\n        yy : '%d ལོ'\n    },\n    preparse: function (string) {\n        return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {\n            return numberMap[match];\n        });\n    },\n    postformat: function (string) {\n        return string.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        });\n    },\n    meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if ((meridiem === 'མཚན་མོ' && hour >= 4) ||\n                (meridiem === 'ཉིན་གུང' && hour < 5) ||\n                meridiem === 'དགོང་དག') {\n            return hour + 12;\n        } else {\n            return hour;\n        }\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'མཚན་མོ';\n        } else if (hour < 10) {\n            return 'ཞོགས་ཀས';\n        } else if (hour < 17) {\n            return 'ཉིན་གུང';\n        } else if (hour < 20) {\n            return 'དགོང་དག';\n        } else {\n            return 'མཚན་མོ';\n        }\n    },\n    week : {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn bo;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/bo.js\n// module id = 74\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Breton [br]\n//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction relativeTimeWithMutation(number, withoutSuffix, key) {\n    var format = {\n        'mm': 'munutenn',\n        'MM': 'miz',\n        'dd': 'devezh'\n    };\n    return number + ' ' + mutation(format[key], number);\n}\nfunction specialMutationForYears(number) {\n    switch (lastNumber(number)) {\n        case 1:\n        case 3:\n        case 4:\n        case 5:\n        case 9:\n            return number + ' bloaz';\n        default:\n            return number + ' vloaz';\n    }\n}\nfunction lastNumber(number) {\n    if (number > 9) {\n        return lastNumber(number % 10);\n    }\n    return number;\n}\nfunction mutation(text, number) {\n    if (number === 2) {\n        return softMutation(text);\n    }\n    return text;\n}\nfunction softMutation(text) {\n    var mutationTable = {\n        'm': 'v',\n        'b': 'v',\n        'd': 'z'\n    };\n    if (mutationTable[text.charAt(0)] === undefined) {\n        return text;\n    }\n    return mutationTable[text.charAt(0)] + text.substring(1);\n}\n\nvar br = moment.defineLocale('br', {\n    months : 'Genver_C\\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),\n    monthsShort : 'Gen_C\\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n    weekdays : 'Sul_Lun_Meurzh_Merc\\'her_Yaou_Gwener_Sadorn'.split('_'),\n    weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n    weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'h[e]mm A',\n        LTS : 'h[e]mm:ss A',\n        L : 'DD/MM/YYYY',\n        LL : 'D [a viz] MMMM YYYY',\n        LLL : 'D [a viz] MMMM YYYY h[e]mm A',\n        LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'\n    },\n    calendar : {\n        sameDay : '[Hiziv da] LT',\n        nextDay : '[Warc\\'hoazh da] LT',\n        nextWeek : 'dddd [da] LT',\n        lastDay : '[Dec\\'h da] LT',\n        lastWeek : 'dddd [paset da] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'a-benn %s',\n        past : '%s \\'zo',\n        s : 'un nebeud segondennoù',\n        m : 'ur vunutenn',\n        mm : relativeTimeWithMutation,\n        h : 'un eur',\n        hh : '%d eur',\n        d : 'un devezh',\n        dd : relativeTimeWithMutation,\n        M : 'ur miz',\n        MM : relativeTimeWithMutation,\n        y : 'ur bloaz',\n        yy : specialMutationForYears\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(añ|vet)/,\n    ordinal : function (number) {\n        var output = (number === 1) ? 'añ' : 'vet';\n        return number + output;\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn br;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/br.js\n// module id = 75\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Bosnian [bs]\n//! author : Nedim Cholich : https://github.com/frontyard\n//! based on (hr) translation by Bojan Marković\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction translate(number, withoutSuffix, key) {\n    var result = number + ' ';\n    switch (key) {\n        case 'm':\n            return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n        case 'mm':\n            if (number === 1) {\n                result += 'minuta';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'minute';\n            } else {\n                result += 'minuta';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'jedan sat' : 'jednog sata';\n        case 'hh':\n            if (number === 1) {\n                result += 'sat';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'sata';\n            } else {\n                result += 'sati';\n            }\n            return result;\n        case 'dd':\n            if (number === 1) {\n                result += 'dan';\n            } else {\n                result += 'dana';\n            }\n            return result;\n        case 'MM':\n            if (number === 1) {\n                result += 'mjesec';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'mjeseca';\n            } else {\n                result += 'mjeseci';\n            }\n            return result;\n        case 'yy':\n            if (number === 1) {\n                result += 'godina';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'godine';\n            } else {\n                result += 'godina';\n            }\n            return result;\n    }\n}\n\nvar bs = moment.defineLocale('bs', {\n    months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),\n    monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n    weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n    weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D. MMMM YYYY',\n        LLL : 'D. MMMM YYYY H:mm',\n        LLLL : 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar : {\n        sameDay  : '[danas u] LT',\n        nextDay  : '[sutra u] LT',\n        nextWeek : function () {\n            switch (this.day()) {\n                case 0:\n                    return '[u] [nedjelju] [u] LT';\n                case 3:\n                    return '[u] [srijedu] [u] LT';\n                case 6:\n                    return '[u] [subotu] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[u] dddd [u] LT';\n            }\n        },\n        lastDay  : '[jučer u] LT',\n        lastWeek : function () {\n            switch (this.day()) {\n                case 0:\n                case 3:\n                    return '[prošlu] dddd [u] LT';\n                case 6:\n                    return '[prošle] [subote] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prošli] dddd [u] LT';\n            }\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'za %s',\n        past   : 'prije %s',\n        s      : 'par sekundi',\n        m      : translate,\n        mm     : translate,\n        h      : translate,\n        hh     : translate,\n        d      : 'dan',\n        dd     : translate,\n        M      : 'mjesec',\n        MM     : translate,\n        y      : 'godinu',\n        yy     : translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn bs;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/bs.js\n// module id = 76\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Catalan [ca]\n//! author : Juan G. Hurtado : https://github.com/juanghurtado\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar ca = moment.defineLocale('ca', {\n    months : {\n        standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n        format: 'de gener_de febrer_de març_d\\'abril_de maig_de juny_de juliol_d\\'agost_de setembre_d\\'octubre_de novembre_de desembre'.split('_'),\n        isFormat: /D[oD]?(\\s)+MMMM/\n    },\n    monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n    weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),\n    weekdaysMin : 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : '[el] D MMMM [de] YYYY',\n        ll : 'D MMM YYYY',\n        LLL : '[el] D MMMM [de] YYYY [a les] H:mm',\n        lll : 'D MMM YYYY, H:mm',\n        LLLL : '[el] dddd D MMMM [de] YYYY [a les] H:mm',\n        llll : 'ddd D MMM YYYY, H:mm'\n    },\n    calendar : {\n        sameDay : function () {\n            return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n        },\n        nextDay : function () {\n            return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n        },\n        nextWeek : function () {\n            return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n        },\n        lastDay : function () {\n            return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n        },\n        lastWeek : function () {\n            return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'd\\'aquí %s',\n        past : 'fa %s',\n        s : 'uns segons',\n        m : 'un minut',\n        mm : '%d minuts',\n        h : 'una hora',\n        hh : '%d hores',\n        d : 'un dia',\n        dd : '%d dies',\n        M : 'un mes',\n        MM : '%d mesos',\n        y : 'un any',\n        yy : '%d anys'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n    ordinal : function (number, period) {\n        var output = (number === 1) ? 'r' :\n            (number === 2) ? 'n' :\n            (number === 3) ? 'r' :\n            (number === 4) ? 't' : 'è';\n        if (period === 'w' || period === 'W') {\n            output = 'a';\n        }\n        return number + output;\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn ca;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ca.js\n// module id = 77\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');\nvar monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\nfunction plural(n) {\n    return (n > 1) && (n < 5) && (~~(n / 10) !== 1);\n}\nfunction translate(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n    switch (key) {\n        case 's':  // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n        case 'm':  // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'minuty' : 'minut');\n            } else {\n                return result + 'minutami';\n            }\n            break;\n        case 'h':  // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'hodiny' : 'hodin');\n            } else {\n                return result + 'hodinami';\n            }\n            break;\n        case 'd':  // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'dny' : 'dní');\n            } else {\n                return result + 'dny';\n            }\n            break;\n        case 'M':  // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'měsíce' : 'měsíců');\n            } else {\n                return result + 'měsíci';\n            }\n            break;\n        case 'y':  // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'roky' : 'let');\n            } else {\n                return result + 'lety';\n            }\n            break;\n    }\n}\n\nvar cs = moment.defineLocale('cs', {\n    months : months,\n    monthsShort : monthsShort,\n    monthsParse : (function (months, monthsShort) {\n        var i, _monthsParse = [];\n        for (i = 0; i < 12; i++) {\n            // use custom parser to solve problem with July (červenec)\n            _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n        }\n        return _monthsParse;\n    }(months, monthsShort)),\n    shortMonthsParse : (function (monthsShort) {\n        var i, _shortMonthsParse = [];\n        for (i = 0; i < 12; i++) {\n            _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n        }\n        return _shortMonthsParse;\n    }(monthsShort)),\n    longMonthsParse : (function (months) {\n        var i, _longMonthsParse = [];\n        for (i = 0; i < 12; i++) {\n            _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n        }\n        return _longMonthsParse;\n    }(months)),\n    weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n    weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),\n    weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),\n    longDateFormat : {\n        LT: 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D. MMMM YYYY',\n        LLL : 'D. MMMM YYYY H:mm',\n        LLLL : 'dddd D. MMMM YYYY H:mm',\n        l : 'D. M. YYYY'\n    },\n    calendar : {\n        sameDay: '[dnes v] LT',\n        nextDay: '[zítra v] LT',\n        nextWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[v neděli v] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [v] LT';\n                case 3:\n                    return '[ve středu v] LT';\n                case 4:\n                    return '[ve čtvrtek v] LT';\n                case 5:\n                    return '[v pátek v] LT';\n                case 6:\n                    return '[v sobotu v] LT';\n            }\n        },\n        lastDay: '[včera v] LT',\n        lastWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[minulou neděli v] LT';\n                case 1:\n                case 2:\n                    return '[minulé] dddd [v] LT';\n                case 3:\n                    return '[minulou středu v] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [v] LT';\n                case 6:\n                    return '[minulou sobotu v] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'za %s',\n        past : 'před %s',\n        s : translate,\n        m : translate,\n        mm : translate,\n        h : translate,\n        hh : translate,\n        d : translate,\n        dd : translate,\n        M : translate,\n        MM : translate,\n        y : translate,\n        yy : translate\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn cs;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/cs.js\n// module id = 78\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Chuvash [cv]\n//! author : Anatoly Mironov : https://github.com/mirontoli\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar cv = moment.defineLocale('cv', {\n    months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),\n    monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),\n    weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),\n    weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),\n    weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD-MM-YYYY',\n        LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',\n        LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n        LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'\n    },\n    calendar : {\n        sameDay: '[Паян] LT [сехетре]',\n        nextDay: '[Ыран] LT [сехетре]',\n        lastDay: '[Ӗнер] LT [сехетре]',\n        nextWeek: '[Ҫитес] dddd LT [сехетре]',\n        lastWeek: '[Иртнӗ] dddd LT [сехетре]',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : function (output) {\n            var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';\n            return output + affix;\n        },\n        past : '%s каялла',\n        s : 'пӗр-ик ҫеккунт',\n        m : 'пӗр минут',\n        mm : '%d минут',\n        h : 'пӗр сехет',\n        hh : '%d сехет',\n        d : 'пӗр кун',\n        dd : '%d кун',\n        M : 'пӗр уйӑх',\n        MM : '%d уйӑх',\n        y : 'пӗр ҫул',\n        yy : '%d ҫул'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-мӗш/,\n    ordinal : '%d-мӗш',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn cv;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/cv.js\n// module id = 79\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Welsh [cy]\n//! author : Robert Allen : https://github.com/robgallen\n//! author : https://github.com/ryangreaves\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar cy = moment.defineLocale('cy', {\n    months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),\n    monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),\n    weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),\n    weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),\n    weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),\n    weekdaysParseExact : true,\n    // time formats are the same as en-gb\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Heddiw am] LT',\n        nextDay: '[Yfory am] LT',\n        nextWeek: 'dddd [am] LT',\n        lastDay: '[Ddoe am] LT',\n        lastWeek: 'dddd [diwethaf am] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'mewn %s',\n        past: '%s yn ôl',\n        s: 'ychydig eiliadau',\n        m: 'munud',\n        mm: '%d munud',\n        h: 'awr',\n        hh: '%d awr',\n        d: 'diwrnod',\n        dd: '%d diwrnod',\n        M: 'mis',\n        MM: '%d mis',\n        y: 'blwyddyn',\n        yy: '%d flynedd'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,\n    // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n    ordinal: function (number) {\n        var b = number,\n            output = '',\n            lookup = [\n                '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed\n                'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed\n            ];\n        if (b > 20) {\n            if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n                output = 'fed'; // not 30ain, 70ain or 90ain\n            } else {\n                output = 'ain';\n            }\n        } else if (b > 0) {\n            output = lookup[b];\n        }\n        return number + output;\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn cy;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/cy.js\n// module id = 80\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Danish [da]\n//! author : Ulrik Nielsen : https://github.com/mrbase\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar da = moment.defineLocale('da', {\n    months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),\n    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n    weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n    weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),\n    weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D. MMMM YYYY',\n        LLL : 'D. MMMM YYYY HH:mm',\n        LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n    },\n    calendar : {\n        sameDay : '[i dag kl.] LT',\n        nextDay : '[i morgen kl.] LT',\n        nextWeek : 'på dddd [kl.] LT',\n        lastDay : '[i går kl.] LT',\n        lastWeek : '[i] dddd[s kl.] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'om %s',\n        past : '%s siden',\n        s : 'få sekunder',\n        m : 'et minut',\n        mm : '%d minutter',\n        h : 'en time',\n        hh : '%d timer',\n        d : 'en dag',\n        dd : '%d dage',\n        M : 'en måned',\n        MM : '%d måneder',\n        y : 'et år',\n        yy : '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn da;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/da.js\n// module id = 81\n// module chunks = 0","//! moment.js locale configuration\n//! locale : German (Austria) [de-at]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Martin Groller : https://github.com/MadMG\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n        'm': ['eine Minute', 'einer Minute'],\n        'h': ['eine Stunde', 'einer Stunde'],\n        'd': ['ein Tag', 'einem Tag'],\n        'dd': [number + ' Tage', number + ' Tagen'],\n        'M': ['ein Monat', 'einem Monat'],\n        'MM': [number + ' Monate', number + ' Monaten'],\n        'y': ['ein Jahr', 'einem Jahr'],\n        'yy': [number + ' Jahre', number + ' Jahren']\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nvar deAt = moment.defineLocale('de-at', {\n    months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n    monthsShort : 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D. MMMM YYYY',\n        LLL : 'D. MMMM YYYY HH:mm',\n        LLLL : 'dddd, D. MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[heute um] LT [Uhr]',\n        sameElse: 'L',\n        nextDay: '[morgen um] LT [Uhr]',\n        nextWeek: 'dddd [um] LT [Uhr]',\n        lastDay: '[gestern um] LT [Uhr]',\n        lastWeek: '[letzten] dddd [um] LT [Uhr]'\n    },\n    relativeTime : {\n        future : 'in %s',\n        past : 'vor %s',\n        s : 'ein paar Sekunden',\n        m : processRelativeTime,\n        mm : '%d Minuten',\n        h : processRelativeTime,\n        hh : '%d Stunden',\n        d : processRelativeTime,\n        dd : processRelativeTime,\n        M : processRelativeTime,\n        MM : processRelativeTime,\n        y : processRelativeTime,\n        yy : processRelativeTime\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn deAt;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/de-at.js\n// module id = 82\n// module chunks = 0","//! moment.js locale configuration\n//! locale : German (Switzerland) [de-ch]\n//! author : sschueller : https://github.com/sschueller\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n// based on: https://www.bk.admin.ch/dokumentation/sprachen/04915/05016/index.html?lang=de#\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n        'm': ['eine Minute', 'einer Minute'],\n        'h': ['eine Stunde', 'einer Stunde'],\n        'd': ['ein Tag', 'einem Tag'],\n        'dd': [number + ' Tage', number + ' Tagen'],\n        'M': ['ein Monat', 'einem Monat'],\n        'MM': [number + ' Monate', number + ' Monaten'],\n        'y': ['ein Jahr', 'einem Jahr'],\n        'yy': [number + ' Jahre', number + ' Jahren']\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nvar deCh = moment.defineLocale('de-ch', {\n    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n    monthsShort : 'Jan._Febr._März_April_Mai_Juni_Juli_Aug._Sept._Okt._Nov._Dez.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n    weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT: 'HH.mm',\n        LTS: 'HH.mm.ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D. MMMM YYYY',\n        LLL : 'D. MMMM YYYY HH.mm',\n        LLLL : 'dddd, D. MMMM YYYY HH.mm'\n    },\n    calendar : {\n        sameDay: '[heute um] LT [Uhr]',\n        sameElse: 'L',\n        nextDay: '[morgen um] LT [Uhr]',\n        nextWeek: 'dddd [um] LT [Uhr]',\n        lastDay: '[gestern um] LT [Uhr]',\n        lastWeek: '[letzten] dddd [um] LT [Uhr]'\n    },\n    relativeTime : {\n        future : 'in %s',\n        past : 'vor %s',\n        s : 'ein paar Sekunden',\n        m : processRelativeTime,\n        mm : '%d Minuten',\n        h : processRelativeTime,\n        hh : '%d Stunden',\n        d : processRelativeTime,\n        dd : processRelativeTime,\n        M : processRelativeTime,\n        MM : processRelativeTime,\n        y : processRelativeTime,\n        yy : processRelativeTime\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn deCh;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/de-ch.js\n// module id = 83\n// module chunks = 0","//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n        'm': ['eine Minute', 'einer Minute'],\n        'h': ['eine Stunde', 'einer Stunde'],\n        'd': ['ein Tag', 'einem Tag'],\n        'dd': [number + ' Tage', number + ' Tagen'],\n        'M': ['ein Monat', 'einem Monat'],\n        'MM': [number + ' Monate', number + ' Monaten'],\n        'y': ['ein Jahr', 'einem Jahr'],\n        'yy': [number + ' Jahre', number + ' Jahren']\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nvar de = moment.defineLocale('de', {\n    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n    monthsShort : 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D. MMMM YYYY',\n        LLL : 'D. MMMM YYYY HH:mm',\n        LLLL : 'dddd, D. MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[heute um] LT [Uhr]',\n        sameElse: 'L',\n        nextDay: '[morgen um] LT [Uhr]',\n        nextWeek: 'dddd [um] LT [Uhr]',\n        lastDay: '[gestern um] LT [Uhr]',\n        lastWeek: '[letzten] dddd [um] LT [Uhr]'\n    },\n    relativeTime : {\n        future : 'in %s',\n        past : 'vor %s',\n        s : 'ein paar Sekunden',\n        m : processRelativeTime,\n        mm : '%d Minuten',\n        h : processRelativeTime,\n        hh : '%d Stunden',\n        d : processRelativeTime,\n        dd : processRelativeTime,\n        M : processRelativeTime,\n        MM : processRelativeTime,\n        y : processRelativeTime,\n        yy : processRelativeTime\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn de;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/de.js\n// module id = 84\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Maldivian [dv]\n//! author : Jawish Hameed : https://github.com/jawish\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar months = [\n    'ޖެނުއަރީ',\n    'ފެބްރުއަރީ',\n    'މާރިޗު',\n    'އޭޕްރީލު',\n    'މޭ',\n    'ޖޫން',\n    'ޖުލައި',\n    'އޯގަސްޓު',\n    'ސެޕްޓެމްބަރު',\n    'އޮކްޓޯބަރު',\n    'ނޮވެމްބަރު',\n    'ޑިސެމްބަރު'\n];\nvar weekdays = [\n    'އާދިއްތަ',\n    'ހޯމަ',\n    'އަންގާރަ',\n    'ބުދަ',\n    'ބުރާސްފަތި',\n    'ހުކުރު',\n    'ހޮނިހިރު'\n];\n\nvar dv = moment.defineLocale('dv', {\n    months : months,\n    monthsShort : months,\n    weekdays : weekdays,\n    weekdaysShort : weekdays,\n    weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),\n    longDateFormat : {\n\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'D/M/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /މކ|މފ/,\n    isPM : function (input) {\n        return 'މފ' === input;\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'މކ';\n        } else {\n            return 'މފ';\n        }\n    },\n    calendar : {\n        sameDay : '[މިއަދު] LT',\n        nextDay : '[މާދަމާ] LT',\n        nextWeek : 'dddd LT',\n        lastDay : '[އިއްޔެ] LT',\n        lastWeek : '[ފާއިތުވި] dddd LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'ތެރޭގައި %s',\n        past : 'ކުރިން %s',\n        s : 'ސިކުންތުކޮޅެއް',\n        m : 'މިނިޓެއް',\n        mm : 'މިނިޓު %d',\n        h : 'ގަޑިއިރެއް',\n        hh : 'ގަޑިއިރު %d',\n        d : 'ދުވަހެއް',\n        dd : 'ދުވަސް %d',\n        M : 'މަހެއް',\n        MM : 'މަސް %d',\n        y : 'އަހަރެއް',\n        yy : 'އަހަރު %d'\n    },\n    preparse: function (string) {\n        return string.replace(/،/g, ',');\n    },\n    postformat: function (string) {\n        return string.replace(/,/g, '،');\n    },\n    week : {\n        dow : 7,  // Sunday is the first day of the week.\n        doy : 12  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn dv;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/dv.js\n// module id = 85\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Greek [el]\n//! author : Aggelos Karalias : https://github.com/mehiel\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\nfunction isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n}\n\n\nvar el = moment.defineLocale('el', {\n    monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),\n    monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),\n    months : function (momentToFormat, format) {\n        if (!momentToFormat) {\n            return this._monthsNominativeEl;\n        } else if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'\n            return this._monthsGenitiveEl[momentToFormat.month()];\n        } else {\n            return this._monthsNominativeEl[momentToFormat.month()];\n        }\n    },\n    monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n    weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),\n    weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n    weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n    meridiem : function (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'μμ' : 'ΜΜ';\n        } else {\n            return isLower ? 'πμ' : 'ΠΜ';\n        }\n    },\n    isPM : function (input) {\n        return ((input + '').toLowerCase()[0] === 'μ');\n    },\n    meridiemParse : /[ΠΜ]\\.?Μ?\\.?/i,\n    longDateFormat : {\n        LT : 'h:mm A',\n        LTS : 'h:mm:ss A',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY h:mm A',\n        LLLL : 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendarEl : {\n        sameDay : '[Σήμερα {}] LT',\n        nextDay : '[Αύριο {}] LT',\n        nextWeek : 'dddd [{}] LT',\n        lastDay : '[Χθες {}] LT',\n        lastWeek : function () {\n            switch (this.day()) {\n                case 6:\n                    return '[το προηγούμενο] dddd [{}] LT';\n                default:\n                    return '[την προηγούμενη] dddd [{}] LT';\n            }\n        },\n        sameElse : 'L'\n    },\n    calendar : function (key, mom) {\n        var output = this._calendarEl[key],\n            hours = mom && mom.hours();\n        if (isFunction(output)) {\n            output = output.apply(mom);\n        }\n        return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));\n    },\n    relativeTime : {\n        future : 'σε %s',\n        past : '%s πριν',\n        s : 'λίγα δευτερόλεπτα',\n        m : 'ένα λεπτό',\n        mm : '%d λεπτά',\n        h : 'μία ώρα',\n        hh : '%d ώρες',\n        d : 'μία μέρα',\n        dd : '%d μέρες',\n        M : 'ένας μήνας',\n        MM : '%d μήνες',\n        y : 'ένας χρόνος',\n        yy : '%d χρόνια'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}η/,\n    ordinal: '%dη',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4st is the first week of the year.\n    }\n});\n\nreturn el;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/el.js\n// module id = 86\n// module chunks = 0","//! moment.js locale configuration\n//! locale : English (Australia) [en-au]\n//! author : Jared Morse : https://github.com/jarcoal\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar enAu = moment.defineLocale('en-au', {\n    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat : {\n        LT : 'h:mm A',\n        LTS : 'h:mm:ss A',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY h:mm A',\n        LLLL : 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendar : {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'in %s',\n        past : '%s ago',\n        s : 'a few seconds',\n        m : 'a minute',\n        mm : '%d minutes',\n        h : 'an hour',\n        hh : '%d hours',\n        d : 'a day',\n        dd : '%d days',\n        M : 'a month',\n        MM : '%d months',\n        y : 'a year',\n        yy : '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (~~(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn enAu;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/en-au.js\n// module id = 87\n// module chunks = 0","//! moment.js locale configuration\n//! locale : English (Canada) [en-ca]\n//! author : Jonathan Abourbih : https://github.com/jonbca\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar enCa = moment.defineLocale('en-ca', {\n    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat : {\n        LT : 'h:mm A',\n        LTS : 'h:mm:ss A',\n        L : 'YYYY-MM-DD',\n        LL : 'MMMM D, YYYY',\n        LLL : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    },\n    calendar : {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'in %s',\n        past : '%s ago',\n        s : 'a few seconds',\n        m : 'a minute',\n        mm : '%d minutes',\n        h : 'an hour',\n        hh : '%d hours',\n        d : 'a day',\n        dd : '%d days',\n        M : 'a month',\n        MM : '%d months',\n        y : 'a year',\n        yy : '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (~~(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    }\n});\n\nreturn enCa;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/en-ca.js\n// module id = 88\n// module chunks = 0","//! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar enGb = moment.defineLocale('en-gb', {\n    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'in %s',\n        past : '%s ago',\n        s : 'a few seconds',\n        m : 'a minute',\n        mm : '%d minutes',\n        h : 'an hour',\n        hh : '%d hours',\n        d : 'a day',\n        dd : '%d days',\n        M : 'a month',\n        MM : '%d months',\n        y : 'a year',\n        yy : '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (~~(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn enGb;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/en-gb.js\n// module id = 89\n// module chunks = 0","//! moment.js locale configuration\n//! locale : English (Ireland) [en-ie]\n//! author : Chris Cartlidge : https://github.com/chriscartlidge\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar enIe = moment.defineLocale('en-ie', {\n    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD-MM-YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'in %s',\n        past : '%s ago',\n        s : 'a few seconds',\n        m : 'a minute',\n        mm : '%d minutes',\n        h : 'an hour',\n        hh : '%d hours',\n        d : 'a day',\n        dd : '%d days',\n        M : 'a month',\n        MM : '%d months',\n        y : 'a year',\n        yy : '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (~~(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn enIe;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/en-ie.js\n// module id = 90\n// module chunks = 0","//! moment.js locale configuration\n//! locale : English (New Zealand) [en-nz]\n//! author : Luke McGregor : https://github.com/lukemcgregor\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar enNz = moment.defineLocale('en-nz', {\n    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat : {\n        LT : 'h:mm A',\n        LTS : 'h:mm:ss A',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY h:mm A',\n        LLLL : 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendar : {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'in %s',\n        past : '%s ago',\n        s : 'a few seconds',\n        m : 'a minute',\n        mm : '%d minutes',\n        h : 'an hour',\n        hh : '%d hours',\n        d : 'a day',\n        dd : '%d days',\n        M : 'a month',\n        MM : '%d months',\n        y : 'a year',\n        yy : '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (~~(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn enNz;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/en-nz.js\n// module id = 91\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Esperanto [eo]\n//! author : Colin Dean : https://github.com/colindean\n//! author : Mia Nordentoft Imperatori : https://github.com/miestasmia\n//! comment : miestasmia corrected the translation by colindean\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar eo = moment.defineLocale('eo', {\n    months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),\n    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),\n    weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),\n    weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),\n    weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'YYYY-MM-DD',\n        LL : 'D[-a de] MMMM, YYYY',\n        LLL : 'D[-a de] MMMM, YYYY HH:mm',\n        LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'\n    },\n    meridiemParse: /[ap]\\.t\\.m/i,\n    isPM: function (input) {\n        return input.charAt(0).toLowerCase() === 'p';\n    },\n    meridiem : function (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'p.t.m.' : 'P.T.M.';\n        } else {\n            return isLower ? 'a.t.m.' : 'A.T.M.';\n        }\n    },\n    calendar : {\n        sameDay : '[Hodiaŭ je] LT',\n        nextDay : '[Morgaŭ je] LT',\n        nextWeek : 'dddd [je] LT',\n        lastDay : '[Hieraŭ je] LT',\n        lastWeek : '[pasinta] dddd [je] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'post %s',\n        past : 'antaŭ %s',\n        s : 'sekundoj',\n        m : 'minuto',\n        mm : '%d minutoj',\n        h : 'horo',\n        hh : '%d horoj',\n        d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo\n        dd : '%d tagoj',\n        M : 'monato',\n        MM : '%d monatoj',\n        y : 'jaro',\n        yy : '%d jaroj'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}a/,\n    ordinal : '%da',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn eo;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/eo.js\n// module id = 92\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nvar monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nvar esDo = moment.defineLocale('es-do', {\n    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort : function (m, format) {\n        if (!m) {\n            return monthsShortDot;\n        } else if (/-MMM-/.test(format)) {\n            return monthsShort[m.month()];\n        } else {\n            return monthsShortDot[m.month()];\n        }\n    },\n    monthsParseExact : true,\n    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'h:mm A',\n        LTS : 'h:mm:ss A',\n        L : 'DD/MM/YYYY',\n        LL : 'D [de] MMMM [de] YYYY',\n        LLL : 'D [de] MMMM [de] YYYY h:mm A',\n        LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'\n    },\n    calendar : {\n        sameDay : function () {\n            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        nextDay : function () {\n            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        nextWeek : function () {\n            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        lastDay : function () {\n            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        lastWeek : function () {\n            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'en %s',\n        past : 'hace %s',\n        s : 'unos segundos',\n        m : 'un minuto',\n        mm : '%d minutos',\n        h : 'una hora',\n        hh : '%d horas',\n        d : 'un día',\n        dd : '%d días',\n        M : 'un mes',\n        MM : '%d meses',\n        y : 'un año',\n        yy : '%d años'\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}º/,\n    ordinal : '%dº',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn esDo;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/es-do.js\n// module id = 93\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\nvar monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n\nvar es = moment.defineLocale('es', {\n    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    monthsShort : function (m, format) {\n        if (!m) {\n            return monthsShortDot;\n        } else if (/-MMM-/.test(format)) {\n            return monthsShort[m.month()];\n        } else {\n            return monthsShortDot[m.month()];\n        }\n    },\n    monthsParseExact : true,\n    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D [de] MMMM [de] YYYY',\n        LLL : 'D [de] MMMM [de] YYYY H:mm',\n        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar : {\n        sameDay : function () {\n            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        nextDay : function () {\n            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        nextWeek : function () {\n            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        lastDay : function () {\n            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        lastWeek : function () {\n            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'en %s',\n        past : 'hace %s',\n        s : 'unos segundos',\n        m : 'un minuto',\n        mm : '%d minutos',\n        h : 'una hora',\n        hh : '%d horas',\n        d : 'un día',\n        dd : '%d días',\n        M : 'un mes',\n        MM : '%d meses',\n        y : 'un año',\n        yy : '%d años'\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}º/,\n    ordinal : '%dº',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn es;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/es.js\n// module id = 94\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Henry Kehlmann : https://github.com/madhenry\n//! improvements : Illimar Tambek : https://github.com/ragulka\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n        's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n        'm' : ['ühe minuti', 'üks minut'],\n        'mm': [number + ' minuti', number + ' minutit'],\n        'h' : ['ühe tunni', 'tund aega', 'üks tund'],\n        'hh': [number + ' tunni', number + ' tundi'],\n        'd' : ['ühe päeva', 'üks päev'],\n        'M' : ['kuu aja', 'kuu aega', 'üks kuu'],\n        'MM': [number + ' kuu', number + ' kuud'],\n        'y' : ['ühe aasta', 'aasta', 'üks aasta'],\n        'yy': [number + ' aasta', number + ' aastat']\n    };\n    if (withoutSuffix) {\n        return format[key][2] ? format[key][2] : format[key][1];\n    }\n    return isFuture ? format[key][0] : format[key][1];\n}\n\nvar et = moment.defineLocale('et', {\n    months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n    monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n    weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n    weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),\n    weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),\n    longDateFormat : {\n        LT   : 'H:mm',\n        LTS : 'H:mm:ss',\n        L    : 'DD.MM.YYYY',\n        LL   : 'D. MMMM YYYY',\n        LLL  : 'D. MMMM YYYY H:mm',\n        LLLL : 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar : {\n        sameDay  : '[Täna,] LT',\n        nextDay  : '[Homme,] LT',\n        nextWeek : '[Järgmine] dddd LT',\n        lastDay  : '[Eile,] LT',\n        lastWeek : '[Eelmine] dddd LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s pärast',\n        past   : '%s tagasi',\n        s      : processRelativeTime,\n        m      : processRelativeTime,\n        mm     : processRelativeTime,\n        h      : processRelativeTime,\n        hh     : processRelativeTime,\n        d      : processRelativeTime,\n        dd     : '%d päeva',\n        M      : processRelativeTime,\n        MM     : processRelativeTime,\n        y      : processRelativeTime,\n        yy     : processRelativeTime\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn et;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/et.js\n// module id = 95\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Basque [eu]\n//! author : Eneko Illarramendi : https://github.com/eillarra\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar eu = moment.defineLocale('eu', {\n    months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),\n    monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),\n    weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),\n    weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'YYYY-MM-DD',\n        LL : 'YYYY[ko] MMMM[ren] D[a]',\n        LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',\n        LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',\n        l : 'YYYY-M-D',\n        ll : 'YYYY[ko] MMM D[a]',\n        lll : 'YYYY[ko] MMM D[a] HH:mm',\n        llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'\n    },\n    calendar : {\n        sameDay : '[gaur] LT[etan]',\n        nextDay : '[bihar] LT[etan]',\n        nextWeek : 'dddd LT[etan]',\n        lastDay : '[atzo] LT[etan]',\n        lastWeek : '[aurreko] dddd LT[etan]',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s barru',\n        past : 'duela %s',\n        s : 'segundo batzuk',\n        m : 'minutu bat',\n        mm : '%d minutu',\n        h : 'ordu bat',\n        hh : '%d ordu',\n        d : 'egun bat',\n        dd : '%d egun',\n        M : 'hilabete bat',\n        MM : '%d hilabete',\n        y : 'urte bat',\n        yy : '%d urte'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn eu;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/eu.js\n// module id = 96\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Persian [fa]\n//! author : Ebrahim Byagowi : https://github.com/ebraminio\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar symbolMap = {\n    '1': '۱',\n    '2': '۲',\n    '3': '۳',\n    '4': '۴',\n    '5': '۵',\n    '6': '۶',\n    '7': '۷',\n    '8': '۸',\n    '9': '۹',\n    '0': '۰'\n};\nvar numberMap = {\n    '۱': '1',\n    '۲': '2',\n    '۳': '3',\n    '۴': '4',\n    '۵': '5',\n    '۶': '6',\n    '۷': '7',\n    '۸': '8',\n    '۹': '9',\n    '۰': '0'\n};\n\nvar fa = moment.defineLocale('fa', {\n    months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n    monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),\n    weekdays : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n    weekdaysShort : 'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split('_'),\n    weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /قبل از ظهر|بعد از ظهر/,\n    isPM: function (input) {\n        return /بعد از ظهر/.test(input);\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'قبل از ظهر';\n        } else {\n            return 'بعد از ظهر';\n        }\n    },\n    calendar : {\n        sameDay : '[امروز ساعت] LT',\n        nextDay : '[فردا ساعت] LT',\n        nextWeek : 'dddd [ساعت] LT',\n        lastDay : '[دیروز ساعت] LT',\n        lastWeek : 'dddd [پیش] [ساعت] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'در %s',\n        past : '%s پیش',\n        s : 'چند ثانیه',\n        m : 'یک دقیقه',\n        mm : '%d دقیقه',\n        h : 'یک ساعت',\n        hh : '%d ساعت',\n        d : 'یک روز',\n        dd : '%d روز',\n        M : 'یک ماه',\n        MM : '%d ماه',\n        y : 'یک سال',\n        yy : '%d سال'\n    },\n    preparse: function (string) {\n        return string.replace(/[۰-۹]/g, function (match) {\n            return numberMap[match];\n        }).replace(/،/g, ',');\n    },\n    postformat: function (string) {\n        return string.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        }).replace(/,/g, '،');\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}م/,\n    ordinal : '%dم',\n    week : {\n        dow : 6, // Saturday is the first day of the week.\n        doy : 12 // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn fa;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/fa.js\n// module id = 97\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Finnish [fi]\n//! author : Tarmo Aidantausta : https://github.com/bleadof\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');\nvar numbersFuture = [\n        'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n        numbersPast[7], numbersPast[8], numbersPast[9]\n    ];\nfunction translate(number, withoutSuffix, key, isFuture) {\n    var result = '';\n    switch (key) {\n        case 's':\n            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n        case 'm':\n            return isFuture ? 'minuutin' : 'minuutti';\n        case 'mm':\n            result = isFuture ? 'minuutin' : 'minuuttia';\n            break;\n        case 'h':\n            return isFuture ? 'tunnin' : 'tunti';\n        case 'hh':\n            result = isFuture ? 'tunnin' : 'tuntia';\n            break;\n        case 'd':\n            return isFuture ? 'päivän' : 'päivä';\n        case 'dd':\n            result = isFuture ? 'päivän' : 'päivää';\n            break;\n        case 'M':\n            return isFuture ? 'kuukauden' : 'kuukausi';\n        case 'MM':\n            result = isFuture ? 'kuukauden' : 'kuukautta';\n            break;\n        case 'y':\n            return isFuture ? 'vuoden' : 'vuosi';\n        case 'yy':\n            result = isFuture ? 'vuoden' : 'vuotta';\n            break;\n    }\n    result = verbalNumber(number, isFuture) + ' ' + result;\n    return result;\n}\nfunction verbalNumber(number, isFuture) {\n    return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;\n}\n\nvar fi = moment.defineLocale('fi', {\n    months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n    monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n    weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n    weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),\n    weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),\n    longDateFormat : {\n        LT : 'HH.mm',\n        LTS : 'HH.mm.ss',\n        L : 'DD.MM.YYYY',\n        LL : 'Do MMMM[ta] YYYY',\n        LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',\n        LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n        l : 'D.M.YYYY',\n        ll : 'Do MMM YYYY',\n        lll : 'Do MMM YYYY, [klo] HH.mm',\n        llll : 'ddd, Do MMM YYYY, [klo] HH.mm'\n    },\n    calendar : {\n        sameDay : '[tänään] [klo] LT',\n        nextDay : '[huomenna] [klo] LT',\n        nextWeek : 'dddd [klo] LT',\n        lastDay : '[eilen] [klo] LT',\n        lastWeek : '[viime] dddd[na] [klo] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s päästä',\n        past : '%s sitten',\n        s : translate,\n        m : translate,\n        mm : translate,\n        h : translate,\n        hh : translate,\n        d : translate,\n        dd : translate,\n        M : translate,\n        MM : translate,\n        y : translate,\n        yy : translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn fi;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/fi.js\n// module id = 98\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Faroese [fo]\n//! author : Ragnar Johannesen : https://github.com/ragnar123\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar fo = moment.defineLocale('fo', {\n    months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n    monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n    weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),\n    weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),\n    weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D. MMMM, YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[Í dag kl.] LT',\n        nextDay : '[Í morgin kl.] LT',\n        nextWeek : 'dddd [kl.] LT',\n        lastDay : '[Í gjár kl.] LT',\n        lastWeek : '[síðstu] dddd [kl] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'um %s',\n        past : '%s síðani',\n        s : 'fá sekund',\n        m : 'ein minutt',\n        mm : '%d minuttir',\n        h : 'ein tími',\n        hh : '%d tímar',\n        d : 'ein dagur',\n        dd : '%d dagar',\n        M : 'ein mánaði',\n        MM : '%d mánaðir',\n        y : 'eitt ár',\n        yy : '%d ár'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn fo;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/fo.js\n// module id = 99\n// module chunks = 0","//! moment.js locale configuration\n//! locale : French (Canada) [fr-ca]\n//! author : Jonathan Abourbih : https://github.com/jonbca\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar frCa = moment.defineLocale('fr-ca', {\n    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n    weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'YYYY-MM-DD',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[Aujourd’hui à] LT',\n        nextDay : '[Demain à] LT',\n        nextWeek : 'dddd [à] LT',\n        lastDay : '[Hier à] LT',\n        lastWeek : 'dddd [dernier à] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'dans %s',\n        past : 'il y a %s',\n        s : 'quelques secondes',\n        m : 'une minute',\n        mm : '%d minutes',\n        h : 'une heure',\n        hh : '%d heures',\n        d : 'un jour',\n        dd : '%d jours',\n        M : 'un mois',\n        MM : '%d mois',\n        y : 'un an',\n        yy : '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal : function (number, period) {\n        switch (period) {\n            // Words with masculine grammatical gender: mois, trimestre, jour\n            default:\n            case 'M':\n            case 'Q':\n            case 'D':\n            case 'DDD':\n            case 'd':\n                return number + (number === 1 ? 'er' : 'e');\n\n            // Words with feminine grammatical gender: semaine\n            case 'w':\n            case 'W':\n                return number + (number === 1 ? 're' : 'e');\n        }\n    }\n});\n\nreturn frCa;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/fr-ca.js\n// module id = 100\n// module chunks = 0","//! moment.js locale configuration\n//! locale : French (Switzerland) [fr-ch]\n//! author : Gaspard Bucher : https://github.com/gaspard\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar frCh = moment.defineLocale('fr-ch', {\n    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n    weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[Aujourd’hui à] LT',\n        nextDay : '[Demain à] LT',\n        nextWeek : 'dddd [à] LT',\n        lastDay : '[Hier à] LT',\n        lastWeek : 'dddd [dernier à] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'dans %s',\n        past : 'il y a %s',\n        s : 'quelques secondes',\n        m : 'une minute',\n        mm : '%d minutes',\n        h : 'une heure',\n        hh : '%d heures',\n        d : 'un jour',\n        dd : '%d jours',\n        M : 'un mois',\n        MM : '%d mois',\n        y : 'un an',\n        yy : '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n    ordinal : function (number, period) {\n        switch (period) {\n            // Words with masculine grammatical gender: mois, trimestre, jour\n            default:\n            case 'M':\n            case 'Q':\n            case 'D':\n            case 'DDD':\n            case 'd':\n                return number + (number === 1 ? 'er' : 'e');\n\n            // Words with feminine grammatical gender: semaine\n            case 'w':\n            case 'W':\n                return number + (number === 1 ? 're' : 'e');\n        }\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn frCh;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/fr-ch.js\n// module id = 101\n// module chunks = 0","//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar fr = moment.defineLocale('fr', {\n    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n    weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[Aujourd’hui à] LT',\n        nextDay : '[Demain à] LT',\n        nextWeek : 'dddd [à] LT',\n        lastDay : '[Hier à] LT',\n        lastWeek : 'dddd [dernier à] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'dans %s',\n        past : 'il y a %s',\n        s : 'quelques secondes',\n        m : 'une minute',\n        mm : '%d minutes',\n        h : 'une heure',\n        hh : '%d heures',\n        d : 'un jour',\n        dd : '%d jours',\n        M : 'un mois',\n        MM : '%d mois',\n        y : 'un an',\n        yy : '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n    ordinal : function (number, period) {\n        switch (period) {\n            // TODO: Return 'e' when day of month > 1. Move this case inside\n            // block for masculine words below.\n            // See https://github.com/moment/moment/issues/3375\n            case 'D':\n                return number + (number === 1 ? 'er' : '');\n\n            // Words with masculine grammatical gender: mois, trimestre, jour\n            default:\n            case 'M':\n            case 'Q':\n            case 'DDD':\n            case 'd':\n                return number + (number === 1 ? 'er' : 'e');\n\n            // Words with feminine grammatical gender: semaine\n            case 'w':\n            case 'W':\n                return number + (number === 1 ? 're' : 'e');\n        }\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn fr;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/fr.js\n// module id = 102\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Frisian [fy]\n//! author : Robin van der Vliet : https://github.com/robin0van0der0v\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_');\nvar monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');\n\nvar fy = moment.defineLocale('fy', {\n    months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),\n    monthsShort : function (m, format) {\n        if (!m) {\n            return monthsShortWithDots;\n        } else if (/-MMM-/.test(format)) {\n            return monthsShortWithoutDots[m.month()];\n        } else {\n            return monthsShortWithDots[m.month()];\n        }\n    },\n    monthsParseExact : true,\n    weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),\n    weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),\n    weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD-MM-YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[hjoed om] LT',\n        nextDay: '[moarn om] LT',\n        nextWeek: 'dddd [om] LT',\n        lastDay: '[juster om] LT',\n        lastWeek: '[ôfrûne] dddd [om] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'oer %s',\n        past : '%s lyn',\n        s : 'in pear sekonden',\n        m : 'ien minút',\n        mm : '%d minuten',\n        h : 'ien oere',\n        hh : '%d oeren',\n        d : 'ien dei',\n        dd : '%d dagen',\n        M : 'ien moanne',\n        MM : '%d moannen',\n        y : 'ien jier',\n        yy : '%d jierren'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    ordinal : function (number) {\n        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn fy;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/fy.js\n// module id = 103\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Scottish Gaelic [gd]\n//! author : Jon Ashdown : https://github.com/jonashdown\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar months = [\n    'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'\n];\n\nvar monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];\n\nvar weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];\n\nvar weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];\n\nvar weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];\n\nvar gd = moment.defineLocale('gd', {\n    months : months,\n    monthsShort : monthsShort,\n    monthsParseExact : true,\n    weekdays : weekdays,\n    weekdaysShort : weekdaysShort,\n    weekdaysMin : weekdaysMin,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[An-diugh aig] LT',\n        nextDay : '[A-màireach aig] LT',\n        nextWeek : 'dddd [aig] LT',\n        lastDay : '[An-dè aig] LT',\n        lastWeek : 'dddd [seo chaidh] [aig] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'ann an %s',\n        past : 'bho chionn %s',\n        s : 'beagan diogan',\n        m : 'mionaid',\n        mm : '%d mionaidean',\n        h : 'uair',\n        hh : '%d uairean',\n        d : 'latha',\n        dd : '%d latha',\n        M : 'mìos',\n        MM : '%d mìosan',\n        y : 'bliadhna',\n        yy : '%d bliadhna'\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}(d|na|mh)/,\n    ordinal : function (number) {\n        var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n        return number + output;\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn gd;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/gd.js\n// module id = 104\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : Juan G. Hurtado : https://github.com/juanghurtado\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar gl = moment.defineLocale('gl', {\n    months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n    monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n    weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n    weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D [de] MMMM [de] YYYY',\n        LLL : 'D [de] MMMM [de] YYYY H:mm',\n        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar : {\n        sameDay : function () {\n            return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n        },\n        nextDay : function () {\n            return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';\n        },\n        nextWeek : function () {\n            return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n        },\n        lastDay : function () {\n            return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';\n        },\n        lastWeek : function () {\n            return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : function (str) {\n            if (str.indexOf('un') === 0) {\n                return 'n' + str;\n            }\n            return 'en ' + str;\n        },\n        past : 'hai %s',\n        s : 'uns segundos',\n        m : 'un minuto',\n        mm : '%d minutos',\n        h : 'unha hora',\n        hh : '%d horas',\n        d : 'un día',\n        dd : '%d días',\n        M : 'un mes',\n        MM : '%d meses',\n        y : 'un ano',\n        yy : '%d anos'\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}º/,\n    ordinal : '%dº',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn gl;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/gl.js\n// module id = 105\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Konkani Latin script [gom-latn]\n//! author : The Discoverer : https://github.com/WikiDiscoverer\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n        's': ['thodde secondanim', 'thodde second'],\n        'm': ['eka mintan', 'ek minute'],\n        'mm': [number + ' mintanim', number + ' mintam'],\n        'h': ['eka horan', 'ek hor'],\n        'hh': [number + ' horanim', number + ' hor'],\n        'd': ['eka disan', 'ek dis'],\n        'dd': [number + ' disanim', number + ' dis'],\n        'M': ['eka mhoinean', 'ek mhoino'],\n        'MM': [number + ' mhoineanim', number + ' mhoine'],\n        'y': ['eka vorsan', 'ek voros'],\n        'yy': [number + ' vorsanim', number + ' vorsam']\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n}\n\nvar gomLatn = moment.defineLocale('gom-latn', {\n    months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),\n    monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\\'var'.split('_'),\n    weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),\n    weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'A h:mm [vazta]',\n        LTS : 'A h:mm:ss [vazta]',\n        L : 'DD-MM-YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY A h:mm [vazta]',\n        LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',\n        llll: 'ddd, D MMM YYYY, A h:mm [vazta]'\n    },\n    calendar : {\n        sameDay: '[Aiz] LT',\n        nextDay: '[Faleam] LT',\n        nextWeek: '[Ieta to] dddd[,] LT',\n        lastDay: '[Kal] LT',\n        lastWeek: '[Fatlo] dddd[,] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : '%s',\n        past : '%s adim',\n        s : processRelativeTime,\n        m : processRelativeTime,\n        mm : processRelativeTime,\n        h : processRelativeTime,\n        hh : processRelativeTime,\n        d : processRelativeTime,\n        dd : processRelativeTime,\n        M : processRelativeTime,\n        MM : processRelativeTime,\n        y : processRelativeTime,\n        yy : processRelativeTime\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}(er)/,\n    ordinal : function (number, period) {\n        switch (period) {\n            // the ordinal 'er' only applies to day of the month\n            case 'D':\n                return number + 'er';\n            default:\n            case 'M':\n            case 'Q':\n            case 'DDD':\n            case 'd':\n            case 'w':\n            case 'W':\n                return number;\n        }\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    },\n    meridiemParse: /rati|sokalli|donparam|sanje/,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'rati') {\n            return hour < 4 ? hour : hour + 12;\n        } else if (meridiem === 'sokalli') {\n            return hour;\n        } else if (meridiem === 'donparam') {\n            return hour > 12 ? hour : hour + 12;\n        } else if (meridiem === 'sanje') {\n            return hour + 12;\n        }\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'rati';\n        } else if (hour < 12) {\n            return 'sokalli';\n        } else if (hour < 16) {\n            return 'donparam';\n        } else if (hour < 20) {\n            return 'sanje';\n        } else {\n            return 'rati';\n        }\n    }\n});\n\nreturn gomLatn;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/gom-latn.js\n// module id = 106\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar he = moment.defineLocale('he', {\n    months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n    monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n    weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n    weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n    weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D [ב]MMMM YYYY',\n        LLL : 'D [ב]MMMM YYYY HH:mm',\n        LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',\n        l : 'D/M/YYYY',\n        ll : 'D MMM YYYY',\n        lll : 'D MMM YYYY HH:mm',\n        llll : 'ddd, D MMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[היום ב־]LT',\n        nextDay : '[מחר ב־]LT',\n        nextWeek : 'dddd [בשעה] LT',\n        lastDay : '[אתמול ב־]LT',\n        lastWeek : '[ביום] dddd [האחרון בשעה] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'בעוד %s',\n        past : 'לפני %s',\n        s : 'מספר שניות',\n        m : 'דקה',\n        mm : '%d דקות',\n        h : 'שעה',\n        hh : function (number) {\n            if (number === 2) {\n                return 'שעתיים';\n            }\n            return number + ' שעות';\n        },\n        d : 'יום',\n        dd : function (number) {\n            if (number === 2) {\n                return 'יומיים';\n            }\n            return number + ' ימים';\n        },\n        M : 'חודש',\n        MM : function (number) {\n            if (number === 2) {\n                return 'חודשיים';\n            }\n            return number + ' חודשים';\n        },\n        y : 'שנה',\n        yy : function (number) {\n            if (number === 2) {\n                return 'שנתיים';\n            } else if (number % 10 === 0 && number !== 10) {\n                return number + ' שנה';\n            }\n            return number + ' שנים';\n        }\n    },\n    meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n    isPM : function (input) {\n        return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 5) {\n            return 'לפנות בוקר';\n        } else if (hour < 10) {\n            return 'בבוקר';\n        } else if (hour < 12) {\n            return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n        } else if (hour < 18) {\n            return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n        } else {\n            return 'בערב';\n        }\n    }\n});\n\nreturn he;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/he.js\n// module id = 107\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar symbolMap = {\n    '1': '१',\n    '2': '२',\n    '3': '३',\n    '4': '४',\n    '5': '५',\n    '6': '६',\n    '7': '७',\n    '8': '८',\n    '9': '९',\n    '0': '०'\n};\nvar numberMap = {\n    '१': '1',\n    '२': '2',\n    '३': '3',\n    '४': '4',\n    '५': '5',\n    '६': '6',\n    '७': '7',\n    '८': '8',\n    '९': '9',\n    '०': '0'\n};\n\nvar hi = moment.defineLocale('hi', {\n    months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n    monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n    monthsParseExact: true,\n    weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n    weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n    weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n    longDateFormat : {\n        LT : 'A h:mm बजे',\n        LTS : 'A h:mm:ss बजे',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY, A h:mm बजे',\n        LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'\n    },\n    calendar : {\n        sameDay : '[आज] LT',\n        nextDay : '[कल] LT',\n        nextWeek : 'dddd, LT',\n        lastDay : '[कल] LT',\n        lastWeek : '[पिछले] dddd, LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s में',\n        past : '%s पहले',\n        s : 'कुछ ही क्षण',\n        m : 'एक मिनट',\n        mm : '%d मिनट',\n        h : 'एक घंटा',\n        hh : '%d घंटे',\n        d : 'एक दिन',\n        dd : '%d दिन',\n        M : 'एक महीने',\n        MM : '%d महीने',\n        y : 'एक वर्ष',\n        yy : '%d वर्ष'\n    },\n    preparse: function (string) {\n        return string.replace(/[१२३४५६७८९०]/g, function (match) {\n            return numberMap[match];\n        });\n    },\n    postformat: function (string) {\n        return string.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        });\n    },\n    // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n    meridiemParse: /रात|सुबह|दोपहर|शाम/,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'रात') {\n            return hour < 4 ? hour : hour + 12;\n        } else if (meridiem === 'सुबह') {\n            return hour;\n        } else if (meridiem === 'दोपहर') {\n            return hour >= 10 ? hour : hour + 12;\n        } else if (meridiem === 'शाम') {\n            return hour + 12;\n        }\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'रात';\n        } else if (hour < 10) {\n            return 'सुबह';\n        } else if (hour < 17) {\n            return 'दोपहर';\n        } else if (hour < 20) {\n            return 'शाम';\n        } else {\n            return 'रात';\n        }\n    },\n    week : {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn hi;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/hi.js\n// module id = 108\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Croatian [hr]\n//! author : Bojan Marković : https://github.com/bmarkovic\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction translate(number, withoutSuffix, key) {\n    var result = number + ' ';\n    switch (key) {\n        case 'm':\n            return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n        case 'mm':\n            if (number === 1) {\n                result += 'minuta';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'minute';\n            } else {\n                result += 'minuta';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'jedan sat' : 'jednog sata';\n        case 'hh':\n            if (number === 1) {\n                result += 'sat';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'sata';\n            } else {\n                result += 'sati';\n            }\n            return result;\n        case 'dd':\n            if (number === 1) {\n                result += 'dan';\n            } else {\n                result += 'dana';\n            }\n            return result;\n        case 'MM':\n            if (number === 1) {\n                result += 'mjesec';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'mjeseca';\n            } else {\n                result += 'mjeseci';\n            }\n            return result;\n        case 'yy':\n            if (number === 1) {\n                result += 'godina';\n            } else if (number === 2 || number === 3 || number === 4) {\n                result += 'godine';\n            } else {\n                result += 'godina';\n            }\n            return result;\n    }\n}\n\nvar hr = moment.defineLocale('hr', {\n    months : {\n        format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),\n        standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')\n    },\n    monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),\n    monthsParseExact: true,\n    weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n    weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n    weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D. MMMM YYYY',\n        LLL : 'D. MMMM YYYY H:mm',\n        LLLL : 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar : {\n        sameDay  : '[danas u] LT',\n        nextDay  : '[sutra u] LT',\n        nextWeek : function () {\n            switch (this.day()) {\n                case 0:\n                    return '[u] [nedjelju] [u] LT';\n                case 3:\n                    return '[u] [srijedu] [u] LT';\n                case 6:\n                    return '[u] [subotu] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[u] dddd [u] LT';\n            }\n        },\n        lastDay  : '[jučer u] LT',\n        lastWeek : function () {\n            switch (this.day()) {\n                case 0:\n                case 3:\n                    return '[prošlu] dddd [u] LT';\n                case 6:\n                    return '[prošle] [subote] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prošli] dddd [u] LT';\n            }\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'za %s',\n        past   : 'prije %s',\n        s      : 'par sekundi',\n        m      : translate,\n        mm     : translate,\n        h      : translate,\n        hh     : translate,\n        d      : 'dan',\n        dd     : translate,\n        M      : 'mjesec',\n        MM     : translate,\n        y      : 'godinu',\n        yy     : translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn hr;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/hr.js\n// module id = 109\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\nfunction translate(number, withoutSuffix, key, isFuture) {\n    var num = number,\n        suffix;\n    switch (key) {\n        case 's':\n            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n        case 'm':\n            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'mm':\n            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'h':\n            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'hh':\n            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'd':\n            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'dd':\n            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'M':\n            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'MM':\n            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'y':\n            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n        case 'yy':\n            return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n    }\n    return '';\n}\nfunction week(isFuture) {\n    return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';\n}\n\nvar hu = moment.defineLocale('hu', {\n    months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n    monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n    weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n    weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n    weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),\n    longDateFormat : {\n        LT : 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'YYYY.MM.DD.',\n        LL : 'YYYY. MMMM D.',\n        LLL : 'YYYY. MMMM D. H:mm',\n        LLLL : 'YYYY. MMMM D., dddd H:mm'\n    },\n    meridiemParse: /de|du/i,\n    isPM: function (input) {\n        return input.charAt(1).toLowerCase() === 'u';\n    },\n    meridiem : function (hours, minutes, isLower) {\n        if (hours < 12) {\n            return isLower === true ? 'de' : 'DE';\n        } else {\n            return isLower === true ? 'du' : 'DU';\n        }\n    },\n    calendar : {\n        sameDay : '[ma] LT[-kor]',\n        nextDay : '[holnap] LT[-kor]',\n        nextWeek : function () {\n            return week.call(this, true);\n        },\n        lastDay : '[tegnap] LT[-kor]',\n        lastWeek : function () {\n            return week.call(this, false);\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s múlva',\n        past : '%s',\n        s : translate,\n        m : translate,\n        mm : translate,\n        h : translate,\n        hh : translate,\n        d : translate,\n        dd : translate,\n        M : translate,\n        MM : translate,\n        y : translate,\n        yy : translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn hu;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/hu.js\n// module id = 110\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Armenian [hy-am]\n//! author : Armendarabyan : https://github.com/armendarabyan\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar hyAm = moment.defineLocale('hy-am', {\n    months : {\n        format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),\n        standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')\n    },\n    monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),\n    weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),\n    weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n    weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY թ.',\n        LLL : 'D MMMM YYYY թ., HH:mm',\n        LLLL : 'dddd, D MMMM YYYY թ., HH:mm'\n    },\n    calendar : {\n        sameDay: '[այսօր] LT',\n        nextDay: '[վաղը] LT',\n        lastDay: '[երեկ] LT',\n        nextWeek: function () {\n            return 'dddd [օրը ժամը] LT';\n        },\n        lastWeek: function () {\n            return '[անցած] dddd [օրը ժամը] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : '%s հետո',\n        past : '%s առաջ',\n        s : 'մի քանի վայրկյան',\n        m : 'րոպե',\n        mm : '%d րոպե',\n        h : 'ժամ',\n        hh : '%d ժամ',\n        d : 'օր',\n        dd : '%d օր',\n        M : 'ամիս',\n        MM : '%d ամիս',\n        y : 'տարի',\n        yy : '%d տարի'\n    },\n    meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,\n    isPM: function (input) {\n        return /^(ցերեկվա|երեկոյան)$/.test(input);\n    },\n    meridiem : function (hour) {\n        if (hour < 4) {\n            return 'գիշերվա';\n        } else if (hour < 12) {\n            return 'առավոտվա';\n        } else if (hour < 17) {\n            return 'ցերեկվա';\n        } else {\n            return 'երեկոյան';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}|\\d{1,2}-(ին|րդ)/,\n    ordinal: function (number, period) {\n        switch (period) {\n            case 'DDD':\n            case 'w':\n            case 'W':\n            case 'DDDo':\n                if (number === 1) {\n                    return number + '-ին';\n                }\n                return number + '-րդ';\n            default:\n                return number;\n        }\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn hyAm;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/hy-am.js\n// module id = 111\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Indonesian [id]\n//! author : Mohammad Satrio Utomo : https://github.com/tyok\n//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar id = moment.defineLocale('id', {\n    months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n    monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n    weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n    weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n    weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n    longDateFormat : {\n        LT : 'HH.mm',\n        LTS : 'HH.mm.ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY [pukul] HH.mm',\n        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n    },\n    meridiemParse: /pagi|siang|sore|malam/,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'pagi') {\n            return hour;\n        } else if (meridiem === 'siang') {\n            return hour >= 11 ? hour : hour + 12;\n        } else if (meridiem === 'sore' || meridiem === 'malam') {\n            return hour + 12;\n        }\n    },\n    meridiem : function (hours, minutes, isLower) {\n        if (hours < 11) {\n            return 'pagi';\n        } else if (hours < 15) {\n            return 'siang';\n        } else if (hours < 19) {\n            return 'sore';\n        } else {\n            return 'malam';\n        }\n    },\n    calendar : {\n        sameDay : '[Hari ini pukul] LT',\n        nextDay : '[Besok pukul] LT',\n        nextWeek : 'dddd [pukul] LT',\n        lastDay : '[Kemarin pukul] LT',\n        lastWeek : 'dddd [lalu pukul] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'dalam %s',\n        past : '%s yang lalu',\n        s : 'beberapa detik',\n        m : 'semenit',\n        mm : '%d menit',\n        h : 'sejam',\n        hh : '%d jam',\n        d : 'sehari',\n        dd : '%d hari',\n        M : 'sebulan',\n        MM : '%d bulan',\n        y : 'setahun',\n        yy : '%d tahun'\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn id;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/id.js\n// module id = 112\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Icelandic [is]\n//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction plural(n) {\n    if (n % 100 === 11) {\n        return true;\n    } else if (n % 10 === 1) {\n        return false;\n    }\n    return true;\n}\nfunction translate(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n    switch (key) {\n        case 's':\n            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';\n        case 'm':\n            return withoutSuffix ? 'mínúta' : 'mínútu';\n        case 'mm':\n            if (plural(number)) {\n                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');\n            } else if (withoutSuffix) {\n                return result + 'mínúta';\n            }\n            return result + 'mínútu';\n        case 'hh':\n            if (plural(number)) {\n                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');\n            }\n            return result + 'klukkustund';\n        case 'd':\n            if (withoutSuffix) {\n                return 'dagur';\n            }\n            return isFuture ? 'dag' : 'degi';\n        case 'dd':\n            if (plural(number)) {\n                if (withoutSuffix) {\n                    return result + 'dagar';\n                }\n                return result + (isFuture ? 'daga' : 'dögum');\n            } else if (withoutSuffix) {\n                return result + 'dagur';\n            }\n            return result + (isFuture ? 'dag' : 'degi');\n        case 'M':\n            if (withoutSuffix) {\n                return 'mánuður';\n            }\n            return isFuture ? 'mánuð' : 'mánuði';\n        case 'MM':\n            if (plural(number)) {\n                if (withoutSuffix) {\n                    return result + 'mánuðir';\n                }\n                return result + (isFuture ? 'mánuði' : 'mánuðum');\n            } else if (withoutSuffix) {\n                return result + 'mánuður';\n            }\n            return result + (isFuture ? 'mánuð' : 'mánuði');\n        case 'y':\n            return withoutSuffix || isFuture ? 'ár' : 'ári';\n        case 'yy':\n            if (plural(number)) {\n                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n            }\n            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n    }\n}\n\nvar is = moment.defineLocale('is', {\n    months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),\n    monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),\n    weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),\n    weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),\n    weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),\n    longDateFormat : {\n        LT : 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D. MMMM YYYY',\n        LLL : 'D. MMMM YYYY [kl.] H:mm',\n        LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'\n    },\n    calendar : {\n        sameDay : '[í dag kl.] LT',\n        nextDay : '[á morgun kl.] LT',\n        nextWeek : 'dddd [kl.] LT',\n        lastDay : '[í gær kl.] LT',\n        lastWeek : '[síðasta] dddd [kl.] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'eftir %s',\n        past : 'fyrir %s síðan',\n        s : translate,\n        m : translate,\n        mm : translate,\n        h : 'klukkustund',\n        hh : translate,\n        d : translate,\n        dd : translate,\n        M : translate,\n        MM : translate,\n        y : translate,\n        yy : translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn is;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/is.js\n// module id = 113\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar it = moment.defineLocale('it', {\n    months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n    monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n    weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n    weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n    weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[Oggi alle] LT',\n        nextDay: '[Domani alle] LT',\n        nextWeek: 'dddd [alle] LT',\n        lastDay: '[Ieri alle] LT',\n        lastWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[la scorsa] dddd [alle] LT';\n                default:\n                    return '[lo scorso] dddd [alle] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : function (s) {\n            return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;\n        },\n        past : '%s fa',\n        s : 'alcuni secondi',\n        m : 'un minuto',\n        mm : '%d minuti',\n        h : 'un\\'ora',\n        hh : '%d ore',\n        d : 'un giorno',\n        dd : '%d giorni',\n        M : 'un mese',\n        MM : '%d mesi',\n        y : 'un anno',\n        yy : '%d anni'\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}º/,\n    ordinal: '%dº',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn it;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/it.js\n// module id = 114\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar ja = moment.defineLocale('ja', {\n    months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n    weekdaysShort : '日_月_火_水_木_金_土'.split('_'),\n    weekdaysMin : '日_月_火_水_木_金_土'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'YYYY/MM/DD',\n        LL : 'YYYY年M月D日',\n        LLL : 'YYYY年M月D日 HH:mm',\n        LLLL : 'YYYY年M月D日 HH:mm dddd',\n        l : 'YYYY/MM/DD',\n        ll : 'YYYY年M月D日',\n        lll : 'YYYY年M月D日 HH:mm',\n        llll : 'YYYY年M月D日 HH:mm dddd'\n    },\n    meridiemParse: /午前|午後/i,\n    isPM : function (input) {\n        return input === '午後';\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 12) {\n            return '午前';\n        } else {\n            return '午後';\n        }\n    },\n    calendar : {\n        sameDay : '[今日] LT',\n        nextDay : '[明日] LT',\n        nextWeek : '[来週]dddd LT',\n        lastDay : '[昨日] LT',\n        lastWeek : '[前週]dddd LT',\n        sameElse : 'L'\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}日/,\n    ordinal : function (number, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return number + '日';\n            default:\n                return number;\n        }\n    },\n    relativeTime : {\n        future : '%s後',\n        past : '%s前',\n        s : '数秒',\n        m : '1分',\n        mm : '%d分',\n        h : '1時間',\n        hh : '%d時間',\n        d : '1日',\n        dd : '%d日',\n        M : '1ヶ月',\n        MM : '%dヶ月',\n        y : '1年',\n        yy : '%d年'\n    }\n});\n\nreturn ja;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ja.js\n// module id = 115\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Javanese [jv]\n//! author : Rony Lantip : https://github.com/lantip\n//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar jv = moment.defineLocale('jv', {\n    months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),\n    monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),\n    weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),\n    weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),\n    weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),\n    longDateFormat : {\n        LT : 'HH.mm',\n        LTS : 'HH.mm.ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY [pukul] HH.mm',\n        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n    },\n    meridiemParse: /enjing|siyang|sonten|ndalu/,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'enjing') {\n            return hour;\n        } else if (meridiem === 'siyang') {\n            return hour >= 11 ? hour : hour + 12;\n        } else if (meridiem === 'sonten' || meridiem === 'ndalu') {\n            return hour + 12;\n        }\n    },\n    meridiem : function (hours, minutes, isLower) {\n        if (hours < 11) {\n            return 'enjing';\n        } else if (hours < 15) {\n            return 'siyang';\n        } else if (hours < 19) {\n            return 'sonten';\n        } else {\n            return 'ndalu';\n        }\n    },\n    calendar : {\n        sameDay : '[Dinten puniko pukul] LT',\n        nextDay : '[Mbenjang pukul] LT',\n        nextWeek : 'dddd [pukul] LT',\n        lastDay : '[Kala wingi pukul] LT',\n        lastWeek : 'dddd [kepengker pukul] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'wonten ing %s',\n        past : '%s ingkang kepengker',\n        s : 'sawetawis detik',\n        m : 'setunggal menit',\n        mm : '%d menit',\n        h : 'setunggal jam',\n        hh : '%d jam',\n        d : 'sedinten',\n        dd : '%d dinten',\n        M : 'sewulan',\n        MM : '%d wulan',\n        y : 'setaun',\n        yy : '%d taun'\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn jv;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/jv.js\n// module id = 116\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar ka = moment.defineLocale('ka', {\n    months : {\n        standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),\n        format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')\n    },\n    monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n    weekdays : {\n        standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n        format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n        isFormat: /(წინა|შემდეგ)/\n    },\n    weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n    weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n    longDateFormat : {\n        LT : 'h:mm A',\n        LTS : 'h:mm:ss A',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY h:mm A',\n        LLLL : 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendar : {\n        sameDay : '[დღეს] LT[-ზე]',\n        nextDay : '[ხვალ] LT[-ზე]',\n        lastDay : '[გუშინ] LT[-ზე]',\n        nextWeek : '[შემდეგ] dddd LT[-ზე]',\n        lastWeek : '[წინა] dddd LT-ზე',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : function (s) {\n            return (/(წამი|წუთი|საათი|წელი)/).test(s) ?\n                s.replace(/ი$/, 'ში') :\n                s + 'ში';\n        },\n        past : function (s) {\n            if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {\n                return s.replace(/(ი|ე)$/, 'ის უკან');\n            }\n            if ((/წელი/).test(s)) {\n                return s.replace(/წელი$/, 'წლის უკან');\n            }\n        },\n        s : 'რამდენიმე წამი',\n        m : 'წუთი',\n        mm : '%d წუთი',\n        h : 'საათი',\n        hh : '%d საათი',\n        d : 'დღე',\n        dd : '%d დღე',\n        M : 'თვე',\n        MM : '%d თვე',\n        y : 'წელი',\n        yy : '%d წელი'\n    },\n    dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n    ordinal : function (number) {\n        if (number === 0) {\n            return number;\n        }\n        if (number === 1) {\n            return number + '-ლი';\n        }\n        if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {\n            return 'მე-' + number;\n        }\n        return number + '-ე';\n    },\n    week : {\n        dow : 1,\n        doy : 7\n    }\n});\n\nreturn ka;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ka.js\n// module id = 117\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Kazakh [kk]\n//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar suffixes = {\n    0: '-ші',\n    1: '-ші',\n    2: '-ші',\n    3: '-ші',\n    4: '-ші',\n    5: '-ші',\n    6: '-шы',\n    7: '-ші',\n    8: '-ші',\n    9: '-шы',\n    10: '-шы',\n    20: '-шы',\n    30: '-шы',\n    40: '-шы',\n    50: '-ші',\n    60: '-шы',\n    70: '-ші',\n    80: '-ші',\n    90: '-шы',\n    100: '-ші'\n};\n\nvar kk = moment.defineLocale('kk', {\n    months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n    monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n    weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n    weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n    weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[Бүгін сағат] LT',\n        nextDay : '[Ертең сағат] LT',\n        nextWeek : 'dddd [сағат] LT',\n        lastDay : '[Кеше сағат] LT',\n        lastWeek : '[Өткен аптаның] dddd [сағат] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s ішінде',\n        past : '%s бұрын',\n        s : 'бірнеше секунд',\n        m : 'бір минут',\n        mm : '%d минут',\n        h : 'бір сағат',\n        hh : '%d сағат',\n        d : 'бір күн',\n        dd : '%d күн',\n        M : 'бір ай',\n        MM : '%d ай',\n        y : 'бір жыл',\n        yy : '%d жыл'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n    ordinal : function (number) {\n        var a = number % 10,\n            b = number >= 100 ? 100 : null;\n        return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn kk;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/kk.js\n// module id = 118\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Cambodian [km]\n//! author : Kruy Vanna : https://github.com/kruyvanna\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar km = moment.defineLocale('km', {\n    months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),\n    monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),\n    weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n    weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n    weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',\n        nextDay: '[ស្អែក ម៉ោង] LT',\n        nextWeek: 'dddd [ម៉ោង] LT',\n        lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n        lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%sទៀត',\n        past: '%sមុន',\n        s: 'ប៉ុន្មានវិនាទី',\n        m: 'មួយនាទី',\n        mm: '%d នាទី',\n        h: 'មួយម៉ោង',\n        hh: '%d ម៉ោង',\n        d: 'មួយថ្ងៃ',\n        dd: '%d ថ្ងៃ',\n        M: 'មួយខែ',\n        MM: '%d ខែ',\n        y: 'មួយឆ្នាំ',\n        yy: '%d ឆ្នាំ'\n    },\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn km;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/km.js\n// module id = 119\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Kannada [kn]\n//! author : Rajeev Naik : https://github.com/rajeevnaikte\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar symbolMap = {\n    '1': '೧',\n    '2': '೨',\n    '3': '೩',\n    '4': '೪',\n    '5': '೫',\n    '6': '೬',\n    '7': '೭',\n    '8': '೮',\n    '9': '೯',\n    '0': '೦'\n};\nvar numberMap = {\n    '೧': '1',\n    '೨': '2',\n    '೩': '3',\n    '೪': '4',\n    '೫': '5',\n    '೬': '6',\n    '೭': '7',\n    '೮': '8',\n    '೯': '9',\n    '೦': '0'\n};\n\nvar kn = moment.defineLocale('kn', {\n    months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),\n    monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬ_ಅಕ್ಟೋಬ_ನವೆಂಬ_ಡಿಸೆಂಬ'.split('_'),\n    monthsParseExact: true,\n    weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),\n    weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),\n    weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),\n    longDateFormat : {\n        LT : 'A h:mm',\n        LTS : 'A h:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY, A h:mm',\n        LLLL : 'dddd, D MMMM YYYY, A h:mm'\n    },\n    calendar : {\n        sameDay : '[ಇಂದು] LT',\n        nextDay : '[ನಾಳೆ] LT',\n        nextWeek : 'dddd, LT',\n        lastDay : '[ನಿನ್ನೆ] LT',\n        lastWeek : '[ಕೊನೆಯ] dddd, LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s ನಂತರ',\n        past : '%s ಹಿಂದೆ',\n        s : 'ಕೆಲವು ಕ್ಷಣಗಳು',\n        m : 'ಒಂದು ನಿಮಿಷ',\n        mm : '%d ನಿಮಿಷ',\n        h : 'ಒಂದು ಗಂಟೆ',\n        hh : '%d ಗಂಟೆ',\n        d : 'ಒಂದು ದಿನ',\n        dd : '%d ದಿನ',\n        M : 'ಒಂದು ತಿಂಗಳು',\n        MM : '%d ತಿಂಗಳು',\n        y : 'ಒಂದು ವರ್ಷ',\n        yy : '%d ವರ್ಷ'\n    },\n    preparse: function (string) {\n        return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {\n            return numberMap[match];\n        });\n    },\n    postformat: function (string) {\n        return string.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        });\n    },\n    meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'ರಾತ್ರಿ') {\n            return hour < 4 ? hour : hour + 12;\n        } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {\n            return hour;\n        } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {\n            return hour >= 10 ? hour : hour + 12;\n        } else if (meridiem === 'ಸಂಜೆ') {\n            return hour + 12;\n        }\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ರಾತ್ರಿ';\n        } else if (hour < 10) {\n            return 'ಬೆಳಿಗ್ಗೆ';\n        } else if (hour < 17) {\n            return 'ಮಧ್ಯಾಹ್ನ';\n        } else if (hour < 20) {\n            return 'ಸಂಜೆ';\n        } else {\n            return 'ರಾತ್ರಿ';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ನೇ)/,\n    ordinal : function (number) {\n        return number + 'ನೇ';\n    },\n    week : {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn kn;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/kn.js\n// module id = 120\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar ko = moment.defineLocale('ko', {\n    months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n    monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n    weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n    weekdaysShort : '일_월_화_수_목_금_토'.split('_'),\n    weekdaysMin : '일_월_화_수_목_금_토'.split('_'),\n    longDateFormat : {\n        LT : 'A h:mm',\n        LTS : 'A h:mm:ss',\n        L : 'YYYY.MM.DD',\n        LL : 'YYYY년 MMMM D일',\n        LLL : 'YYYY년 MMMM D일 A h:mm',\n        LLLL : 'YYYY년 MMMM D일 dddd A h:mm',\n        l : 'YYYY.MM.DD',\n        ll : 'YYYY년 MMMM D일',\n        lll : 'YYYY년 MMMM D일 A h:mm',\n        llll : 'YYYY년 MMMM D일 dddd A h:mm'\n    },\n    calendar : {\n        sameDay : '오늘 LT',\n        nextDay : '내일 LT',\n        nextWeek : 'dddd LT',\n        lastDay : '어제 LT',\n        lastWeek : '지난주 dddd LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s 후',\n        past : '%s 전',\n        s : '몇 초',\n        ss : '%d초',\n        m : '1분',\n        mm : '%d분',\n        h : '한 시간',\n        hh : '%d시간',\n        d : '하루',\n        dd : '%d일',\n        M : '한 달',\n        MM : '%d달',\n        y : '일 년',\n        yy : '%d년'\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}일/,\n    ordinal : '%d일',\n    meridiemParse : /오전|오후/,\n    isPM : function (token) {\n        return token === '오후';\n    },\n    meridiem : function (hour, minute, isUpper) {\n        return hour < 12 ? '오전' : '오후';\n    }\n});\n\nreturn ko;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ko.js\n// module id = 121\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Kyrgyz [ky]\n//! author : Chyngyz Arystan uulu : https://github.com/chyngyz\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n\nvar suffixes = {\n    0: '-чү',\n    1: '-чи',\n    2: '-чи',\n    3: '-чү',\n    4: '-чү',\n    5: '-чи',\n    6: '-чы',\n    7: '-чи',\n    8: '-чи',\n    9: '-чу',\n    10: '-чу',\n    20: '-чы',\n    30: '-чу',\n    40: '-чы',\n    50: '-чү',\n    60: '-чы',\n    70: '-чи',\n    80: '-чи',\n    90: '-чу',\n    100: '-чү'\n};\n\nvar ky = moment.defineLocale('ky', {\n    months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),\n    monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),\n    weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),\n    weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),\n    weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[Бүгүн саат] LT',\n        nextDay : '[Эртең саат] LT',\n        nextWeek : 'dddd [саат] LT',\n        lastDay : '[Кече саат] LT',\n        lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s ичинде',\n        past : '%s мурун',\n        s : 'бирнече секунд',\n        m : 'бир мүнөт',\n        mm : '%d мүнөт',\n        h : 'бир саат',\n        hh : '%d саат',\n        d : 'бир күн',\n        dd : '%d күн',\n        M : 'бир ай',\n        MM : '%d ай',\n        y : 'бир жыл',\n        yy : '%d жыл'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(чи|чы|чү|чу)/,\n    ordinal : function (number) {\n        var a = number % 10,\n            b = number >= 100 ? 100 : null;\n        return number + (suffixes[number] || suffixes[a] || suffixes[b]);\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn ky;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ky.js\n// module id = 122\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Luxembourgish [lb]\n//! author : mweimerskirch : https://github.com/mweimerskirch\n//! author : David Raison : https://github.com/kwisatz\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n        'm': ['eng Minutt', 'enger Minutt'],\n        'h': ['eng Stonn', 'enger Stonn'],\n        'd': ['een Dag', 'engem Dag'],\n        'M': ['ee Mount', 'engem Mount'],\n        'y': ['ee Joer', 'engem Joer']\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n}\nfunction processFutureTime(string) {\n    var number = string.substr(0, string.indexOf(' '));\n    if (eifelerRegelAppliesToNumber(number)) {\n        return 'a ' + string;\n    }\n    return 'an ' + string;\n}\nfunction processPastTime(string) {\n    var number = string.substr(0, string.indexOf(' '));\n    if (eifelerRegelAppliesToNumber(number)) {\n        return 'viru ' + string;\n    }\n    return 'virun ' + string;\n}\n/**\n * Returns true if the word before the given number loses the '-n' ending.\n * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n *\n * @param number {integer}\n * @returns {boolean}\n */\nfunction eifelerRegelAppliesToNumber(number) {\n    number = parseInt(number, 10);\n    if (isNaN(number)) {\n        return false;\n    }\n    if (number < 0) {\n        // Negative Number --> always true\n        return true;\n    } else if (number < 10) {\n        // Only 1 digit\n        if (4 <= number && number <= 7) {\n            return true;\n        }\n        return false;\n    } else if (number < 100) {\n        // 2 digits\n        var lastDigit = number % 10, firstDigit = number / 10;\n        if (lastDigit === 0) {\n            return eifelerRegelAppliesToNumber(firstDigit);\n        }\n        return eifelerRegelAppliesToNumber(lastDigit);\n    } else if (number < 10000) {\n        // 3 or 4 digits --> recursively check first digit\n        while (number >= 10) {\n            number = number / 10;\n        }\n        return eifelerRegelAppliesToNumber(number);\n    } else {\n        // Anything larger than 4 digits: recursively check first n-3 digits\n        number = number / 1000;\n        return eifelerRegelAppliesToNumber(number);\n    }\n}\n\nvar lb = moment.defineLocale('lb', {\n    months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n    monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),\n    monthsParseExact : true,\n    weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),\n    weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n    weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat: {\n        LT: 'H:mm [Auer]',\n        LTS: 'H:mm:ss [Auer]',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm [Auer]',\n        LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'\n    },\n    calendar: {\n        sameDay: '[Haut um] LT',\n        sameElse: 'L',\n        nextDay: '[Muer um] LT',\n        nextWeek: 'dddd [um] LT',\n        lastDay: '[Gëschter um] LT',\n        lastWeek: function () {\n            // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n            switch (this.day()) {\n                case 2:\n                case 4:\n                    return '[Leschten] dddd [um] LT';\n                default:\n                    return '[Leschte] dddd [um] LT';\n            }\n        }\n    },\n    relativeTime : {\n        future : processFutureTime,\n        past : processPastTime,\n        s : 'e puer Sekonnen',\n        m : processRelativeTime,\n        mm : '%d Minutten',\n        h : processRelativeTime,\n        hh : '%d Stonnen',\n        d : processRelativeTime,\n        dd : '%d Deeg',\n        M : processRelativeTime,\n        MM : '%d Méint',\n        y : processRelativeTime,\n        yy : '%d Joer'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn lb;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/lb.js\n// module id = 123\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Lao [lo]\n//! author : Ryan Hart : https://github.com/ryanhart2\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar lo = moment.defineLocale('lo', {\n    months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n    monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),\n    weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n    weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n    weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'ວັນdddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,\n    isPM: function (input) {\n        return input === 'ຕອນແລງ';\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ຕອນເຊົ້າ';\n        } else {\n            return 'ຕອນແລງ';\n        }\n    },\n    calendar : {\n        sameDay : '[ມື້ນີ້ເວລາ] LT',\n        nextDay : '[ມື້ອື່ນເວລາ] LT',\n        nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',\n        lastDay : '[ມື້ວານນີ້ເວລາ] LT',\n        lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'ອີກ %s',\n        past : '%sຜ່ານມາ',\n        s : 'ບໍ່ເທົ່າໃດວິນາທີ',\n        m : '1 ນາທີ',\n        mm : '%d ນາທີ',\n        h : '1 ຊົ່ວໂມງ',\n        hh : '%d ຊົ່ວໂມງ',\n        d : '1 ມື້',\n        dd : '%d ມື້',\n        M : '1 ເດືອນ',\n        MM : '%d ເດືອນ',\n        y : '1 ປີ',\n        yy : '%d ປີ'\n    },\n    dayOfMonthOrdinalParse: /(ທີ່)\\d{1,2}/,\n    ordinal : function (number) {\n        return 'ທີ່' + number;\n    }\n});\n\nreturn lo;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/lo.js\n// module id = 124\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Mindaugas Mozūras : https://github.com/mmozuras\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar units = {\n    'm' : 'minutė_minutės_minutę',\n    'mm': 'minutės_minučių_minutes',\n    'h' : 'valanda_valandos_valandą',\n    'hh': 'valandos_valandų_valandas',\n    'd' : 'diena_dienos_dieną',\n    'dd': 'dienos_dienų_dienas',\n    'M' : 'mėnuo_mėnesio_mėnesį',\n    'MM': 'mėnesiai_mėnesių_mėnesius',\n    'y' : 'metai_metų_metus',\n    'yy': 'metai_metų_metus'\n};\nfunction translateSeconds(number, withoutSuffix, key, isFuture) {\n    if (withoutSuffix) {\n        return 'kelios sekundės';\n    } else {\n        return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n    }\n}\nfunction translateSingular(number, withoutSuffix, key, isFuture) {\n    return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n}\nfunction special(number) {\n    return number % 10 === 0 || (number > 10 && number < 20);\n}\nfunction forms(key) {\n    return units[key].split('_');\n}\nfunction translate(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n    if (number === 1) {\n        return result + translateSingular(number, withoutSuffix, key[0], isFuture);\n    } else if (withoutSuffix) {\n        return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n    } else {\n        if (isFuture) {\n            return result + forms(key)[1];\n        } else {\n            return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n        }\n    }\n}\nvar lt = moment.defineLocale('lt', {\n    months : {\n        format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n        standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n        isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n    },\n    monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n    weekdays : {\n        format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n        standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n        isFormat: /dddd HH:mm/\n    },\n    weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n    weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'YYYY-MM-DD',\n        LL : 'YYYY [m.] MMMM D [d.]',\n        LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n        LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n        l : 'YYYY-MM-DD',\n        ll : 'YYYY [m.] MMMM D [d.]',\n        lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n        llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n    },\n    calendar : {\n        sameDay : '[Šiandien] LT',\n        nextDay : '[Rytoj] LT',\n        nextWeek : 'dddd LT',\n        lastDay : '[Vakar] LT',\n        lastWeek : '[Praėjusį] dddd LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'po %s',\n        past : 'prieš %s',\n        s : translateSeconds,\n        m : translateSingular,\n        mm : translate,\n        h : translateSingular,\n        hh : translate,\n        d : translateSingular,\n        dd : translate,\n        M : translateSingular,\n        MM : translate,\n        y : translateSingular,\n        yy : translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n    ordinal : function (number) {\n        return number + '-oji';\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn lt;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/lt.js\n// module id = 125\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Latvian [lv]\n//! author : Kristaps Karlsons : https://github.com/skakri\n//! author : Jānis Elmeris : https://github.com/JanisE\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar units = {\n    'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n    'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n    'h': 'stundas_stundām_stunda_stundas'.split('_'),\n    'hh': 'stundas_stundām_stunda_stundas'.split('_'),\n    'd': 'dienas_dienām_diena_dienas'.split('_'),\n    'dd': 'dienas_dienām_diena_dienas'.split('_'),\n    'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n    'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n    'y': 'gada_gadiem_gads_gadi'.split('_'),\n    'yy': 'gada_gadiem_gads_gadi'.split('_')\n};\n/**\n * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.\n */\nfunction format(forms, number, withoutSuffix) {\n    if (withoutSuffix) {\n        // E.g. \"21 minūte\", \"3 minūtes\".\n        return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];\n    } else {\n        // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".\n        // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".\n        return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];\n    }\n}\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n    return number + ' ' + format(units[key], number, withoutSuffix);\n}\nfunction relativeTimeWithSingular(number, withoutSuffix, key) {\n    return format(units[key], number, withoutSuffix);\n}\nfunction relativeSeconds(number, withoutSuffix) {\n    return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';\n}\n\nvar lv = moment.defineLocale('lv', {\n    months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),\n    monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),\n    weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),\n    weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),\n    weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY.',\n        LL : 'YYYY. [gada] D. MMMM',\n        LLL : 'YYYY. [gada] D. MMMM, HH:mm',\n        LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'\n    },\n    calendar : {\n        sameDay : '[Šodien pulksten] LT',\n        nextDay : '[Rīt pulksten] LT',\n        nextWeek : 'dddd [pulksten] LT',\n        lastDay : '[Vakar pulksten] LT',\n        lastWeek : '[Pagājušā] dddd [pulksten] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'pēc %s',\n        past : 'pirms %s',\n        s : relativeSeconds,\n        m : relativeTimeWithSingular,\n        mm : relativeTimeWithPlural,\n        h : relativeTimeWithSingular,\n        hh : relativeTimeWithPlural,\n        d : relativeTimeWithSingular,\n        dd : relativeTimeWithPlural,\n        M : relativeTimeWithSingular,\n        MM : relativeTimeWithPlural,\n        y : relativeTimeWithSingular,\n        yy : relativeTimeWithPlural\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn lv;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/lv.js\n// module id = 126\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Montenegrin [me]\n//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar translator = {\n    words: { //Different grammatical cases\n        m: ['jedan minut', 'jednog minuta'],\n        mm: ['minut', 'minuta', 'minuta'],\n        h: ['jedan sat', 'jednog sata'],\n        hh: ['sat', 'sata', 'sati'],\n        dd: ['dan', 'dana', 'dana'],\n        MM: ['mjesec', 'mjeseca', 'mjeseci'],\n        yy: ['godina', 'godine', 'godina']\n    },\n    correctGrammaticalCase: function (number, wordKey) {\n        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n    },\n    translate: function (number, withoutSuffix, key) {\n        var wordKey = translator.words[key];\n        if (key.length === 1) {\n            return withoutSuffix ? wordKey[0] : wordKey[1];\n        } else {\n            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n        }\n    }\n};\n\nvar me = moment.defineLocale('me', {\n    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n    monthsParseExact : true,\n    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),\n    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS : 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[danas u] LT',\n        nextDay: '[sjutra u] LT',\n\n        nextWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[u] [nedjelju] [u] LT';\n                case 3:\n                    return '[u] [srijedu] [u] LT';\n                case 6:\n                    return '[u] [subotu] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[u] dddd [u] LT';\n            }\n        },\n        lastDay  : '[juče u] LT',\n        lastWeek : function () {\n            var lastWeekDays = [\n                '[prošle] [nedjelje] [u] LT',\n                '[prošlog] [ponedjeljka] [u] LT',\n                '[prošlog] [utorka] [u] LT',\n                '[prošle] [srijede] [u] LT',\n                '[prošlog] [četvrtka] [u] LT',\n                '[prošlog] [petka] [u] LT',\n                '[prošle] [subote] [u] LT'\n            ];\n            return lastWeekDays[this.day()];\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'za %s',\n        past   : 'prije %s',\n        s      : 'nekoliko sekundi',\n        m      : translator.translate,\n        mm     : translator.translate,\n        h      : translator.translate,\n        hh     : translator.translate,\n        d      : 'dan',\n        dd     : translator.translate,\n        M      : 'mjesec',\n        MM     : translator.translate,\n        y      : 'godinu',\n        yy     : translator.translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn me;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/me.js\n// module id = 127\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Maori [mi]\n//! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar mi = moment.defineLocale('mi', {\n    months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),\n    monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),\n    monthsRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n    monthsStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n    monthsShortRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n    monthsShortStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,2}/i,\n    weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),\n    weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n    weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY [i] HH:mm',\n        LLLL: 'dddd, D MMMM YYYY [i] HH:mm'\n    },\n    calendar: {\n        sameDay: '[i teie mahana, i] LT',\n        nextDay: '[apopo i] LT',\n        nextWeek: 'dddd [i] LT',\n        lastDay: '[inanahi i] LT',\n        lastWeek: 'dddd [whakamutunga i] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'i roto i %s',\n        past: '%s i mua',\n        s: 'te hēkona ruarua',\n        m: 'he meneti',\n        mm: '%d meneti',\n        h: 'te haora',\n        hh: '%d haora',\n        d: 'he ra',\n        dd: '%d ra',\n        M: 'he marama',\n        MM: '%d marama',\n        y: 'he tau',\n        yy: '%d tau'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn mi;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/mi.js\n// module id = 128\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Macedonian [mk]\n//! author : Borislav Mickov : https://github.com/B0k0\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar mk = moment.defineLocale('mk', {\n    months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),\n    monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),\n    weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),\n    weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),\n    weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),\n    longDateFormat : {\n        LT : 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'D.MM.YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY H:mm',\n        LLLL : 'dddd, D MMMM YYYY H:mm'\n    },\n    calendar : {\n        sameDay : '[Денес во] LT',\n        nextDay : '[Утре во] LT',\n        nextWeek : '[Во] dddd [во] LT',\n        lastDay : '[Вчера во] LT',\n        lastWeek : function () {\n            switch (this.day()) {\n                case 0:\n                case 3:\n                case 6:\n                    return '[Изминатата] dddd [во] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[Изминатиот] dddd [во] LT';\n            }\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'после %s',\n        past : 'пред %s',\n        s : 'неколку секунди',\n        m : 'минута',\n        mm : '%d минути',\n        h : 'час',\n        hh : '%d часа',\n        d : 'ден',\n        dd : '%d дена',\n        M : 'месец',\n        MM : '%d месеци',\n        y : 'година',\n        yy : '%d години'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n    ordinal : function (number) {\n        var lastDigit = number % 10,\n            last2Digits = number % 100;\n        if (number === 0) {\n            return number + '-ев';\n        } else if (last2Digits === 0) {\n            return number + '-ен';\n        } else if (last2Digits > 10 && last2Digits < 20) {\n            return number + '-ти';\n        } else if (lastDigit === 1) {\n            return number + '-ви';\n        } else if (lastDigit === 2) {\n            return number + '-ри';\n        } else if (lastDigit === 7 || lastDigit === 8) {\n            return number + '-ми';\n        } else {\n            return number + '-ти';\n        }\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn mk;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/mk.js\n// module id = 129\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Malayalam [ml]\n//! author : Floyd Pink : https://github.com/floydpink\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar ml = moment.defineLocale('ml', {\n    months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),\n    monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),\n    weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),\n    weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),\n    longDateFormat : {\n        LT : 'A h:mm -നു',\n        LTS : 'A h:mm:ss -നു',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY, A h:mm -നു',\n        LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'\n    },\n    calendar : {\n        sameDay : '[ഇന്ന്] LT',\n        nextDay : '[നാളെ] LT',\n        nextWeek : 'dddd, LT',\n        lastDay : '[ഇന്നലെ] LT',\n        lastWeek : '[കഴിഞ്ഞ] dddd, LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s കഴിഞ്ഞ്',\n        past : '%s മുൻപ്',\n        s : 'അൽപ നിമിഷങ്ങൾ',\n        m : 'ഒരു മിനിറ്റ്',\n        mm : '%d മിനിറ്റ്',\n        h : 'ഒരു മണിക്കൂർ',\n        hh : '%d മണിക്കൂർ',\n        d : 'ഒരു ദിവസം',\n        dd : '%d ദിവസം',\n        M : 'ഒരു മാസം',\n        MM : '%d മാസം',\n        y : 'ഒരു വർഷം',\n        yy : '%d വർഷം'\n    },\n    meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if ((meridiem === 'രാത്രി' && hour >= 4) ||\n                meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||\n                meridiem === 'വൈകുന്നേരം') {\n            return hour + 12;\n        } else {\n            return hour;\n        }\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'രാത്രി';\n        } else if (hour < 12) {\n            return 'രാവിലെ';\n        } else if (hour < 17) {\n            return 'ഉച്ച കഴിഞ്ഞ്';\n        } else if (hour < 20) {\n            return 'വൈകുന്നേരം';\n        } else {\n            return 'രാത്രി';\n        }\n    }\n});\n\nreturn ml;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ml.js\n// module id = 130\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Marathi [mr]\n//! author : Harshad Kale : https://github.com/kalehv\n//! author : Vivek Athalye : https://github.com/vnathalye\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar symbolMap = {\n    '1': '१',\n    '2': '२',\n    '3': '३',\n    '4': '४',\n    '5': '५',\n    '6': '६',\n    '7': '७',\n    '8': '८',\n    '9': '९',\n    '0': '०'\n};\nvar numberMap = {\n    '१': '1',\n    '२': '2',\n    '३': '3',\n    '४': '4',\n    '५': '5',\n    '६': '6',\n    '७': '7',\n    '८': '8',\n    '९': '9',\n    '०': '0'\n};\n\nfunction relativeTimeMr(number, withoutSuffix, string, isFuture)\n{\n    var output = '';\n    if (withoutSuffix) {\n        switch (string) {\n            case 's': output = 'काही सेकंद'; break;\n            case 'm': output = 'एक मिनिट'; break;\n            case 'mm': output = '%d मिनिटे'; break;\n            case 'h': output = 'एक तास'; break;\n            case 'hh': output = '%d तास'; break;\n            case 'd': output = 'एक दिवस'; break;\n            case 'dd': output = '%d दिवस'; break;\n            case 'M': output = 'एक महिना'; break;\n            case 'MM': output = '%d महिने'; break;\n            case 'y': output = 'एक वर्ष'; break;\n            case 'yy': output = '%d वर्षे'; break;\n        }\n    }\n    else {\n        switch (string) {\n            case 's': output = 'काही सेकंदां'; break;\n            case 'm': output = 'एका मिनिटा'; break;\n            case 'mm': output = '%d मिनिटां'; break;\n            case 'h': output = 'एका तासा'; break;\n            case 'hh': output = '%d तासां'; break;\n            case 'd': output = 'एका दिवसा'; break;\n            case 'dd': output = '%d दिवसां'; break;\n            case 'M': output = 'एका महिन्या'; break;\n            case 'MM': output = '%d महिन्यां'; break;\n            case 'y': output = 'एका वर्षा'; break;\n            case 'yy': output = '%d वर्षां'; break;\n        }\n    }\n    return output.replace(/%d/i, number);\n}\n\nvar mr = moment.defineLocale('mr', {\n    months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),\n    monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n    weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),\n    weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),\n    longDateFormat : {\n        LT : 'A h:mm वाजता',\n        LTS : 'A h:mm:ss वाजता',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY, A h:mm वाजता',\n        LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'\n    },\n    calendar : {\n        sameDay : '[आज] LT',\n        nextDay : '[उद्या] LT',\n        nextWeek : 'dddd, LT',\n        lastDay : '[काल] LT',\n        lastWeek: '[मागील] dddd, LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future: '%sमध्ये',\n        past: '%sपूर्वी',\n        s: relativeTimeMr,\n        m: relativeTimeMr,\n        mm: relativeTimeMr,\n        h: relativeTimeMr,\n        hh: relativeTimeMr,\n        d: relativeTimeMr,\n        dd: relativeTimeMr,\n        M: relativeTimeMr,\n        MM: relativeTimeMr,\n        y: relativeTimeMr,\n        yy: relativeTimeMr\n    },\n    preparse: function (string) {\n        return string.replace(/[१२३४५६७८९०]/g, function (match) {\n            return numberMap[match];\n        });\n    },\n    postformat: function (string) {\n        return string.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        });\n    },\n    meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'रात्री') {\n            return hour < 4 ? hour : hour + 12;\n        } else if (meridiem === 'सकाळी') {\n            return hour;\n        } else if (meridiem === 'दुपारी') {\n            return hour >= 10 ? hour : hour + 12;\n        } else if (meridiem === 'सायंकाळी') {\n            return hour + 12;\n        }\n    },\n    meridiem: function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'रात्री';\n        } else if (hour < 10) {\n            return 'सकाळी';\n        } else if (hour < 17) {\n            return 'दुपारी';\n        } else if (hour < 20) {\n            return 'सायंकाळी';\n        } else {\n            return 'रात्री';\n        }\n    },\n    week : {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn mr;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/mr.js\n// module id = 131\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Malay [ms-my]\n//! note : DEPRECATED, the correct one is [ms]\n//! author : Weldan Jamili : https://github.com/weldan\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar msMy = moment.defineLocale('ms-my', {\n    months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n    weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n    weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n    weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n    longDateFormat : {\n        LT : 'HH.mm',\n        LTS : 'HH.mm.ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY [pukul] HH.mm',\n        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n    },\n    meridiemParse: /pagi|tengahari|petang|malam/,\n    meridiemHour: function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'pagi') {\n            return hour;\n        } else if (meridiem === 'tengahari') {\n            return hour >= 11 ? hour : hour + 12;\n        } else if (meridiem === 'petang' || meridiem === 'malam') {\n            return hour + 12;\n        }\n    },\n    meridiem : function (hours, minutes, isLower) {\n        if (hours < 11) {\n            return 'pagi';\n        } else if (hours < 15) {\n            return 'tengahari';\n        } else if (hours < 19) {\n            return 'petang';\n        } else {\n            return 'malam';\n        }\n    },\n    calendar : {\n        sameDay : '[Hari ini pukul] LT',\n        nextDay : '[Esok pukul] LT',\n        nextWeek : 'dddd [pukul] LT',\n        lastDay : '[Kelmarin pukul] LT',\n        lastWeek : 'dddd [lepas pukul] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'dalam %s',\n        past : '%s yang lepas',\n        s : 'beberapa saat',\n        m : 'seminit',\n        mm : '%d minit',\n        h : 'sejam',\n        hh : '%d jam',\n        d : 'sehari',\n        dd : '%d hari',\n        M : 'sebulan',\n        MM : '%d bulan',\n        y : 'setahun',\n        yy : '%d tahun'\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn msMy;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ms-my.js\n// module id = 132\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Malay [ms]\n//! author : Weldan Jamili : https://github.com/weldan\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar ms = moment.defineLocale('ms', {\n    months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),\n    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n    weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n    weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n    weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n    longDateFormat : {\n        LT : 'HH.mm',\n        LTS : 'HH.mm.ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY [pukul] HH.mm',\n        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'\n    },\n    meridiemParse: /pagi|tengahari|petang|malam/,\n    meridiemHour: function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'pagi') {\n            return hour;\n        } else if (meridiem === 'tengahari') {\n            return hour >= 11 ? hour : hour + 12;\n        } else if (meridiem === 'petang' || meridiem === 'malam') {\n            return hour + 12;\n        }\n    },\n    meridiem : function (hours, minutes, isLower) {\n        if (hours < 11) {\n            return 'pagi';\n        } else if (hours < 15) {\n            return 'tengahari';\n        } else if (hours < 19) {\n            return 'petang';\n        } else {\n            return 'malam';\n        }\n    },\n    calendar : {\n        sameDay : '[Hari ini pukul] LT',\n        nextDay : '[Esok pukul] LT',\n        nextWeek : 'dddd [pukul] LT',\n        lastDay : '[Kelmarin pukul] LT',\n        lastWeek : 'dddd [lepas pukul] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'dalam %s',\n        past : '%s yang lepas',\n        s : 'beberapa saat',\n        m : 'seminit',\n        mm : '%d minit',\n        h : 'sejam',\n        hh : '%d jam',\n        d : 'sehari',\n        dd : '%d hari',\n        M : 'sebulan',\n        MM : '%d bulan',\n        y : 'setahun',\n        yy : '%d tahun'\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn ms;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ms.js\n// module id = 133\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Burmese [my]\n//! author : Squar team, mysquar.com\n//! author : David Rossellat : https://github.com/gholadr\n//! author : Tin Aung Lin : https://github.com/thanyawzinmin\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar symbolMap = {\n    '1': '၁',\n    '2': '၂',\n    '3': '၃',\n    '4': '၄',\n    '5': '၅',\n    '6': '၆',\n    '7': '၇',\n    '8': '၈',\n    '9': '၉',\n    '0': '၀'\n};\nvar numberMap = {\n    '၁': '1',\n    '၂': '2',\n    '၃': '3',\n    '၄': '4',\n    '၅': '5',\n    '၆': '6',\n    '၇': '7',\n    '၈': '8',\n    '၉': '9',\n    '၀': '0'\n};\n\nvar my = moment.defineLocale('my', {\n    months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),\n    monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),\n    weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),\n    weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n    weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[ယနေ.] LT [မှာ]',\n        nextDay: '[မနက်ဖြန်] LT [မှာ]',\n        nextWeek: 'dddd LT [မှာ]',\n        lastDay: '[မနေ.က] LT [မှာ]',\n        lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'လာမည့် %s မှာ',\n        past: 'လွန်ခဲ့သော %s က',\n        s: 'စက္ကန်.အနည်းငယ်',\n        m: 'တစ်မိနစ်',\n        mm: '%d မိနစ်',\n        h: 'တစ်နာရီ',\n        hh: '%d နာရီ',\n        d: 'တစ်ရက်',\n        dd: '%d ရက်',\n        M: 'တစ်လ',\n        MM: '%d လ',\n        y: 'တစ်နှစ်',\n        yy: '%d နှစ်'\n    },\n    preparse: function (string) {\n        return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {\n            return numberMap[match];\n        });\n    },\n    postformat: function (string) {\n        return string.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        });\n    },\n    week: {\n        dow: 1, // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn my;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/my.js\n// module id = 134\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Norwegian Bokmål [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar nb = moment.defineLocale('nb', {\n    months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n    monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n    weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n    weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D. MMMM YYYY',\n        LLL : 'D. MMMM YYYY [kl.] HH:mm',\n        LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'\n    },\n    calendar : {\n        sameDay: '[i dag kl.] LT',\n        nextDay: '[i morgen kl.] LT',\n        nextWeek: 'dddd [kl.] LT',\n        lastDay: '[i går kl.] LT',\n        lastWeek: '[forrige] dddd [kl.] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'om %s',\n        past : '%s siden',\n        s : 'noen sekunder',\n        m : 'ett minutt',\n        mm : '%d minutter',\n        h : 'en time',\n        hh : '%d timer',\n        d : 'en dag',\n        dd : '%d dager',\n        M : 'en måned',\n        MM : '%d måneder',\n        y : 'ett år',\n        yy : '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn nb;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/nb.js\n// module id = 135\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Nepalese [ne]\n//! author : suvash : https://github.com/suvash\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar symbolMap = {\n    '1': '१',\n    '2': '२',\n    '3': '३',\n    '4': '४',\n    '5': '५',\n    '6': '६',\n    '7': '७',\n    '8': '८',\n    '9': '९',\n    '0': '०'\n};\nvar numberMap = {\n    '१': '1',\n    '२': '2',\n    '३': '3',\n    '४': '4',\n    '५': '5',\n    '६': '6',\n    '७': '7',\n    '८': '8',\n    '९': '9',\n    '०': '0'\n};\n\nvar ne = moment.defineLocale('ne', {\n    months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),\n    monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),\n    weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),\n    weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'Aको h:mm बजे',\n        LTS : 'Aको h:mm:ss बजे',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY, Aको h:mm बजे',\n        LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'\n    },\n    preparse: function (string) {\n        return string.replace(/[१२३४५६७८९०]/g, function (match) {\n            return numberMap[match];\n        });\n    },\n    postformat: function (string) {\n        return string.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        });\n    },\n    meridiemParse: /राति|बिहान|दिउँसो|साँझ/,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'राति') {\n            return hour < 4 ? hour : hour + 12;\n        } else if (meridiem === 'बिहान') {\n            return hour;\n        } else if (meridiem === 'दिउँसो') {\n            return hour >= 10 ? hour : hour + 12;\n        } else if (meridiem === 'साँझ') {\n            return hour + 12;\n        }\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 3) {\n            return 'राति';\n        } else if (hour < 12) {\n            return 'बिहान';\n        } else if (hour < 16) {\n            return 'दिउँसो';\n        } else if (hour < 20) {\n            return 'साँझ';\n        } else {\n            return 'राति';\n        }\n    },\n    calendar : {\n        sameDay : '[आज] LT',\n        nextDay : '[भोलि] LT',\n        nextWeek : '[आउँदो] dddd[,] LT',\n        lastDay : '[हिजो] LT',\n        lastWeek : '[गएको] dddd[,] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%sमा',\n        past : '%s अगाडि',\n        s : 'केही क्षण',\n        m : 'एक मिनेट',\n        mm : '%d मिनेट',\n        h : 'एक घण्टा',\n        hh : '%d घण्टा',\n        d : 'एक दिन',\n        dd : '%d दिन',\n        M : 'एक महिना',\n        MM : '%d महिना',\n        y : 'एक बर्ष',\n        yy : '%d बर्ष'\n    },\n    week : {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn ne;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ne.js\n// module id = 136\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\nvar monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\nvar monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nvar monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\nvar nlBe = moment.defineLocale('nl-be', {\n    months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n    monthsShort : function (m, format) {\n        if (!m) {\n            return monthsShortWithDots;\n        } else if (/-MMM-/.test(format)) {\n            return monthsShortWithoutDots[m.month()];\n        } else {\n            return monthsShortWithDots[m.month()];\n        }\n    },\n\n    monthsRegex: monthsRegex,\n    monthsShortRegex: monthsRegex,\n    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n    monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n    monthsParse : monthsParse,\n    longMonthsParse : monthsParse,\n    shortMonthsParse : monthsParse,\n\n    weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n    weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n    weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[vandaag om] LT',\n        nextDay: '[morgen om] LT',\n        nextWeek: 'dddd [om] LT',\n        lastDay: '[gisteren om] LT',\n        lastWeek: '[afgelopen] dddd [om] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'over %s',\n        past : '%s geleden',\n        s : 'een paar seconden',\n        m : 'één minuut',\n        mm : '%d minuten',\n        h : 'één uur',\n        hh : '%d uur',\n        d : 'één dag',\n        dd : '%d dagen',\n        M : 'één maand',\n        MM : '%d maanden',\n        y : 'één jaar',\n        yy : '%d jaar'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    ordinal : function (number) {\n        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn nlBe;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/nl-be.js\n// module id = 137\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\nvar monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n\nvar monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\nvar monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\nvar nl = moment.defineLocale('nl', {\n    months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n    monthsShort : function (m, format) {\n        if (!m) {\n            return monthsShortWithDots;\n        } else if (/-MMM-/.test(format)) {\n            return monthsShortWithoutDots[m.month()];\n        } else {\n            return monthsShortWithDots[m.month()];\n        }\n    },\n\n    monthsRegex: monthsRegex,\n    monthsShortRegex: monthsRegex,\n    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n    monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n    monthsParse : monthsParse,\n    longMonthsParse : monthsParse,\n    shortMonthsParse : monthsParse,\n\n    weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n    weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),\n    weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD-MM-YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[vandaag om] LT',\n        nextDay: '[morgen om] LT',\n        nextWeek: 'dddd [om] LT',\n        lastDay: '[gisteren om] LT',\n        lastWeek: '[afgelopen] dddd [om] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'over %s',\n        past : '%s geleden',\n        s : 'een paar seconden',\n        m : 'één minuut',\n        mm : '%d minuten',\n        h : 'één uur',\n        hh : '%d uur',\n        d : 'één dag',\n        dd : '%d dagen',\n        M : 'één maand',\n        MM : '%d maanden',\n        y : 'één jaar',\n        yy : '%d jaar'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    ordinal : function (number) {\n        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn nl;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/nl.js\n// module id = 138\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Nynorsk [nn]\n//! author : https://github.com/mechuwind\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar nn = moment.defineLocale('nn', {\n    months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n    monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n    weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),\n    weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),\n    weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D. MMMM YYYY',\n        LLL : 'D. MMMM YYYY [kl.] H:mm',\n        LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'\n    },\n    calendar : {\n        sameDay: '[I dag klokka] LT',\n        nextDay: '[I morgon klokka] LT',\n        nextWeek: 'dddd [klokka] LT',\n        lastDay: '[I går klokka] LT',\n        lastWeek: '[Føregåande] dddd [klokka] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'om %s',\n        past : '%s sidan',\n        s : 'nokre sekund',\n        m : 'eit minutt',\n        mm : '%d minutt',\n        h : 'ein time',\n        hh : '%d timar',\n        d : 'ein dag',\n        dd : '%d dagar',\n        M : 'ein månad',\n        MM : '%d månader',\n        y : 'eit år',\n        yy : '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn nn;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/nn.js\n// module id = 139\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Punjabi (India) [pa-in]\n//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar symbolMap = {\n    '1': '੧',\n    '2': '੨',\n    '3': '੩',\n    '4': '੪',\n    '5': '੫',\n    '6': '੬',\n    '7': '੭',\n    '8': '੮',\n    '9': '੯',\n    '0': '੦'\n};\nvar numberMap = {\n    '੧': '1',\n    '੨': '2',\n    '੩': '3',\n    '੪': '4',\n    '੫': '5',\n    '੬': '6',\n    '੭': '7',\n    '੮': '8',\n    '੯': '9',\n    '੦': '0'\n};\n\nvar paIn = moment.defineLocale('pa-in', {\n    // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.\n    months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n    monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),\n    weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),\n    weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n    weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n    longDateFormat : {\n        LT : 'A h:mm ਵਜੇ',\n        LTS : 'A h:mm:ss ਵਜੇ',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',\n        LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'\n    },\n    calendar : {\n        sameDay : '[ਅਜ] LT',\n        nextDay : '[ਕਲ] LT',\n        nextWeek : 'dddd, LT',\n        lastDay : '[ਕਲ] LT',\n        lastWeek : '[ਪਿਛਲੇ] dddd, LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s ਵਿੱਚ',\n        past : '%s ਪਿਛਲੇ',\n        s : 'ਕੁਝ ਸਕਿੰਟ',\n        m : 'ਇਕ ਮਿੰਟ',\n        mm : '%d ਮਿੰਟ',\n        h : 'ਇੱਕ ਘੰਟਾ',\n        hh : '%d ਘੰਟੇ',\n        d : 'ਇੱਕ ਦਿਨ',\n        dd : '%d ਦਿਨ',\n        M : 'ਇੱਕ ਮਹੀਨਾ',\n        MM : '%d ਮਹੀਨੇ',\n        y : 'ਇੱਕ ਸਾਲ',\n        yy : '%d ਸਾਲ'\n    },\n    preparse: function (string) {\n        return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {\n            return numberMap[match];\n        });\n    },\n    postformat: function (string) {\n        return string.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        });\n    },\n    // Punjabi notation for meridiems are quite fuzzy in practice. While there exists\n    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.\n    meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'ਰਾਤ') {\n            return hour < 4 ? hour : hour + 12;\n        } else if (meridiem === 'ਸਵੇਰ') {\n            return hour;\n        } else if (meridiem === 'ਦੁਪਹਿਰ') {\n            return hour >= 10 ? hour : hour + 12;\n        } else if (meridiem === 'ਸ਼ਾਮ') {\n            return hour + 12;\n        }\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ਰਾਤ';\n        } else if (hour < 10) {\n            return 'ਸਵੇਰ';\n        } else if (hour < 17) {\n            return 'ਦੁਪਹਿਰ';\n        } else if (hour < 20) {\n            return 'ਸ਼ਾਮ';\n        } else {\n            return 'ਰਾਤ';\n        }\n    },\n    week : {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn paIn;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/pa-in.js\n// module id = 140\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\nvar monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\nfunction plural(n) {\n    return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);\n}\nfunction translate(number, withoutSuffix, key) {\n    var result = number + ' ';\n    switch (key) {\n        case 'm':\n            return withoutSuffix ? 'minuta' : 'minutę';\n        case 'mm':\n            return result + (plural(number) ? 'minuty' : 'minut');\n        case 'h':\n            return withoutSuffix  ? 'godzina'  : 'godzinę';\n        case 'hh':\n            return result + (plural(number) ? 'godziny' : 'godzin');\n        case 'MM':\n            return result + (plural(number) ? 'miesiące' : 'miesięcy');\n        case 'yy':\n            return result + (plural(number) ? 'lata' : 'lat');\n    }\n}\n\nvar pl = moment.defineLocale('pl', {\n    months : function (momentToFormat, format) {\n        if (!momentToFormat) {\n            return monthsNominative;\n        } else if (format === '') {\n            // Hack: if format empty we know this is used to generate\n            // RegExp by moment. Give then back both valid forms of months\n            // in RegExp ready format.\n            return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';\n        } else if (/D MMMM/.test(format)) {\n            return monthsSubjective[momentToFormat.month()];\n        } else {\n            return monthsNominative[momentToFormat.month()];\n        }\n    },\n    monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n    weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n    weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n    weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[Dziś o] LT',\n        nextDay: '[Jutro o] LT',\n        nextWeek: '[W] dddd [o] LT',\n        lastDay: '[Wczoraj o] LT',\n        lastWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[W zeszłą niedzielę o] LT';\n                case 3:\n                    return '[W zeszłą środę o] LT';\n                case 6:\n                    return '[W zeszłą sobotę o] LT';\n                default:\n                    return '[W zeszły] dddd [o] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'za %s',\n        past : '%s temu',\n        s : 'kilka sekund',\n        m : translate,\n        mm : translate,\n        h : translate,\n        hh : translate,\n        d : '1 dzień',\n        dd : '%d dni',\n        M : 'miesiąc',\n        MM : translate,\n        y : 'rok',\n        yy : translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn pl;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/pl.js\n// module id = 141\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar ptBr = moment.defineLocale('pt-br', {\n    months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n    monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n    weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n    weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n    weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D [de] MMMM [de] YYYY',\n        LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',\n        LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n    },\n    calendar : {\n        sameDay: '[Hoje às] LT',\n        nextDay: '[Amanhã às] LT',\n        nextWeek: 'dddd [às] LT',\n        lastDay: '[Ontem às] LT',\n        lastWeek: function () {\n            return (this.day() === 0 || this.day() === 6) ?\n                '[Último] dddd [às] LT' : // Saturday + Sunday\n                '[Última] dddd [às] LT'; // Monday - Friday\n        },\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'em %s',\n        past : '%s atrás',\n        s : 'poucos segundos',\n        m : 'um minuto',\n        mm : '%d minutos',\n        h : 'uma hora',\n        hh : '%d horas',\n        d : 'um dia',\n        dd : '%d dias',\n        M : 'um mês',\n        MM : '%d meses',\n        y : 'um ano',\n        yy : '%d anos'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal : '%dº'\n});\n\nreturn ptBr;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/pt-br.js\n// module id = 142\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Portuguese [pt]\n//! author : Jefferson : https://github.com/jalex79\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar pt = moment.defineLocale('pt', {\n    months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n    monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n    weekdays : 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),\n    weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n    weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D [de] MMMM [de] YYYY',\n        LLL : 'D [de] MMMM [de] YYYY HH:mm',\n        LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[Hoje às] LT',\n        nextDay: '[Amanhã às] LT',\n        nextWeek: 'dddd [às] LT',\n        lastDay: '[Ontem às] LT',\n        lastWeek: function () {\n            return (this.day() === 0 || this.day() === 6) ?\n                '[Último] dddd [às] LT' : // Saturday + Sunday\n                '[Última] dddd [às] LT'; // Monday - Friday\n        },\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'em %s',\n        past : 'há %s',\n        s : 'segundos',\n        m : 'um minuto',\n        mm : '%d minutos',\n        h : 'uma hora',\n        hh : '%d horas',\n        d : 'um dia',\n        dd : '%d dias',\n        M : 'um mês',\n        MM : '%d meses',\n        y : 'um ano',\n        yy : '%d anos'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal : '%dº',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn pt;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/pt.js\n// module id = 143\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n    var format = {\n            'mm': 'minute',\n            'hh': 'ore',\n            'dd': 'zile',\n            'MM': 'luni',\n            'yy': 'ani'\n        },\n        separator = ' ';\n    if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {\n        separator = ' de ';\n    }\n    return number + separator + format[key];\n}\n\nvar ro = moment.defineLocale('ro', {\n    months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n    monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n    weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n    weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n    longDateFormat : {\n        LT : 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY H:mm',\n        LLLL : 'dddd, D MMMM YYYY H:mm'\n    },\n    calendar : {\n        sameDay: '[azi la] LT',\n        nextDay: '[mâine la] LT',\n        nextWeek: 'dddd [la] LT',\n        lastDay: '[ieri la] LT',\n        lastWeek: '[fosta] dddd [la] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'peste %s',\n        past : '%s în urmă',\n        s : 'câteva secunde',\n        m : 'un minut',\n        mm : relativeTimeWithPlural,\n        h : 'o oră',\n        hh : relativeTimeWithPlural,\n        d : 'o zi',\n        dd : relativeTimeWithPlural,\n        M : 'o lună',\n        MM : relativeTimeWithPlural,\n        y : 'un an',\n        yy : relativeTimeWithPlural\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn ro;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ro.js\n// module id = 144\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction plural(word, num) {\n    var forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n    var format = {\n        'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n        'hh': 'час_часа_часов',\n        'dd': 'день_дня_дней',\n        'MM': 'месяц_месяца_месяцев',\n        'yy': 'год_года_лет'\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'минута' : 'минуту';\n    }\n    else {\n        return number + ' ' + plural(format[key], +number);\n    }\n}\nvar monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n\n// http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\nvar ru = moment.defineLocale('ru', {\n    months : {\n        format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n        standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n    },\n    monthsShort : {\n        // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n        format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n        standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n    },\n    weekdays : {\n        standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n        format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n        isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n    },\n    weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    monthsParse : monthsParse,\n    longMonthsParse : monthsParse,\n    shortMonthsParse : monthsParse,\n\n    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n    monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n    // копия предыдущего\n    monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n    // полные названия с падежами\n    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n    // Выражение, которое соотвествует только сокращённым формам\n    monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY г.',\n        LLL : 'D MMMM YYYY г., HH:mm',\n        LLLL : 'dddd, D MMMM YYYY г., HH:mm'\n    },\n    calendar : {\n        sameDay: '[Сегодня в] LT',\n        nextDay: '[Завтра в] LT',\n        lastDay: '[Вчера в] LT',\n        nextWeek: function (now) {\n            if (now.week() !== this.week()) {\n                switch (this.day()) {\n                    case 0:\n                        return '[В следующее] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В следующий] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В следующую] dddd [в] LT';\n                }\n            } else {\n                if (this.day() === 2) {\n                    return '[Во] dddd [в] LT';\n                } else {\n                    return '[В] dddd [в] LT';\n                }\n            }\n        },\n        lastWeek: function (now) {\n            if (now.week() !== this.week()) {\n                switch (this.day()) {\n                    case 0:\n                        return '[В прошлое] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В прошлый] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В прошлую] dddd [в] LT';\n                }\n            } else {\n                if (this.day() === 2) {\n                    return '[Во] dddd [в] LT';\n                } else {\n                    return '[В] dddd [в] LT';\n                }\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'через %s',\n        past : '%s назад',\n        s : 'несколько секунд',\n        m : relativeTimeWithPlural,\n        mm : relativeTimeWithPlural,\n        h : 'час',\n        hh : relativeTimeWithPlural,\n        d : 'день',\n        dd : relativeTimeWithPlural,\n        M : 'месяц',\n        MM : relativeTimeWithPlural,\n        y : 'год',\n        yy : relativeTimeWithPlural\n    },\n    meridiemParse: /ночи|утра|дня|вечера/i,\n    isPM : function (input) {\n        return /^(дня|вечера)$/.test(input);\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночи';\n        } else if (hour < 12) {\n            return 'утра';\n        } else if (hour < 17) {\n            return 'дня';\n        } else {\n            return 'вечера';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n    ordinal: function (number, period) {\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            case 'w':\n            case 'W':\n                return number + '-я';\n            default:\n                return number;\n        }\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn ru;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ru.js\n// module id = 145\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Sindhi [sd]\n//! author : Narain Sagar : https://github.com/narainsagar\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar months = [\n    'جنوري',\n    'فيبروري',\n    'مارچ',\n    'اپريل',\n    'مئي',\n    'جون',\n    'جولاءِ',\n    'آگسٽ',\n    'سيپٽمبر',\n    'آڪٽوبر',\n    'نومبر',\n    'ڊسمبر'\n];\nvar days = [\n    'آچر',\n    'سومر',\n    'اڱارو',\n    'اربع',\n    'خميس',\n    'جمع',\n    'ڇنڇر'\n];\n\nvar sd = moment.defineLocale('sd', {\n    months : months,\n    monthsShort : months,\n    weekdays : days,\n    weekdaysShort : days,\n    weekdaysMin : days,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd، D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /صبح|شام/,\n    isPM : function (input) {\n        return 'شام' === input;\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'صبح';\n        }\n        return 'شام';\n    },\n    calendar : {\n        sameDay : '[اڄ] LT',\n        nextDay : '[سڀاڻي] LT',\n        nextWeek : 'dddd [اڳين هفتي تي] LT',\n        lastDay : '[ڪالهه] LT',\n        lastWeek : '[گزريل هفتي] dddd [تي] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s پوء',\n        past : '%s اڳ',\n        s : 'چند سيڪنڊ',\n        m : 'هڪ منٽ',\n        mm : '%d منٽ',\n        h : 'هڪ ڪلاڪ',\n        hh : '%d ڪلاڪ',\n        d : 'هڪ ڏينهن',\n        dd : '%d ڏينهن',\n        M : 'هڪ مهينو',\n        MM : '%d مهينا',\n        y : 'هڪ سال',\n        yy : '%d سال'\n    },\n    preparse: function (string) {\n        return string.replace(/،/g, ',');\n    },\n    postformat: function (string) {\n        return string.replace(/,/g, '،');\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn sd;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/sd.js\n// module id = 146\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Northern Sami [se]\n//! authors : Bård Rolstad Henriksen : https://github.com/karamell\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n\nvar se = moment.defineLocale('se', {\n    months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),\n    monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),\n    weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),\n    weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),\n    weekdaysMin : 's_v_m_g_d_b_L'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'MMMM D. [b.] YYYY',\n        LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',\n        LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'\n    },\n    calendar : {\n        sameDay: '[otne ti] LT',\n        nextDay: '[ihttin ti] LT',\n        nextWeek: 'dddd [ti] LT',\n        lastDay: '[ikte ti] LT',\n        lastWeek: '[ovddit] dddd [ti] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : '%s geažes',\n        past : 'maŋit %s',\n        s : 'moadde sekunddat',\n        m : 'okta minuhta',\n        mm : '%d minuhtat',\n        h : 'okta diimmu',\n        hh : '%d diimmut',\n        d : 'okta beaivi',\n        dd : '%d beaivvit',\n        M : 'okta mánnu',\n        MM : '%d mánut',\n        y : 'okta jahki',\n        yy : '%d jagit'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn se;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/se.js\n// module id = 147\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Sinhalese [si]\n//! author : Sampath Sitinamaluwa : https://github.com/sampathsris\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n/*jshint -W100*/\nvar si = moment.defineLocale('si', {\n    months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),\n    monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),\n    weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),\n    weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),\n    weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'a h:mm',\n        LTS : 'a h:mm:ss',\n        L : 'YYYY/MM/DD',\n        LL : 'YYYY MMMM D',\n        LLL : 'YYYY MMMM D, a h:mm',\n        LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'\n    },\n    calendar : {\n        sameDay : '[අද] LT[ට]',\n        nextDay : '[හෙට] LT[ට]',\n        nextWeek : 'dddd LT[ට]',\n        lastDay : '[ඊයේ] LT[ට]',\n        lastWeek : '[පසුගිය] dddd LT[ට]',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%sකින්',\n        past : '%sකට පෙර',\n        s : 'තත්පර කිහිපය',\n        m : 'මිනිත්තුව',\n        mm : 'මිනිත්තු %d',\n        h : 'පැය',\n        hh : 'පැය %d',\n        d : 'දිනය',\n        dd : 'දින %d',\n        M : 'මාසය',\n        MM : 'මාස %d',\n        y : 'වසර',\n        yy : 'වසර %d'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2} වැනි/,\n    ordinal : function (number) {\n        return number + ' වැනි';\n    },\n    meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,\n    isPM : function (input) {\n        return input === 'ප.ව.' || input === 'පස් වරු';\n    },\n    meridiem : function (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'ප.ව.' : 'පස් වරු';\n        } else {\n            return isLower ? 'පෙ.ව.' : 'පෙර වරු';\n        }\n    }\n});\n\nreturn si;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/si.js\n// module id = 148\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Martin Minka : https://github.com/k2s\n//! based on work of petrbela : https://github.com/petrbela\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');\nvar monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\nfunction plural(n) {\n    return (n > 1) && (n < 5);\n}\nfunction translate(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n    switch (key) {\n        case 's':  // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n        case 'm':  // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'minúty' : 'minút');\n            } else {\n                return result + 'minútami';\n            }\n            break;\n        case 'h':  // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'hodiny' : 'hodín');\n            } else {\n                return result + 'hodinami';\n            }\n            break;\n        case 'd':  // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'dni' : 'dní');\n            } else {\n                return result + 'dňami';\n            }\n            break;\n        case 'M':  // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'mesiace' : 'mesiacov');\n            } else {\n                return result + 'mesiacmi';\n            }\n            break;\n        case 'y':  // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(number) ? 'roky' : 'rokov');\n            } else {\n                return result + 'rokmi';\n            }\n            break;\n    }\n}\n\nvar sk = moment.defineLocale('sk', {\n    months : months,\n    monthsShort : monthsShort,\n    weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n    weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),\n    weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),\n    longDateFormat : {\n        LT: 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D. MMMM YYYY',\n        LLL : 'D. MMMM YYYY H:mm',\n        LLLL : 'dddd D. MMMM YYYY H:mm'\n    },\n    calendar : {\n        sameDay: '[dnes o] LT',\n        nextDay: '[zajtra o] LT',\n        nextWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[v nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [o] LT';\n                case 3:\n                    return '[v stredu o] LT';\n                case 4:\n                    return '[vo štvrtok o] LT';\n                case 5:\n                    return '[v piatok o] LT';\n                case 6:\n                    return '[v sobotu o] LT';\n            }\n        },\n        lastDay: '[včera o] LT',\n        lastWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[minulú nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[minulý] dddd [o] LT';\n                case 3:\n                    return '[minulú stredu o] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [o] LT';\n                case 6:\n                    return '[minulú sobotu o] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'za %s',\n        past : 'pred %s',\n        s : translate,\n        m : translate,\n        mm : translate,\n        h : translate,\n        hh : translate,\n        d : translate,\n        dd : translate,\n        M : translate,\n        MM : translate,\n        y : translate,\n        yy : translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn sk;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/sk.js\n// module id = 149\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : Robert Sedovšek : https://github.com/sedovsek\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var result = number + ' ';\n    switch (key) {\n        case 's':\n            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n        case 'm':\n            return withoutSuffix ? 'ena minuta' : 'eno minuto';\n        case 'mm':\n            if (number === 1) {\n                result += withoutSuffix ? 'minuta' : 'minuto';\n            } else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n            } else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n            } else {\n                result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'ena ura' : 'eno uro';\n        case 'hh':\n            if (number === 1) {\n                result += withoutSuffix ? 'ura' : 'uro';\n            } else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'uri' : 'urama';\n            } else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'ure' : 'urami';\n            } else {\n                result += withoutSuffix || isFuture ? 'ur' : 'urami';\n            }\n            return result;\n        case 'd':\n            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n        case 'dd':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n            } else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n            } else {\n                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n            }\n            return result;\n        case 'M':\n            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n        case 'MM':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n            } else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n            } else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n            } else {\n                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n            }\n            return result;\n        case 'y':\n            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n        case 'yy':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'leto' : 'letom';\n            } else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n            } else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'leta' : 'leti';\n            } else {\n                result += withoutSuffix || isFuture ? 'let' : 'leti';\n            }\n            return result;\n    }\n}\n\nvar sl = moment.defineLocale('sl', {\n    months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n    monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n    weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n    weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D. MMMM YYYY',\n        LLL : 'D. MMMM YYYY H:mm',\n        LLLL : 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar : {\n        sameDay  : '[danes ob] LT',\n        nextDay  : '[jutri ob] LT',\n\n        nextWeek : function () {\n            switch (this.day()) {\n                case 0:\n                    return '[v] [nedeljo] [ob] LT';\n                case 3:\n                    return '[v] [sredo] [ob] LT';\n                case 6:\n                    return '[v] [soboto] [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[v] dddd [ob] LT';\n            }\n        },\n        lastDay  : '[včeraj ob] LT',\n        lastWeek : function () {\n            switch (this.day()) {\n                case 0:\n                    return '[prejšnjo] [nedeljo] [ob] LT';\n                case 3:\n                    return '[prejšnjo] [sredo] [ob] LT';\n                case 6:\n                    return '[prejšnjo] [soboto] [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prejšnji] dddd [ob] LT';\n            }\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'čez %s',\n        past   : 'pred %s',\n        s      : processRelativeTime,\n        m      : processRelativeTime,\n        mm     : processRelativeTime,\n        h      : processRelativeTime,\n        hh     : processRelativeTime,\n        d      : processRelativeTime,\n        dd     : processRelativeTime,\n        M      : processRelativeTime,\n        MM     : processRelativeTime,\n        y      : processRelativeTime,\n        yy     : processRelativeTime\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn sl;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/sl.js\n// module id = 150\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Albanian [sq]\n//! author : Flakërim Ismani : https://github.com/flakerimi\n//! author : Menelion Elensúle : https://github.com/Oire\n//! author : Oerd Cukalla : https://github.com/oerd\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar sq = moment.defineLocale('sq', {\n    months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n    monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n    weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n    weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n    weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),\n    weekdaysParseExact : true,\n    meridiemParse: /PD|MD/,\n    isPM: function (input) {\n        return input.charAt(0) === 'M';\n    },\n    meridiem : function (hours, minutes, isLower) {\n        return hours < 12 ? 'PD' : 'MD';\n    },\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[Sot në] LT',\n        nextDay : '[Nesër në] LT',\n        nextWeek : 'dddd [në] LT',\n        lastDay : '[Dje në] LT',\n        lastWeek : 'dddd [e kaluar në] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'në %s',\n        past : '%s më parë',\n        s : 'disa sekonda',\n        m : 'një minutë',\n        mm : '%d minuta',\n        h : 'një orë',\n        hh : '%d orë',\n        d : 'një ditë',\n        dd : '%d ditë',\n        M : 'një muaj',\n        MM : '%d muaj',\n        y : 'një vit',\n        yy : '%d vite'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn sq;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/sq.js\n// module id = 151\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Serbian Cyrillic [sr-cyrl]\n//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar translator = {\n    words: { //Different grammatical cases\n        m: ['један минут', 'једне минуте'],\n        mm: ['минут', 'минуте', 'минута'],\n        h: ['један сат', 'једног сата'],\n        hh: ['сат', 'сата', 'сати'],\n        dd: ['дан', 'дана', 'дана'],\n        MM: ['месец', 'месеца', 'месеци'],\n        yy: ['година', 'године', 'година']\n    },\n    correctGrammaticalCase: function (number, wordKey) {\n        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n    },\n    translate: function (number, withoutSuffix, key) {\n        var wordKey = translator.words[key];\n        if (key.length === 1) {\n            return withoutSuffix ? wordKey[0] : wordKey[1];\n        } else {\n            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n        }\n    }\n};\n\nvar srCyrl = moment.defineLocale('sr-cyrl', {\n    months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),\n    monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),\n    weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),\n    weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS : 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[данас у] LT',\n        nextDay: '[сутра у] LT',\n        nextWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[у] [недељу] [у] LT';\n                case 3:\n                    return '[у] [среду] [у] LT';\n                case 6:\n                    return '[у] [суботу] [у] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[у] dddd [у] LT';\n            }\n        },\n        lastDay  : '[јуче у] LT',\n        lastWeek : function () {\n            var lastWeekDays = [\n                '[прошле] [недеље] [у] LT',\n                '[прошлог] [понедељка] [у] LT',\n                '[прошлог] [уторка] [у] LT',\n                '[прошле] [среде] [у] LT',\n                '[прошлог] [четвртка] [у] LT',\n                '[прошлог] [петка] [у] LT',\n                '[прошле] [суботе] [у] LT'\n            ];\n            return lastWeekDays[this.day()];\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'за %s',\n        past   : 'пре %s',\n        s      : 'неколико секунди',\n        m      : translator.translate,\n        mm     : translator.translate,\n        h      : translator.translate,\n        hh     : translator.translate,\n        d      : 'дан',\n        dd     : translator.translate,\n        M      : 'месец',\n        MM     : translator.translate,\n        y      : 'годину',\n        yy     : translator.translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn srCyrl;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/sr-cyrl.js\n// module id = 152\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Serbian [sr]\n//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar translator = {\n    words: { //Different grammatical cases\n        m: ['jedan minut', 'jedne minute'],\n        mm: ['minut', 'minute', 'minuta'],\n        h: ['jedan sat', 'jednog sata'],\n        hh: ['sat', 'sata', 'sati'],\n        dd: ['dan', 'dana', 'dana'],\n        MM: ['mesec', 'meseca', 'meseci'],\n        yy: ['godina', 'godine', 'godina']\n    },\n    correctGrammaticalCase: function (number, wordKey) {\n        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);\n    },\n    translate: function (number, withoutSuffix, key) {\n        var wordKey = translator.words[key];\n        if (key.length === 1) {\n            return withoutSuffix ? wordKey[0] : wordKey[1];\n        } else {\n            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);\n        }\n    }\n};\n\nvar sr = moment.defineLocale('sr', {\n    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),\n    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),\n    weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),\n    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS : 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[danas u] LT',\n        nextDay: '[sutra u] LT',\n        nextWeek: function () {\n            switch (this.day()) {\n                case 0:\n                    return '[u] [nedelju] [u] LT';\n                case 3:\n                    return '[u] [sredu] [u] LT';\n                case 6:\n                    return '[u] [subotu] [u] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[u] dddd [u] LT';\n            }\n        },\n        lastDay  : '[juče u] LT',\n        lastWeek : function () {\n            var lastWeekDays = [\n                '[prošle] [nedelje] [u] LT',\n                '[prošlog] [ponedeljka] [u] LT',\n                '[prošlog] [utorka] [u] LT',\n                '[prošle] [srede] [u] LT',\n                '[prošlog] [četvrtka] [u] LT',\n                '[prošlog] [petka] [u] LT',\n                '[prošle] [subote] [u] LT'\n            ];\n            return lastWeekDays[this.day()];\n        },\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'za %s',\n        past   : 'pre %s',\n        s      : 'nekoliko sekundi',\n        m      : translator.translate,\n        mm     : translator.translate,\n        h      : translator.translate,\n        hh     : translator.translate,\n        d      : 'dan',\n        dd     : translator.translate,\n        M      : 'mesec',\n        MM     : translator.translate,\n        y      : 'godinu',\n        yy     : translator.translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn sr;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/sr.js\n// module id = 153\n// module chunks = 0","//! moment.js locale configuration\n//! locale : siSwati [ss]\n//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n\nvar ss = moment.defineLocale('ss', {\n    months : \"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split('_'),\n    monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),\n    weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),\n    weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),\n    weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'h:mm A',\n        LTS : 'h:mm:ss A',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY h:mm A',\n        LLLL : 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendar : {\n        sameDay : '[Namuhla nga] LT',\n        nextDay : '[Kusasa nga] LT',\n        nextWeek : 'dddd [nga] LT',\n        lastDay : '[Itolo nga] LT',\n        lastWeek : 'dddd [leliphelile] [nga] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'nga %s',\n        past : 'wenteka nga %s',\n        s : 'emizuzwana lomcane',\n        m : 'umzuzu',\n        mm : '%d emizuzu',\n        h : 'lihora',\n        hh : '%d emahora',\n        d : 'lilanga',\n        dd : '%d emalanga',\n        M : 'inyanga',\n        MM : '%d tinyanga',\n        y : 'umnyaka',\n        yy : '%d iminyaka'\n    },\n    meridiemParse: /ekuseni|emini|entsambama|ebusuku/,\n    meridiem : function (hours, minutes, isLower) {\n        if (hours < 11) {\n            return 'ekuseni';\n        } else if (hours < 15) {\n            return 'emini';\n        } else if (hours < 19) {\n            return 'entsambama';\n        } else {\n            return 'ebusuku';\n        }\n    },\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'ekuseni') {\n            return hour;\n        } else if (meridiem === 'emini') {\n            return hour >= 11 ? hour : hour + 12;\n        } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {\n            if (hour === 0) {\n                return 0;\n            }\n            return hour + 12;\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}/,\n    ordinal : '%d',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn ss;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ss.js\n// module id = 154\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar sv = moment.defineLocale('sv', {\n    months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n    weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n    weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n    weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'YYYY-MM-DD',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY [kl.] HH:mm',\n        LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',\n        lll : 'D MMM YYYY HH:mm',\n        llll : 'ddd D MMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[Idag] LT',\n        nextDay: '[Imorgon] LT',\n        lastDay: '[Igår] LT',\n        nextWeek: '[På] dddd LT',\n        lastWeek: '[I] dddd[s] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'om %s',\n        past : 'för %s sedan',\n        s : 'några sekunder',\n        m : 'en minut',\n        mm : '%d minuter',\n        h : 'en timme',\n        hh : '%d timmar',\n        d : 'en dag',\n        dd : '%d dagar',\n        M : 'en månad',\n        MM : '%d månader',\n        y : 'ett år',\n        yy : '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (~~(number % 100 / 10) === 1) ? 'e' :\n            (b === 1) ? 'a' :\n            (b === 2) ? 'a' :\n            (b === 3) ? 'e' : 'e';\n        return number + output;\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn sv;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/sv.js\n// module id = 155\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Swahili [sw]\n//! author : Fahad Kassim : https://github.com/fadsel\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar sw = moment.defineLocale('sw', {\n    months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),\n    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),\n    weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),\n    weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),\n    weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[leo saa] LT',\n        nextDay : '[kesho saa] LT',\n        nextWeek : '[wiki ijayo] dddd [saat] LT',\n        lastDay : '[jana] LT',\n        lastWeek : '[wiki iliyopita] dddd [saat] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s baadaye',\n        past : 'tokea %s',\n        s : 'hivi punde',\n        m : 'dakika moja',\n        mm : 'dakika %d',\n        h : 'saa limoja',\n        hh : 'masaa %d',\n        d : 'siku moja',\n        dd : 'masiku %d',\n        M : 'mwezi mmoja',\n        MM : 'miezi %d',\n        y : 'mwaka mmoja',\n        yy : 'miaka %d'\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn sw;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/sw.js\n// module id = 156\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Tamil [ta]\n//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar symbolMap = {\n    '1': '௧',\n    '2': '௨',\n    '3': '௩',\n    '4': '௪',\n    '5': '௫',\n    '6': '௬',\n    '7': '௭',\n    '8': '௮',\n    '9': '௯',\n    '0': '௦'\n};\nvar numberMap = {\n    '௧': '1',\n    '௨': '2',\n    '௩': '3',\n    '௪': '4',\n    '௫': '5',\n    '௬': '6',\n    '௭': '7',\n    '௮': '8',\n    '௯': '9',\n    '௦': '0'\n};\n\nvar ta = moment.defineLocale('ta', {\n    months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n    monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),\n    weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),\n    weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),\n    weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY, HH:mm',\n        LLLL : 'dddd, D MMMM YYYY, HH:mm'\n    },\n    calendar : {\n        sameDay : '[இன்று] LT',\n        nextDay : '[நாளை] LT',\n        nextWeek : 'dddd, LT',\n        lastDay : '[நேற்று] LT',\n        lastWeek : '[கடந்த வாரம்] dddd, LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s இல்',\n        past : '%s முன்',\n        s : 'ஒரு சில விநாடிகள்',\n        m : 'ஒரு நிமிடம்',\n        mm : '%d நிமிடங்கள்',\n        h : 'ஒரு மணி நேரம்',\n        hh : '%d மணி நேரம்',\n        d : 'ஒரு நாள்',\n        dd : '%d நாட்கள்',\n        M : 'ஒரு மாதம்',\n        MM : '%d மாதங்கள்',\n        y : 'ஒரு வருடம்',\n        yy : '%d ஆண்டுகள்'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}வது/,\n    ordinal : function (number) {\n        return number + 'வது';\n    },\n    preparse: function (string) {\n        return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {\n            return numberMap[match];\n        });\n    },\n    postformat: function (string) {\n        return string.replace(/\\d/g, function (match) {\n            return symbolMap[match];\n        });\n    },\n    // refer http://ta.wikipedia.org/s/1er1\n    meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 2) {\n            return ' யாமம்';\n        } else if (hour < 6) {\n            return ' வைகறை';  // வைகறை\n        } else if (hour < 10) {\n            return ' காலை'; // காலை\n        } else if (hour < 14) {\n            return ' நண்பகல்'; // நண்பகல்\n        } else if (hour < 18) {\n            return ' எற்பாடு'; // எற்பாடு\n        } else if (hour < 22) {\n            return ' மாலை'; // மாலை\n        } else {\n            return ' யாமம்';\n        }\n    },\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'யாமம்') {\n            return hour < 2 ? hour : hour + 12;\n        } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {\n            return hour;\n        } else if (meridiem === 'நண்பகல்') {\n            return hour >= 10 ? hour : hour + 12;\n        } else {\n            return hour + 12;\n        }\n    },\n    week : {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn ta;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ta.js\n// module id = 157\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Telugu [te]\n//! author : Krishna Chaitanya Thota : https://github.com/kcthota\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar te = moment.defineLocale('te', {\n    months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),\n    monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),\n    weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),\n    weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),\n    longDateFormat : {\n        LT : 'A h:mm',\n        LTS : 'A h:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY, A h:mm',\n        LLLL : 'dddd, D MMMM YYYY, A h:mm'\n    },\n    calendar : {\n        sameDay : '[నేడు] LT',\n        nextDay : '[రేపు] LT',\n        nextWeek : 'dddd, LT',\n        lastDay : '[నిన్న] LT',\n        lastWeek : '[గత] dddd, LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s లో',\n        past : '%s క్రితం',\n        s : 'కొన్ని క్షణాలు',\n        m : 'ఒక నిమిషం',\n        mm : '%d నిమిషాలు',\n        h : 'ఒక గంట',\n        hh : '%d గంటలు',\n        d : 'ఒక రోజు',\n        dd : '%d రోజులు',\n        M : 'ఒక నెల',\n        MM : '%d నెలలు',\n        y : 'ఒక సంవత్సరం',\n        yy : '%d సంవత్సరాలు'\n    },\n    dayOfMonthOrdinalParse : /\\d{1,2}వ/,\n    ordinal : '%dవ',\n    meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'రాత్రి') {\n            return hour < 4 ? hour : hour + 12;\n        } else if (meridiem === 'ఉదయం') {\n            return hour;\n        } else if (meridiem === 'మధ్యాహ్నం') {\n            return hour >= 10 ? hour : hour + 12;\n        } else if (meridiem === 'సాయంత్రం') {\n            return hour + 12;\n        }\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'రాత్రి';\n        } else if (hour < 10) {\n            return 'ఉదయం';\n        } else if (hour < 17) {\n            return 'మధ్యాహ్నం';\n        } else if (hour < 20) {\n            return 'సాయంత్రం';\n        } else {\n            return 'రాత్రి';\n        }\n    },\n    week : {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn te;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/te.js\n// module id = 158\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Tetun Dili (East Timor) [tet]\n//! author : Joshua Brooks : https://github.com/joshbrooks\n//! author : Onorio De J. Afonso : https://github.com/marobo\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar tet = moment.defineLocale('tet', {\n    months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juniu_Juliu_Augustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),\n    monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Aug_Set_Out_Nov_Dez'.split('_'),\n    weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sexta_Sabadu'.split('_'),\n    weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sext_Sab'.split('_'),\n    weekdaysMin : 'Do_Seg_Te_Ku_Ki_Sex_Sa'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[Ohin iha] LT',\n        nextDay: '[Aban iha] LT',\n        nextWeek: 'dddd [iha] LT',\n        lastDay: '[Horiseik iha] LT',\n        lastWeek: 'dddd [semana kotuk] [iha] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'iha %s',\n        past : '%s liuba',\n        s : 'minutu balun',\n        m : 'minutu ida',\n        mm : 'minutus %d',\n        h : 'horas ida',\n        hh : 'horas %d',\n        d : 'loron ida',\n        dd : 'loron %d',\n        M : 'fulan ida',\n        MM : 'fulan %d',\n        y : 'tinan ida',\n        yy : 'tinan %d'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (~~(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn tet;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/tet.js\n// module id = 159\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Thai [th]\n//! author : Kridsada Thanabulpong : https://github.com/sirn\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar th = moment.defineLocale('th', {\n    months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n    monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n    monthsParseExact: true,\n    weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n    weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference\n    weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'H:mm',\n        LTS : 'H:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY เวลา H:mm',\n        LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'\n    },\n    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n    isPM: function (input) {\n        return input === 'หลังเที่ยง';\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ก่อนเที่ยง';\n        } else {\n            return 'หลังเที่ยง';\n        }\n    },\n    calendar : {\n        sameDay : '[วันนี้ เวลา] LT',\n        nextDay : '[พรุ่งนี้ เวลา] LT',\n        nextWeek : 'dddd[หน้า เวลา] LT',\n        lastDay : '[เมื่อวานนี้ เวลา] LT',\n        lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'อีก %s',\n        past : '%sที่แล้ว',\n        s : 'ไม่กี่วินาที',\n        m : '1 นาที',\n        mm : '%d นาที',\n        h : '1 ชั่วโมง',\n        hh : '%d ชั่วโมง',\n        d : '1 วัน',\n        dd : '%d วัน',\n        M : '1 เดือน',\n        MM : '%d เดือน',\n        y : '1 ปี',\n        yy : '%d ปี'\n    }\n});\n\nreturn th;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/th.js\n// module id = 160\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Tagalog (Philippines) [tl-ph]\n//! author : Dan Hagman : https://github.com/hagmandan\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar tlPh = moment.defineLocale('tl-ph', {\n    months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),\n    monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n    weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),\n    weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n    weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'MM/D/YYYY',\n        LL : 'MMMM D, YYYY',\n        LLL : 'MMMM D, YYYY HH:mm',\n        LLLL : 'dddd, MMMM DD, YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: 'LT [ngayong araw]',\n        nextDay: '[Bukas ng] LT',\n        nextWeek: 'LT [sa susunod na] dddd',\n        lastDay: 'LT [kahapon]',\n        lastWeek: 'LT [noong nakaraang] dddd',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'sa loob ng %s',\n        past : '%s ang nakalipas',\n        s : 'ilang segundo',\n        m : 'isang minuto',\n        mm : '%d minuto',\n        h : 'isang oras',\n        hh : '%d oras',\n        d : 'isang araw',\n        dd : '%d araw',\n        M : 'isang buwan',\n        MM : '%d buwan',\n        y : 'isang taon',\n        yy : '%d taon'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}/,\n    ordinal : function (number) {\n        return number;\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn tlPh;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/tl-ph.js\n// module id = 161\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Klingon [tlh]\n//! author : Dominika Kruk : https://github.com/amaranthrose\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');\n\nfunction translateFuture(output) {\n    var time = output;\n    time = (output.indexOf('jaj') !== -1) ?\n    time.slice(0, -3) + 'leS' :\n    (output.indexOf('jar') !== -1) ?\n    time.slice(0, -3) + 'waQ' :\n    (output.indexOf('DIS') !== -1) ?\n    time.slice(0, -3) + 'nem' :\n    time + ' pIq';\n    return time;\n}\n\nfunction translatePast(output) {\n    var time = output;\n    time = (output.indexOf('jaj') !== -1) ?\n    time.slice(0, -3) + 'Hu’' :\n    (output.indexOf('jar') !== -1) ?\n    time.slice(0, -3) + 'wen' :\n    (output.indexOf('DIS') !== -1) ?\n    time.slice(0, -3) + 'ben' :\n    time + ' ret';\n    return time;\n}\n\nfunction translate(number, withoutSuffix, string, isFuture) {\n    var numberNoun = numberAsNoun(number);\n    switch (string) {\n        case 'mm':\n            return numberNoun + ' tup';\n        case 'hh':\n            return numberNoun + ' rep';\n        case 'dd':\n            return numberNoun + ' jaj';\n        case 'MM':\n            return numberNoun + ' jar';\n        case 'yy':\n            return numberNoun + ' DIS';\n    }\n}\n\nfunction numberAsNoun(number) {\n    var hundred = Math.floor((number % 1000) / 100),\n    ten = Math.floor((number % 100) / 10),\n    one = number % 10,\n    word = '';\n    if (hundred > 0) {\n        word += numbersNouns[hundred] + 'vatlh';\n    }\n    if (ten > 0) {\n        word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';\n    }\n    if (one > 0) {\n        word += ((word !== '') ? ' ' : '') + numbersNouns[one];\n    }\n    return (word === '') ? 'pagh' : word;\n}\n\nvar tlh = moment.defineLocale('tlh', {\n    months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),\n    monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n    weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n    weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[DaHjaj] LT',\n        nextDay: '[wa’leS] LT',\n        nextWeek: 'LLL',\n        lastDay: '[wa’Hu’] LT',\n        lastWeek: 'LLL',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : translateFuture,\n        past : translatePast,\n        s : 'puS lup',\n        m : 'wa’ tup',\n        mm : translate,\n        h : 'wa’ rep',\n        hh : translate,\n        d : 'wa’ jaj',\n        dd : translate,\n        M : 'wa’ jar',\n        MM : translate,\n        y : 'wa’ DIS',\n        yy : translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn tlh;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/tlh.js\n// module id = 162\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak Yiğit Kaya: https://github.com/BYK\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar suffixes = {\n    1: '\\'inci',\n    5: '\\'inci',\n    8: '\\'inci',\n    70: '\\'inci',\n    80: '\\'inci',\n    2: '\\'nci',\n    7: '\\'nci',\n    20: '\\'nci',\n    50: '\\'nci',\n    3: '\\'üncü',\n    4: '\\'üncü',\n    100: '\\'üncü',\n    6: '\\'ncı',\n    9: '\\'uncu',\n    10: '\\'uncu',\n    30: '\\'uncu',\n    60: '\\'ıncı',\n    90: '\\'ıncı'\n};\n\nvar tr = moment.defineLocale('tr', {\n    months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n    monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n    weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n    weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n    weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[bugün saat] LT',\n        nextDay : '[yarın saat] LT',\n        nextWeek : '[haftaya] dddd [saat] LT',\n        lastDay : '[dün] LT',\n        lastWeek : '[geçen hafta] dddd [saat] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s sonra',\n        past : '%s önce',\n        s : 'birkaç saniye',\n        m : 'bir dakika',\n        mm : '%d dakika',\n        h : 'bir saat',\n        hh : '%d saat',\n        d : 'bir gün',\n        dd : '%d gün',\n        M : 'bir ay',\n        MM : '%d ay',\n        y : 'bir yıl',\n        yy : '%d yıl'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n    ordinal : function (number) {\n        if (number === 0) {  // special case for zero\n            return number + '\\'ıncı';\n        }\n        var a = number % 10,\n            b = number % 100 - a,\n            c = number >= 100 ? 100 : null;\n        return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn tr;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/tr.js\n// module id = 163\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Talossan [tzl]\n//! author : Robin van der Vliet : https://github.com/robin0van0der0v\n//! author : Iustì Canun\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\n// After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.\n// This is currently too difficult (maybe even impossible) to add.\nvar tzl = moment.defineLocale('tzl', {\n    months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),\n    monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),\n    weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),\n    weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),\n    weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),\n    longDateFormat : {\n        LT : 'HH.mm',\n        LTS : 'HH.mm.ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D. MMMM [dallas] YYYY',\n        LLL : 'D. MMMM [dallas] YYYY HH.mm',\n        LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'\n    },\n    meridiemParse: /d\\'o|d\\'a/i,\n    isPM : function (input) {\n        return 'd\\'o' === input.toLowerCase();\n    },\n    meridiem : function (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'd\\'o' : 'D\\'O';\n        } else {\n            return isLower ? 'd\\'a' : 'D\\'A';\n        }\n    },\n    calendar : {\n        sameDay : '[oxhi à] LT',\n        nextDay : '[demà à] LT',\n        nextWeek : 'dddd [à] LT',\n        lastDay : '[ieiri à] LT',\n        lastWeek : '[sür el] dddd [lasteu à] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'osprei %s',\n        past : 'ja%s',\n        s : processRelativeTime,\n        m : processRelativeTime,\n        mm : processRelativeTime,\n        h : processRelativeTime,\n        hh : processRelativeTime,\n        d : processRelativeTime,\n        dd : processRelativeTime,\n        M : processRelativeTime,\n        MM : processRelativeTime,\n        y : processRelativeTime,\n        yy : processRelativeTime\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal : '%d.',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nfunction processRelativeTime(number, withoutSuffix, key, isFuture) {\n    var format = {\n        's': ['viensas secunds', '\\'iensas secunds'],\n        'm': ['\\'n míut', '\\'iens míut'],\n        'mm': [number + ' míuts', '' + number + ' míuts'],\n        'h': ['\\'n þora', '\\'iensa þora'],\n        'hh': [number + ' þoras', '' + number + ' þoras'],\n        'd': ['\\'n ziua', '\\'iensa ziua'],\n        'dd': [number + ' ziuas', '' + number + ' ziuas'],\n        'M': ['\\'n mes', '\\'iens mes'],\n        'MM': [number + ' mesen', '' + number + ' mesen'],\n        'y': ['\\'n ar', '\\'iens ar'],\n        'yy': [number + ' ars', '' + number + ' ars']\n    };\n    return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);\n}\n\nreturn tzl;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/tzl.js\n// module id = 164\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Central Atlas Tamazight Latin [tzm-latn]\n//! author : Abdel Said : https://github.com/abdelsaid\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar tzmLatn = moment.defineLocale('tzm-latn', {\n    months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n    monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),\n    weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n    weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n    weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[asdkh g] LT',\n        nextDay: '[aska g] LT',\n        nextWeek: 'dddd [g] LT',\n        lastDay: '[assant g] LT',\n        lastWeek: 'dddd [g] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'dadkh s yan %s',\n        past : 'yan %s',\n        s : 'imik',\n        m : 'minuḍ',\n        mm : '%d minuḍ',\n        h : 'saɛa',\n        hh : '%d tassaɛin',\n        d : 'ass',\n        dd : '%d ossan',\n        M : 'ayowr',\n        MM : '%d iyyirn',\n        y : 'asgas',\n        yy : '%d isgasn'\n    },\n    week : {\n        dow : 6, // Saturday is the first day of the week.\n        doy : 12  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn tzmLatn;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/tzm-latn.js\n// module id = 165\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Central Atlas Tamazight [tzm]\n//! author : Abdel Said : https://github.com/abdelsaid\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar tzm = moment.defineLocale('tzm', {\n    months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n    monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),\n    weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n    weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n    weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',\n        nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n        nextWeek: 'dddd [ⴴ] LT',\n        lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n        lastWeek: 'dddd [ⴴ] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',\n        past : 'ⵢⴰⵏ %s',\n        s : 'ⵉⵎⵉⴽ',\n        m : 'ⵎⵉⵏⵓⴺ',\n        mm : '%d ⵎⵉⵏⵓⴺ',\n        h : 'ⵙⴰⵄⴰ',\n        hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',\n        d : 'ⴰⵙⵙ',\n        dd : '%d oⵙⵙⴰⵏ',\n        M : 'ⴰⵢoⵓⵔ',\n        MM : '%d ⵉⵢⵢⵉⵔⵏ',\n        y : 'ⴰⵙⴳⴰⵙ',\n        yy : '%d ⵉⵙⴳⴰⵙⵏ'\n    },\n    week : {\n        dow : 6, // Saturday is the first day of the week.\n        doy : 12  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn tzm;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/tzm.js\n// module id = 166\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nfunction plural(word, num) {\n    var forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\nfunction relativeTimeWithPlural(number, withoutSuffix, key) {\n    var format = {\n        'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n        'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n        'dd': 'день_дні_днів',\n        'MM': 'місяць_місяці_місяців',\n        'yy': 'рік_роки_років'\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'хвилина' : 'хвилину';\n    }\n    else if (key === 'h') {\n        return withoutSuffix ? 'година' : 'годину';\n    }\n    else {\n        return number + ' ' + plural(format[key], +number);\n    }\n}\nfunction weekdaysCaseReplace(m, format) {\n    var weekdays = {\n        'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n        'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n        'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n    };\n\n    if (!m) {\n        return weekdays['nominative'];\n    }\n\n    var nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n        'accusative' :\n        ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n            'genitive' :\n            'nominative');\n    return weekdays[nounCase][m.day()];\n}\nfunction processHoursFunction(str) {\n    return function () {\n        return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n    };\n}\n\nvar uk = moment.defineLocale('uk', {\n    months : {\n        'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n        'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n    },\n    monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n    weekdays : weekdaysCaseReplace,\n    weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD.MM.YYYY',\n        LL : 'D MMMM YYYY р.',\n        LLL : 'D MMMM YYYY р., HH:mm',\n        LLLL : 'dddd, D MMMM YYYY р., HH:mm'\n    },\n    calendar : {\n        sameDay: processHoursFunction('[Сьогодні '),\n        nextDay: processHoursFunction('[Завтра '),\n        lastDay: processHoursFunction('[Вчора '),\n        nextWeek: processHoursFunction('[У] dddd ['),\n        lastWeek: function () {\n            switch (this.day()) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return processHoursFunction('[Минулої] dddd [').call(this);\n                case 1:\n                case 2:\n                case 4:\n                    return processHoursFunction('[Минулого] dddd [').call(this);\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : 'за %s',\n        past : '%s тому',\n        s : 'декілька секунд',\n        m : relativeTimeWithPlural,\n        mm : relativeTimeWithPlural,\n        h : 'годину',\n        hh : relativeTimeWithPlural,\n        d : 'день',\n        dd : relativeTimeWithPlural,\n        M : 'місяць',\n        MM : relativeTimeWithPlural,\n        y : 'рік',\n        yy : relativeTimeWithPlural\n    },\n    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n    meridiemParse: /ночі|ранку|дня|вечора/,\n    isPM: function (input) {\n        return /^(дня|вечора)$/.test(input);\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночі';\n        } else if (hour < 12) {\n            return 'ранку';\n        } else if (hour < 17) {\n            return 'дня';\n        } else {\n            return 'вечора';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n    ordinal: function (number, period) {\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return number + '-й';\n            case 'D':\n                return number + '-го';\n            default:\n                return number;\n        }\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn uk;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/uk.js\n// module id = 167\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Urdu [ur]\n//! author : Sawood Alam : https://github.com/ibnesayeed\n//! author : Zack : https://github.com/ZackVision\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar months = [\n    'جنوری',\n    'فروری',\n    'مارچ',\n    'اپریل',\n    'مئی',\n    'جون',\n    'جولائی',\n    'اگست',\n    'ستمبر',\n    'اکتوبر',\n    'نومبر',\n    'دسمبر'\n];\nvar days = [\n    'اتوار',\n    'پیر',\n    'منگل',\n    'بدھ',\n    'جمعرات',\n    'جمعہ',\n    'ہفتہ'\n];\n\nvar ur = moment.defineLocale('ur', {\n    months : months,\n    monthsShort : months,\n    weekdays : days,\n    weekdaysShort : days,\n    weekdaysMin : days,\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd، D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /صبح|شام/,\n    isPM : function (input) {\n        return 'شام' === input;\n    },\n    meridiem : function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'صبح';\n        }\n        return 'شام';\n    },\n    calendar : {\n        sameDay : '[آج بوقت] LT',\n        nextDay : '[کل بوقت] LT',\n        nextWeek : 'dddd [بوقت] LT',\n        lastDay : '[گذشتہ روز بوقت] LT',\n        lastWeek : '[گذشتہ] dddd [بوقت] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : '%s بعد',\n        past : '%s قبل',\n        s : 'چند سیکنڈ',\n        m : 'ایک منٹ',\n        mm : '%d منٹ',\n        h : 'ایک گھنٹہ',\n        hh : '%d گھنٹے',\n        d : 'ایک دن',\n        dd : '%d دن',\n        M : 'ایک ماہ',\n        MM : '%d ماہ',\n        y : 'ایک سال',\n        yy : '%d سال'\n    },\n    preparse: function (string) {\n        return string.replace(/،/g, ',');\n    },\n    postformat: function (string) {\n        return string.replace(/,/g, '،');\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn ur;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/ur.js\n// module id = 168\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Uzbek Latin [uz-latn]\n//! author : Rasulbek Mirzayev : github.com/Rasulbeeek\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar uzLatn = moment.defineLocale('uz-latn', {\n    months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),\n    monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),\n    weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),\n    weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),\n    weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'D MMMM YYYY, dddd HH:mm'\n    },\n    calendar : {\n        sameDay : '[Bugun soat] LT [da]',\n        nextDay : '[Ertaga] LT [da]',\n        nextWeek : 'dddd [kuni soat] LT [da]',\n        lastDay : '[Kecha soat] LT [da]',\n        lastWeek : '[O\\'tgan] dddd [kuni soat] LT [da]',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'Yaqin %s ichida',\n        past : 'Bir necha %s oldin',\n        s : 'soniya',\n        m : 'bir daqiqa',\n        mm : '%d daqiqa',\n        h : 'bir soat',\n        hh : '%d soat',\n        d : 'bir kun',\n        dd : '%d kun',\n        M : 'bir oy',\n        MM : '%d oy',\n        y : 'bir yil',\n        yy : '%d yil'\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 1st is the first week of the year.\n    }\n});\n\nreturn uzLatn;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/uz-latn.js\n// module id = 169\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Uzbek [uz]\n//! author : Sardor Muminov : https://github.com/muminoff\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar uz = moment.defineLocale('uz', {\n    months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),\n    monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n    weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),\n    weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),\n    weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'D MMMM YYYY, dddd HH:mm'\n    },\n    calendar : {\n        sameDay : '[Бугун соат] LT [да]',\n        nextDay : '[Эртага] LT [да]',\n        nextWeek : 'dddd [куни соат] LT [да]',\n        lastDay : '[Кеча соат] LT [да]',\n        lastWeek : '[Утган] dddd [куни соат] LT [да]',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'Якин %s ичида',\n        past : 'Бир неча %s олдин',\n        s : 'фурсат',\n        m : 'бир дакика',\n        mm : '%d дакика',\n        h : 'бир соат',\n        hh : '%d соат',\n        d : 'бир кун',\n        dd : '%d кун',\n        M : 'бир ой',\n        MM : '%d ой',\n        y : 'бир йил',\n        yy : '%d йил'\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 7  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn uz;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/uz.js\n// module id = 170\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Vietnamese [vi]\n//! author : Bang Nguyen : https://github.com/bangnk\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar vi = moment.defineLocale('vi', {\n    months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n    monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n    weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n    weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n    weekdaysParseExact : true,\n    meridiemParse: /sa|ch/i,\n    isPM : function (input) {\n        return /^ch$/i.test(input);\n    },\n    meridiem : function (hours, minutes, isLower) {\n        if (hours < 12) {\n            return isLower ? 'sa' : 'SA';\n        } else {\n            return isLower ? 'ch' : 'CH';\n        }\n    },\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM [năm] YYYY',\n        LLL : 'D MMMM [năm] YYYY HH:mm',\n        LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',\n        l : 'DD/M/YYYY',\n        ll : 'D MMM YYYY',\n        lll : 'D MMM YYYY HH:mm',\n        llll : 'ddd, D MMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay: '[Hôm nay lúc] LT',\n        nextDay: '[Ngày mai lúc] LT',\n        nextWeek: 'dddd [tuần tới lúc] LT',\n        lastDay: '[Hôm qua lúc] LT',\n        lastWeek: 'dddd [tuần rồi lúc] LT',\n        sameElse: 'L'\n    },\n    relativeTime : {\n        future : '%s tới',\n        past : '%s trước',\n        s : 'vài giây',\n        m : 'một phút',\n        mm : '%d phút',\n        h : 'một giờ',\n        hh : '%d giờ',\n        d : 'một ngày',\n        dd : '%d ngày',\n        M : 'một tháng',\n        MM : '%d tháng',\n        y : 'một năm',\n        yy : '%d năm'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}/,\n    ordinal : function (number) {\n        return number;\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn vi;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/vi.js\n// module id = 171\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Pseudo [x-pseudo]\n//! author : Andrew Hood : https://github.com/andrewhood125\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar xPseudo = moment.defineLocale('x-pseudo', {\n    months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),\n    monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),\n    monthsParseExact : true,\n    weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),\n    weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),\n    weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),\n    weekdaysParseExact : true,\n    longDateFormat : {\n        LT : 'HH:mm',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY HH:mm',\n        LLLL : 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar : {\n        sameDay : '[T~ódá~ý át] LT',\n        nextDay : '[T~ómó~rró~w át] LT',\n        nextWeek : 'dddd [át] LT',\n        lastDay : '[Ý~ést~érdá~ý át] LT',\n        lastWeek : '[L~ást] dddd [át] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'í~ñ %s',\n        past : '%s á~gó',\n        s : 'á ~féw ~sécó~ñds',\n        m : 'á ~míñ~úté',\n        mm : '%d m~íñú~tés',\n        h : 'á~ñ hó~úr',\n        hh : '%d h~óúrs',\n        d : 'á ~dáý',\n        dd : '%d d~áýs',\n        M : 'á ~móñ~th',\n        MM : '%d m~óñt~hs',\n        y : 'á ~ýéár',\n        yy : '%d ý~éárs'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal : function (number) {\n        var b = number % 10,\n            output = (~~(number % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n            (b === 2) ? 'nd' :\n            (b === 3) ? 'rd' : 'th';\n        return number + output;\n    },\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn xPseudo;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/x-pseudo.js\n// module id = 172\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Yoruba Nigeria [yo]\n//! author : Atolagbe Abisoye : https://github.com/andela-batolagbe\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar yo = moment.defineLocale('yo', {\n    months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),\n    monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),\n    weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),\n    weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),\n    weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),\n    longDateFormat : {\n        LT : 'h:mm A',\n        LTS : 'h:mm:ss A',\n        L : 'DD/MM/YYYY',\n        LL : 'D MMMM YYYY',\n        LLL : 'D MMMM YYYY h:mm A',\n        LLLL : 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendar : {\n        sameDay : '[Ònì ni] LT',\n        nextDay : '[Ọ̀la ni] LT',\n        nextWeek : 'dddd [Ọsẹ̀ tón\\'bọ] [ni] LT',\n        lastDay : '[Àna ni] LT',\n        lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',\n        sameElse : 'L'\n    },\n    relativeTime : {\n        future : 'ní %s',\n        past : '%s kọjá',\n        s : 'ìsẹjú aayá die',\n        m : 'ìsẹjú kan',\n        mm : 'ìsẹjú %d',\n        h : 'wákati kan',\n        hh : 'wákati %d',\n        d : 'ọjọ́ kan',\n        dd : 'ọjọ́ %d',\n        M : 'osù kan',\n        MM : 'osù %d',\n        y : 'ọdún kan',\n        yy : 'ọdún %d'\n    },\n    dayOfMonthOrdinalParse : /ọjọ́\\s\\d{1,2}/,\n    ordinal : 'ọjọ́ %d',\n    week : {\n        dow : 1, // Monday is the first day of the week.\n        doy : 4 // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn yo;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/yo.js\n// module id = 173\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar zhCn = moment.defineLocale('zh-cn', {\n    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n    weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'YYYY年MMMD日',\n        LL : 'YYYY年MMMD日',\n        LLL : 'YYYY年MMMD日Ah点mm分',\n        LLLL : 'YYYY年MMMD日ddddAh点mm分',\n        l : 'YYYY年MMMD日',\n        ll : 'YYYY年MMMD日',\n        lll : 'YYYY年MMMD日 HH:mm',\n        llll : 'YYYY年MMMD日dddd HH:mm'\n    },\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n    meridiemHour: function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === '凌晨' || meridiem === '早上' ||\n                meridiem === '上午') {\n            return hour;\n        } else if (meridiem === '下午' || meridiem === '晚上') {\n            return hour + 12;\n        } else {\n            // '中午'\n            return hour >= 11 ? hour : hour + 12;\n        }\n    },\n    meridiem : function (hour, minute, isLower) {\n        var hm = hour * 100 + minute;\n        if (hm < 600) {\n            return '凌晨';\n        } else if (hm < 900) {\n            return '早上';\n        } else if (hm < 1130) {\n            return '上午';\n        } else if (hm < 1230) {\n            return '中午';\n        } else if (hm < 1800) {\n            return '下午';\n        } else {\n            return '晚上';\n        }\n    },\n    calendar : {\n        sameDay : '[今天]LT',\n        nextDay : '[明天]LT',\n        nextWeek : '[下]ddddLT',\n        lastDay : '[昨天]LT',\n        lastWeek : '[上]ddddLT',\n        sameElse : 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n    ordinal : function (number, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return number + '日';\n            case 'M':\n                return number + '月';\n            case 'w':\n            case 'W':\n                return number + '周';\n            default:\n                return number;\n        }\n    },\n    relativeTime : {\n        future : '%s内',\n        past : '%s前',\n        s : '几秒',\n        m : '1 分钟',\n        mm : '%d 分钟',\n        h : '1 小时',\n        hh : '%d 小时',\n        d : '1 天',\n        dd : '%d 天',\n        M : '1 个月',\n        MM : '%d 个月',\n        y : '1 年',\n        yy : '%d 年'\n    },\n    week : {\n        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n        dow : 1, // Monday is the first day of the week.\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\n    }\n});\n\nreturn zhCn;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/zh-cn.js\n// module id = 174\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Chinese (Hong Kong) [zh-hk]\n//! author : Ben : https://github.com/ben-lin\n//! author : Chris Lam : https://github.com/hehachris\n//! author : Konstantin : https://github.com/skfd\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar zhHk = moment.defineLocale('zh-hk', {\n    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n    weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'YYYY年MMMD日',\n        LL : 'YYYY年MMMD日',\n        LLL : 'YYYY年MMMD日 HH:mm',\n        LLLL : 'YYYY年MMMD日dddd HH:mm',\n        l : 'YYYY年MMMD日',\n        ll : 'YYYY年MMMD日',\n        lll : 'YYYY年MMMD日 HH:mm',\n        llll : 'YYYY年MMMD日dddd HH:mm'\n    },\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n            return hour;\n        } else if (meridiem === '中午') {\n            return hour >= 11 ? hour : hour + 12;\n        } else if (meridiem === '下午' || meridiem === '晚上') {\n            return hour + 12;\n        }\n    },\n    meridiem : function (hour, minute, isLower) {\n        var hm = hour * 100 + minute;\n        if (hm < 600) {\n            return '凌晨';\n        } else if (hm < 900) {\n            return '早上';\n        } else if (hm < 1130) {\n            return '上午';\n        } else if (hm < 1230) {\n            return '中午';\n        } else if (hm < 1800) {\n            return '下午';\n        } else {\n            return '晚上';\n        }\n    },\n    calendar : {\n        sameDay : '[今天]LT',\n        nextDay : '[明天]LT',\n        nextWeek : '[下]ddddLT',\n        lastDay : '[昨天]LT',\n        lastWeek : '[上]ddddLT',\n        sameElse : 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n    ordinal : function (number, period) {\n        switch (period) {\n            case 'd' :\n            case 'D' :\n            case 'DDD' :\n                return number + '日';\n            case 'M' :\n                return number + '月';\n            case 'w' :\n            case 'W' :\n                return number + '週';\n            default :\n                return number;\n        }\n    },\n    relativeTime : {\n        future : '%s內',\n        past : '%s前',\n        s : '幾秒',\n        m : '1 分鐘',\n        mm : '%d 分鐘',\n        h : '1 小時',\n        hh : '%d 小時',\n        d : '1 天',\n        dd : '%d 天',\n        M : '1 個月',\n        MM : '%d 個月',\n        y : '1 年',\n        yy : '%d 年'\n    }\n});\n\nreturn zhHk;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/zh-hk.js\n// module id = 175\n// module chunks = 0","//! moment.js locale configuration\n//! locale : Chinese (Taiwan) [zh-tw]\n//! author : Ben : https://github.com/ben-lin\n//! author : Chris Lam : https://github.com/hehachris\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n\nvar zhTw = moment.defineLocale('zh-tw', {\n    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n    weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),\n    longDateFormat : {\n        LT : 'HH:mm',\n        LTS : 'HH:mm:ss',\n        L : 'YYYY年MMMD日',\n        LL : 'YYYY年MMMD日',\n        LLL : 'YYYY年MMMD日 HH:mm',\n        LLLL : 'YYYY年MMMD日dddd HH:mm',\n        l : 'YYYY年MMMD日',\n        ll : 'YYYY年MMMD日',\n        lll : 'YYYY年MMMD日 HH:mm',\n        llll : 'YYYY年MMMD日dddd HH:mm'\n    },\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n    meridiemHour : function (hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n            return hour;\n        } else if (meridiem === '中午') {\n            return hour >= 11 ? hour : hour + 12;\n        } else if (meridiem === '下午' || meridiem === '晚上') {\n            return hour + 12;\n        }\n    },\n    meridiem : function (hour, minute, isLower) {\n        var hm = hour * 100 + minute;\n        if (hm < 600) {\n            return '凌晨';\n        } else if (hm < 900) {\n            return '早上';\n        } else if (hm < 1130) {\n            return '上午';\n        } else if (hm < 1230) {\n            return '中午';\n        } else if (hm < 1800) {\n            return '下午';\n        } else {\n            return '晚上';\n        }\n    },\n    calendar : {\n        sameDay : '[今天]LT',\n        nextDay : '[明天]LT',\n        nextWeek : '[下]ddddLT',\n        lastDay : '[昨天]LT',\n        lastWeek : '[上]ddddLT',\n        sameElse : 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n    ordinal : function (number, period) {\n        switch (period) {\n            case 'd' :\n            case 'D' :\n            case 'DDD' :\n                return number + '日';\n            case 'M' :\n                return number + '月';\n            case 'w' :\n            case 'W' :\n                return number + '週';\n            default :\n                return number;\n        }\n    },\n    relativeTime : {\n        future : '%s內',\n        past : '%s前',\n        s : '幾秒',\n        m : '1 分鐘',\n        mm : '%d 分鐘',\n        h : '1 小時',\n        hh : '%d 小時',\n        d : '1 天',\n        dd : '%d 天',\n        M : '1 個月',\n        MM : '%d 個月',\n        y : '1 年',\n        yy : '%d 年'\n    }\n});\n\nreturn zhTw;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale/zh-tw.js\n// module id = 176\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 177\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('not a function');\n  }\n  this._45 = 0;\n  this._81 = 0;\n  this._65 = null;\n  this._54 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._10 = null;\nPromise._97 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n};\nfunction handle(self, deferred) {\n  while (self._81 === 3) {\n    self = self._65;\n  }\n  if (Promise._10) {\n    Promise._10(self);\n  }\n  if (self._81 === 0) {\n    if (self._45 === 0) {\n      self._45 = 1;\n      self._54 = deferred;\n      return;\n    }\n    if (self._45 === 1) {\n      self._45 = 2;\n      self._54 = [self._54, deferred];\n      return;\n    }\n    self._54.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._81 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._81 === 1) {\n        resolve(deferred.promise, self._65);\n      } else {\n        reject(deferred.promise, self._65);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._65);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._81 = 3;\n      self._65 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._81 = 1;\n  self._65 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._81 = 2;\n  self._65 = newValue;\n  if (Promise._97) {\n    Promise._97(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._45 === 1) {\n    handle(self, self._54);\n    self._54 = null;\n  }\n  if (self._45 === 2) {\n    for (var i = 0; i < self._54.length; i++) {\n      handle(self, self._54[i]);\n    }\n    self._54 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  })\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/core.js\n// module id = 178\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n// React 15.5 references this module, and assumes PropTypes are still callable in production.\n// Therefore we re-export development-only version with all the PropTypes checks here.\n// However if one is migrating to the `prop-types` npm library, they will go through the\n// `index.js` entry point, and it will branch depending on the environment.\nvar factory = require('./factoryWithTypeCheckers');\nmodule.exports = function(isValidElement) {\n  // It is still allowed in 15.5.\n  var throwOnDirectAccess = false;\n  return factory(isValidElement, throwOnDirectAccess);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factory.js\n// module id = 179\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\n\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridColumn: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Most style properties can be unset by doing .style[prop] = '' but IE8\n * doesn't like doing that with shorthand properties so for the properties that\n * IE8 breaks on, which are listed here, we instead unset each of the\n * individual properties. See http://bugs.jquery.com/ticket/12385.\n * The 4-value 'clock' properties like margin, padding, border-width seem to\n * behave without any problems. Curiously, list-style works too without any\n * special prodding.\n */\nvar shorthandPropertyExpansions = {\n  background: {\n    backgroundAttachment: true,\n    backgroundColor: true,\n    backgroundImage: true,\n    backgroundPositionX: true,\n    backgroundPositionY: true,\n    backgroundRepeat: true\n  },\n  backgroundPosition: {\n    backgroundPositionX: true,\n    backgroundPositionY: true\n  },\n  border: {\n    borderWidth: true,\n    borderStyle: true,\n    borderColor: true\n  },\n  borderBottom: {\n    borderBottomWidth: true,\n    borderBottomStyle: true,\n    borderBottomColor: true\n  },\n  borderLeft: {\n    borderLeftWidth: true,\n    borderLeftStyle: true,\n    borderLeftColor: true\n  },\n  borderRight: {\n    borderRightWidth: true,\n    borderRightStyle: true,\n    borderRightColor: true\n  },\n  borderTop: {\n    borderTopWidth: true,\n    borderTopStyle: true,\n    borderTopColor: true\n  },\n  font: {\n    fontStyle: true,\n    fontVariant: true,\n    fontWeight: true,\n    fontSize: true,\n    lineHeight: true,\n    fontFamily: true\n  },\n  outline: {\n    outlineWidth: true,\n    outlineStyle: true,\n    outlineColor: true\n  }\n};\n\nvar CSSProperty = {\n  isUnitlessNumber: isUnitlessNumber,\n  shorthandPropertyExpansions: shorthandPropertyExpansions\n};\n\nmodule.exports = CSSProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/CSSProperty.js\n// module id = 180\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PooledClass = require('./PooledClass');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\n\nvar CallbackQueue = function () {\n  function CallbackQueue(arg) {\n    _classCallCheck(this, CallbackQueue);\n\n    this._callbacks = null;\n    this._contexts = null;\n    this._arg = arg;\n  }\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._callbacks.push(callback);\n    this._contexts = this._contexts || [];\n    this._contexts.push(context);\n  };\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.notifyAll = function notifyAll() {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    var arg = this._arg;\n    if (callbacks && contexts) {\n      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].call(contexts[i], arg);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  };\n\n  CallbackQueue.prototype.checkpoint = function checkpoint() {\n    return this._callbacks ? this._callbacks.length : 0;\n  };\n\n  CallbackQueue.prototype.rollback = function rollback(len) {\n    if (this._callbacks && this._contexts) {\n      this._callbacks.length = len;\n      this._contexts.length = len;\n    }\n  };\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n\n\n  CallbackQueue.prototype.reset = function reset() {\n    this._callbacks = null;\n    this._contexts = null;\n  };\n\n  /**\n   * `PooledClass` looks for this.\n   */\n\n\n  CallbackQueue.prototype.destructor = function destructor() {\n    this.reset();\n  };\n\n  return CallbackQueue;\n}();\n\nmodule.exports = PooledClass.addPoolingTo(CallbackQueue);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/CallbackQueue.js\n// module id = 181\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');\nvar warning = require('fbjs/lib/warning');\n\nvar VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\n\nfunction isAttributeNameSafe(attributeName) {\n  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n    return true;\n  }\n  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;\n  return false;\n}\n\nfunction shouldIgnoreValue(propertyInfo, value) {\n  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function (id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n  },\n\n  setAttributeForID: function (node, id) {\n    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n  },\n\n  createMarkupForRoot: function () {\n    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=\"\"';\n  },\n\n  setAttributeForRoot: function (node) {\n    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      if (shouldIgnoreValue(propertyInfo, value)) {\n        return '';\n      }\n      var attributeName = propertyInfo.attributeName;\n      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n        return attributeName + '=\"\"';\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    }\n    return null;\n  },\n\n  /**\n   * Creates markup for a custom property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {string} Markup string, or empty string if the property was invalid.\n   */\n  createMarkupForCustomAttribute: function (name, value) {\n    if (!isAttributeNameSafe(name) || value == null) {\n      return '';\n    }\n    return name + '=' + quoteAttributeValueForBrowser(value);\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(propertyInfo, value)) {\n        this.deleteValueForProperty(node, name);\n        return;\n      } else if (propertyInfo.mustUseProperty) {\n        // Contrary to `setAttribute`, object properties are properly\n        // `toString`ed by IE8/9.\n        node[propertyInfo.propertyName] = value;\n      } else {\n        var attributeName = propertyInfo.attributeName;\n        var namespace = propertyInfo.attributeNamespace;\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        if (namespace) {\n          node.setAttributeNS(namespace, attributeName, '' + value);\n        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n          node.setAttribute(attributeName, '');\n        } else {\n          node.setAttribute(attributeName, '' + value);\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      DOMPropertyOperations.setValueForAttribute(node, name, value);\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'update attribute',\n        payload: payload\n      });\n    }\n  },\n\n  setValueForAttribute: function (node, name, value) {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (value == null) {\n      node.removeAttribute(name);\n    } else {\n      node.setAttribute(name, '' + value);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var payload = {};\n      payload[name] = value;\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'update attribute',\n        payload: payload\n      });\n    }\n  },\n\n  /**\n   * Deletes an attributes from a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForAttribute: function (node, name) {\n    node.removeAttribute(name);\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'remove attribute',\n        payload: name\n      });\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (propertyInfo.mustUseProperty) {\n        var propName = propertyInfo.propertyName;\n        if (propertyInfo.hasBooleanValue) {\n          node[propName] = false;\n        } else {\n          node[propName] = '';\n        }\n      } else {\n        node.removeAttribute(propertyInfo.attributeName);\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,\n        type: 'remove attribute',\n        payload: name\n      });\n    }\n  }\n\n};\n\nmodule.exports = DOMPropertyOperations;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DOMPropertyOperations.js\n// module id = 182\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMComponentFlags = {\n  hasCachedChildNodes: 1 << 0\n};\n\nmodule.exports = ReactDOMComponentFlags;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMComponentFlags.js\n// module id = 183\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnValueDefaultValue = false;\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n    this._wrapperState.pendingUpdate = false;\n\n    var props = this._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n\n    if (value != null) {\n      updateOptions(this, Boolean(props.multiple), value);\n    }\n  }\n}\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nvar valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction checkSelectPropTypes(inst, props) {\n  var owner = inst._currentElement._owner;\n  LinkedValueUtils.checkPropTypes('select', props, owner);\n\n  if (props.valueLink !== undefined && !didWarnValueLink) {\n    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;\n    didWarnValueLink = true;\n  }\n\n  for (var i = 0; i < valuePropNames.length; i++) {\n    var propName = valuePropNames[i];\n    if (props[propName] == null) {\n      continue;\n    }\n    var isArray = Array.isArray(props[propName]);\n    if (props.multiple && !isArray) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    } else if (!props.multiple && isArray) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;\n    }\n  }\n}\n\n/**\n * @param {ReactDOMComponent} inst\n * @param {boolean} multiple\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(inst, multiple, propValue) {\n  var selectedValue, i;\n  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;\n\n  if (multiple) {\n    selectedValue = {};\n    for (i = 0; i < propValue.length; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0; i < options.length; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> host component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = {\n  getHostProps: function (inst, props) {\n    return _assign({}, props, {\n      onChange: inst._wrapperState.onChange,\n      value: undefined\n    });\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkSelectPropTypes(inst, props);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    inst._wrapperState = {\n      pendingUpdate: false,\n      initialValue: value != null ? value : props.defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst),\n      wasMultiple: Boolean(props.multiple)\n    };\n\n    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n      didWarnValueDefaultValue = true;\n    }\n  },\n\n  getSelectValueContext: function (inst) {\n    // ReactDOMOption looks at this initial value so the initial generated\n    // markup has correct `selected` attributes\n    return inst._wrapperState.initialValue;\n  },\n\n  postUpdateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // After the initial mount, we control selected-ness manually so don't pass\n    // this value down\n    inst._wrapperState.initialValue = undefined;\n\n    var wasMultiple = inst._wrapperState.wasMultiple;\n    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      inst._wrapperState.pendingUpdate = false;\n      updateOptions(inst, Boolean(props.multiple), value);\n    } else if (wasMultiple !== Boolean(props.multiple)) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (props.defaultValue != null) {\n        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n      }\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  if (this._rootNodeID) {\n    this._wrapperState.pendingUpdate = true;\n  }\n  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMSelect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMSelect.js\n// module id = 184\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyComponentFactory;\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponentFactory: function (factory) {\n    emptyComponentFactory = factory;\n  }\n};\n\nvar ReactEmptyComponent = {\n  create: function (instantiate) {\n    return emptyComponentFactory(instantiate);\n  }\n};\n\nReactEmptyComponent.injection = ReactEmptyComponentInjection;\n\nmodule.exports = ReactEmptyComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactEmptyComponent.js\n// module id = 185\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactFeatureFlags = {\n  // When true, call console.time() before and .timeEnd() after each top-level\n  // render (both initial renders and updates). Useful when looking at prod-mode\n  // timeline profiles in Chrome, for example.\n  logTopLevelRenders: false\n};\n\nmodule.exports = ReactFeatureFlags;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactFeatureFlags.js\n// module id = 186\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar genericComponentClass = null;\nvar textComponentClass = null;\n\nvar ReactHostComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function (componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function (componentClass) {\n    textComponentClass = componentClass;\n  }\n};\n\n/**\n * Get a host internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;\n  return new genericComponentClass(element);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactHostComponent = {\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactHostComponentInjection\n};\n\nmodule.exports = ReactHostComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactHostComponent.js\n// module id = 187\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMSelection = require('./ReactDOMSelection');\n\nvar containsNode = require('fbjs/lib/containsNode');\nvar focusNode = require('fbjs/lib/focusNode');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n\n  hasSelectionCapabilities: function (elem) {\n    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n  },\n\n  getSelectionInformation: function () {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function (priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function (input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || { start: 0, end: 0 };\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function (input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (end === undefined) {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInputSelection.js\n// module id = 188\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMProperty = require('./DOMProperty');\nvar React = require('react/lib/React');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMContainerInfo = require('./ReactDOMContainerInfo');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactFeatureFlags = require('./ReactFeatureFlags');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\nvar setInnerHTML = require('./setInnerHTML');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\nvar instancesByReactRootID = {};\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n * a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {\n  var markerName;\n  if (ReactFeatureFlags.logTopLevelRenders) {\n    var wrappedElement = wrapperInstance._currentElement.props.child;\n    var type = wrappedElement.type;\n    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);\n    console.time(markerName);\n  }\n\n  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */\n  );\n\n  if (markerName) {\n    console.timeEnd(markerName);\n  }\n\n  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;\n  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* useCreateElement */\n  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);\n  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Unmounts a component and removes it from the DOM.\n *\n * @param {ReactComponent} instance React component instance.\n * @param {DOMElement} container DOM element to unmount from.\n * @final\n * @internal\n * @see {ReactMount.unmountComponentAtNode}\n */\nfunction unmountComponentFromNode(instance, container, safely) {\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onBeginFlush();\n  }\n  ReactReconciler.unmountComponent(instance, safely);\n  if (process.env.NODE_ENV !== 'production') {\n    ReactInstrumentation.debugTool.onEndFlush();\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    container = container.documentElement;\n  }\n\n  // http://jsperf.com/emptying-a-node\n  while (container.lastChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\n/**\n * True if the supplied DOM node has a direct React-rendered child that is\n * not a React root element. Useful for warning in `render`,\n * `unmountComponentAtNode`, etc.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM element contains a direct child that was\n * rendered by React but is not a root element.\n * @internal\n */\nfunction hasNonRootReactChild(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  if (rootEl) {\n    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);\n    return !!(inst && inst._hostParent);\n  }\n}\n\n/**\n * True if the supplied DOM node is a React DOM element and\n * it has been rendered by another copy of React.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM has been rendered by another copy of React\n * @internal\n */\nfunction nodeIsRenderedByOtherInstance(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));\n}\n\n/**\n * True if the supplied DOM node is a valid node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid DOM node.\n * @internal\n */\nfunction isValidContainer(node) {\n  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n}\n\n/**\n * True if the supplied DOM node is a valid React node element.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM is a valid React DOM node.\n * @internal\n */\nfunction isReactNode(node) {\n  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));\n}\n\nfunction getHostRootInstanceInContainer(container) {\n  var rootEl = getReactRootElementInContainer(container);\n  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);\n  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;\n}\n\nfunction getTopLevelWrapperInContainer(container) {\n  var root = getHostRootInstanceInContainer(container);\n  return root ? root._hostContainerInfo._topLevelWrapper : null;\n}\n\n/**\n * Temporary (?) hack so that we can store all top-level pending updates on\n * composites instead of having to worry about different types of components\n * here.\n */\nvar topLevelRootCounter = 1;\nvar TopLevelWrapper = function () {\n  this.rootID = topLevelRootCounter++;\n};\nTopLevelWrapper.prototype.isReactComponent = {};\nif (process.env.NODE_ENV !== 'production') {\n  TopLevelWrapper.displayName = 'TopLevelWrapper';\n}\nTopLevelWrapper.prototype.render = function () {\n  return this.props.child;\n};\nTopLevelWrapper.isReactTopLevelWrapper = true;\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n\n  TopLevelWrapper: TopLevelWrapper,\n\n  /**\n   * Used by devtools. The keys are not important.\n   */\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function (container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {\n    ReactMount.scrollMonitor(container, function () {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    return prevComponent;\n  },\n\n  /**\n   * Render a new component into the DOM. Hooked by hooks!\n   *\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n    var componentInstance = instantiateReactComponent(nextElement, false);\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);\n\n    var wrapperID = componentInstance._instance.rootID;\n    instancesByReactRootID[wrapperID] = componentInstance;\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;\n    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n  },\n\n  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');\n    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :\n    // Check if it quacks like an element\n    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \\'div\\', pass ' + 'React.createElement(\\'div\\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;\n\n    var nextWrappedElement = React.createElement(TopLevelWrapper, { child: nextElement });\n\n    var nextContext;\n    if (parentComponent) {\n      var parentInst = ReactInstanceMap.get(parentComponent);\n      nextContext = parentInst._processChildContext(parentInst._context);\n    } else {\n      nextContext = emptyObject;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n\n    if (prevComponent) {\n      var prevWrappedElement = prevComponent._currentElement;\n      var prevElement = prevWrappedElement.props.child;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n        var updatedCallback = callback && function () {\n          callback.call(publicInst);\n        };\n        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);\n        return publicInst;\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;\n\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (internalGetID(rootElementSibling)) {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;\n            break;\n          }\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function (nextElement, container, callback) {\n    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function (container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;\n\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by another copy of React.') : void 0;\n    }\n\n    var prevComponent = getTopLevelWrapperInContainer(container);\n    if (!prevComponent) {\n      // Check if the node being unmounted was rendered by React, but isn't a\n      // root node.\n      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n      // Check if the container itself is a React root node.\n      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;\n      }\n\n      return false;\n    }\n    delete instancesByReactRootID[prevComponent._instance.rootID];\n    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);\n    return true;\n  },\n\n  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {\n    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        ReactDOMComponentTree.precacheNode(instance, rootElement);\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\n        var normalizedMarkup = markup;\n        if (process.env.NODE_ENV !== 'production') {\n          // because rootMarkup is retrieved from the DOM, various normalizations\n          // will have occurred which will not be present in `markup`. Here,\n          // insert markup into a <div> or <iframe> depending on the container\n          // type to perform the same normalizations before comparing.\n          var normalizer;\n          if (container.nodeType === ELEMENT_NODE_TYPE) {\n            normalizer = document.createElement('div');\n            normalizer.innerHTML = markup;\n            normalizedMarkup = normalizer.innerHTML;\n          } else {\n            normalizer = document.createElement('iframe');\n            document.body.appendChild(normalizer);\n            normalizer.contentDocument.write(markup);\n            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n            document.body.removeChild(normalizer);\n          }\n        }\n\n        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\\n%s', difference) : _prodInvariant('42', difference) : void 0;\n\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : void 0;\n        }\n      }\n    }\n\n    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document but you didn\\'t use server rendering. We can\\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;\n\n    if (transaction.useCreateElement) {\n      while (container.lastChild) {\n        container.removeChild(container.lastChild);\n      }\n      DOMLazyTree.insertTreeBefore(container, markup, null);\n    } else {\n      setInnerHTML(container, markup);\n      ReactDOMComponentTree.precacheNode(instance, container.firstChild);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);\n      if (hostNode._debugID !== 0) {\n        ReactInstrumentation.debugTool.onHostOperation({\n          instanceID: hostNode._debugID,\n          type: 'mount',\n          payload: markup.toString()\n        });\n      }\n    }\n  }\n};\n\nmodule.exports = ReactMount;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactMount.js\n// module id = 189\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar React = require('react/lib/React');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar ReactNodeTypes = {\n  HOST: 0,\n  COMPOSITE: 1,\n  EMPTY: 2,\n\n  getType: function (node) {\n    if (node === null || node === false) {\n      return ReactNodeTypes.EMPTY;\n    } else if (React.isValidElement(node)) {\n      if (typeof node.type === 'function') {\n        return ReactNodeTypes.COMPOSITE;\n      } else {\n        return ReactNodeTypes.HOST;\n      }\n    }\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;\n  }\n};\n\nmodule.exports = ReactNodeTypes;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactNodeTypes.js\n// module id = 190\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ViewportMetrics = {\n\n  currentScrollLeft: 0,\n\n  currentScrollTop: 0,\n\n  refreshScrollValues: function (scrollPosition) {\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\n  }\n\n};\n\nmodule.exports = ViewportMetrics;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ViewportMetrics.js\n// module id = 191\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (Array.isArray(current)) {\n    if (Array.isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n\n  if (Array.isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/accumulateInto.js\n// module id = 192\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\n\nfunction forEachAccumulated(arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nmodule.exports = forEachAccumulated;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/forEachAccumulated.js\n// module id = 193\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactNodeTypes = require('./ReactNodeTypes');\n\nfunction getHostComponentFromComposite(inst) {\n  var type;\n\n  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {\n    inst = inst._renderedComponent;\n  }\n\n  if (type === ReactNodeTypes.HOST) {\n    return inst._renderedComponent;\n  } else if (type === ReactNodeTypes.EMPTY) {\n    return null;\n  }\n}\n\nmodule.exports = getHostComponentFromComposite;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getHostComponentFromComposite.js\n// module id = 194\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar contentKey = null;\n\n/**\n * Gets the key used to access text content on a DOM node.\n *\n * @return {?string} Key used to access text content.\n * @internal\n */\nfunction getTextContentAccessor() {\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n    // Prefer textContent to innerText because many browsers support both but\n    // SVG <text> elements don't support innerText even when <div> does.\n    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\n  }\n  return contentKey;\n}\n\nmodule.exports = getTextContentAccessor;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getTextContentAccessor.js\n// module id = 195\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactCompositeComponent = require('./ReactCompositeComponent');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactHostComponent = require('./ReactHostComponent');\n\nvar getNextDebugID = require('react/lib/getNextDebugID');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function (element) {\n  this.construct(element);\n};\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n}\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @param {boolean} shouldHaveDebugID\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node, shouldHaveDebugID) {\n  var instance;\n\n  if (node === null || node === false) {\n    instance = ReactEmptyComponent.create(instantiateReactComponent);\n  } else if (typeof node === 'object') {\n    var element = node;\n    var type = element.type;\n    if (typeof type !== 'function' && typeof type !== 'string') {\n      var info = '';\n      if (process.env.NODE_ENV !== 'production') {\n        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n          info += ' You likely forgot to export your component from the file ' + 'it\\'s defined in.';\n        }\n      }\n      info += getDeclarationErrorAddendum(element._owner);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;\n    }\n\n    // Special case string values\n    if (typeof element.type === 'string') {\n      instance = ReactHostComponent.createInternalComponent(element);\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // representations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n\n      // We renamed this. Allow the old name for compat. :(\n      if (!instance.getHostNode) {\n        instance.getHostNode = instance.getNativeNode;\n      }\n    } else {\n      instance = new ReactCompositeComponentWrapper(element);\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactHostComponent.createInstanceForText(node);\n  } else {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;\n  }\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (process.env.NODE_ENV !== 'production') {\n    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\n_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {\n  _instantiateReactComponent: instantiateReactComponent\n});\n\nmodule.exports = instantiateReactComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/instantiateReactComponent.js\n// module id = 196\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\n\nvar supportedInputTypes = {\n  'color': true,\n  'date': true,\n  'datetime': true,\n  'datetime-local': true,\n  'email': true,\n  'month': true,\n  'number': true,\n  'password': true,\n  'range': true,\n  'search': true,\n  'tel': true,\n  'text': true,\n  'time': true,\n  'url': true,\n  'week': true\n};\n\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\n  if (nodeName === 'input') {\n    return !!supportedInputTypes[elem.type];\n  }\n\n  if (nodeName === 'textarea') {\n    return true;\n  }\n\n  return false;\n}\n\nmodule.exports = isTextInputElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/isTextInputElement.js\n// module id = 197\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar setInnerHTML = require('./setInnerHTML');\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function (node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n\n    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function (node, text) {\n      if (node.nodeType === 3) {\n        node.nodeValue = text;\n        return;\n      }\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/setTextContent.js\n// module id = 198\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' ||\n  // The following is inlined from ReactElement. This means we can optimize\n  // some checks. React Fiber also inlines this logic for similar purposes.\n  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/traverseAllChildren.js\n// module id = 199\n// module chunks = 0","/**\n * Copyright 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction isNative(fn) {\n  // Based on isNative() from Lodash\n  var funcToString = Function.prototype.toString;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var reIsNative = RegExp('^' + funcToString\n  // Take an example native function source for comparison\n  .call(hasOwnProperty)\n  // Strip regex characters so we can use it for regex\n  .replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  // Remove hasOwnProperty from the template to make it generic\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n  try {\n    var source = funcToString.call(fn);\n    return reIsNative.test(source);\n  } catch (err) {\n    return false;\n  }\n}\n\nvar canUseCollections =\n// Array.from\ntypeof Array.from === 'function' &&\n// Map\ntypeof Map === 'function' && isNative(Map) &&\n// Map.prototype.keys\nMap.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&\n// Set\ntypeof Set === 'function' && isNative(Set) &&\n// Set.prototype.keys\nSet.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);\n\nvar setItem;\nvar getItem;\nvar removeItem;\nvar getItemIDs;\nvar addRoot;\nvar removeRoot;\nvar getRootIDs;\n\nif (canUseCollections) {\n  var itemMap = new Map();\n  var rootIDSet = new Set();\n\n  setItem = function (id, item) {\n    itemMap.set(id, item);\n  };\n  getItem = function (id) {\n    return itemMap.get(id);\n  };\n  removeItem = function (id) {\n    itemMap['delete'](id);\n  };\n  getItemIDs = function () {\n    return Array.from(itemMap.keys());\n  };\n\n  addRoot = function (id) {\n    rootIDSet.add(id);\n  };\n  removeRoot = function (id) {\n    rootIDSet['delete'](id);\n  };\n  getRootIDs = function () {\n    return Array.from(rootIDSet.keys());\n  };\n} else {\n  var itemByKey = {};\n  var rootByKey = {};\n\n  // Use non-numeric keys to prevent V8 performance issues:\n  // https://github.com/facebook/react/pull/7232\n  var getKeyFromID = function (id) {\n    return '.' + id;\n  };\n  var getIDFromKey = function (key) {\n    return parseInt(key.substr(1), 10);\n  };\n\n  setItem = function (id, item) {\n    var key = getKeyFromID(id);\n    itemByKey[key] = item;\n  };\n  getItem = function (id) {\n    var key = getKeyFromID(id);\n    return itemByKey[key];\n  };\n  removeItem = function (id) {\n    var key = getKeyFromID(id);\n    delete itemByKey[key];\n  };\n  getItemIDs = function () {\n    return Object.keys(itemByKey).map(getIDFromKey);\n  };\n\n  addRoot = function (id) {\n    var key = getKeyFromID(id);\n    rootByKey[key] = true;\n  };\n  removeRoot = function (id) {\n    var key = getKeyFromID(id);\n    delete rootByKey[key];\n  };\n  getRootIDs = function () {\n    return Object.keys(rootByKey).map(getIDFromKey);\n  };\n}\n\nvar unmountedIDs = [];\n\nfunction purgeDeep(id) {\n  var item = getItem(id);\n  if (item) {\n    var childIDs = item.childIDs;\n\n    removeItem(id);\n    childIDs.forEach(purgeDeep);\n  }\n}\n\nfunction describeComponentFrame(name, source, ownerName) {\n  return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n}\n\nfunction getDisplayName(element) {\n  if (element == null) {\n    return '#empty';\n  } else if (typeof element === 'string' || typeof element === 'number') {\n    return '#text';\n  } else if (typeof element.type === 'string') {\n    return element.type;\n  } else {\n    return element.type.displayName || element.type.name || 'Unknown';\n  }\n}\n\nfunction describeID(id) {\n  var name = ReactComponentTreeHook.getDisplayName(id);\n  var element = ReactComponentTreeHook.getElement(id);\n  var ownerID = ReactComponentTreeHook.getOwnerID(id);\n  var ownerName;\n  if (ownerID) {\n    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);\n  }\n  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;\n  return describeComponentFrame(name, element && element._source, ownerName);\n}\n\nvar ReactComponentTreeHook = {\n  onSetChildren: function (id, nextChildIDs) {\n    var item = getItem(id);\n    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n    item.childIDs = nextChildIDs;\n\n    for (var i = 0; i < nextChildIDs.length; i++) {\n      var nextChildID = nextChildIDs[i];\n      var nextChild = getItem(nextChildID);\n      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;\n      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;\n      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;\n      if (nextChild.parentID == null) {\n        nextChild.parentID = id;\n        // TODO: This shouldn't be necessary but mounting a new root during in\n        // componentWillMount currently causes not-yet-mounted components to\n        // be purged from our tree data so their parent id is missing.\n      }\n      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;\n    }\n  },\n  onBeforeMountComponent: function (id, element, parentID) {\n    var item = {\n      element: element,\n      parentID: parentID,\n      text: null,\n      childIDs: [],\n      isMounted: false,\n      updateCount: 0\n    };\n    setItem(id, item);\n  },\n  onBeforeUpdateComponent: function (id, element) {\n    var item = getItem(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.element = element;\n  },\n  onMountComponent: function (id) {\n    var item = getItem(id);\n    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;\n    item.isMounted = true;\n    var isRoot = item.parentID === 0;\n    if (isRoot) {\n      addRoot(id);\n    }\n  },\n  onUpdateComponent: function (id) {\n    var item = getItem(id);\n    if (!item || !item.isMounted) {\n      // We may end up here as a result of setState() in componentWillUnmount().\n      // In this case, ignore the element.\n      return;\n    }\n    item.updateCount++;\n  },\n  onUnmountComponent: function (id) {\n    var item = getItem(id);\n    if (item) {\n      // We need to check if it exists.\n      // `item` might not exist if it is inside an error boundary, and a sibling\n      // error boundary child threw while mounting. Then this instance never\n      // got a chance to mount, but it still gets an unmounting event during\n      // the error boundary cleanup.\n      item.isMounted = false;\n      var isRoot = item.parentID === 0;\n      if (isRoot) {\n        removeRoot(id);\n      }\n    }\n    unmountedIDs.push(id);\n  },\n  purgeUnmountedComponents: function () {\n    if (ReactComponentTreeHook._preventPurging) {\n      // Should only be used for testing.\n      return;\n    }\n\n    for (var i = 0; i < unmountedIDs.length; i++) {\n      var id = unmountedIDs[i];\n      purgeDeep(id);\n    }\n    unmountedIDs.length = 0;\n  },\n  isMounted: function (id) {\n    var item = getItem(id);\n    return item ? item.isMounted : false;\n  },\n  getCurrentStackAddendum: function (topElement) {\n    var info = '';\n    if (topElement) {\n      var name = getDisplayName(topElement);\n      var owner = topElement._owner;\n      info += describeComponentFrame(name, topElement._source, owner && owner.getName());\n    }\n\n    var currentOwner = ReactCurrentOwner.current;\n    var id = currentOwner && currentOwner._debugID;\n\n    info += ReactComponentTreeHook.getStackAddendumByID(id);\n    return info;\n  },\n  getStackAddendumByID: function (id) {\n    var info = '';\n    while (id) {\n      info += describeID(id);\n      id = ReactComponentTreeHook.getParentID(id);\n    }\n    return info;\n  },\n  getChildIDs: function (id) {\n    var item = getItem(id);\n    return item ? item.childIDs : [];\n  },\n  getDisplayName: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element) {\n      return null;\n    }\n    return getDisplayName(element);\n  },\n  getElement: function (id) {\n    var item = getItem(id);\n    return item ? item.element : null;\n  },\n  getOwnerID: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (!element || !element._owner) {\n      return null;\n    }\n    return element._owner._debugID;\n  },\n  getParentID: function (id) {\n    var item = getItem(id);\n    return item ? item.parentID : null;\n  },\n  getSource: function (id) {\n    var item = getItem(id);\n    var element = item ? item.element : null;\n    var source = element != null ? element._source : null;\n    return source;\n  },\n  getText: function (id) {\n    var element = ReactComponentTreeHook.getElement(id);\n    if (typeof element === 'string') {\n      return element;\n    } else if (typeof element === 'number') {\n      return '' + element;\n    } else {\n      return null;\n    }\n  },\n  getUpdateCount: function (id) {\n    var item = getItem(id);\n    return item ? item.updateCount : 0;\n  },\n\n\n  getRootIDs: getRootIDs,\n  getRegisteredIDs: getItemIDs\n};\n\nmodule.exports = ReactComponentTreeHook;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactComponentTreeHook.js\n// module id = 200\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\n\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\nmodule.exports = REACT_ELEMENT_TYPE;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactElementSymbol.js\n// module id = 201\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar canDefineProperty = false;\nif (process.env.NODE_ENV !== 'production') {\n  try {\n    // $FlowFixMe https://github.com/facebook/flow/issues/285\n    Object.defineProperty({}, 'x', { get: function () {} });\n    canDefineProperty = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\nmodule.exports = canDefineProperty;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/canDefineProperty.js\n// module id = 202\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/asap/browser-raw.js\n// module id = 203\n// module chunks = 0","import Environment from './environment'\n\nconst historyLength = 1000;\n\nconst defaultStats = {\n    currentScore: 0,\n    lastGameScore: 0,\n    scoreSum: 0,\n    gameCount: 0,\n    actionCount: 0,\n    actionsPerSecond: 0,\n    lastSecondsActionCount: 0,\n    lastFinalScores: [],\n    gameCountToScore: [],\n    gameCountToAverageScore: [],\n    averageFinalScore: 0,\n    lastActionScore: 0,\n    totalReward: 0,\n};\n\nexport default class GameRunner {\n    constructor(onRender, onStatusChange) {\n        this._universalGameNumber = 0;\n        this._renderingEnabled = false;\n        this._onRender = onRender;\n        this._stats = Object.assign({}, defaultStats);\n        this._onStatusChange = onStatusChange;\n        this._agentObservation = null;\n        this._godObservation = null;\n        this._agentClass = null;\n        this._nextAction = null;\n\n        this.newGame = this.newGame.bind(this);\n        this.takeAction = this.takeAction.bind(this);\n        this.tick = this.tick.bind(this);\n        this.clearStats = this.clearStats.bind(this);\n        this.setRenderingEnabled = this.setRenderingEnabled.bind(this);\n\n        setInterval(() => {//@TODO accomplish this without an interval\n            this._stats.actionsPerSecond = this._stats.actionCount - this._stats.lastSecondsActionCount;\n            this._stats.lastSecondsActionCount = this._stats.actionCount;\n        }, 1000);\n    }\n\n    newGame(agentClass) {\n        this._universalGameNumber++;\n        this._agentClass = agentClass;\n        this._agent = new this._agentClass();\n        // this._renderingEnabled = renderingEnabled;\n        this._environment = new Environment();\n        this._stats.currentScore = 0;//@TODO get from environment?\n        if (this._renderingEnabled) {\n            //@TODO have this render make the table its self inside a given div\n            // this._onRender.clear();\n            this._onRender(\n                this._environment.getAgentObservation(),\n                this._environment.getGodObservation(),\n                this._universalGameNumber\n            );\n        } else {\n            this._onStatusChange(this._stats);\n        }\n        this._updateObservations();\n    }\n\n    clearCurrentAgentBrain() {\n        if (this._agent.clearBrain) {\n            this._agent.clearBrain();\n        }\n    }\n\n    /**\n     *\n     * @param actionCode\n     */\n    takeAction(actionCode) {\n        var stats = this._stats;\n        //Apply the action and get the next observation\n        if (actionCode !== null) {\n            this._environment.applyAction(actionCode);\n        }\n        this._updateObservations();\n\n        if (this._godObservation.isComplete) {//@Find better way to communicate \"isComplete\"\n            this._agent.getAction(this._agentObservation);//Ask for one more action so the agent can see the observation after its last action\n            stats.lastGameScore = this._agentObservation.score;\n            stats.lastFinalScores.push(this._agentObservation.score);\n            if (stats.lastFinalScores.length > 100) {\n                stats.lastFinalScores.shift();\n            }\n            var totalScoreFinaleScore = stats.lastFinalScores.reduce((acc, val) => acc + val, 0);\n            stats.averageFinalScore = Math.floor(totalScoreFinaleScore / stats.lastFinalScores.length) || 0;\n            stats.scoreSum += this._agentObservation.score;\n            stats.gameCountToScore.push(stats.lastGameScore);\n            stats.gameCountToAverageScore.push(stats.averageFinalScore);\n            stats.gameCount += 1;\n\n            //If the history arrays get twice as large as the preferred history length, slice them off.\n            if (stats.gameCountToScore.length > historyLength * 2) {\n                stats.gameCountToScore = stats.gameCountToScore.slice(-historyLength);\n                stats.gameCountToAverageScore = stats.gameCountToAverageScore.slice(-historyLength);\n            }\n\n            this.newGame(this._agentClass, this._renderingEnabled);\n        }\n\n        if (this._renderingEnabled) {\n            this._onRender(this._agentObservation, this._godObservation, this._universalGameNumber);\n            stats.currentScore = this._agentObservation.score;\n            this._onStatusChange(stats);\n        }\n\n        stats.actionCount++;\n        var reward = this._agentObservation.score - stats.lastActionScore;\n        stats.lastActionScore = this._agentObservation.score;\n        stats.totalReward += reward;\n\n        this._nextAction = this._agent.getAction(this._agentObservation);\n    }\n\n    setRenderingEnabled(renderingEnabled) {\n        this._renderingEnabled = renderingEnabled;\n    }\n\n    getCurrentAgentInstance() {\n        return this._agent;\n    }\n\n    tick() {\n        this.takeAction(this._nextAction);\n    }\n\n    clearStats() {\n        this._stats = Object.assign({}, defaultStats);\n        this._stats.lastFinalScores = [];\n        this._stats.gameCountToScore = [];\n        this._stats.gameCountToAverageScore = [];\n    }\n\n    _updateObservations() {\n        this._agentObservation = this._environment.getAgentObservation();\n        this._godObservation = this._environment.getGodObservation();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/GameRunner.js","import {getActionViaFeelers} from './helper/feeler'\n// import {config} from '../../environment'\n\nconst feelerPaths = [];\nvar lookToSideCount = 4;//Math.floor(config.viewPortSize[0] / 2);\nvar leftPrepend = [];\nvar rightPrepend = [];\nvar appends = [\n    ['s', 's'],\n    \n    ['s', 'a', 's'],\n    ['s', 'a', 'a', 's'],\n    ['s', 'a', 'a', 'a', 's'],\n    ['s', 'a', 'a', 'a', 'a', 's'],\n    ['s', 'a', 'a', 'a', 'a', 'a', 's'],\n    ['s', 'a', 'a', 'a', 'a', 'a', 'a', 's'],\n\n    ['s', 'd', 's'],\n    ['s', 'd', 'd', 's'],\n    ['s', 'd', 'd', 'd', 's'],\n    ['s', 'd', 'd', 'd', 'd', 's'],\n    ['s', 'd', 'd', 'd', 'd', 'd', 's'],\n    ['s', 'd', 'd', 'd', 'd', 'd', 'd', 's'],\n];\nfeelerPaths.push(['s', 's']);\nfor (let sideWaysAmount = 1; sideWaysAmount <= lookToSideCount; sideWaysAmount++) {\n    leftPrepend.push('a');\n    rightPrepend.push('d');\n\n    appends.forEach((append)=> {\n        feelerPaths.push([...leftPrepend, ...append]);\n        feelerPaths.push([...rightPrepend, ...append]);\n    });\n\n}\nexport default class LookAhead {\n    constructor() {\n        this._state = {lastAction: null};\n    }\n\n    /**\n     *\n     * @param {AgentObservation} observation\n     * @return {string} action code\n     */\n    getAction(observation) {\n        let action = getActionViaFeelers(observation, feelerPaths, this._state.lastAction);\n\n        this._state.lastAction = action;\n\n        return action;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/agent/hand-programmed/LookAhead.js","import {getActionViaFeelers} from './helper/feeler'\n\nconst feelerPaths = [\n    ['a', 'a', 's', 's'],\n    ['a', 's', 'a', 's'],\n    ['a', 's', 's'],\n    ['s', 'a', 's'],\n    \n    ['s', 's'],\n\n    ['d', 'd', 's', 's'],\n    ['d', 's', 'd', 's'],\n    ['d', 's', 's'],\n    ['s', 'd', 's'],\n];\n\nexport default class LookAheadIn5x3Viewport {\n    /**\n     *\n     * @param {AgentObservation} observation\n     * @return {string} action code\n     */\n    getAction(observation) {\n        return getActionViaFeelers(observation, feelerPaths, null);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/agent/hand-programmed/LookAheadIn5x3Viewport.js","import {matrixToFlatArray} from '../../environment/nestedFloatMatrixMath'\nimport {data as savedNeuralNetwork} from '../../data/saves/deep-q-network-9x9'\n// import * as viewportConversions from '../../environment/viewportConversions'\nimport Agent from '../../modules/deep-q-network/Agent'\nimport {settings} from '../../App' //@TODO use DI instead for this\nimport {renderActionResponse, renderReward} from './helper/qStateRenderer'\nimport {actions, config} from '../../environment'\nimport RewardCalculator from './helper/RewardCalculator'\n\n// const numberOfStates = 5*3;\nconst numberOfStates = config.viewPortSize[0] * config.viewPortSize[1];\n\nlet agent = new Agent(numberOfStates, actions.length);\nlet rewardCalculator = new RewardCalculator();\n\nagent.loadFromJson(savedNeuralNetwork);\n\nexport default class MatrixDeepQNetwork {\n    constructor() {\n        rewardCalculator = new RewardCalculator();\n    }\n\n    /**\n     *\n     * @param {AgentObservation} observation\n     * @return {string} action code\n     */\n    getAction(observation) {\n        const lastReward = rewardCalculator.calcLastReward(observation);\n        // const state = matrixToFlatArray(viewportConversions.convert9x9to5x3(observation.tileTypes));\n        const state = matrixToFlatArray(observation.tileTypes);\n\n        // console.log(lastReward,state);\n        let actionIndex = agent.learnAndAct(lastReward, state);\n        let actionResponse = agent.getLastActionStats();\n// console.log(actionResponse);\n\n        if (settings.renderingEnabled) {\n            renderActionResponse(actionResponse);\n            if (lastReward !== null) {\n                renderReward(lastReward)\n            }\n        }\n\n        let action = actions[actionIndex];\n\n        this._lastScore = observation.score;\n        return action;\n    }\n\n    clearBrain() {\n        agent = new Agent(numberOfStates, actions.length);\n        rewardCalculator = new RewardCalculator();\n    }\n\n    exportBrain() {\n        return agent.saveToJson();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/agent/machine-learning/DeepQNetwork.js","import LookAhead from './agent/hand-programmed/LookAhead'\nimport LookAheadIn5x3Viewport from './agent/hand-programmed/LookAheadIn5x3Viewport'\n// import MatrixDeepQNetwork from './agent/machine-learning/MatrixDeepQNetwork'\nimport DeepQNetwork from './agent/machine-learning/DeepQNetwork'\nimport TabularSARSA from './modules/tabular-sarsa-adaptor/TabularSARSA'\nexport default [\n    {\n        name: 'ReinforcementLearning - DeepQNetwork - ranked - 212',\n        class: DeepQNetwork\n    },\n    {\n        class: TabularSARSA,\n        name: TabularSARSA.getName(),\n        description: TabularSARSA.getDescription(),\n        ticksPerInterval: 20000 //This agent runs fast but needs many games to learn\n    },\n    {\n        name: 'HandProgrammed - LookAhead - ranked 255',\n        class: LookAhead\n    },\n    {\n        name: 'HandProgrammed - LookAheadIn5x3Viewport - ranked 247',\n        class: LookAheadIn5x3Viewport\n    },\n    // {\n    //     name: 'ReinforcementLearning - MatrixDeepQNetwork - PreTrained - ranked 228',\n    //     class: MatrixDeepQNetwork\n    // },\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/agents.js","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\n\nexport default class BrainExportButton extends Component {\n    constructor() {\n        super();\n        this.onExportButtonClick = this.onExportButtonClick.bind(this);\n        this.state = {exportData: null};\n    }\n\n    onExportButtonClick() {\n        const gameRunner = this.props.gameRunner;\n        if (!gameRunner.getCurrentAgentInstance().exportBrain) {\n            alert('Current agent has no exportBrain() function.');\n            return;\n        }\n\n        this.setState({\n            exportData: 'export const data = JSON.parse(\\'' +\n            JSON.stringify(gameRunner.getCurrentAgentInstance().exportBrain()) +\n            '\\');'\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <button onClick={this.onExportButtonClick}>Export Agent Brain</button>\n                {this.state.exportData &&\n                <div>\n                    <br/>\n                    <div>Exported Agent Brain Data:</div>\n                    <textarea\n                        autoFocus\n                        readOnly\n                        style={{width: '100%', height: '10em'}}\n                        value={this.state.exportData}/>\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nBrainExportButton.propTypes = {\n    gameRunner: PropTypes.object.isRequired\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/BrainExportButton.js","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\n\nexport default class GameRulesDisplay extends Component {\n    render() {\n        const environmentConfig = this.props.environmentConfig;\n        return (\n            <div>\n                Game Rules:\n                <ul>\n                    <li>Get to the bottom row to finish the game</li>\n                    <li>Gain {environmentConfig.verticalDeltaScore } points for every row lower you go</li>\n                    <li>Loose {environmentConfig.verticalDeltaScore } points for every row higher you go</li>\n                    <li>Loose {-environmentConfig.tileTypeToDeltaScore[1] } points when moving into a red square</li>\n                    <li>Loose {-environmentConfig.deltaScorePerAction } point for every move</li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nGameRulesDisplay.propTypes = {\n    environmentConfig: PropTypes.object.isRequired\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/GameRulesDisplay.js","// import * as viewportConversions from './../environment/viewportConversions'\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types'\n\nexport default class ObservationRenderer extends Component {\n    constructor() {\n        super();\n        this.state = {\n            gameNumber: 0,\n            previousPositions: [] //Stores the \"trail\" of where we have been on the environment view\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.gameNumber !== this.state.gameNumber) {\n            //We are in a new game so clear previously saved \"previous positions trail\"\n            this.setState({\n                gameNumber: nextProps.gameNumber,\n                previousPositions: []\n            });\n        } else {\n            //We are in the same game as before so add to the current \"previous positions trail\"\n            const previousPositions = this.state.previousPositions.slice();//Make copy to preserve immutability\n            const scalarPosition =\n                nextProps.godObservation.position[0] * nextProps.godObservation.tileTypes.length\n                + nextProps.godObservation.position[1];\n            previousPositions[scalarPosition] = true;\n            this.setState({\n                previousPositions: previousPositions\n            });\n        }\n    }\n\n    render() {\n        const agentTileColors = calculateAgentTileColors(\n            // viewportConversions.convert9x9to5x3(this.props.agentObservation.tileTypes),\n            this.props.agentObservation.tileTypes,\n            // [2, 0]\n            this.props.agentObservation.position\n        );\n        const godTileColors = calculateGodTileColors(\n            this.props.godObservation.tileTypes,\n            this.props.godObservation.position,\n            this.state.previousPositions\n        );\n\n        return <div className=\"InfectionGameHtmlTableRender\">\n            <div>\n                <span>Agent View</span>\n                <table className=\"renderer-table-canvas-agent\">\n                    <tbody>\n                    {agentTileColors.map((row, rowIndex) =>\n                        <tr key={rowIndex}>\n                            {row.map((tileColor, tileIndex) =>\n                                <td key={tileIndex} style={{backgroundColor: tileColor}}/>\n                            )}\n                        </tr>\n                    )}\n                    </tbody>\n                </table>\n            </div>\n            <div>\n                <span>Environment View</span>\n                <table className=\"renderer-table-canvas-god\">\n                    <tbody>\n                    {godTileColors.map((row, rowIndex) =>\n                        <tr key={rowIndex}>\n                            {row.map((tileColor, tileIndex) =>\n                                <td key={tileIndex} style={{backgroundColor: tileColor}}/>\n                            )}\n                        </tr>\n                    )}\n                    </tbody>\n                </table>\n            </div>\n        </div>;\n    };\n}\n\nObservationRenderer.propTypes = {\n    agentObservation: PropTypes.object.isRequired,\n    godObservation: PropTypes.object.isRequired,\n    gameNumber: PropTypes.number.isRequired\n};\n\nfunction calculateGodTileColors(tileTypes, position, previousPositions) {\n    const tileColors = [];\n    const xLength = tileTypes.length;\n    const yLength = tileTypes[0].length;\n    for (let x = 0; x < xLength; x++) {\n        for (let y = 0; y < yLength; y++) {\n            let scalarPosition = x * xLength + y;\n            let inPreviousPosition = previousPositions[scalarPosition];\n            let color = {r: 50, g: 50, b: 50};\n            if (x === position[0] && y === position[1] && tileTypes[x][y] !== 0) {\n                color = {r: 255, g: 255, b: 0};\n            } else if (x === position[0] && y === position[1]) {\n                color = {r: 0, g: 255, b: 0};\n            } else if (inPreviousPosition && tileTypes[x][y] !== 0) {\n                color = {r: 255, g: 255, b: 128}\n            } else if (inPreviousPosition) {\n                color = {r: 0, g: 128, b: 0}\n            } else if (tileTypes[x][y] !== 0) {\n                color = {r: 230, g: 0, b: 0};\n            }\n            if (!tileColors[y]) {\n                tileColors[y] = [];\n            }\n            tileColors[y][x] = 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';\n        }\n    }\n\n    return tileColors;\n}\n\nfunction calculateAgentTileColors(tileTypes, position) {\n    const tileColors = [];\n    const xLength = tileTypes.length;\n    const yLength = tileTypes[0].length;\n    for (let x = 0; x < xLength; x++) {\n        for (let y = 0; y < yLength; y++) {\n            let color = {r: 50, g: 50, b: 50};\n            if (x === position[0] && y === position[1] && tileTypes[x][y] !== 0) {\n                color = {r: 255, g: 255, b: 0};\n            } else if (x === position[0] && y === position[1]) {\n                color = {r: 0, g: 255, b: 0};\n            } else if (tileTypes[x][y] !== 0) {\n                color = {r: 230, g: 0, b: 0};\n            }\n            if (!tileColors[y]) {\n                tileColors[y] = [];\n            }\n            tileColors[y][x] = 'rgb(' + color.r + ',' + color.g + ',' + color.b + ')';\n        }\n    }\n    return tileColors;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/ObservationRenderer.js","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport Chart from 'chart.js'\n\nconst chartGameCount = 200;\n\nexport default class ScoreHistoryChart extends Component {\n    componentDidMount() {\n        let chartCanvas = this.refs.chart;\n\n        let myChart = new Chart(chartCanvas, {\n            type: 'line',\n            data: {\n                labels: [],\n                datasets: [\n                    {\n                        label: 'Average Final Score',\n                        data: [],\n                        backgroundColor: 'transparent',\n                        borderColor: 'blue',\n                        borderWidth: 1,\n                        lineTension: 0\n                    },\n                    {\n                        label: 'Final Score',\n                        data: [],\n                        backgroundColor: 'transparent',\n                        borderColor: 'lightgrey',\n                        borderWidth: 1,\n                        lineTension: 0\n                    },\n                ]\n            },\n            options: {\n                animation: {\n                    duration: 0\n                },\n                elements: {point: {radius: 0}},\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            min: 160,\n                            max: 260\n                        }\n                    }],\n                    xAxes: [{\n                        display: false\n                    }]\n                }\n            }\n        });\n\n        this.setState({chart: myChart});\n    }\n\n    mapStatsToChartData(stats) {\n        return {\n            datasets: [\n                {\n                    data: stats.gameCountToAverageScore.slice(-chartGameCount),\n                },\n                {\n                    data: stats.gameCountToScore.slice(-chartGameCount),\n                },\n            ],\n            labels: Object.keys(stats.gameCountToScore).slice(-chartGameCount)\n        }\n    }\n\n    componentDidUpdate() {\n        const chart = this.state.chart;\n        const data = this.mapStatsToChartData(this.props.stats);\n\n        data.datasets.forEach((dataset, i) => chart.data.datasets[i].data = dataset.data);\n\n        chart.data.labels = data.labels;\n        chart.update();\n    }\n\n\n    render() {\n        return (\n            <canvas ref={'chart'} height={'300'} width={'700'}></canvas>\n        );\n    }\n}\n\nScoreHistoryChart.propTypes = {\n    stats: PropTypes.object.isRequired\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/ScoreHistoryChart.js","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\n\nexport default class StatsDisplay extends Component {\n    render() {\n        const stats = this.props.stats;\n        return (\n            <table>\n                <tbody>\n                {Object.keys(stats).map((key) =>\n                    <tr key={key}>\n                        <td>{key}: {stats[key]}</td>\n                    </tr>\n                )}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nStatsDisplay.propTypes = {\n    stats: PropTypes.object.isRequired\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/component/StatsDisplay.js","export const data = JSON.parse('{\"layers\":[{},{\"weights\":[0.13423205861649612,-0.3404210489120365,0.09548471204304797,0.19866836468155924,0.328357929389012,-0.23967008296448575,0.16464570151839672,-0.09859536297139507,0.02448785218711914,-0.04754609849085378,0.04096676580854744,-0.23198158386374804,-0.34212788144685347,-0.045812050518021966,0.2671144238491805,0.2732028615095054,-0.09401100063021219,0.21160642764411816,0.28854743751567796,-0.17225987425980444,-0.5209040177471429,0.08755212046193116,-0.005497382772012591,0.1630468645905502,-0.39255099462600224,-0.43589305130363887,-0.19738654003705441,-0.25210151412897647,-0.3086716175390839,-0.4429480617308375,0.32031037056257794,-0.4878678100622036,0.17663531049951336,-0.5542519366294186,0.34381423132621075,-0.025591693391112186,-0.29983558138032174,-0.02284365494322299,-0.320821270567285,-0.1954759571741202,0.3659955626686332,-0.31647396556411084,0.10507219681867688,-0.46612982385140284,0.20583206565553697,-0.2126608790590536,0.1748217500653915,0.7280321356013535,0.12365305282249614,0.3778543149454294,0.05747028302347507,0.14481666467604523,0.19433235323528048,-0.2530364834527186,0.07066061048752306,0.23247463570512758,-0.04449835722312776,-0.46551350242741885,-0.19779438244199007,0.3084775718525979,-0.0198903300768975,0.41426512142862937,0.25409935977052045,-0.03793938131637044,-0.18586043802553012,-0.10381436782581953,0.4479915014498356,-0.365280465491351,0.08219553765742511,-0.3810938111774619,-0.09656820095299817,0.05962741050302871,-0.18467362032007778,-0.3114160652494987,-0.008120972610740747,-0.27405259164977436,0.34053772686486194,-0.4989227734535666,-0.2826084957432093,-0.0202439906056396,-0.25291340380287536,-0.6482339142353245,-0.21389481728066795,-0.020374399580024433,0.19006510938648807,-0.18858892620599002,-0.17815457213875466,0.1708294102485175,-0.25465296636329987,0.09202150525501454,-0.2947913532024021,0.02081308683441958,0.3862161859262977,0.009901980810359857,0.09301574212007648,0.04611757849869075,0.3898862355266665,0.3231192936825274,-0.4502320768624404,-0.31931317919875285,0.3511129152367033,-0.32243481258314755,0.44601319142982737,-0.07661940187717396,-0.506716403305959,-0.2934690484847945,-0.09125042131524272,0.4303590573124612,0.48936978703283834,0.2527523680907127,-0.4109432196978447,0.4343412412938401,-0.057634093980338995,-0.07453756989074994,-0.25274922048376297,-0.3221509976508425,-0.19527062095469108,0.3417655455608683,-0.4649206668396539,-0.1779106239561781,-0.0975890661871331,-0.2878431894078656,-0.25588262517723454,-0.14048480591433862,0.4184522935153093,0.37217642815626156,0.28719197960801535,-0.13338654158589422,-0.42641691200418275,-0.30315902300680847,-0.1915190171531598,-0.16014989075056665,-0.39247361870758996,-0.07400553216826979,0.17724492366555253,-0.07726554307877248,-0.0949008342232566,-0.4007182644940393,0.2081920032586473,-0.2132183090175567,-0.40119611715383424,0.06177383181913506,-0.13575256549077525,0.09260274146757953,0.4601482682698467,0.13003163948763305,0.2126805408993695,-0.44233448368735034,-0.4345193708984631,-0.4257110488086802,-0.13176750137591242,-0.17563004580635713,-0.16134475479199514,-0.36590084310653703,-0.38060587278742364,0.12232736528825174,-0.4239625793400763,0.13073883319492655,0.36186847567015584,-0.02788748158442361,-0.4561698750004505,-0.1933752997087689,0.3549095104116157,0.10576426026242586,0.16177847722864744,0.07923526726899045,-0.030659879514552596,0.0342699975290856,-0.09533898796026492,0.047542448713203435,-0.0672096656851866,-0.25808961500205474,0.1913476489685715,-0.3542405792926842,0.12560795135113367,-0.05954114293093018,0.24428284356277158,-0.3097061814322349,0.08007802904118745,-0.2742469990157316,-0.17040069889846624,0.15760107105822768,0.16876384843650127,0.3731932705282765,-0.5447867423638484,0.15511112422207038,-0.0608275288420901,0.27582806641434,0.34306504710398567,0.2584549456137363,0.24719645076172056,0.31336534399986093,0.2384744517235709,0.12027044843557196,-0.068006834509276,-0.41319839771362277,0.14749398162965788,-0.17860307338073247,0.11675520948363205,-0.4561176748630699,0.09954656090832148,-0.005041788934360165,0.1532943361072198,0.5722209534866001,-0.008653002645000355,-0.23451699787401362,0.5041368579496225,-0.15223596835196232,0.25307110541404004,-0.11601705610056343,0.18439492437300145,-0.6522568125783956,-0.04939903067638867,-0.381327777523369,0.0793636437476598,-0.12400103897707246,-0.1163074040934558,-0.28275080458938795,0.1801789127906242,0.11970195905250021,-0.024237266286753986,-0.12692883650475223,-0.08010664077732442,0.056964130120342286,-0.2544017925231922,0.09461556598997452,0.31177166943011975,0.13431526276479538,0.26601772895555004,-0.029129151156005107,-0.23860526709719046,0.03480370807938444,0.118417951268951,0.3163009665366186,-0.41865239763237866,-0.41070924296725647,-0.02959927154102378,-0.1326360683818945,-0.10727174680635,-0.19827033757215556,-0.03356541153005842,0.1707118448532585,0.15475125106049176,0.29922997370244525,-0.3924460707434636,0.19980871996847913,0.26794846243238885,-0.17047029222318025,0.009308597054083729,-0.3742716138812028,-0.0729412631661546,-0.07264276933969131,0.3253596113341809,0.08605007539673067,0.4177350935032824,0.055924296231081416,-0.01425361071279367,0.2992310602466644,-0.032056423319089436,0.17153076995852798,0.27825774452122226,0.09414008509920072,-0.28839933200921464,-0.3870178806520541,0.3246116588652995,-0.4259426428944229,-0.1824419590624377,-0.24753220030765422,-0.5416352029444117,0.11574657976657245,-0.2857731850936186,0.44019200047382895,0.2805836741380541,0.12453398976640265,-0.41106656213297244,-0.2343348505273996,-0.4094701095200722,-0.35371834276703934,-0.3756776767874908,-0.4663476126783276,-0.2706437888568538,-0.3145367899035898,-0.09264653727575334,0.4288115738076006,-0.21949275020929843,0.09922195370401853,0.3109808945186041,-0.3873276754944939,-0.116448209645717,0.2926991300381335,0.08684264701925339,0.033494490414856,0.034756686453221504,0.18392761847393677,0.2243271750612284,-0.24710309904721747,-0.3965854381165015,0.3764290084241311,-0.33873240345452554,-0.3068947677287484,0.34614625268060323,-0.45661341996806437,-0.17374074757183997,-0.06998571844417191,0.2440262602836738,-0.39549417014189875,-0.30875218575949887,-0.16566771006586867,-0.3097219155294615,-0.3590824147408144,0.21816687769441181,-0.044999205323047645,0.2228737267518044,-0.0287620292427486,-0.5614442257130099,-0.004529990896120825,-0.5059886487673618,0.2637838770225435,-0.4449863222853525,0.07574355364806563,0.2959001089306104,0.22686084687258112,0.35319069143172266,-0.145788374382759,0.22901249502185875,0.38658530632334004,-0.3820175938794012,-0.21329703933688862,-0.027944200308794496,-0.08435569480371051,-0.33172879962144086,0.07375463635825338,-0.409601617901667,-0.1060984689506645,-0.3280838132535839,-0.3558792247643509,-0.16894376502866867,-0.019142062998274277,-0.2500955962428862,0.052157763445610225,0.05545352215082171,-0.4882852494881538,-0.033402119476052504,0.06987990737110021,0.04883782221714269,-0.2845602419507564,0.04110976288802502,0.03484094287255645,0.1254002639754069,-0.08157909320824527,-0.4977515386611956,-0.0404890312821826,0.045751334307958316,-0.06283470916701236,-0.06511657982147194,0.2655526935818816,-0.4321382794644239,-0.0829540894805698,-0.13907402596364193,-0.19198213832756958,-0.4582635628085166,0.06144093965819802,-0.36722224563123745,0.3081420591315962,-0.004961827956267045,0.02009576957846843,0.009024585135241243,1.0366373267724445,-0.2535098029651141,0.2353245515852453,0.1976939469433759,0.11369744754413397,-0.3695690224482615,0.22322382279371022,-0.12232162433495791,-0.37535057863067045,-0.2942754991733719,-0.4838943103294542,0.08283273949332659,0.12300547227585487,0.21378646764270648,0.24853145219591952,-0.03370456481204944,0.2818956085754505,0.07079930840382807,0.30126270511153275,0.3153877960498929,0.10778035331877053,-0.05968148623906728,0.018060798362893066,-0.049479821538974574,-0.21968280563789908,0.290902805831009,-0.5921479149824063,-0.0991303933234132,-0.20953977206282967,-0.3462661856820354,-0.3455344343571946,0.08414506334742583,-0.4703432099511687,-0.28883736128427245,0.053605181702881706,-0.16019085640443717,-0.206973007194549,-0.16073875839073837,-0.25360710813616705,-0.007675582993552974,-0.24966142416148895,0.44737678636740397,-0.0077554931105708515,-0.316705269847205,0.22809262106054173,-0.5525938028363526,0.34526739815457536,-0.30453787875941574,-0.17065289542816908,0.09860368135377323,-0.36587777006950967,0.29313590197012795,-0.17411824364841488,0.4831635243531559,-0.15691405715582157,0.0401589729746142,-0.22687291170761054,-0.41758053333088674,-0.4672050394683323,0.10169909702546835,-0.3689651381993072,0.36228810248573956,-0.29461727440353497,-0.28569357684802005,0.12967347903571974,-0.3325568054726532,-0.40636417820330845,-0.4718745183437863,0.06074177699187894,0.3722265232653494,0.4111878666333524,-0.2714223920693273,0.4280612456249742,-0.4247457507969707,0.179667725494862,-0.35869510202523924,-0.4973064922829581,-0.07796022266871136,-0.2230546985564339,0.023750851194827824,0.17333054333353437,-0.055379527233620586,-0.3138525168718618,0.03208380842578116,0.25775243507175394,0.138634381160793,-0.03924177820352368,0.24634101069443112,-0.3914011959049976,-0.12277653610231726,-0.26502136350105887,-0.12872047654511057,-0.22643305682597661,-0.02886029072512622,0.01016596993757698,-0.2829412347926887,0.1898380442815145,0.15894796702470443,-0.2936261290540786,-0.3535137669580853,-0.29094063802022757,0.0373279107650466,-0.29318753661807845,0.1518619688464067,-0.14875475920415285,-0.08965719966939745,-0.565604830197836,-0.3798862198736535,0.04839262725669619,0.245538768953016,-0.43191259661643633,0.06146076020541272,-0.30270554405136374,0.29168508854744857,0.1672741449018532,-0.16418990341461717,-0.3546340707613377,0.1009252362108741,0.07681804203239966,0.0994173443997778,-0.35142757925420404,-0.020825282035787988,-0.3165947030605481,-0.18929390163540016,-0.21827432242936878,0.2809809484860651,-0.048342513299787705,-0.18687297159495023,-0.10818191344166178,-0.42600298164173,0.05030385367981462,0.16616846162209303,-0.21792099889360583,0.10136498109266469,-0.11082545830326392,-0.16386768546895947,-0.10534888843521995,-0.14282572478826833,-0.4390107795806204,-0.36237121671584366,-0.43327020714867076,0.3716041475705585,-0.14860666005597586,0.36449455654763313,-0.19510772336143914,0.13106439992700616,-0.24162947328127804,0.30982987941081486,0.00042653956296721655,-0.22618569193891186,0.05589290580691959,-0.14986624960935546,-0.3958512419165817,-0.18444584812438344,0.4197647446709747,0.36236031248787415,0.17109944170199567,-0.15076750081942505,-0.13963709089577034,0.021830992096006287,0.32377738660316396,-0.025164141137058216,0.21927755684115324,-0.45168202930652096,0.07851013185635776,-0.21247234826875028,0.18811294828150704,0.31423350038603437,-0.17354296918397008,0.1350101839859226,0.13079097177330393,-0.40367174894178215,-0.03443100458235259,0.4448863066449753,0.04890671478239465,-0.2681337269773575,0.10555363294911084,-0.3232245194824974,-0.09012123903428175,-0.13071959673688383,0.3725773933727229,0.01251736586842882,-0.3532417102503101,-0.32538500613458166,0.042472473603045645,0.3179297117921662,0.24911973916049465,0.12714684129099976,-0.3085857140487943,-0.47511782331687147,0.2912746362073341,-0.2915235333227388,0.3591046151227262,0.12460452599022373,-0.16781698867383116,0.33128069680402955,0.032982921222160504,-0.11834959312056818,-0.07333187945708915,-0.21345686966081398,-0.42915150438558386,0.2359863442460978,0.07124898001575054,-0.30192936445680085,-0.3420143881301481,-0.32831956588908934,-0.05407033991154159,0.2505287981175597,-0.20113998752132595,-0.3499543626644925,0.28997713075985476,0.18108781554556797,0.0730275808269526,-0.33773179725796065,0.23298028380344898,-0.24075281498327775,0.1573692161757462,-0.09983985771078882,-0.31554647949459597,-0.44632116955631645,0.17690216478035564,0.021917104379835614,-0.031973318415027055,0.10622139751788987,-0.051814023226943236,-0.017076340818047996,-0.27779920212589604,0.11319183951230406,0.07545597425930024,-0.4669569250702301,-0.17513899053211002,-0.5122231268979287,-0.37750526217719127,-0.0673882816787164,-0.14919171378303828,0.251437456025581,-0.5409639280703828,-0.32845249779632996,0.011758433626462667,-0.16116739949893172,0.20225910743465003,-0.05541839360099152,-0.22496463908496225,-0.19816700918307317,0.22786886284612415,0.10476420012139281,0.007104524992041547,-0.06445577414556845,-0.518664853338173,-0.14778043769658994,0.29107262021316527,0.051025865904724986,0.22196732627729046,-0.06492509041399881,0.005024434435503131,0.020625208681927173,-0.14353293475938303,-0.36390453403637557,0.28180934322618734,-0.003298031249544327,0.020890296698559144,-0.06130849625685675,-0.045459781790372036,-0.06176381538330433,-0.2385266470028512,-0.25326763702094673,0.026959659710659303,-0.3182056836799105,-0.04505292518081904,-0.14195850056106632,0.10789057119948146,-0.43894627556763616,-0.3694026701618453,-0.4203044745899485,-0.3829500209700079,-0.43259212525567564,0.2439404871186227,-0.4339483805264863,-0.21271803944289736,-0.35786384762624174,-0.5007145652196758,-0.31905043781125375,-0.07697837868016108,-0.27005179879097335,0.29518314102430326,0.10651496743648443,-0.21852467382059848,-0.12601481951197896,-0.7668764496452573,0.4047863792049057,-0.11360486470984223,0.19648904093042496,-0.40394657407282236,-0.011756321636207363,0.08426179726607114,0.2576349243460056,-0.2786163025469369,-0.48607861534508223,0.08422365216972649,-0.0019015853132721026,-0.19844243695505237,-0.28262565165951326,0.21248499314377922,-0.31027920369426376,-0.39528426812535533,-0.06807565398873029,-0.346503323372909,0.006917123850399657,0.44100978937741847,-0.34403876955319185,-0.3157417385935605,-0.4409342802725968,0.296155571939568,0.22010070157912923,0.30721609629081764,0.33711865993241175,0.2093497866208979,-0.09673599228393888,0.12786910102267918,-0.37602140818930213,-0.2303084213484265,-0.051591650801061546,0.30230975256308823,0.3754155012262893,0.19514287298768468,0.21608020220015356,0.3278666597913788,0.4642204120661995,-0.15453004143154422,-0.14362914658371437,-0.037079713992076824,0.03549617152228482,-0.10785160908460795,0.33774901514952016,-0.3622655636394516,-0.07034175869151238,-0.2601180166313764,0.13750888237195616,-0.47658052739515794,0.2588315751467272,0.0030245290179714292,-0.1383382965005416,0.2842642669764484,0.490936553566982,-0.08135369824477359,-0.25149353895998044,-0.03339898649340102,-0.047943745344950585,0.17687465192374188,0.44861976308852713,-0.2929168064695867,-0.427703681388834,-0.30104177814232225,0.5108166966433519,-0.4130721070699819,0.37997135796127446,-0.37334143046842805,-0.35710686478103,-0.2695125112744322,0.06502135005778066,0.15531729098018945,0.033332552544284855,-0.31165424785675355,0.08552501113293856,0.06711581293558135,0.17562572781683414,0.2407953585667813,0.2965803842159097,-0.09433983204917398,0.11103434068110811,-0.2331624690992344,0.24041083514665965,0.3330583744741579,-0.3358090332662094,-0.011030100734082659,0.2255655725239765,-0.17294450593350771,-0.1279748433707163,0.4342547026999528,0.23503451224300143,0.3547381531402835,0.350989445019389,0.15985352273061804,0.3142781874753,0.46941413787143227,-0.2793566769991751,0.17364820566617875,0.2852709469925304,0.2866770807928617,-0.04321310394303584,0.19191159421934442,-0.3373158541510868,-0.16997405840373467,0.3946915169592457,-0.2021567979050534,0.27572551806584633,-0.45032454033639674,-0.3332631703181002,-0.4487539181087206,-0.0714519136901228,0.22133058941558184,-0.3256395729305374,-0.3151268763521295,-0.40781696674922074,0.2242141126964046,0.05243149008122765,-0.010130655483302465,0.008633643059472033,-0.47582866778250366,0.013576007251292625,-0.7816840160979759,-0.14894317913769822,0.07303377465287184,-0.498822322465274,0.3160760463443088,0.16572281242235123,-0.397730895462173,-0.16097095933352287,-0.304705911743889,0.012335619501213979,-0.24167146132914372,0.3855545477200232,-0.15324103745930054,0.03528946754263268,-0.35889801382583697,-0.08699500104548888,0.38097534201705846,-0.36904024333749935,0.034553880330804525,0.09045141321920461,0.1766177721722253,-0.49951102296499067,-0.21733604573991797,-0.056393343323546445,0.0588360669723582,-0.5643295586517832,0.3703294579925297,-0.29252295916005777,0.3278729555751043,-0.20306945137046142,0.24350102700035567,-0.055887159237985054,0.07590383128643921,0.2817564226141267,-0.08745055866405979,-0.12844309715227104,-0.09492278968760823,-0.13145191059105782,0.3296747592969766,0.165896130704314,0.0371301789956914,-0.1090334803774653,0.22715264993942708,-0.200495850865112,-0.2884747971669799,0.020849505080595365,0.2569843803208507,-0.1432176688938207,-0.31121626469884683,-0.0738214943572964,-0.3566514644496981,-0.22532519540236604,-0.03258343550523172,-0.15232000348450314,0.11273986320577767,0.07832305765016333,0.2510354382880306,0.1717679105083265,0.3008085667452132,0.04172481313978771,-0.3408622340741616,-0.43447984653807536,0.22638740431250703,-0.03139646640116129,-0.27629984404587465,-0.009354882782934735,-0.33654359501710174,0.11154959155369469,-0.3756751255910732,0.3679667660451973,-0.18930866315477096,0.0007254610142583607,0.6043203358724629,0.05497165480354443,-0.11016084575838397,0.4112118042612617,0.042630244892948324,-0.17561243401729523,-0.48548649906880365,0.3191279942704115,0.05096410354647857,-0.29905714789708665,-0.06315206725014468,0.2932230029842024,-0.09711869051942727,0.05447255619894986,-0.06829517064055801,-0.21743737631744958,-0.13453255911524478,-0.03834880963464773,0.46208324063247824,0.4083477437668199,-0.08537151639543511,0.2894736962317981,0.13363283329685882,-0.08788052866647565,-0.30439848515472584,-0.03294958294984577,-0.27017918026730653,-0.053797485695124804,0.4400305876827348,-0.3109209129554868,-0.38960312186951457,0.1607062534239674,0.1432201727657462,-0.2822594805854657,0.026817367537243113,-0.2881397900045437,0.08620039132848371,0.4294047312761732,-0.3020388313272002,-0.0939561768510308,0.37720294019843503,-0.41340163696394433,-0.27315518508825254,-0.47736603856657445,-0.2661567874982478,-0.2381052242705443,-0.01988322894439462,-0.02062613186412063,-0.1173369288924671,0.15356581053326357,0.27960082384574453,-0.05907146238959932,0.14740781429810196,-0.3679352691154663,-0.32061101033526335,-0.2414596638697183,0.26832849191498553,0.11605159336018,0.1025773162002245,0.37570826404357494,0.14906109479893712,0.35427637633259906,0.3791693783478127,-0.29907087014820355,0.30775788522993397,0.23516123976087305,0.29422758222321016,-0.3117056786714326,-0.3525549207273118,0.09824887916732158,-0.366840304339007,-0.488076721074677,-0.2451910141547206,-0.33980066539101544,0.14161510629092383,-0.12343439284329379,0.2064156157275311,0.259887735775738,0.007838779326111512,-0.38793899187522324,-0.03346732475219165,-0.49541609043420215,0.7334433618646276,0.13464267311892658,-0.2535690613798,-0.4213024140001711,-0.3185958168796893,-0.1860100238160993,0.3845753318915488,-0.28805994398014806,0.08847175448702935,0.3601296791441202,0.023745338143660553,-0.24130362202071945,-0.17774227997398204,0.01483425757916149,-0.41996509893849243,-0.19852842717833497,-0.40963835978394086,0.020657747394307122,0.19906986152216818,0.09341258029362426,0.3109555399655138,0.3313472368099836,0.35673861838604876,-0.16909266931066153,0.41748397446903607,-0.39480614935542485,0.2281320983507947,-0.008903622044478416,-0.05515523823890517,-0.02498651569833958,-0.5638745191846269,-0.21604629350661333,-0.41007736674139583,-0.44973433806832747,-0.30581166175057173,-0.37324847406000716,-0.17867878765814763,0.2463727194651491,0.07304223672250636,-0.30743790833095197,0.1575143225026929,-0.39123692651584085,-0.31754378515553705,-0.33658659088344417,0.012969326860327871,-0.06388406541598152,0.1022652635893473,0.20946736275590414,-0.10702018189345024,-0.09257750166499104,-0.037329764802333756,0.33308319822611376,0.24393735553403503,-0.04929810619919927,-0.3710198612651577,0.3125766935603446,-0.06766314354582596,-0.11553807785100136,-0.3208876482547242,0.12926683920589016,0.2569629997527412,-0.48426625373222937,-0.32656104246364237,-0.37349664387051607,0.42404904044019287,0.048248481474419895,-0.3393686049922788,-0.37719902624619933,0.29001250382257,-0.07810953713798288,-0.20592735887176442,0.18045432453884602,0.3342325628820957,-0.11315975629444049,0.358645473052918,-0.290149026029018,0.12720144001669473,0.018517283606362428,-0.2791183575033046,0.329901920945341,0.3631355385939813,-0.30945183306606044,-0.2785708624115856,-0.04874117800681809,-0.11007898495143768,-0.3304481354460528,-0.28212350244488066,0.11977451222787097,0.14918872761619162,0.33262675050959734,0.14073756367382104,-0.04720325571194378,-0.44776525835687975,0.45243169014474754,0.34489473615239336,-0.3204998118877937,-0.00873463207241854,-0.35540588697536624,0.3162207729173451,-0.2649228025227671,-0.2538510944641902,-0.41080353485731463,-0.20228932962852983,0.18195912371483275,-0.20154247121196878,0.18057316222670564,0.23268868741597148,-0.16028921064721222,0.09778368339625634,-0.45463583381950534,-0.42849511341600965,-0.294231058020799,0.2858268486333132,0.10469104253068937,-0.36219910576962583,-0.34383109666218153,-0.43072437630802524,-0.07423267994857323,-0.04124293671191774,-0.20053876905288043,-0.17671862904312882,0.32345105133268953,0.25688392466387233,0.07964561391039138,0.04466961220014793,0.007505796315555222,0.07884976903261685,-0.15923181820935411,0.0689333897363551,-0.5838539302393976,0.38133369351194835,-0.01026826304164789,-0.4282551847204096,-0.38687441320291727,-0.5304400738261353,0.12350334990002104,-0.10229891100494566,0.1533870084220406,-0.25646447015988477,-0.31651308601276135,-0.3023565196091521,-0.2819617010654773,-0.2934781960108153,0.3182254957214126,-0.04648774664518293,-0.037702750866989015,0.296444316213889,0.22529814512131646,-0.22529419027328845,0.28577687414870273,-0.1409425223670638,-0.30942984602388407,0.32666919839232966,0.14127718650366353,0.369500933064764,-0.02639183005077744,0.22502444051502418,0.18560513861128178,-0.13791749315146434,-0.04834852880298032,0.08621480894071076,0.07790918196332161,-0.18470320860602174,-0.45434079809602473,-0.3398539088177938,0.25863708964632426,0.14516682277450071,0.3791938652543805,0.5015349626169574,-0.5715515757804289,0.35576567145070925,0.053467564649919315,-0.39618538669259457,-0.3881599818236004,-0.4030348278699133,0.12180744797416175,-0.18128429808359484,0.06027798664942736,-0.10093504071269038,-0.16264077822235426,0.18190417541767093,-0.33780199343283634,-0.38787208078217716,-0.5547950363041444,0.2507923637543314,-0.37689714941126423,-0.2544419532040824,-0.010646905778777662,-0.28473159624297784,-0.5223622102669592,0.2680030930039954,0.37809033030337735,-0.2576066707523689,0.23974084402151857,-0.06365514070658944,0.24217799678248617,-0.03824493052349181,-0.48612376636511223,0.3071345895198203,0.02736075985198453,0.02273816634661549,0.016450762346017028,-0.4749034546439536,-0.39931704043564115,-0.4838773653955972,-0.20166334717258239,0.3734132265317826,-0.0069700235253824265,-0.01861712564136978,0.048375387984510874,0.1692477970168405,0.1328198143318882,0.28329750816733856,0.40473041431441087,-0.06331963858250698,-0.03557666538716712,0.3081724034251199,-0.2776524578536697,-0.10171854113628265,0.2626926298516213,-0.21103719413895902,-0.20889836142185417,0.375440017784919,0.23090038807959248,0.4313434148887629,-0.3150375889431906,-0.11517149401686402,0.06773639586756003,0.3561160132619484,-0.19839693391532526,-0.46958734689850545,-0.3015455004712824,0.26279171080580455,-0.1704381721647253,-0.40467094702038875,0.05442046256184252,-0.24558963849712354,-0.386633646353317,0.35816212268792497,-0.057405361438282974,0.4529659968532917,-0.158434973880398,-0.06735726072247872,-0.3384904764908941,-0.19051297690051117,0.20800925720941357,0.2331112448778344,0.23971975770963097,0.4111290352206792,-0.14873470629225846,0.13191822244552245,-0.44192673173477015,-0.37686570046616097,-0.37416173686821247,0.636217523139157,0.49603909897133525,0.44676949120543924,0.48760304017929224,-0.413832014878533,0.20351706803733388,0.13206332073236576,-0.29533040210441147,-0.32424058448478615,0.21392832112541904,0.18709152002359972,-0.21152043840044552,0.11431904086453465,-0.48608566489928773,0.08121850091334183,0.4484312451266379,-0.3777743393082781,-0.13245291199376594,0.14086439385239216,-0.1702604000306575,-0.23445687126355577,0.13951179517375661,-0.18846516222014215,-0.39441760785018176,0.1710744708726408,0.2810272029575497,0.06336866002911126,0.33852700060729707,0.3118660048628188,0.26684352893085056,-0.3510679014679764,-0.4746997369598645,0.09218636743506815,-0.3561585044933495,0.24652957275756196,-0.34414252714083865,0.28132916256419976,-0.14256551755015753,0.009029522401427856,0.438245983317244,-0.4588584293073022,0.17628085111809053,0.11363712837110243,0.229679695321213,-0.6735925307390778,-0.2774018763871694,-0.18906566611667108,0.1902543811995133,-0.35890439493661785,-0.37612962228620284,0.0833970024671986,-0.40281267284914335,-0.35423486297644047,-0.19212924651823635,0.25306025580612057,-0.05831631566628715,0.4146890123657825,0.09368313782091395,0.15719889259570533,-0.0651423109598655,-0.2421099465976955,0.38125373608465607,0.06289978471040301,-0.16727223372791034,0.050597901852684535,0.01810863891176384,-0.3035649869915373,0.35813920878162275,0.06980579010993429,0.37021025527520535,0.16775102425219146,-0.03663553152504046,-0.11746106597087289,0.3782965415894526,-0.5042198618352695,-0.572415120880252,-0.1644785317577189,-0.38480579265475706,-0.21811944994211388,-0.3134600581477269,0.2054190008498748,0.07159531030608753,-0.13127177788074892,-0.34318796344769076,0.8330204759175139,-0.13451395949331285,0.2531456661350189,0.2654586800192757,0.03396849293696061,0.1943638973496602,0.2214724508513642,0.43356152851997726,-0.19988208743213765,-0.4404582621835936,-0.21414564319580887,-0.2448717452602866,-0.36665430562876694,-0.25473913321001085,0.11441956289641717,0.10498393102394116,-0.34584044422897986,-0.13894480257288147,-0.0951194032628668,0.020015489397143506,0.13519509519732328,-0.14533299456156018,-0.12099076396852639,0.28750470904807357,0.06639360910027672,0.02768311812133187,0.10451219327963722,-0.41071084142192693,-0.07055518979692754,0.24728161749062486,-0.2758334653092416,-0.08081091711823989,0.2303430727151561,-0.061862578459168,0.23910726278004005,-0.1078241342413829,0.13362759988276296,0.27542222816521866,0.13338453720393212,0.2687139468668138,-0.36245690911197787,0.09798803336893461,0.5499037487806203,-0.4235022089105107,0.3188456805300066,0.14825193778127166,-0.2927325127216515,0.0432302697384371,-0.3493196872416298,-0.05596777838710384,-0.15058295856523154,-0.08020465591346873,-0.320589213000825,0.3820613790321914,0.017321081740603046,-0.29287085131016966,-0.43673474521929123,0.44304893028206926,-0.45824544534748723,-0.3834466731446622,-0.4006090974635795,-0.2101819869409489,-0.3941609924076819,0.3062227805800814,0.15257784559959683,0.22041945616949812,0.4010666355118182,-0.31543212335010046,-0.13112358629006757,0.05051877983802183,-0.2126562167827767,-0.1962952966105593,-0.2640727428434594,0.35474775641474854,0.37048164407168394,0.4511363447501298,-0.12978853636087756,0.22161541310406335,0.2881136638222966,-0.42876220608439897,0.3787676428322189,0.3945366332693741,0.7921919949602726,-0.04458572593636219,-0.16546177712227478,-0.3008339733344104,0.3292463241528004,-0.2659610553952612,-0.1990585280756178,-0.503449053633188,-0.045832718348337256,0.09170978595994456,0.02476705242768642,0.12855751893795236,-0.03817397136879779,0.3085087289831062,0.06436533930367433,-0.08378387730632524,-0.06187038342666864,-0.1269868447041791,-0.22700182630896082,0.1213985872298315,-0.11522881563587788,-0.4351291267469597,0.19831673732636645,-0.31727568546655704,-0.3034607311298105,0.1988332577949134,-0.11496719763621757,0.344689326915347,-0.3680960476481087,0.2960747595885111,-0.47384755381182814,0.3773014864452286,-0.016605539005755638,-0.2544104096273156,-0.12346210320488246,-0.5088631231504491,0.2807451940453609,-0.08542895387872179,-0.3039865838802021,-0.10013636797533496,0.03777769144237227,-0.14181459221863318,-0.567758414005059,-0.05199159308750723,-0.22440504658082883,-0.1800599110142173,-0.14652739654011654,-0.04429629001345624,-0.2556058680820769,0.2522695245637162,0.4362231005486872,0.029093264892363788,-0.2977117234544042,-0.28400771082020926,0.28544928797558417,0.18096590800423826,0.33714105622579454,0.1899766399569786,-0.13118922577663006,-0.3471963897420532,-0.14576517674818332,0.23166526937593707,-0.024673437993901353,0.12263975291144019,0.2644292460632017,-0.22718370905558594,-0.305069787251591,-0.06328521910278849,0.08798130281830333,0.004652216942491942,-0.06454616707966476,-0.17086258417429792,-0.4008543546871939,0.16063971407230487,0.10434582484372383,-0.22964642741568608,0.09131468938510143,0.3031247007774181,0.21566143754654948,0.040592360879231924,-0.21595454208127352,-0.29984945607315616,-0.7111323197833079,-0.740055861049631,-0.526770516782559,-0.14417927713396866,0.057958607250606295,0.0011254297651645474,0.24448759425321695,0.35385517185821225,-0.007089604248417406,0.32036993752504533,0.20391015738293827,-0.3017359128355272,-0.35507587508604366,0.15594192941873,0.11451097814325595,-0.32346124220121836,-0.2399083267369758,-0.21260634599028305,-0.40418651201322814,-0.0735444192246807,-0.26137864851560977,0.18924143160456858,0.15508144906428192,-0.44073423029441205,-0.2866200935983384,-0.14476906115089247,0.028644351954275588,0.1351223660263963,0.2114887394884682,0.02230318020375591,0.08105265796614217,0.24952300951565454,0.08768566449216528,0.13846966494341167,-0.3063440820963796,0.020189497642552127,-0.1681395336828284,0.13848333562672283,0.5279218297549735,-0.20629371240556105,-0.16544219410862054,0.2294887241744948,0.4225267430102348,-0.08175862256929158,0.1205352016272738,-0.3781478598374628,0.2645324281030492,0.4212649450291847,-0.3656698037589927,-0.3703144448921542,-0.17412779487439906,0.20621295588837546,0.3923585271009593,0.10007160968065057,0.18006374214827106,0.10488259130468429,-0.24202465605222076,-0.3198870349690136,-0.3217084727573143,0.05806189199839925,0.018627108715199382,0.0884635619043006,-0.17817175423784298,0.25220847262846835,-0.28809635815967416,0.12275845110964881,-0.1490312044918648,0.09100827877088404,-0.43599453830745744,0.28554029599925457,0.015659711619521288,0.3238979098274025,0.32894384752648687,0.1858891575507644,0.020206857049931363,-0.0812342849585188,-0.3212505466866164,0.17063132677186768,0.28274936714618637,-0.14856077980253474,-0.5835013327285332,-0.022731356899948423,0.23130389639465312,0.36476328591622964,0.3903463042222541,0.28341178329709327,0.15001940606158712,-0.3930179542940339,-0.17116150184279832,0.1837419371169244,0.4990002040334576,0.19263154624004045,0.19906040420845678,-0.025880911332987946,0.03820450336982515,-0.23258624417424079,-0.20183479438555008,-0.20689026690755627,0.22120988757387183,0.213939790082624,-0.14058219699139712,-0.37664659184924537,-0.3733654095016056,-0.08698274086347972,-0.30270782210764074,-0.06014996989448841,-0.12725810405123664,0.05344902137897703,0.1880905409265713,-0.20296234547629108,-0.070579156329108,0.1272535526541481,-0.14440124789289033,0.01657598064024908,-0.05963886069761697,-0.11909099560404053,-0.1447754012694556,0.19278608575579684,-0.04768136828970139,0.23672907975821134,0.1448146553845342,-0.1405921180630265,-0.3403112370249579,-0.07592304901615625,0.04708361579907202,-0.0025240199048609737,0.10860756115065669,0.2191412309691865,0.3994644782654391,-0.04210087378876202,-0.1508233778658972,0.12886689194956727,0.002289352124080421,0.3881441796615227,-0.16289732665767073,-0.29356079079402403,-0.2841364365623101,0.165900417754699,0.18705765674642622,-0.028243609169999073,-0.05349970115059295,-0.4135540554887112,-0.4530201163393831,-0.1301149503719242,-0.09420839764920491,0.23267317454720962,0.44089821333303064,-0.14689374715576464,-0.3257654284554223,-0.18834613587596827,-0.06537868022364152,-0.354835796860109,0.28618830203587475,-0.3993242136764175,-0.28128688836640453,-0.4258123442862378,-0.44083119671868015,0.2976337804502198,0.3621743178672309,0.2983485418720939,0.17855893650273819,-0.3861899386659431,-0.22256935330684718,0.38802254987965756,0.48676129098436927,0.4047172063257021,-0.27482267084245243,-0.33403525140172424,-0.5014852801509548,-0.14050933855319309,-0.12407935920314159,-0.35660883244145647,-0.4657384579173312,-0.41376640743384574,-0.4440490874913567,-0.2696510873773747,-0.03661176230677724,-0.30481633374511724,-0.19317250301015632,0.14246756130180183,0.4851430218289221,-0.3054303876299425,-0.290459598448875,0.3547855059773164,0.028405371443342937,-0.04573128416789123,-0.052592911545765314,0.3147594415997752,0.06160230543208702,0.2793632945452103,-0.27085749151722815,-0.1832274804688322,0.44622174711104795,-0.3958861333071104,-0.39350875500096827,-0.4680548314961246,-0.023315716957279,0.18956989599629345,0.3466561414636594,0.264444405755895,-0.24881202690681753,-0.1167781461442387,0.25102824430878684,0.30747297858203115,-0.0009613063878174952,-0.47532336032711986,-0.5711840078139432,-0.09936308888454848,-0.17918841566378585,-0.14614555340027036,0.26325714368525943,-0.005006431211943737,-0.20164545873264403,0.2918051699518809,0.10543209987203189,-0.09244244842028054,-0.3299876240847302,-0.31124279810150773,0.26824427648127525,0.1661820787276635,0.022581801391268027,-0.3063529143276731,0.030601707702405695,0.05605292587079843,-0.23728688549300533,0.34430383209020127,-0.24162238789117102,0.2670832088547983,-0.11471298796580712,-0.4472878410457625,0.13650923785666524,0.3892349617189153,0.38905699907205826,-0.14279326917347657,0.17290456614441027,-0.26393917071596557,-0.409490371265681,0.2249310725080458,-0.21814237736897574,-0.15302174701915613,-0.44013223950234837,-0.23884355685320444,-0.4229741445697156,0.05934094720331683,0.8809647257316173,-0.03002214387651523,0.19359528241808552,0.32096388797443676,0.18705225202776027,-0.20861339618559807,0.13366106285815502,0.15856461495275043,0.00720544327052844,-0.5688832962338313,0.09424354806329527,-0.0395128554193792,-0.06634109319411846,0.38845984561822217,0.15858392991855136,0.41797859420903954,0.16150690025333292,-0.45864024051161184,0.012577443500104387,0.3098170514737343,0.017279221578480667,-0.4442121203811434,0.42541119515699216,-0.5766221308444216,0.11637591996809774,-0.015138712763555771,-0.2968767359988297,0.24543152426873763,0.14488834523369232,0.20372257411099468,-0.06945177568921015,-0.2994052660272594,-0.16998258822188786,0.09644172980369972,-0.383789270587726,-0.2594363478632289,-0.11237397653398781,0.020886858498248447,0.23562076729214676,0.10529868822973092,0.17885359921368985,0.15657084705597757,-0.4899548835417709,-0.27031513994377365,-0.0953996576223393,-0.21121121164117418,-0.10405392478373747,0.1983590905945245,-0.4362573906252272,-0.4625572196293928,0.08378602686327595,-0.1890221048982733,-0.5316512333445318,-0.44995707499511267,0.06072590419090968,-0.04803385352720835,-0.44517339167693426,0.050074513309942566,0.24541695929338397,-0.14688407981209214,0.2759670241160713,0.31894380773044995,-0.021310115064699254,-0.38933259027916706,-0.19958325310271188,-0.4952897060776411,-0.09267858626231386,-0.18016026086210765,0.4434778803315531,-0.4351484835973698,-0.24875420595302747,0.20272715329843075,0.29763278669850063,-0.01880001813337371,-0.5816793292953594,0.3697460675397138,-0.16677813082956733,-0.18914701172650342,-0.34133569248081524,0.1849619083042124,-0.1850057501124103,-0.3794064118768689,0.7822857653019125,0.48109897813394437,0.005356602586469209,-0.2011482591269285,-0.1651279448672831,-0.13949004536393053,-0.4651328094325767,-0.38389062987396366,0.07518496986664773,-0.22521770388049991,-0.39365481279103964,0.29425075761797864,-0.3334594877621668,-0.014038963148049385,0.02556926757954344,0.3684787023628971,-0.22912635548167073,-0.0435071386237651,0.15145366987135941,-0.2827274649547662,0.17612463029134479,-0.36267147333119854,-0.47191641221664055,0.2500902173453666,-0.4574292762618519,0.4354049252657497,-0.39890837841942406,0.43142491341735734,0.01813709230150891,-0.09597183711099992,-0.15383788797277814,0.027662684594927867,-0.49542331020692476,-0.4242334043748677,0.06333894084808762,-0.30927103083345775,0.05843791966729584,-0.24095325410009422,0.34713734842020344,0.250497337255734,-0.37982777954307295,0.2019087082641049,-0.1252862138535501,-0.3243076022909484,-0.28463721583487994,-0.013004954954100116,0.37597052859911584,-0.19586119065274404,0.19665360012304886,0.31554068446540623,-0.37246503732133557,-0.05644965354220047,0.24796056380463302,-0.06901881050905712,0.28366916037282536,0.11253449404959796,-0.28921747241803036,0.21730923325856205,-0.4777984347283288,-0.3075146002988045,-0.47193259142749344,0.17122868565247398,0.17672111045951946,-0.025724140726877454,0.1366624120185657,0.0849594498177438,-0.09725459039266544,-0.29323273075399253,-0.2747109222449677,-0.1742176112210974,0.1901632986994871,0.019460834727156026,0.32924638361275027,-0.02221428036720787,-0.5570476450548258,0.2902471533075756,0.22522103023575757,-0.40023123143020456,0.18963000411812364,0.20718285334095368,-0.03105259830320774,-0.4074610893845387,0.39359952364989864,0.07508162788310925,0.1420119992730274,-0.2929282113123766,0.2561691998077169,-0.45836739547049354,0.3193489176705503,0.153869770376568,0.15567472289634135,0.1611152838426448,-0.19814871422423877,-0.2072636016695468,0.21264572735902668,-0.1710149624311267,-0.43344544794324014,-0.06882530634929965,-0.14688445266652458,-0.533020323490192,0.07427269679999712,0.2505761486683201,-0.47507089910535283,-0.13192167021479606,-0.37805446968716167,-0.4004147900071948,0.16157639094505535,-0.44050812425718644,0.018783502547573806,0.26354023725319314,-0.09572034578094415,-0.08827539183653742,-0.133682472443866,0.049890636110993834,0.3588509956616433,-0.42246750351203904,-0.34481903663482166,0.18581976336304043,-0.4150038625330532,0.36305809822473206,0.018298149762694907,0.3487456365067229,0.07818760282445697,-0.3891350068171245,0.16162298364320177,0.3888201966129146,-0.25790004707965625,0.19620907565946838,0.15100314006500934,0.05738839649632922,-0.1979229353439134,0.09419110256762478,-0.443814201083477,0.1731151170801353,0.1744295347279887,0.08680664517788494,-0.30230792064544537,0.09148504552428939,-0.2698271620089377,-0.28260047994061777,-0.47257767407960916,0.3464668740820487,-0.0618533927335127,0.10867908550598017,0.3521789256309077,-0.1806980737963403,-0.42000340219380783,-0.49993032276946087,0.39693766442659817,-0.24750994246783317,-0.11516028457281884,0.15397237340542347,-0.10749989111123198,-0.46621532993009324,0.11545956808166034,0.07564708297879016,0.1240756083104045,0.2917138147291313,-0.2730655548242227,-0.22913258412359788,0.32348863069008477,-0.06351292832339278,0.18857384856773374,-0.028430652809084214,0.5799620074524877,0.4303559674746842,-0.5356426275075247,-0.13030802777938186,0.2509001965370541,0.0451492396021595,-0.28588892175115116,-0.2248726200932238,-0.289739598813248,-0.23925411869977165,-0.032257441802793246,0.377587958591578,0.13168563276427708,0.25921685561361907,-0.22370515693110138,0.14727528360731287,0.3159519370507129,-0.11197203473814026,-0.08952184450413493,0.1614660022278698,-0.35547939963274733,-0.20977959250015335,-0.34938799578495167,0.3694583708331394,0.22659514567326344,-0.23597191470507775,0.09959766772207702,0.2705818400452492,-0.3650912866534827,0.3656644419893824,-0.17273128108961341,0.04890924327875549,0.06474884365576863,-0.13327267184901823,-0.19695585001602817,-0.317978412713958,-0.06485117306994279,0.17288853885595698,0.06087937571446387,0.35047904033088456,-0.11401681014022448,0.2517642281939483,-0.35813690138489795,-0.02640642098504881,-0.24499274149451367,-0.0786802475549345,-0.12869295496458627,-0.41271683767001754,0.3298945341847356,-0.4985912419747489,-0.45323774166306996,0.23454849451714416,-0.049464536525392996,0.3899216421639717,-0.39350355964753525,-0.38347996647050786,-0.09828718638973634,-0.45468212301845534,-0.03726361441685437,-0.5069663751525306,-0.49840446234326935,0.2120490990689557,-0.38709840027416065,-0.2729572941610893,-0.37127006570646637,-0.08796104984713324,0.3659551458329931,-0.35262499076136344,-0.2856688215325711,0.21584924297800978,0.3115007795915986,-0.17263941697054322,-0.24880299647311166,-0.45351423782652733,0.2736512171972807,-0.3008441386097949,-0.31921794054547065,0.2224999895008098,-0.3030722535666076,0.05014563893617605,0.1324792685592554,-0.015039255515082405,0.41732605761607433,0.13218128541180046,-0.5746367879023088,-0.17824342135166707,0.02507785062016399,-0.41303882135797143,0.32855658952153755,-0.28822589346149174,-0.12376289362419063,-0.43861237680431525,-0.46435031639620383,-0.24366917870472818,-0.3852062955309813,0.21375348658478385,0.17727047457366088,0.0896342900970598,-0.365908509028956,0.21615986512247098,0.3250137989016635,-0.1408068125024944,0.30939334620313985,-0.5457390224711839,-0.052551356517349594,0.040563662533252415,-0.15062023109431208,0.385653996793034,0.22068979964776753,-0.055373423662480215,-0.035167739287550855,-0.2473454973232615,0.4127858755263981,0.41923592511626795,0.3631695126440326,0.3533640101381143,0.2726350338342296,-0.27410241331279334,0.011430107890931789,-0.3284817950491559,-0.15298921722159825,0.24094347169460512,-0.3154739746681854,-0.16068039856434282,0.13538518477291517,0.349709313285142,-0.0929438538593091,0.11784782466091191,0.07720515635949149,-0.31196575254386766,0.2256100249840184,-0.17902180481572422,0.1994407502129936,-0.03422365500717475,0.27238101450187857,-0.19248958945947822,-0.18421933934347512,0.09385662581694189,0.06828711159705701,0.2408856505413327,0.018619258762128013,0.05738960771074659,-0.16545516982334446,-0.03215595023254948,-0.1589593966866988,-0.16596254926697762,0.21185468215613334,-0.39124766059285376,-0.017499869154948906,-0.23369992775634937,-0.10794271129968165,0.29176137603248625,-0.18678414663412957,0.041311214240738026,-0.20547182415351153,0.0798089087045737,0.2030902502283854,-0.23834815033829868,0.17661480418893874,-0.021480255739138233,-0.2955174481326527,0.013755162249711234,0.2569370800438619,-0.06609759519191909,0.21352053546460048,-0.5033766676895112,1.1536485244337642,-0.06664932572543732,-0.10915546921261583,0.21003997479849051,0.2149809879397603,0.2924052161112221,-0.29881581047071426,-0.40268087808448905,0.7647398848234633,0.23458975794634002,0.07249194804462365,-0.09538966395230815,0.101496897650404,-0.05691359136786318,0.2693144700222066,0.019916345431687604,0.09702531016007102,0.1975113695478168,-0.11480811702281048,0.2737816076299399,-0.06521277080006814,0.42231417731226845,0.16312175185194988,-0.3942631792087222,0.11487852361624873,0.3722350949070879,0.16502755821254836,0.11830995019200193,-0.2343173254829154,-0.054563170773760675,-0.3941471447646959,0.2810924261741861,0.19690257933350708,-0.07448638631633044,0.06970323791378592,-0.09104829948780872,0.06480341790925817,0.2183977662298874,-0.14753192647955057,0.15601975137802646,-0.13012739005218268,0.08358813676699921,-0.4814822990732418,0.18240389875474375,0.22942416142469785,0.2743605956327395,-0.36278047412672465,0.2912378862198294,-0.3574087144591993,-0.4045098779937755,-0.24572685660206556,0.48346044037874286,-0.024462595565410677,0.010787679561247694,-0.15306556663431245,-0.20962563026411013,0.22423704034791336,-0.27900053639297867,0.05219092821370726,-0.027321961235501364,0.1212490881884795,-0.45723482298464646,-0.06308192176535983,0.28172308286616987,-0.05288575967707609,-0.04813812865390153,-0.21387372462906526,-0.23874965875013707,-0.24750606711188516,0.22028576189057317,-0.27119959576814007,-0.35145348685690114,0.01788655455117723,0.24379997418608773,0.06744686483219459,0.17755954825196005,-0.35779041394635547,-0.1851940259371578,0.23031327039993807,0.32123577293328714,-0.12199539160426466,-0.26339181535650863,-0.37009691510715537,-0.41590104131144706,-0.3654194441241544,0.010007264008406645,0.3451389648762345,-0.552711872915132,-0.1678829403856185,-0.19283455896691176,0.11517920945467186,0.1710069619462992,-0.22945166274730133,-0.28711591536012493,-0.0033054513474045427,0.25531009769218127,-0.4212475071130598,-0.347665035678298,0.2416340870196719,0.46539332398706773,-0.31692504030751595,-0.27782730726119126,-0.11577718898110949,0.24720099153215813,-0.0031544601891663284,-0.46649606816661554,-0.22206737784104602,0.25217353368195294,0.3740676011884606,-0.14816911064153582,-0.17013437686447486,-0.4703499484260198,-0.19095288280826536,-0.3268431870461584,-0.20556831868662045,0.2957148102192361,0.3715691575917005,0.18282548489026626,0.279907604157354,0.138931330458623,-0.3174852588945623,-0.15586186731888033,-0.4403740504850966,0.008067562785979835,-0.4296567133154563,0.45413553080191327,0.2998197312077562,-0.42551430402025336,-0.38130209854956476,0.1542296196194473,0.06941293221163782,-0.3514791241246574,-0.1266661460138413,-0.3060062803911065,0.3116682385483891,-0.34488002718044986,0.03967763553178257,0.021198347981143947,-0.04286438661667335,-0.3120563204382164,0.17818788409654204,0.2725711376657093,0.28043960350734504,-0.07097613307280097,0.16765331143967063,-0.036183400992488964,-0.22521824101213092,-0.45789697865218437,0.3492455143967696,-0.1974263836827887,0.30832708556969823,0.17856275411095718,-0.4606736217499452,-0.23524439693825844,0.09204582336665114,0.0834186224358387,0.10316433168932786,0.03725132382387787,0.3581418274037016,-0.24050874687631849,0.35973363602375796,0.035004186726521024,0.15824857746693616,-0.1138473057436405,0.25138464216503165,-0.5044054255294796,0.3421715626257146,-0.47676761197989115,-0.4870899965679664,0.2640055138552942,0.09364104991002059,-0.055002423246969245,0.37368135227515253,0.36548405655229826,0.298309197905228,0.08542153488762738,0.30050458633208027,0.012392125995706556,-0.4509675605853057,-0.25133856014581046,-0.11085724203845047,-0.2533628006118101,0.26766977888160737,-0.4437664003071605,0.3038359393869183,-0.12787483250004458,-0.13695002446288762,0.008633973320714607,-0.18558694500450829,0.18094937757197951,-0.36436513709325163,-0.3825837005029523,-0.3906908508219619,-0.45148023249372443,-0.4355086680929971,-0.15047950375664168,-0.07926239257147191,0.18269863560281924,-0.4921328529106642,-0.32767035260894223,-0.13092717881626134,-0.22422962787285122,-0.2616950437263202,-0.5342849303793454,-0.4623250974256992,-0.04647586707003715,-0.14056997888971265,-0.25658433310727735,0.18398586388303623,-0.1493532520898133,-0.004184618971894249,-0.27907602586608105,0.06990312956149876,0.22023887935388137,-0.40119120722562174,-0.31048715502633173,-0.10874759101900955,-0.057368079804090366,0.24677680881164635,-0.1474142296350898,-0.5940685077166202,0.261358294410908,0.12183583767218192,0.06884047665676216,0.18083755761536852,-0.2957758425803095,-0.2017359272122188,0.33849315110035383,-0.3655903863396743,0.007929086045931556,-0.2689112900969925,0.2657131553905745,-0.09675326586813003,-0.08040200800272239,-0.3040872209725178,0.24221419883054937,-0.35042162103433067,0.0707389828449829,-0.05188287387983483,-0.003414705708478046,0.09251790256650844,0.049455707300998034,0.009533920198934814,-0.4128100111468888,-0.011798824200300472,-0.37946162860098764,0.9216668968076668,0.2087449422184374,0.16198912718125755,-0.2959179049412253,-0.44143302872988843,0.32004473979468423,-0.024621362191923856,-0.24146981468249248,0.32867074578030864,0.17259426453256055,0.054542724590600306,-0.00043625248004323626,-0.3656319610040394,0.16188530779731006,-0.2599035974974049,-0.15306634461435634,0.133475904146304,-0.4467277773613897,0.1122201325600577,0.10156547980328218,-0.2343319426269009,0.184438725647312,0.04367892517786637,-0.3866392378688582,-0.32537927110590076,-0.2674342829883588,0.41754034420390435,0.29955910262266394,-0.3508322272541354,0.026784094381137536,-0.10544212376504611,-0.19779482245042226,-0.3306897377969344,0.371744695208499,0.3040258106935091,-0.5772194772598579,-0.138853419038548,-0.05668214513048947,0.038973133563008425,0.09720616027704787,0.3752987412363083,-0.03962372651047118,-0.1868725419029906,-0.26465565218396225,0.44461427781897334,0.4352314848945534,-0.2514547257591497,0.24122397540180357,-0.21624820023406666,0.20113237586958255,-0.3089287273864048,0.22072589555580116,-0.3807398086320925,0.008775970999970373,-0.11787967924976281,0.2646327743040002,0.27862073688188366,0.2948149651963904,0.051405226184532526,0.42154975865947064,-0.4091746834685854,0.36255759891122463,0.03757764054967101,-0.2570319617933261,0.23895565142645936,-0.1167196372989672,-0.1701632625231428,0.08959275923544739,0.3717075223007687,0.34905046683680074,0.21367484899917494,0.14605735033378123,-0.3302696348756091,0.28407881402345,0.1861971399306753,0.17817248805453087,-0.4449441511899145,-0.23922391269521448,-0.02087462169725636,-0.4627547717811057,-0.7691394670781136,-0.16791466340572467,0.007428530743110743,0.2798054568935489,-0.18045549360515672,-0.2085542695049932,-0.42727506694836404,0.1092148515718718,0.22542835771142522,-0.21951993920365725,0.6660416137063055,0.14557980992345232,-0.009067454917510962,0.11981596461545381,0.11646959290889444,-0.06457880944821277,-0.18376727803956439,-0.03150201694371472,-0.3465416605266186,0.36920932472641343,-0.049305227341794135,0.4360738311274473,-0.21728133112215275,0.23680512294979364,-0.07510566093302239,-0.3205487951218901,0.3163484875979114,0.08419477538197748,0.03817437062023354,-0.29588986701520914,0.06744499939207393,-0.17836083745951334,-0.05222799395417993,-0.15438031770928656,-0.2795604205136349,-0.4055522051520921,0.08360958308400153,0.3345806394798833,0.06568640005551342,0.16240585410627353,-0.05024007200995783,-0.03396001390879274,0.06666319753346871,-0.3578092291668621,-0.12851849988359748,-0.14631814835459409,-0.3324500593368047,-0.43720504653251624,0.22578487541979056,-0.33773578338980725,-0.1600428641646433,-0.04266240967790687,-0.4020907934239256,-0.014922575313469756,-0.30663299322806026,0.33274620313465336,-0.2645678302339206,-0.4611720727269863,0.08135483356202867,0.3586858301544192,0.048677528069880724,0.3054939090355893,-0.19207122829967144,-0.12643807487026212,-0.25194017175518946,-0.3666768409935022,-0.3251479864854002,0.054927489895910495,-0.02924903613184171,-0.246805896218436,-0.266063865686876,-0.48698283663809516,0.1656750374054971,-0.16715307906463406,-0.3236417920953003,-0.21240212160586008,0.22597661369623168,-0.1401355786755151,0.10343305949901724,0.21387475378906448,-0.1814093577305214,0.3034748065231345,-0.19294533535611452,0.12268182044978498,-0.25434299750739514,-0.5207641143077397,-0.3622568991183162,0.2806739226517219,-0.3336318081978171,0.12770941974306746,0.04572084262445626,0.27370468178221646,0.07186827865980563,0.16249100754945053,0.1855653913341617,0.21611682089261575,0.013715248627800936,0.16601749577279493,0.2414824687844935,0.10593893328875935,0.039404483503460604,0.1418301654791763,0.17714779397102745,0.4508116073873507,0.25020681708094067,0.0879094035319689,-0.3459311951944605,-0.5371365550863453,0.0023534322890856997,-0.0783445050867063,0.23509296915772795,0.34668115682257666,0.2555326362576217,0.1883824969970428,0.4277714325761644,-0.5321116274993396,-0.29601997656531304,0.2905080315836476,0.1075748496702768,-0.5016720549504968,0.19810919082158682,-0.014152726052510868,-0.07773902999323748,-0.39124107361475735,-0.11197179988489722,-0.06509249026433313,0.06552212957586606,-0.3219954824166655,0.00578067342095379,0.16430694814549313,-0.013699209720379323,-0.41612049917860344,-0.49755041887933016,0.11822960811169397,0.25748691576906046,0.11317532229198476,-0.011786160242479568,-0.019564119814476946,-0.32858284843028707,-0.37762276740272566,-0.13701966715160652,-0.3960245793240368,-0.3250203502739843,0.30861388194105627,0.3603518789198515,0.014941720608604986,-0.17790043736811223,-0.47844923194966515,-0.06299265280991233,0.2631445114598077,-0.1813045429566849,-0.06396254199005312,0.3461899964409892,0.46762971982093127,-0.5070416524422905,0.21553899994656728,0.16750505969539375,-0.2463722425369346,-0.21137030929520073,-0.1274825824937316,0.10480604832874303,-0.14473934040581996,-0.1295107070239256,0.009454918176420456,0.01394474293476744,0.47411982691945703,-0.28587918031756004,0.20704066648806924,-0.006419340288564844,-0.28843053073947983,-0.08387464504806062,-0.01743328680160179,-0.4817596494528631,0.16075965690620322,-0.13392798502865488,0.3861489503050791,0.43991985836096653,0.4777545739102648,0.06994843676705256,0.1990423471243137,0.1526451394132621,-0.4248828516026523,-0.1597937586958788,-0.4019232332588187,0.2568321147703322,0.36056642862362476,-0.2028317805971217,0.20723067936261955,0.341693275139415,0.12466538785701375,-0.39475474006036687,0.09127712733888466,0.25122530297684487,0.013018291498998724,0.07475396741089653,-0.35001657476404985,-0.3814881235169196,-0.4837649855621597,-0.47656773095216537,0.10624382995200178,-0.1247456075015545,-0.07845107654357453,-0.1908457339742272,-0.39863897737972154,0.2937084769917081,-0.42993421327431985,0.05915563515526937,-0.4821655799890977,0.1565190379348289,-0.030848775167730817,-0.46836084729263855,0.04827378530482388,0.1596371491681467,-0.27725562101768314,0.4661708708791875,0.34426908311733256,-0.11798747252393105,-0.022572646751527734,0.30585887715817006,0.2557326828965443,-0.2576131195751199,-0.45028370344887686,-0.4164613272317598,0.03895433167607578,0.4027908669750887,0.0808097291755295,0.24122179342605066,0.13689430370255615,-0.1497227624603999,0.2990203158392333,-0.4779263296157944,0.07104650769548138,0.22891084590112698,-0.017071107154575552,0.11582603132242139,-0.14845914617083905,0.33704264332904615,0.3579172329981799,0.2651099085871616,0.34840395847561184,-0.0030962367689678547,-0.4593046672713753,-0.43386966371400343,0.08962477308746546,0.24262189062607425,0.11831690154430148,-0.5157244774249033,0.17305748869055668,-0.220144708483976,-0.26949768880127306,0.2272267076890392,0.11347149147420638,-0.4221489706353741,-0.40430996843332734,-0.363793831152089,-0.25487772161577654,0.056915980658618914,0.2547705198697019,0.0799817468486879,-0.4618606552158264,-0.5026220073610891,0.16788861256880475,-0.24469297076015398,-0.00004552058791002707,0.2317513130214847,0.41428027090146613,-0.3584447947393456,0.11514683700332994,-0.34115073339645136,-0.2823411752759204,0.3548089295712736,0.06715153218962253,-0.17083454885643337,-0.15597597192295035,0.14831312937300137,-0.2006290315300268,-0.03955206960509075,0.1845430522536998,-0.22974130599761428,-0.3206070328971808,0.31901947663134156,-0.11798932420879413,-0.2571545764743511,0.16735493894695672,-0.29414472054125496,0.3451417411898087,-0.3380654711969427,0.15944302010006775,-0.4258603099873388,0.29135284438819364,-0.5660884858319063,0.22561096621477217,-0.17597468632400717,-0.26667742628051444,0.36190013318397435,0.043932156698313796,-0.03185855911192605,-0.4326372820066121,0.15213946125813343,-0.1613097624724855,0.47998660556936845,0.058543082019565554,-0.27717734921389414,-0.4812258146996334,-0.45207269986433446,0.2854379327960228,0.051197978766656466,0.02401293020680317,-0.36385500701314055,-0.40374394926565044,0.3344931736846036,0.1869520733755508,-0.15368546535005184,-0.48142629324657826,-0.31246875008002833,-0.15430810732004877,-0.016051652203423267,-0.18880667166430096,-0.542654609974814,-0.10411973627877352,-0.47439253866621167,-0.26161361484163576,-0.27060959400600115,0.27822354656968995,0.07985192030379225,0.03220496023754224,0.18297359559895948,0.03513085405493056,0.6561940794861241,0.02346356849950109,-0.11936270424390077,0.13278583731359686,0.17369729606305662,-0.5009487001055153,-0.19708924071719777,0.0924001643270429,0.3675530540806346,-0.07946295535093038,-0.013420630365127249,0.3619624623345961,0.2259107232951911,-0.3844125148137584,0.11870494301268625,-0.12867721628580045,-0.19932966673536273,-0.3666479492682759,-0.1705020741892753,-0.32133748018439445,-0.2552486587224547,0.13644677102068375,0.3276193917423151,0.3104327335101781,-0.019517975299362406,-0.13185493036854617,-0.3801908257548803,-0.4792535074005225,0.007043996915954674,-0.08528449912254034,-0.3718022737786982,-0.28407567629404035,0.13644834164717778,-0.348086894695992,0.3825671162806058,0.13108299725095504,-0.10069302922443699,0.12315639821722792,-0.28262520492368465,-0.25430921977325177,-0.012853230598453,-0.1349244982228849,-0.3330062010755954,0.27433128152246167,-0.6452660106732901,-0.045763040951997076,-0.023278885192634744,0.06987581931117429,0.06093955374055087,0.06824173484046393,0.06520405266731462,0.05468311354804583,0.14072420257810161,0.182629311175209,0.11597267623319522,-0.027925898077638876,-0.05405921768413615,0.0353666995922956,0.07650746704893399,0.08556667189522396,-0.04247815418057588,0.08988445031053874,0.1719706129611819,0.05586994239822416,0.06999410854255526,-0.012827541686480691,0.016834675441023954,0.11403447727507297,0.239267632031346,0.15585852237794987,0.1263076569033992,0.1826585495894386,0.047157415739813587,0.013476625678921762,1.228914181822912,0.3804217754561142,0.134047180021674,0.09311506311501407,0.09196058759005712,0.03988516136469353,0.17810937575223929,0.14888467596291105,-0.17795424950871266,-0.004413774547915723,-0.9154545022905689,-0.2599842696305773,-0.37394779169529435,-0.05573772319854608,0.025421031830753844,-0.18997211538667585,-0.044569247919917995,0.020934178619026102,0.22552962807002952,0.20702627481081423,0.18321169087342937,0.13701944699726495,0.08790279148999766,0.1269369890052459,-0.044684825722546305,0.013494209191481426,0.07932333400063492,0.034230988342359096,0.15567371668516447,0.03525644336129636,0.11586029308585442,0.056521563540163966,0.058433262001923864,0.2552840092400558,0.015686670601620836,-0.034236771193005784,0.06777514194644728,-0.0745644518213924,0.06867820762564406,0.02099575496085079,0.0820223434078091,0.09778914612321085,0.044926966811668204,-0.052882679878899226,0.025075778386655624,0.03257044665005131,-0.03385926895766588,0.12835283190420402,0.0007777165437967106,0.07023347767555599,0.142617675849331,0.10696839101911522,0.5175175406240025,0.0648386198272616,-0.13965115241494805,0.15703963554635206,-0.034870295822879496,-0.334041288310063,0.11796495296980415,-0.33017450832796064,-0.22710026892550103,0.1680527562325733,-0.09918395112007031,-0.15359644474699136,0.043538318456570725,-0.23892032579295136,-0.12901842726395085,-0.40768123969337283,-0.20440290666730415,-0.2012573966402258,-0.2573938753546231,-0.245534577290034,0.10534798966313468,-0.013524999853267501,-0.5238371495501561,-0.07972284385426785,-0.27608366123768,0.08812504053258322,-0.27600922410193574,-0.44740859298974056,-0.19451022368386894,-0.025325927065670408,0.7979395966753094,-0.36821573016335357,-0.15176060947721248,-0.30378150976926077,-0.21420746218199394,0.254981397411108,-0.06751503143903104,-0.26058290304841764,0.4319506849561641,0.3463636012649355,0.303346922108146,-0.38515969654333,0.051248699782562884,0.23182080668443034,-0.4480635808697636,-0.14060855965533633,-0.28858550900217905,0.11646347903300033,-0.642498958610152,-0.6510724352879557,-0.47571586645756675,-0.06603568365406415,-0.05405595988167548,0.2996360309885921,-0.3458787209464226,-0.36457143357902644,0.16890714793258496,0.0734458080563602,0.1387082340581866,-0.19773087787782428,0.19196503649120392,-0.430050643019087,-0.20111640797882108,-0.25670502215529956,0.14742471837878107,0.15838817363950694,0.2243081413062335,-0.44572284193829664,-0.22785732085680654,0.21538930592695832,-0.1413599859060656,-0.135718666176585,-0.48207963582952384,-0.042885814226340656,0.4542542542285075,0.10927683927296189,0.10166576392808997,0.11706661536383593,-0.16310283119034388,-0.21259594477016414,0.24414553229526786,-0.36974316183786915,-0.13055794888043917,0.20229531531566908,-0.2979670307320875,0.25694599032266674,-0.3895002389348949,-0.13691797803539107,-0.44548060203453244,-0.08451178418699555,0.19699911226623296,-0.3554445598917022,0.041814022139108974,0.3349269364648618,0.29956756481280344,0.1758099530575154,-0.053123060165827164,0.08431194542514549,-0.15030668340133813,-0.2533297271215638,0.20317291631885526,-0.12063830200326456,-0.11876056614015627,0.29025374092175116,-0.2437784927887262,0.1965115432310128,-0.38673810354540966,0.2368630643231581,0.09307377419778158,-0.20558541672074945,0.2136066077462277,0.28472305687239513,0.5482499842588427,-0.2929075554621598,0.19428357285229478,-0.07665321369353467,0.018643992922839154,0.1460651401344424,0.3489238745627319,-0.32959447215578924,0.05240358389807909,-0.15382863091303225,-0.6916491035952838,-0.024504937931728876,0.240680210849848,-0.09979885563091097,0.32851980087162697,0.08909208692115558,0.22717225484739673,-0.5812160293604166,0.2985294618311003,0.12450788375825754,-0.1082095952413828,-0.3116492626579653,0.4555476552428711,0.3890845710128319,0.4202590216512988,0.40596898963819383,-0.2542139975911412,-0.002436104062142975,0.14040109993086727,0.27706691248417376,-0.31795739545509266,0.17720610090364503,0.11085491772482918,-0.3912242398519154,-0.10576257108476866,0.12085068037765974,0.3748962613853404,-0.4519616933181121,-0.08679727628401182,0.1716988475120307,-0.07110225438416581,0.25762022457379774,-0.3821485790940302,-0.41955643603149545,0.21016814248703872,-0.023327590483807142,-0.5149984229397414,0.38898292291943787,-0.1729281817649265,-0.26022824696831803,-0.042344948085713444,0.29752033778092185,-0.6305698741465895,-0.4119853485253678,0.25989491144343757,-0.14959307037536554,-0.4619643859948852,-0.02588972093628409,-0.1951596396318287,-0.18358973527906322,0.08956266355962521,0.08152759334135845,-0.17046272493307754,0.010638068633582888,-0.37394201661272486,0.468939052473405,0.5187982749551995,-0.14506094068180284,-0.2181097431042791,-0.03620969949270932,-0.15139402353796244,-0.03252390679292132,0.2974240575793988,0.134279550470936,-0.1759279583071039,0.050699348488857945,0.1048205785152003,0.10565709416817118,-0.02841100406648254,0.30913730022879715,-0.31611561765585056,0.211310814923761,0.6437767788771975,0.3674443372981197,-0.19760316434664038,0.056232647543799405,0.23900485170212904,-0.3422023487255285,0.38483986345385646,0.25179221205508723,0.13556507067630308,-0.0059714510730842565,0.11371276490137186,-0.12405428692263835,0.19900069219261907,0.46216409099449884,-0.13701299001725264,-0.4046697578877515,-0.14604015679304164,-0.42402402315922016,0.25525823316139257,-0.08936323027441781,-0.37239670078408854,-0.14459026688151214,0.30684658649606583,0.02731378450309132,-0.3553826758824797,-0.5228090326761796,0.28779595860021856,-0.06412329535077241,-0.022805914305822683,0.21753328701222352,0.09138950177791799,-0.2709183863008955,0.12159172489198339,-0.11669766361878985,-0.4148778862833624,-0.36793052274664373,-0.21073637435830614,0.17607770702546585,-0.48151137216944895,-0.42456466983325564,-0.041067115232112636,0.3742001579639541,0.39608476185187946,0.39446058222541125,0.3721013357728239,-0.03925665885629121,-0.29130059609646286,-0.0577206050641399,-0.08377892508636149,-0.13498772674433532,-0.021945376889091223,-0.2143448974945115,0.19904173897930738,-0.04438247359256963,-0.3102531736432632,0.19005832564697395,0.22399750062253218,-0.2875227372334531,0.3313871103460586,-0.10772155586370241,0.3195016366302886,0.3349507458290136,0.06628719349812989,0.2896828833541694,-0.07231731495930623,-0.25744923116635393,-0.4338615863002207,0.238179465724608,-0.25009858134318397,-0.1355941438763427,0.16519360555442633,0.1448947583998987,-0.0914507011962526,0.20335271951526585,0.3238779279551758,-0.07250070030119579,-0.5089519817249359,-0.5517226373913998,-0.13914918499550555,0.059994068837443355,-0.3410017666641635,-0.14772449445520355,0.1788130639300545,0.14624409889135084,-0.17229428047010673,0.19158383209874338,-0.4213728689968853,0.15719264520051332,-0.3823570493561087,-0.46394737419513643,0.15152683694748847,0.1078138705218643,0.5144000029215371,-0.45161204205830474,-0.15863404778545717,-0.007696656995630355,0.1454782328537609,0.3302064080132216,-0.42615497704617045,0.25129674859477086,-0.14503341828053817,0.37738230195349126,-0.523553193763127,-0.21197852662018007,0.05141753727663703,0.17733329150502528,-0.3887541073152843,-0.5362150752517149,-0.40234614054143647,0.3554461731371232,0.2607326343372525,0.11648007666254695,-0.11582024619762217,0.303908284692323,-0.4083964107482559,0.3022991243712722,-0.49031846454627237,0.24681432793524757,-0.20889119603104492,0.09275795394863622,0.27948457258422543,-0.33497800530665856,0.3212109238177609,-0.14035403264373653,0.3384064854141029,-0.14528487016760996,0.17324540429481497,-0.055311000527396695,-0.26704592729015225,0.2228409949868581,-0.32205718257237614,0.18857442135782163,-0.18439737323105262,0.3429421474405027,-0.3060815143178217,-0.31971421373311987,-0.0944124464261393,0.015373303043228155,0.30038534637880926,0.3057696259475296,0.20242751042693494,0.05545134378206116,-0.453834352031227,-0.25886482468270966,0.021060014527548583,-0.022902935127240755,-0.2831103319297013,0.06587189968131346,-0.18477529546452437,-0.28594997164514246,-0.42845777440563954,-0.16460361837707424,-0.03207501657597077,-0.18054859671347215,0.19548771027881845,-0.18991561877622748,-0.22291203645295604,-0.2616648503659719,-0.3601057414422826,-0.30657246432779417,-0.4261948041437076,-0.09837968418145443,-0.4247349430771577,0.04045941484664754,-0.03957744219172555,0.06303521503052185,0.26172979225566984,-0.23091555423282847,-0.44970585982509886,-0.26280676556482724,-0.1357501931344807,0.4180780441156814,-0.2619499878114332,-0.2969075684203197,-0.12163670751109874,0.007544434661737519,0.2227516392708561,0.38871328487888085,0.008391606153082487,0.23001905379138113,0.046776488481231955,-0.49498732052876043,0.3240459614304419,-0.36485868579383257,0.2182411731716908,0.29559884836167327,-0.01998054388584947,-0.1952356954320705,0.06225205170511519,-0.22969810569526575,-0.1509102188212989,0.1482673779813561,0.3153442343594639,0.21362027495851357,-0.31471386856421363,0.11203832593455008,-0.2090203647979992,-0.3961988816376916,0.11867835090177441,-0.3137217345752861,-0.5003385320165784,-0.29730811731973805,-0.10201038774643333,-0.442174716416271,-0.3548218218614999,0.4647640844747916,0.17450939570694163,0.0952179420854955,-0.3305805286099985,-0.2046950295469557,0.005499922906573028,0.26332227267834046,-0.27224387370192504,0.39073845072824465,-0.3416494415339993,-0.07212854782810225,-0.5918893005350662,-0.016809375206393397,0.07501720929924412,-0.03354944986638591,-0.10413937936029734,0.20870635208911248,0.486041179175434,0.33436999841688103,0.42338543447784555,0.3340788458249042,0.045766549974499963,-0.31662070145628207,-0.03408269096828742,-0.15435828367827872,0.33421274880299073,-0.354231278008612,0.33161345928393776,-0.307375639678364,0.1401097259908077,-0.02474538197952835,-0.21578121523200106,-0.07963173095789783,0.3478006701910777,-0.008590434439128375,0.13243599733837258,0.2812737023402538,-0.20920628603224656,-0.3289109686580197,-0.36939489247562374,0.2776096616802532,-0.6311351347319163,-0.618068460895295,-0.16528396616810107,-0.08198293049213923,0.10850646674403965,0.007320526607392841,0.39118955581163106,-0.3251237511695925,0.5385867716286015,0.37068352143904115,0.7624976078955803,-0.24216517127221426,-0.3807563955340401,0.203246323591614,-0.21168507935582379,-0.25477269354930804,-0.21627851456109365,0.4340168178159709,0.20974833980689062,0.4269238388221926,0.3434556588298686,-0.2679595842776325,0.2178579431814539,0.057827126867065676,0.1555172893506604,0.029434671650206554,-0.026826978067060206,0.21711197069422242,0.3382679981837013,-0.2254466960550281,-0.10826305002748689,0.3447710519402846,-0.053918956240045654,-0.22536899772857696,-0.17978870961512788,-0.3660235881962389,-0.07197848495889397,0.07623635189059161,0.20383197710153547,0.1828768586521151,-0.20317980233660826,-0.1301426176942636,-0.17020869582710496,0.09325504649926494,-0.08537018914814366,0.28422314911704394,-0.3802933486579958,0.2420141451089434,-0.32205517353533925,-0.1047699613025233,-0.028520263331009012,0.3372840440859705,0.05022148534528716,-0.06882574688404298,-0.2945494920079294,-0.4976345656444376,-0.5422862243712158,-0.4756614720659657,-0.3222384244830894,-0.24511784936628034,-0.5477912420156456,-0.46752778900499903,-0.1507221151038143,-0.22726741531783554,-0.1486250468384876,0.1145320786285313,-0.3992843170133528,0.16966112213040746,-0.2182194210504195,0.14141926347362707,-0.280568111571296,0.31603070644197834,-0.056624187538152355,0.289312190768842,-0.10657216946615815,-0.13751393894872835,-0.04337852281861989,-0.39482524973304234,-0.3445280784772623,-0.050655492320841246,-0.016998867484810203,-0.2699351043835043,-0.011857842441167249,-0.06362568690319834,0.16138309988577965,-0.16791624344461167,-0.399719295683986,0.10175903547511925,-0.17680652294688576,0.030058180463409797,-0.004789094646375018,0.24524598856067503,-0.3207878519552649,-0.2097874547580769,-0.4902706740754982,-0.3579865653393294,-0.0761076298029235,-0.004367598943053905,0.15340116923093616,-0.207345413567453,-0.20510693239792827,-0.06818656359955608,-0.12391041373394315,-0.36320556153271927,-0.0282498435245808,-0.40821490990926257,-0.4890624982314728,0.19348607648612856,-0.15395721763859874,-0.49817651842766797,-0.488137130643433,-0.2837985316919097,-0.24682431258362783,-0.46315792264362177,-0.21626137287891886,-0.2323146964373968,0.055492852825989626,-0.46436867659774217,-0.36697626580863785,0.11776976236775105,0.16120686011074573,-0.32345638893029627,0.1964765519195078,0.005543826976887617,-0.06062781581431508,-0.2746773681078254,0.22512150118394494,0.4368175204493308,-0.20535671871063121,-0.36922246056652913,-0.4557663377157153,0.05390947367504397,-0.04671458266030185,-0.33354521024842093,0.1505006013506585,0.02440930074995293,-0.5311810638159981,0.2933620111733802,-0.19934395367638735,-0.4579331113792988,-0.39474811652275404,-0.5373812482156658,-0.29375315937090657,0.008707716751585439,0.024960898108613377,0.07200734778474899,0.33605922093622204,-0.41881009531918206,-0.2540526983229181,0.362607112892131,-0.22486128330160834,0.1805737598264168,-0.2834692195222226,0.26421647939121046,-0.30552016658281606,-0.05420275303317357,-0.48969464219564024,0.12218457500812231,0.2703553489952296,0.19555070116567647,-0.1445284789969529,0.23944780229705334,-0.37892029191734794,0.24888049638289497,-0.1766661959718445,-0.0071424699768353524,-0.14757286908979386,-0.2740633736990955,-0.09958535021995923,0.29655425921133416,0.10718761856897138,-0.35261410300025114,-0.3921279946924396,-0.203758157298179,0.4914691926564937,-0.07520221429987711,0.3698084348139427,-0.04144684444078351,0.07170684931226486,0.009488692816233124,-0.21283588261853162,-0.10968747368577843,-0.18951059680267096,0.0744780020101091,0.04730667042106513,0.15717142117249602,-0.02367641092630055,0.25816613038723174,0.22411306382162094,0.17318376941007094,0.2998032556600751,-0.14008862105834527,-0.1799813817151924,-0.29144124713816894,0.28513802362057306,0.17544801303668645,-0.36234919243661945,-0.400309202139396,-0.09763013817263004,0.019173362130669697,-0.2691103285188511,-0.39752671807102335,0.3793888336284418,-0.15446446620797202,0.12577176183846164,0.24178026619452167,-0.49759204244369437,-0.2854090933826651,-0.31471608743452695,-0.4404397816200331,0.13361880775479482,-0.3527560256732184,-0.3548800154788786,-0.17135159374744555,-0.011851024146902957,0.06071801598598389,-0.09248327663647865,0.10493878954406158,0.031694648359762545,0.2827012873237449,-0.46551312024328234,0.38056239013301024,0.2764521630177105,0.12803431499153584,0.10267252161171486,0.13090765187108389,0.06925823242637816,-0.23950605826459856,-0.38435638401545186,-0.03992796643914613,-0.2482975369654109,0.12051662135099582,-0.3345384651235716,-0.10531172007213918,0.22097752535123516,0.06103890647636385,0.1211576118415423,-0.11246299425034095,-0.22247346455199704,-0.4254932007365727,0.24111436197106442,0.0872369796348097,0.17405793070892214,0.27932676707036114,-0.531123417366186,0.07198847937778886,0.8705315889205689,0.15233068408225964,-0.17020783244602802,-0.1557757397876456,-0.26970634767863094,-0.36706801273851614,-0.13237985751518183,0.3481649850536415,0.18457262796989438,-0.08807403789156097,-0.20888422798678508,0.3472112766982691,-0.36888748848275066,-0.3169003630547665,0.021233870562681455,-0.0777186969367087,-0.014122412386930188,-0.18620363282159164,0.13251297522089597,0.020244798539471275,-0.09311699397077662,-0.2878074781550043,0.37247416226043506,0.18824915784967491,-0.21695884848650762,0.14024792604021638,-0.4789852951226281,0.3831865759211859,-0.23079425601489015,0.21519517693284668,-0.4905715950619582,0.001113593733735876,0.02209057611671448,0.21372612488264064,-0.17178682312429688,-0.1557042551432003,-0.07978224024679731,-0.5226247097801334,-0.10922078367358296,-0.08433298604252232,-0.3476465480802824,-0.0010731654450853673,-0.3067484753568745,0.3441493551664562,-0.38345486243681476,0.4176834843018627,0.011139884709098524,0.16953484054968535,-0.2658130044767631,0.24214581294799298,-0.1934152917591629,-0.18601094318028175,-0.016454811161422854,0.06564616852566701,-0.37050391029758645,0.048964598632026464,0.030350647047390045,-0.15298060276943398,0.306969233322796,0.0503517097691047,0.20775950277034255,-0.14399058564770842,0.19580235226811507,0.08347017786947003,0.33302932670478935,0.0191171719939287,0.13581779991617368,-0.10269329936208145,0.17740387901974247,0.17866547175270384,-0.22825646992569731,0.03940631298986969,0.23049618522964133,0.043041935732630564,-0.07838127229112783,-0.008882828017090238,0.1847445196411742,0.26038132538174935,0.026839498283246645,-0.2552891707494923,-0.1474483276736139,0.03697586973663393,0.2790791744329779,0.07795077246168748,0.3859970452444383,0.15115565960060634,0.09149295569572881,0.06362723435306898,-0.2791539133810353,0.05796946004837022,0.06390014586675115,0.07539986300760221,0.041069584024008884,0.22953216526087414,0.37498677984994866,0.20966730504059689,0.37874205163992186,-0.12754487268308995,0.008274350330268519,-0.0032360885630734436,-0.642302568102115,-0.7314308104228312,-0.7866243138638465,-0.15821971887019667,-0.08128961770595786,-0.09019873075771583,0.1276747669883939,0.13008611896771746,-0.022092120547810363,0.23759414160110978,0.08173661115192095,-0.11320750440304249,-0.27085914968629654,0.06897345577227419,-0.18365501600300052,0.10865854002460806,-0.1122883873860749,-0.007187491056947734,0.07730482229345054,0.27430850443526583,0.11813766045753768,-0.14648061807223112,0.3894640703177406,0.14274406447088078,-0.14580129151840046,0.035539042862985495,0.16170284543797753,-0.10247857444408126,0.14853647427044966,-0.06046528930752696,0.060969588862670926,0.1078743562990147,-0.14848616320836683,0.04522220770654739,0.2772583209463923,-0.4705409532137895,0.16853032914077543,0.11009371270564336,-0.30164483899687544,0.10859706911194611,-0.3849071081739295,-0.13888789261606083,0.24410058609601076,-0.3494328226434661,-0.3175084580054564,-0.3499678016821568,-0.01334886919134909,0.3340101352517443,-0.47891062407726204,0.3739234458479818,-0.06936389138175728,0.13108339049527626,-0.08152632897113175,-0.4221535872181793,0.35198383107522513,0.42913363326752807,0.11108909682638439,-0.5270691697127177,0.15942695991171613,0.05799863878432065,-0.3033812994749845,-0.2126522657339966,-0.27483160809719265,0.2935877687608724,0.08862865701564115,0.3698835573106122,0.39332788880427016,-0.23640577548796404,0.13852134147262102,0.460222699413636,-0.4712193280919163,-0.13822139381880288,0.43267726061523143,0.18841856790808426,0.07689889172061183,0.00810397182543699,0.24695003165775029,-0.36140932614839727,0.2785311528751774,-0.28406420711979535,-0.39586879172031675,0.3946935988680857,0.24167513912584343,0.18008101593335973,-0.0023111569159921254,0.3539080088096341,0.1033451313519572,-0.3085273374629961,-0.2989390872108165,0.16969542352777975,-0.12156368459764612,-0.45838110601724796,-0.43736310280530866,0.02085270011855062,0.4413516370303808,-0.2498345170722201,-0.32831128680442734,-0.26094804289704016,-0.3242488318793818,-0.2736613187968678,0.20198576190381173,0.3249094460266394,-0.08499004868602854,0.23175290604839532,-0.1178181238363969,-0.32485495595180636,0.24212493445030878,0.18305633090036244,-0.41224695955914126,0.2811005319389529,0.02454334378396901,-0.22265859389805842,0.009519980371744622,0.17250746388236002,0.3723541852222224,0.22831577184690618,-0.48437190190496154,-0.36179740287329715,-0.0897339402284233,0.24085415779463484,0.438612853926136,-0.2177469508201282,-0.31774632795294755,0.0726694206534482,0.09752016128024256,0.1646860566026667,-0.07245629333961473,-0.09525555118524445,0.14116728695948683,0.3893901905441957,-0.2705065790702651,0.09480080816175768,-0.3654102322209694,0.35616505763617395,-0.26211791278291496,-0.4357549762786862,0.2722359942188833,0.3276294686487681,0.01489562861147885,0.1866084835058799,0.3888222761306321,-0.0467938198418188,-0.2309643092702207,-0.18110722173704566,0.15481687401464597,0.13796834084492351,-0.45910266031354885,0.21662050123931262,0.18409678513418876,-0.3011571463734559,0.21748769359269618,0.052511517336543884,0.09419868587662546,0.025771015850147506,-0.1163224277702019,0.36714442444321777,-0.49501126767976733,0.1004195520103774,-0.2490123543698962,0.2675007497549758,-0.3049908533883019,0.02530270643493215,-0.08457416045160344,-0.4460685283102921,-0.5783744006979774,0.14595224581138158,0.040655669150854085,0.2759526156395362,-0.035948791321328555,0.007913186026068822,0.09905540736321114,0.4341012360745001,-0.3510208550736982,-0.5247223958331356,-0.2595331464563476,-0.544753160129377,-0.10586363433672215,-0.30561995974832107,0.28270727967182074,-0.29127903671706595,0.06066525150934819,0.093301806695435,-0.03779516883431106,0.32213357198382775,-0.3859317283687168,0.21248125181754005,0.39995648294042624,-0.44465926425350216,0.049203605239432985,-0.3962060799997008,0.20368500688378544,-0.05953294349724392,-0.2906214933616126,-0.36066033954229604,-0.4263154559836518,0.4382094583434502,-0.3610065618465713,0.2734502302180973,0.285401822329624,0.03615331007219979,-0.23629200998457578,0.40009374872488535,-0.1379369074881151,-0.06372940808989178,-0.16049051792396254,-0.33975883931265394,-0.3520027289948758,-0.24364384066413916,0.1560422022269555,-0.38320111530180057,-0.21772728911009923,-0.12640939885693134,-0.33146690552339714,-0.5105251786400765,-0.4578126828868164,0.08780052470413104,0.06755454023106365,0.24406303140332702,0.10750755878393109,-0.14529097403213176,-0.404139226183679,-0.21464449066778582,0.28829678376019074,0.2977666117407518,0.01931507482512422,0.12443738570856264,0.3733289511933952,-0.13630840828700966,-0.5368314176021821,0.37677857853961116,0.2682128360194539,-0.18763706387313392,-0.3159069310935829,-0.26431729145987615,0.34403412369975767,-0.30213387134552794,-0.2870046238094931,-0.509682943778246,-0.08271843719771643,0.2372900837856379,0.027606050342217938,0.3579982966618924,0.37620990737981863,0.2626499271181249,0.0823985233878589,-0.34273699082169284,0.3582082355013192,-0.40607310455903123,-0.44233326134902873,-0.4778732611967236,0.32894620583746126,-0.25933330321318665,-0.2347440792677377,-0.43356875649102833,-0.3912174205482286,-0.03069043863011481,0.17134429899435674,-0.07746783045466551,0.3194189648982102,0.42339542754923526,-0.028924083598308673,-0.057070774038327166,-0.4760101420584075,-0.22798922008448239,0.45393689857024233,-0.1759212443941391,-0.17555472741671765,-0.20206684478108075,-0.41558226012547295,-0.08927418713003381,0.46181670364612326,-0.23104349251842618,-0.0902111779528462,-0.16104199025063626,-0.22766077698199202,0.04151079342208332,0.08888885552500875,-0.20752072986322853,0.08698955345619931,0.1306905365004741,-0.389152102551029,-0.18186689375176252,0.15334236982255817,0.30407317036740295,0.3076209261956935,-0.1063742511384095,-0.46782959598002205,0.13074297212213193,-0.21168073276219368,-0.2596156634622314,0.2003707408207442,-0.048000820273929774,0.15614333616320936,-0.4281992776833933,0.41099886479053194,0.20631727540004421,-0.4024528432298672,0.2806041688647132,0.251937866484231,-0.2713169063120048,0.17888267669219263,-0.158844726578777,0.23136609357607993,0.37423527176844257,0.1030658627278576,0.193978971907524,0.3185941533149772,0.22242531216625255,0.382233214774591,-0.26191870324941996,0.4757165787033676,0.2129244263416115,0.027249821281707696,-0.4448060473830777,0.30117008065532064,-0.0526694251414285,-0.12495613422327663,-0.3481886276771709,-0.3236246586955018,0.02425402825976571,0.3692564620102832,0.08527644080058108,-0.10032850118003882,0.23653464682691047,-0.22322251931617712,0.3248416897598192,-0.08474989271747445,-0.3289247649719257,-0.4066070385387657,-0.22190840162307532,-0.25471368257570726,-0.3435709034316814,0.28929032264767646,-0.3042450926951693,-0.21685902621806646,-0.49229658833289874,0.07021766306212679,-0.15646927595646765,-0.1959864701546548,0.29739336602220007,0.29783256718562934,0.07008177883373966,-0.14198410307447737,-0.08266350358855092,0.20102776176093948,-0.371021707286261,0.00530672468780562,-0.34992234176448306,-0.33226860790635354,0.3385279463506611,0.017660792519766086,-0.1435913299896361,0.30791514474993725,-0.19609624870113693,-0.34779037800166834,0.21607266377097975,0.029117235025907066,0.2461525863183094,0.05401538751399622,-0.18683995867772032,-0.10534215624021591,-0.12396398145930254,-0.2409516874215554,-0.20947117152989178,-0.08938314281780273,0.18443903768636197,-0.3727092450298685,-0.18894876472490413,-0.39721539620842894,0.15048703058978866,0.09572581044277088,0.1464525927701389,-0.13018790115548384,-0.24358316593493012,-0.015680303352099287,0.12849928705185124,-0.21645623999147764,-0.07703941357314117,0.22408974447556518,0.18322237846254769,-0.1508824185713163,-0.25702709708824734,0.35433603776804784,0.5317096342514235,0.032260436038696355,0.0832747490421504,-0.17463482391468402,-0.10079008164354539,-0.46285394667418284,-0.01128798303053738,-0.002452080944474701,0.10926918076610306,-0.3342720017422321,-0.5624982779275365,-0.29230624585919646,-0.21501909808510233,-0.2020935475926982,-0.3249938605697511,0.18921660486570754,0.20355525333360383,-0.41501064914100777,-0.3347860114796779,-0.3065202497095217,-0.08798600388899633,-0.3653564379779886,0.32518661843158625,-0.08072831178919729,-0.3110539376545892,-0.37229412778969334,-0.17584008834259082,0.22533069758496874,-0.40720709924991605,0.2780308968974826,-0.4230373877805819,0.10883141372057793,-0.24165622124261463,0.048107204943584364,-0.047336865576572684,0.28268374304084143,-0.2921734775967996,-0.04346256874210941,0.21488227212359498,-0.12799850918378022,0.37774083864130215,0.16947385063565643,0.0925910529046182,-0.02629693250143098,-0.12908840193286608,0.14664727384536794,0.32148389890951995,-0.10145021864307505,0.3001529740167461,0.0332731998461217,0.06917108019081328,-0.2419769877212027,-0.027026054544321537,0.17003170577689045,0.06293890105592768,-0.009061815154647844,-0.12549925931768288,0.12952742202229456,0.3457701603361964,-0.2271294439928207,-0.1334845370891949,0.23943621772969195,-0.46062557985659197,-0.24687525754039968,0.15837501359288902,0.28515574642439334,-0.43955499948645277,-0.1658122317812544,-0.442297713216697,0.3767387896931652,-0.22710966120346177,-0.020007964270202374,-0.3462996263929103,-0.4280013637022769,0.07203014798766562,-0.2889570021537435,0.09740655272296757,0.08932147774844695,0.12676689534880484,-0.30528752354234007,-0.15331283889042463,-0.01479581126136214,0.07033252352079178,0.36078135506190245,0.1404554880450675,-0.09605156868728862,0.0204242729576836,-0.3396217542045156,0.17029846441563457,0.07024973124989577,-0.11708527427737177,0.09272055437173449,-0.3850679605768576,0.04276258609628717,0.24336061284723048,-0.4105642709573537,0.20355238254689803,-0.07753035962074434,0.06846253477725857,0.3986616200549014,-0.3368373749148636,0.030356966124365333,-0.19894574537501586,0.0046942112526360226,0.3380738712806507,-0.4453237318421812,0.03411432673382676,-0.41696063027306557,-0.154934095003391,0.1935289717375777,-0.014983135910597611,0.22363151344738613,0.006490899192417983,-0.4095916440999938,-0.12490479369618661,-0.009970278692675432,-0.10816056556699695,-0.3920591691935425,0.04527339438347441,-0.002530518183579046,-0.4438238010213508,-0.2747407528410144,-0.0010638182417214883,-0.014452120322917372,-0.49568185560738076,0.1540349903558922,0.19748710112560713,0.08431791774159758,0.04668005565101573,-0.3499291558043733,-0.06420345301530805,-0.09623789360206941,-0.3138644137764615,-0.25375851926420706,-0.2896235275640271,0.3428570175468999,0.09137373550952484,-0.15731344558663637,0.023585395470256214,-0.2562926337391112,-0.46434955089600993,-0.2006805331520783,-0.10479687765432165,-0.3044259319075961,0.31519643593123947,-0.17491277198131625,-0.034660712269479706,0.11944487588250872,-0.1788061107762621,0.0817571796748094,-0.23480656497056637,-0.0954739674245131,-0.007812660577098807,-0.09945225626686746,0.4098476465502,0.027896433375109997,-0.4360676164009375,-0.08694207001799362,-0.08011251360470104,-0.28760694603603576,-0.008947894267205419,-0.45475475590000364,-0.33448900794992054,-0.1424832994162889,-0.34616112054964665,0.10313754113385995,-0.06065240287138308,0.431359512445651,0.2946289772469987,0.3587361819683044,-0.22135966457879577,-0.23278872449030164,0.3168921541459357,-0.19752066425037684,-0.3774996433462097,-0.16411358699111195,0.34535597192992623,-0.0859440384522893,0.29488763205373003,-0.3397927335206957,-0.1594844332194612,-0.4196031986103567,-0.12294342851715301,0.7126815797731763,-0.27760631982175676,-0.22995844066659502,0.5349136901029548,0.2731428995283206,0.3940946549980193,-0.09229950388616708,0.04304041571904714,-0.20235962502064578,-0.05290213917546969,-0.02838638659285747,-0.39899463931150275,0.2675341316150619,-0.04568399309964676,0.3582003127632885,0.2691726097658157,-0.3572355431259847,-0.3653452300153002,0.33912600498010054,-0.4117991050572765,-0.11150143553418956,-0.22602712504362105,0.2898828462538077,-0.16479991752233772,-0.04689306277491184,-0.06655083620125361,-0.29821135928167725,0.0711809177487382,0.22752596180548282,-0.04901424513298372,-0.368155147450664,0.4675313071338242,0.13709888085791397,-0.23548514242484767,-0.1923384391272344,0.17890512764258518,-0.232855652281751,0.003815386903987654,-0.06618366392696391,-0.09536966634300115,0.42352841745964986,-0.05949226479481742,-0.17164711772296354,0.025754270392161195,0.3754460861665554,0.034025665663276944,-0.21528920414740227,0.2301117941343356,-0.09383383687168015,-0.3007254986534849,0.11053008233807134,-0.05017143860002837,-0.1045539108638041,0.17307663881587285,-0.21209001525947135,-0.25829559137827224,-0.23150806170967841,-0.10182704830942585,-0.02068733075149889,0.009099801322292511,-0.4458210620096355,0.21417122794322496,-0.3175778612150928,0.3285372083620985,-0.0018374348506569088,-0.14007864322547328,0.29621196402049754,0.09439404397283578,-0.12491079172634036,0.18399689293059485,0.35128474239038915,-0.172175959555436,0.17272262726672039,-0.25714120353881104,-0.38310572654588826,0.289726686569915,0.0016627517696484453,-0.19023246754630882,-0.15048849598620515,0.30471140273383557,-0.033206513716921265,0.16261687062430952,0.47968808522242856,0.20862347840166182,0.2734840934802868,-0.35886048120232233,-0.35437391852215566,-0.4287143763981646,0.29070008200466474,-0.337738872027074,0.5983749596740443,0.0924952698599356,-0.37409228144682866,-0.16304375722013884,0.36564239184266223,-0.20303527278847053,-0.3094285912909002,-0.1604133465449465,-0.15455559254180512,0.16024910509324639,-0.4372262512805378,0.14655492381088464,0.10840241914731315,0.023849003125921225,0.0872195845694281,0.26857803435659133,-0.5773158438253952,-0.37011091315090117,0.16513348245021336,-0.43233274912055064,-0.3024845428577597,-0.4269904070511446,-0.13243586177159805,-0.034576967369005264,0.07295475317593408,0.22808335408304195,-0.38782087794805264,-0.21004133952448406,0.28227052180595585,0.16792263185868656,-0.10172547945675038,-0.2938235386900529,0.015672782223382958,0.19673698526872563,-0.07490871687025447,-0.2376798273909602,-0.47715012965868986,0.3338459085461663,-0.31772519037852875,0.34365912401289106,-0.04792534853755839,-0.0582217777840888,-0.46131184898781985,-0.41623110293159693,0.18223793436637045,0.5083225475667297,-0.2699363476421204,-0.05978834431973781,-0.27658956810492275,-0.41015683083018234,0.3094800645771455,-0.06332419273739189,-0.19374594120181823,0.2909866944366297,0.08093953846086659,-0.09052629209437109,0.2555713982538557,-0.3210277852143952,-0.05734763589609622,0.08653555393965008,0.02283216390136872,0.3703081432849367,0.19837279517783254,-0.2141753601028099,-0.4239581068084194,0.07448772357433849,-0.028594841782427684,-0.533741707238783,0.05323145893374045,0.21766113562794434,0.3882174122179362,-0.1860509475167084,-0.3406558823635487,-0.21334782814430653,0.13270599525944238,-0.11915921745479123,0.3938672768211258,-0.4689523309066436,0.14089359378942554,-0.20475011105151592,-0.11550344743296864,0.20151995342675202,-0.09939419055019628,0.502410774059544,-0.3413706657745487,0.4280972806517077,0.0959243484099134,0.14622720564690342,-0.18668758540728603,-0.12399494444663589,-0.4078391800222727,0.29656519718098984,0.08089342788867662,-0.3386578974382295,-0.030688434628808915,0.33336784851031437,-0.3844811687681108,-0.2324490449869271,0.37070955807236977,0.04763950515949683,-0.23204057600365702,0.20089194105306132,0.15757016648886776,0.12488834556563691,-0.21845985010635677,-0.23732279234166748,-0.13356515941609728,-0.09155802368545293,-0.3956010103608765,-0.16215522675318525,0.28424778566441244,-0.1992477723607821,-0.1381443265387347,-0.18038602885058194,-0.047743888166369264,-0.21683155083228664,-0.4497341306024457,0.28984287296518535,0.3705736280001502,0.2178879682804049,-0.15139579258054053,-0.4085743934918292,-0.23319131097253462,0.3030256116295819,0.3402439168920675,-0.20030038829454413,0.05349132106863063,0.057877886562037406,0.07485749882454332,-0.3717620908053243,0.14560331663700585,0.30780623283462893,-0.058428569913025884,-0.4354649434289997,0.14863351589011492,0.20226333372114572,-0.16871578939120194,-0.4861649721065725,-0.27257021298671585,-0.49984230026929766,0.40524102043399957,0.3170264783353692,-0.30810708546314525,-0.26636920128970937,-0.3237773778800004,0.13361522077703658,0.3160705652245248,-0.25697528380347356,-0.26769790993686016,-0.4758923355280629,0.1847159831175626,-0.09936614185128508,-0.2811380014473191,-0.5026355720309722,0.3460987258655542,-0.398911567343842,-0.29452119288892376,-0.0015208247244000556,-0.17932801252293878,0.10364484394334957,0.09346523433256618,-0.03556566523116673,-0.3689771263698145,0.3241397527814385,-0.28402826452395524,0.34162646984007283,-0.3525457957750502,-0.41812507491350875,-0.2728801201327901,-0.0010104166874659614,-0.20473656517498093,-0.15014023854623162,-0.12397678590022791,-0.34221188978294675,0.029847340504282293,0.31489631606201623,0.09354363192760701,-0.1478433796956804,-0.4617203718691233,0.30562926615823227,-0.4555483659155285,0.06441573572988206,0.36288925806318045,0.25327441969754455,-0.37150403780536556,0.13204216782663203,-0.16534619833342698,0.4069178805704411,-0.25748234139993514,0.14442375498627016,-0.05364119039395714,0.11016954464113334,-0.13249146664324923,-0.31167736531320883,-0.4099336585338156,-0.015976637442041475,-0.46124744087319774,-0.2765705749076808,0.09342570290358261,-0.5267784484990397,-0.16654122101009863,-0.05228057288230092,-0.2664328519244794,-0.005172343920044677,-0.4864752402476022,-0.5221222689288268,-0.3074870578344693,-0.29249595862804534,0.07966398126395223,-0.25542454014079125,0.20688548535966808,0.2267718000825164,0.015685750004120376,-0.03746561113435149,0.04539925203291806,-0.43171015565777066,-0.15857834677197677,-0.04635211511899081,0.0008038702835503821,0.12867367247395783,-0.24673761144966605,0.13221509048183402,-0.013429229085958106,0.30766039156506075,-0.11190466299342375,-0.19872480570747286,-0.4702845840212306,0.3743536753175885,-0.19957742075806895,-0.08298028386916484,-0.34528864039391255,-0.509064352394975,0.07830244320085718,0.2520585852114974,-0.22668027005755143,-0.06969482672657992,-0.2003480034290087,-0.20595378703714953,-0.29768746443674865,-0.43144390654300246,-0.30593088671129387,0.2675066635646209,0.04542175794139789,0.16966054770366917,0.0589146303340825,-0.4756887048904979,0.11669527477659258,-0.22009193759903029,0.01599940088056036,-0.24982030798606758,-0.17811442423194324,0.08268243396706472,-0.024210253209992948,0.2896205245485767,0.1806526371823648,0.020305635259459314,0.18828789971538323,-0.08913998217730104,0.023063450468101626,-0.012769726381549848,-0.23837455938717966,-0.3062177009465582,0.043432089871062625,-0.4496701270259944,0.23718316859516395,-0.06479976306252994,0.24923245653884507,0.3129527838624189,-0.31082189979888314,-0.235789076613804,-0.01573891641124526,-0.2685898979572172,-0.5336068615289393,0.21864269000735614,-0.23247042587199504,-0.5207494593421815,-0.2934868533423517,0.022508672033749746,-0.11211096504969317,-0.0013158823505272643,0.2163359533566175,-0.423912902020147,0.21726745088814872,-0.42390399742367696,0.24226448329167594,0.13904542753019258,-0.38810478064801535,0.01753862392082024,0.28936286736307115,-0.4368951461847271,0.3703675090135042,-0.07315052158622132,0.11426746416027694,0.21747109585356897,0.3230184282520383,-0.28781970022251535,-0.31276064749809906,0.4085953941716329,0.27767184920745774,0.2958194909480373,-0.3810735608829312,0.2146647612847084,0.3306440402528383,0.10581799630458802,-0.01603722766837031,0.04592757296501798,-0.12836305776090454,0.17733173120911014,0.0030049095891955396,-0.19645265807810075,0.07683646787111811,0.03268986399156264,0.34888249429075746,0.3444276807445427,0.12687169646417845,0.171437433501929,0.38286122181291726,-0.3170997342372912,-0.13423916378285541,-0.09985426446933439,-0.10924905273556712,-0.5245246141183493,0.06749609741734978,-0.1566175884026363,0.24629567071048825,-0.1848426549981094,0.31630543420677887,0.059771857697171506,-0.11660989294338521,0.2136122724450748,-0.20871847189784024,-0.19768699403862208,-0.03232264212733518,-0.3042569034318112,-0.18617873794226955,0.32216411062407113,0.31320190613204196,0.3635841724408621,0.09876196836569628,-0.16784564840579289,-0.10314317998008707,-0.37609875814576327,-0.009090833513787042,0.003927685701387519,-0.10273386520120746,-0.10458429089449879,-0.30339497326230647,-0.49146184285193684,0.2899816057540335,0.335058153062517,0.15081366609690458,-0.5140210946209232,-0.17625209247969006,-0.3916661960989283,-0.361168622591648,-0.1487168455098385,-0.0772510737151317,0.07735288030698831,0.39337402377779906,-0.39203497128054876,-0.3115682935668377,-0.034486982463185135,-0.03662321257456178,-0.1632556260676204,0.03476366285537665,-0.10305439720318135,-0.1696988071587073,0.10083816920557291,0.04856851630537311,0.05921192296875196,0.1701948946209401,0.2690846264579685,0.14127492733717198,0.05252755303122441,0.06499946411727696,0.14379164952632245,0.03312038082119556,-0.0014738027306906178,-0.25760094593149657,-0.05584919539963326,0.2566075946999416,0.04046872388707395,0.09569826585312594,0.25484095163227155,-0.08384897019890786,0.016516029941808265,-0.08797147349785553,0.17680134737100572,0.23091242377025284,0.3936189709062344,0.16275599635610452,0.1515431013942916,-0.6565176823845652,-0.17849201186927371,-0.10814356482343464,-0.2400184144209037,-0.12743462036259295,-0.24666438263953824,0.3141095208267768,-0.05780608288176657,1.025177845885677,-0.32188981982055553,-0.3514125758411393,-0.005489671869704683,-0.25838089821011384,-0.10712091918588351,-0.3345605031825174,-0.10363763205789794,0.21149562011426734,0.12159455750502554,0.6804366220685558,0.257919332153583,0.45494782081887347,-0.24050650624448003,-0.24877724115145844,-0.2985918543647441,-0.0029664345335002422,-0.040065041206325015,0.019291907379078557,0.1718696143083351,0.14151643457503063,0.29521973639148263,-0.014063086702979488,0.20947028007976526,-0.1613600566825396,-0.01585232111074819,0.1422707010158373,-0.05925965614189618,-0.04481188499060554,-0.32130476038436834,-0.008142086340626459,0.1747491875694411,-0.16578898416948581,0.09392156066205107,0.31334208403217095,-0.06879981634800061,-0.07714454095648658,0.09340944878001775,0.22558645081915837,0.058120669665664544,0.41169602608184025,0.09806089784840237,-0.08185134061640742,0.20290779992166452,0.3925423662053114,0.3235053868695181,-0.2826437556022075,-0.5133060377490021,0.28615546241717654,-0.024196278845953795,0.13065248453845685,0.1927030379787335,-0.0103912516588173,-0.3304645796049115,0.05483446023655396,-0.3291050744555087,-0.42026585912093894,-0.3711793381207414,-0.20050686130144338,0.3587143965614266,-0.358242368704431,-0.09514450864874498,0.29114880246691766,-0.3121885940417138,-0.3672385998523184,-0.2355806287381415,-0.22837119311509801,0.06071032966479115,0.43226468838052673,0.35239936046916054,0.12448749087296306,0.3400646894635418,0.04534618840556098,0.24349652631563526,0.20154661640348742,0.3506968245656919,-0.29063205153365224,0.4460940312510404,-0.06905252652448682,-0.35789068922157513,0.01660646826910694,0.30914463587258023,-0.40963369167239394,0.1303617509965259,0.7342102912263715,0.04532122078955789,-0.18712527228729436,0.06915891502346089,0.016647758534526227,0.28052333599136814,-0.3620693656580663,0.09341434500071753,0.27127662070269337,-0.036253195364265536,-0.3520666346525322,0.09110277299159451,-0.3613528482859573,-0.4765218581649306,-0.11861004665418862,0.12364994241476825,0.2976257081857702,0.38643670452708756,-0.09176126905596282,-0.07966753053469729,0.3594463532762309,0.09313348196327487,-0.17038817577727317,0.19647483226410115,-0.16952817319506885,-0.11923271747805222,-0.03950140804635029,-0.21163017255857802,0.5016542759704578,0.005637581211228978,0.13430092429656515,-0.15600426396025205,0.3647458502579695,-0.023721676953175813,-0.31460844934625826,0.15853692843762004,0.1447976323674653,-0.08144922425445437,0.04942675564133746,0.04741317635954291,0.35174984903620027,0.39274681243404785,-0.6336714081465447,-0.3097510439979557,0.30288819827945546,0.14131246000009717,-0.2796249280181436,0.3084833644533723,-0.4941365548818016,0.12091441136092106,0.22600557284095518,0.10551745560973684,0.17677172801720165,0.21145732173742696,-0.26270764725595536,-0.060905510553483956,0.03201068712990594,0.2993970860732163,-0.21222902372824554,0.27288852832487565,-0.049441670684000245,0.05452595551919182,-0.23049963853085237,0.2171805652803401,-0.1278536107550365,0.05616166817234836,0.047617799090692636,-0.33212389139271875,-0.3093823181405852,0.30661229058523926,0.3036476342981007,-0.12576672480637713,0.3793979500180824,0.5340782395244268,0.23827304077687964,0.08033656922409232,-0.2896540351720727,0.013220345898167195,0.18998107205845666,0.12970158008928462,0.6985144980012467,-0.35796790652767113,0.1307613048021341,0.517962954833935,0.10879965707092734,0.10648929466333125,-0.1764921289828073,0.10710204815970838,0.010824708960637657,-0.11627529822541258,-0.7251271520738799,-0.48841646483982326,-0.5276465312440686,-0.24213083987343523,0.004510687519870928,0.2515939834162746,-0.33561411496717214,-0.3037090680891478,-0.1984539338742202,0.16142514719854834,-0.23086402101072798,0.31295322097073947,0.06770870014904329,0.22743569439771863,0.19617191251407276,0.22926278130467426,0.07438110963045426,-0.11455752134344593,-0.02172640767224712,-0.3629967329811003,-0.32037537841585373,0.11693626495145663,-0.11236653906865712,-0.09192308492708914,-0.3141622329913384,0.23107601830131205,0.40174199484020134,0.12607254225000755,0.23473075597204812,0.04896913443556743,-0.14583670786244482,-0.32791391252909036,0.00128045803218181,0.20645390794383398,0.495848861934214,-0.455171482471149,-0.23580064339175438,-0.19568132297713212,0.033031919367935335,-0.12344093482363994,0.2655964376115707,0.19148492001190323,-0.14677069444652874,-0.08727659745068567,0.3617738073113907,-0.05204405090689905,0.13648717195382,0.139422801278043,-0.438988913978825,-0.1494361858720011,0.24654771411694515,-0.35623638549953934,0.07516259273376064,-0.30887055937718366,0.08519833663236193,0.032561997588204605,0.24290231599751486,0.46229697778437623,-0.16585857806794424,-0.00012844574282671437,0.33944697200514434,-0.36481311959358187,-0.0314586036610225,-0.02055119842048207,-0.30111475654119296,0.30243215769206744,0.3686845203818725,-0.028868529812551672,-0.5348624756704761,-0.060732377870950864,-0.06491420778937798,-0.01373980867293386,-0.35382502885869654,-0.3866543125801432,0.23783284610118113,0.08678841515874382,-0.0599432121619852,-0.1334036377877273,-0.05992322877276023,0.13621792945040087,-0.5801005453964116,-0.10787005391336836,0.24704028239601558,0.24696944363760273,-0.2936903248156462,-0.41683721292679127,0.16300666376096992,0.16754715527877181,0.3034080902792876,0.036271116029744616,-0.29084613483940813,-0.4440812742539752,-0.14328323893586406,-0.004931414376199567,-0.3241788566246612,0.27954534240297574,-0.49832264454847547,-0.3786062670334757,0.03655854277273336,-0.36359050525966025,-0.0909886431768724,-0.3128455580031868,0.36860338305863816,-0.22911712699986447,-0.31321970597339605,0.11705036082497305,-0.3188029474110263,0.2814215064544073,-0.3366218831096333,0.1771282323731999,0.12820324487884538,0.09198669222588211,0.03281995730842905,-0.09787015185582286,-0.08700017181379693,0.3511743973754209,-0.0655791120559597,-0.0033905055440237447,-0.38556070444184515,-0.21622057703876252,-0.1329307109792386,0.12225905147798873,-0.2684271084538344,0.32485872048194775,0.14199611426812445,0.4114424361214154,0.10597046050135826,-0.1527466787143149,-0.0836427084846071,0.3611567693960581,-0.16314895681491892,-0.361980361362464,-0.09120424531444693,-0.4265435792424028,0.17331968874066334,-0.03812828164737926,-0.40270555555943466,-0.35163860978393674,-0.30108187668502356,0.37053944472737105,0.06861746802823926,0.18479802855720948,-0.4606845331087672,0.4130619484072266,-0.11203713227900704,-0.045508470994320385,0.28709141666163185,-0.4628401092465984,-0.41491100695039385,-0.41138883734002657,0.2559823739764296,0.1836999044841053,0.0926786725368184,0.029616759416812456,-0.5346364619946634,-0.3481466878143882,0.1814831777359557,-0.46248727393924877,-0.53358136501927,0.34545471360838104,-0.38040936879768944,0.1155298724015257,-0.33811793047607774,-0.40733276154508563,-0.2803317944724651,0.20941251252573623,-0.08962036375802471,-0.3030250026745406,0.15285252968690505,0.010028382603237688,0.32344229377046463,0.4011417633572535,0.11578728133231035,0.16064351537997146,0.021206241107206366,0.39114226035814353,0.2077449396746312,-0.08431227243105509,0.1719219706203756,0.1918076944732091,-0.42972102788720734,-0.40674865103493635,0.05314349614419543,-0.227259094071418,-0.40462450633043595,-0.17093988912753078,-0.35686232381659533,-0.2860898108916155,-0.14962902709869508,0.3146491604071982,-0.5091164444716654,0.20425632190455853,-0.2992140460909933,0.4632677071477549,0.1947057696113692,0.20709447197843492,0.14981752420168146,0.35606194468514135,-0.2298546393893232,-0.008157181140264832,-0.08484587742356269,-0.13017674823883987,0.4423590856200178,0.31456537809537366,0.15097976880989797,0.06859590434947448,0.3592713628694634,0.12188625373007289,0.19806407203326343,0.47603629557238425,-0.014001270311886799,0.3995838809140496,0.12781955044737425,-0.07497184959359667,0.3396228940309321,0.29874638955936655,-0.05859072874539085,0.03331862562144859,-0.24978531690008435,0.31081253744882914,-0.1344267192528254,-0.2459173286882068,-0.08662773729002685,-0.31804423093930334,-0.2855100065139036,0.1605928687112667,-0.12347276585771914,0.07005707473007992,-0.6090508566523561,-0.4658261130857663,-0.27646738351638334,-0.3100274924192279,-0.11842551274815916,-0.012599016375492569,0.2001163938642194,-0.26749352440344454,-0.0040678839720324905,0.017488249120544,0.26269463331162285,0.3331548920367633,-0.3122637885057788,-0.11643760953015432,0.18385073173685687,-0.08120262672654888,-0.40787217782827484,-0.44599930355827916,-0.2775441085687623,0.15284188552538613,-0.19849691783676907,0.05970012000319671,-0.3641736240642984,-0.08447570802884741,-0.3755645198861827,-0.39788293246379064,-0.23580680894273998,-0.37883702325291535,0.17936635136367363,0.19428643191074885,0.023927107234486784,0.2733978043975047,-0.007299848658881978,-0.20669841520606913,0.11335451608544146,-0.3387388949676117,0.14910011186522115,0.18918911306341119,0.051008579301653666,-0.07698313603855327,-0.09434024232632489,0.3530036643989435,0.29246176578413746,0.0603612571131617,-0.4238353787166802,-0.5230452134179362,0.22865761369992862,0.13991235245966846,0.09079247523647874,0.384965086922773,-0.1961620288563272,0.4291446850777555,0.2483117967577316,0.1827314825962442,0.20737774185523794,-0.4654231585089695,-0.31990329259296146,0.415395216858281,-0.03284362090811706,0.2574546780519888,-0.5987408094282768,-0.3996062555365693,-0.29034686986447117,0.12073245467063183,-0.02809490209093164,0.16058341409258356,-0.44797599426549295,0.27676500276230614,0.36557764286583594,0.2087937860615704,0.3235097734213874,-0.31267310244957136,0.0955737694629177,-0.37249631754570983,0.3142373253521804,-0.3185759622719675,0.31729563827655466,0.2819414381148642,-0.35302751232482377,-0.07983396609978233,0.04635638810485316,-0.29438171586891687,-0.1787921997719882,0.31795915338332353,-0.38162562235353636,0.37145837980314944,-0.4003275341284911,0.16558694581584557,0.06597026805266744,-0.04097375440957889,0.3637225067480683,-0.019640992684385877,0.0033234916919202056,0.4789097590560561,-0.1375646508374073,0.05726141085360978,0.38256403210855827,-0.2747050134139072,0.17773887220466608,-0.3564985758857726,0.23641124582785772,-0.28451648973584354,-0.4073468452454688,0.2673616784083622,-0.20136265280605056,-0.22555596032586303,-0.5053077257654067,-0.4103516012151508,-0.5084545709931945,-0.5405354093545534,-0.2547973779380979,0.024963105396881985,0.18502113240662613,0.3821821010596407,-0.2713955017826732,0.2389249793029358,0.09244940550870281,-0.24359496129688346,0.2830204094565032,-0.010857019448251615,-0.43122309436056894,0.302206604673866,0.3417651717850474,-0.03111051655649201,0.3695240216813086,0.16270071277522088,-0.3433537434875879,0.21195677237734983,-0.1084922222769049,-0.3221355784485204,-0.14442286618371805,-0.26842378754220964,-0.31046643863742873,0.048108847623012554,-0.2992373444764846,-0.019447142118796792,-0.502705054867485,-0.01803323230149204,-0.43338331454114964,0.19567715547725614,-0.09745927033423649,-0.1623681720125528,0.06345572004200169,0.27402530064878555,0.2705794079275299,0.40651298276310677,-0.3923132344619138,-0.08131267698986386,-0.48599437905827936,-0.025942949697938044,-0.22755204711919663,-0.20147178636221505,0.2733533815483851,0.23651515264092762,-0.2524111821361585,0.4229598774713812,-0.12275272571286144,-0.4481433430637656,0.13700931256064192,-0.13659681184329198,-0.07018953334187382,-0.44026938179686487,-0.1439883868624424,0.25718510337309863,0.1116177179064247,-0.3705572145710379,-0.27052805767725135,-0.14957191078715454,0.1865431358789235,0.21511364000905314,-0.32377690069719334,-0.09427525541745635,-0.5668454581001396,-0.2959846608079761,0.00718861863372495,0.22651681320867892,-0.46327138253194106,-0.11080364844844774,-0.2484857081227093,0.09665836798858146,0.08681847658636127,-0.1478407950181141,-0.2060144493429801,-0.027635007947887445,0.3057273493411861,-0.4812889519179047,-0.3017585286110361,-0.04199284752987301,0.1326726260876522,-0.1597625493812474,-0.19798287666976053,-0.37303513087048007,0.1275168200998606,0.04459607480388413,0.3735118062806231,0.12969568655776229,0.19339693059195306,-0.2089628810853081,-0.3095529127055848,-0.4772590212456596,-0.19860220390108854,-0.43313166777598877,-0.45828716998752067,0.1286747930962527,-0.38720097845158424,0.31785853790603974,0.41925310558088497,0.3566433814253956,-0.3498556729755325,-0.5014550929220651,-0.0837902211039652,-0.24449007447485183,-0.12115896007176363,0.36441706790966955,-0.26097754359462255,-0.13249554231623434,-0.28658074739950407,-0.19331908929697927,0.19153267907986882,-0.4488004541665326,0.11097599943539159,-0.12518495679579597,-0.520692316704311,-0.17991287693425037,-0.11023655832744082,-0.1019574626945784,0.47549376987581277,0.365109627274728,-0.28837034545481927,0.3273261078597727,-0.4530244579021412,0.1646423776664416,0.14751019210196364,0.35866991210821814,-0.1003608510535263,0.31683725643248023,-0.07490134122561533,-0.026044990726979928,0.04020551955668137,-0.2479258707707417,-0.01766277219584812,0.36208890094011675,-0.4216503168039778,0.016006822603820574,-0.08881155543078247,-0.329765882602411,0.32150791253109784,-0.5269299035146162,0.27377083495034593,-0.21082491169057602,0.4669248362209754,-0.12367034000760903,0.3487898282289655,0.35142392569054715,0.38851288373798204,-0.2226653532491005,-0.15406855787645815,-0.22863673889296138,-0.3599119283653331,0.23939447763358876,-0.1862992424331307,0.09594798537516785,-0.4681785994360401,-0.02301670732650782,-0.5239070568494144,-0.1443245378354111,-0.43349197732862543,-0.36892843993846103,-0.00947276922646736,0.18036040370992104,0.05371891636693954,0.29202633922181875,-0.5139973529539144,0.1395901627328367,-0.02612104887851216,0.205283861792331,-0.2920953945811841,0.3088318724868277,0.18665226091553744,0.32838198898725685,-0.3725549434438943,-0.004540604791975147,0.027000543330369355,-0.05409495156195398,0.19373273079229542,-0.3572047646789552,0.2609762430398552,-0.325193588872509,-0.01844107362171842,-0.5165228013472385,-0.013274761054243312,0.2263644973537547,-0.396169839706703,0.11721995582077058,0.16943969086055502,0.261393101737407,0.16107022183492808,-0.020976693788592418,-0.4040900380924259,-0.41936585179773644,0.1571644631581236,-0.2876616902796118,0.10788296266940779,-0.29180619688348286,0.27646521445597644,-0.0855262865260232,-0.08493521399716837,0.11288604363487992,-0.40281694613358227,-0.47485695780950843,-0.17541750034625558,-0.2877933062351408,0.513721934792517,0.23098995052058108,0.1429447183598826,0.28605962729549334,-0.53971090363308,-0.26900433266992463,-0.055878084261842716,0.2826109625454004,-0.4548581565586562,-0.2104251249995499,0.3256481127642282,-0.2214763625759888,0.16786371314071497,-0.2361091764535409,-0.5290557115232429,-0.1680945220352434,-0.12167107315252469,-0.1115662722360122,0.35627659663093725,-0.0018539887796438055,0.015946274553423633,0.45215079414209186,0.35141615386261693,0.13207085441591154,-0.18455486941105637,-0.11791529768534637,0.01794510698584567,-0.06011889475692508,-0.3540721947903806,-0.01404124683486762,0.023509485480324402,0.28648312980408835,0.21684412609660406,-0.3083830833465444,0.5304913556641757,-0.35886603607149586,-0.021162402623206497,0.1971586739606502,0.35565677922988415,-0.30942699044389715,-0.33482140436792845,-0.03355486565994633,0.19093965375277452,0.0036945365687826347,-0.17387412933029225,0.011544647242667332,0.10333288461222982,0.20779924559476584,-0.2815631809626604,-0.08444856505014797,-0.4706648591652328,-0.04917670944559048,0.480332009631685,0.27053233735797505,0.34807620617181845,0.2456071497995471,-0.4217362976810832,0.1500420926456316,0.1145966992636903,-0.5694838240452227,0.391992292629578,-0.27222382388287736,0.30836075557209247,0.17764631980800297,-0.4081946402270335,-0.10616497313913571,0.015308245945140752,-0.3241005825265308,-0.07208813950334199,0.005781914957713214,0.009148534856470615,0.015348623622823224,0.01975400526393302,0.042086041807264066,0.01732041584993846,0.04218580490124574,0.06656438692510579,0.05706709739738322,0.02411097048238984,0.01914627380601698,0.015167536569975753,0.04475997229219962,0.030348108718787008,0.052921738616783426,0.013185437894153931,0.07749272484096052,0.046526419847187285,0.026254042035136985,0.032831851737234845,-0.008952601203163022,0.019529657708954578,0.0634698184704058,0.07526930980101255,0.06606444772459334,0.06049774708990799,0.07222043171304614,0.030410635604993668,-0.004887261176877764,0.02545432983377233,0.12012886883636502,0.14624910212954392,0.11436766778891422,0.1040899686759547,0.061476859236956616,0.08749024983796162,0.025841544832100678,-0.01062379491487054,-0.017518068789337298,1.7442190027202664,0.4092467050481952,0.3346524187963463,0.2249799855111906,0.1715721725210486,0.06849810276100271,-0.010146512598797239,-0.003476320118372026,-0.01641872563724451,0.06991484912374837,0.12766732523798066,0.11170910272408613,0.08067915993248516,0.06127903775423014,0.052845282171717176,-0.011016049289421322,0.01423729921497112,0.003908358009842924,0.043988478938727704,0.07591306377693927,0.07086345379659897,0.04034271964542351,0.044321173903600984,0.05930427604090871,-0.012618154836201788,-0.008007106836974207,0.01196253760160916,-0.014913424463461207,0.008407688001545701,0.01858547632153858,0.056986237418460026,0.04464328014255723,0.03536244270458227,-0.008759926607400086,0.00634328112822361,-0.006742410698520776,0.015411450712286506,0.0443073251166692,0.04220716838835866,0.02462267361787402,0.03387673948841946,0.041368327411240836,-0.6171263796312646,-0.2516766067398394,0.19152338446622816,-0.06247183086026539,0.4796963857804779,0.3134834494689527,-0.4381598888972774,0.3945300082307587,-0.23522774372171806,-0.27856566591434256,0.38328244800805117,-0.23211012134960676,0.08281760081247734,0.058389003084084484,-0.1609553393856688,-0.40724191353904643,-0.3562330849640468,-0.36053824969073234,0.40508282486543745,-0.404126854115863,0.008654844224043213,-0.38864769691240403,0.18045040944902335,-0.4467054009845274,-0.10259805353535942,0.3185002808603149,-0.14980950396288406,0.10316479480969064,0.10970566825349874,-0.5159205930131004,0.28177075534016394,-0.13916094122521488,0.29215275794761775,0.10637915223272569,-0.35260136753704957,-0.3390223771238515,-0.27183108338583506,0.13129440557712968,-0.5208825209838457,0.2519252195483919,-0.23112027837957058,0.17880007051966065,-0.4703956587948844,0.30753558927771246,-0.20889855805112437,0.32515442971830066,-0.10163079934732602,0.3430484323631466,-0.07713346644267653,-0.04555306503744344,0.05433831692720598,-0.09957565602503395,0.4030316905322219,-0.15989031971187131,-0.1583549904366735,0.29608435838066194,-0.3223826629442994,-0.12222998453643612,-0.26740376367311103,0.13483883571808228,-0.46125833883442774,-0.26448838435406913,0.23835634660079513,0.3989463213854258,0.3000368760445956,-0.29165762075582136,-0.11553928518362955,0.07824423278559134,-0.21264781760735063,-0.46210434155991337,-0.06765113241608997,-0.2221790210288762,0.3370344945746562,-0.07149120883115284,0.16598060086792046,-0.3700555968908951,0.19099791373587505,-0.38900350517232807,0.14311995017570356,0.10352870097874232,-0.31027377176397447,0.26518788228093687,0.29724126615543595,-0.06335666238926668,-0.2550130502420135,0.35076279847178854,-0.4393636153093665,0.3445109338862029,-0.25892551125566693,-0.17368554691671254,0.30013478973413965,-0.431469603870098,0.08407673246983723,0.09638041303772905,-0.5636362727101825,0.4125997243610279,-0.312429919212335,-0.20856662853134358,-0.4072164888380389,-0.2347504528998021,-0.06911368291327744,0.49276063191442987,0.05366825855605077,-0.1789301629803597,-0.3297896136545788,-0.47343043890190273,0.36349662070091293,0.15098748472458476,-0.3212537899986746,-0.29770672632563594,-0.046049123153446406,0.11408730928111746,-0.5500999430190844,-0.3099543735404692,0.04385752433819012,0.06971940959638788,-0.4372182852700661,-0.36491615699311664,0.15330212192709022,-0.11429048103804063,-0.028174430021156976,0.12980630561438344,-0.22210366292716335,0.24215760596518004,0.18615624144072596,-0.17513605077835098,-0.19271470047317632,-0.17106210719791062,0.10200370527599949,0.6183945709018716,-0.20804436983932081,-0.20486545901715855,0.03972525264312208,-0.08350045827405492,0.1679301066489799,0.1380382387815392,-0.46556337789419894,-0.1364804292982086,-0.06849842905083163,0.15086052755549,-0.319661540511898,-0.430767567004831,-0.33396599028980023,-0.535724982846139,-0.09033073908471341,0.1250926590190628,0.4541731137888436,0.43248513175061026,-0.016735565916957035,-0.2876650913753548,-0.06427627088936479,-0.30382643303531476,-0.19670305109732056,0.2114734529120116,0.16227182801222306,0.3950618345213376,0.3815209016990778,0.16461753351898323,-0.2988679942399491,-0.24479055451259252,0.2342440745185191,-0.3762819608825377,-0.3322775399402764,-0.11070946257917302,-0.3843211923172278,0.1950291734060436,0.22218410589437704,0.09375849911835958,-0.12460130113518457,-0.21690244636426276,0.1497798654464311,-0.5233168809917661,0.4316031890607536,-0.10730455222935438,-0.009963422971076679,-0.4268945139161229,-0.11132727773679692,-0.323384842325907,0.007038944911100553,-0.05226194681951521,0.4093659284532931,-0.26082761311334723,-0.05196471587103321,-0.14057489119086267,0.24481473241049667,-0.2506201969185343,-0.25622942011797006,0.18015794915341868,-0.17650388455487667,-0.2752467246041272,0.00660895707054799,0.031911804581757144,-0.008853399417341241,-0.3476986082992281,-0.2211556072934379,0.06177762430593431,-0.2336057316867268,0.3248812125595492,-0.19951335249611304,-0.011570571356132308,-0.18954423833719192,0.27747326001748734,-0.22222058178765405,-0.2774450888685217,-0.3444778793843149,-0.41961869722036366,-0.25882002940864157,-0.33978289458391875,0.0444088784546916,0.14887617889874102,0.07907604385233861,-0.5264412302005752,-0.023081266620887185,0.5368660669549495,0.05998837978368752,0.26073348152753334,-0.36401787890088994,-0.0035890168695193515,0.05812666946439898,0.011935701289239969,0.09876375784849933,-0.09473663267791033,0.019993603260252506,-0.14421301984750526,0.28766581148494524,0.1382655853241895,-0.3124896098400108,-0.1766098734347962,0.22233455843811922,0.050408059654162035,-0.39579803383743445,0.0918335584588218,0.036196965688890116,-0.05457522825536435,-0.4447214303461358,0.17260899612423672,0.2868409408597122,0.26759818420782866,0.16089858863512593,-0.4191886276706432,0.17799572484563086,-0.4382252804864657,-0.12485370122103426,0.11422309672938652,-0.36358986468489607,-0.07682064487004699,0.2384010838249437,0.3259903762547307,-0.282156033842793,-0.27295235846761084,-0.5151674839160997,-0.05569773109446499,0.3606895991836732,0.06156377606290984,-0.059589282382973174,-0.006235143485624036,0.16911720715881853,-0.1441708836809142,-0.2781590668070637,-0.2747880488506546,-0.3796053641150668,-0.5104121177160093,-0.15412402324604915,0.36641833459215567,0.311186995827231,-0.14334007428563722,-0.209108601059489,0.12824425562894132,-0.3687078042620669,0.1988111504007953,-0.12274784886266386,-0.4601804181521916,0.060860816886915345,-0.3397397225570254,-0.08813249791381562,-0.20673211252414203,-0.10018210290509551,0.012734839660970554,0.3557012395170544,0.23379491284928156,-0.4355258533802079,0.29384647371195466,-0.3765835199079266,0.19715530038064327,-0.3036124970488143,0.06010129503084168,-0.1642217333980331,0.3938352859224823,-0.26721827656512886,-0.0029184098185502626,0.2965245746572622,0.07151909946492503,0.329962735498167,-0.44422209973285076,0.19195258194094694,-0.2337659243731311,-0.40381548670156836,0.12891304916959598,0.30434921958655714,0.2950590635457171,0.05355131592138652,-0.39253757856713223,0.030172578400128415,-0.026797014186503983,-0.39315249500862987,0.0075645831538349645,-0.3927613148545962,-0.36874699268888284,0.06558763429014716,-0.05184459644068077,-0.25437204590345946,0.002426604065467817,-0.11256941673905173,-0.04986961519934094,-0.3238087456061016,0.4559793093662824,-0.35832606732246064,-0.16704814915269445,-0.10738678716502904,0.3240611987996196,0.30267757723392447,0.30493509983994854,0.0744344383708801,-0.5681591473182357,-0.039143981939383586,0.025697816361623847,0.027775749389469362,0.3886980628071745,0.18402953208844355,-0.31183888339749527,-0.10387619752538255,-0.4896509958137704,-0.38509230493362334,-0.023404558981810885,0.2715625504284455,-0.03043330661948431,-0.39941174306589794,-0.483739435682621,-0.4444879680352505,0.09683241286950973,-0.06540134712585917,-0.24844687031016846,-0.10063408271393486,-0.39399720886766626,-0.45359066437828754,0.21143279483247687,-0.4772113291173971,-0.108126059522475,-0.0007963900009911467,-0.10546424286642521,0.1991425696939092,0.3318360560297061,-0.4354782864368061,0.014144261768615314,-0.5470338366733042,-0.1550953215328692,0.0037832804009411388,-0.38656484880458547,-0.1838121435666478,0.20377418943170275,0.23596919151542256,0.37104313540276157,-0.06284765641081104,-0.03715449956801252,0.028433425262124747,0.24478963918198612,-0.32494016642566564,-0.008466942230101053,0.34326265440433806,-0.039941589954935186,0.30030414196228905,-0.13007930588021047,0.06620733920841927,-0.43413124212573595,-0.3609438819287792,-0.32529675717459366,-0.2831716790892123,-0.28689386089791175,0.20003937451097498,0.014342039784144847,0.13480385711099288,-0.5290318732873863,-0.16755799856733372,-0.37681926579986824,-0.07012374008436988,0.22365510706931452,-0.006611471791124862,-0.3497193257853641,0.2500990151470722,-0.3386456811373357,-0.10777574452161921,0.24298677955424494,0.13480481817155465,0.1379220852860848,-0.45646454898489,0.22204845176326682,0.058537339407874284,-0.10002781605601137,-0.056474006912816566,-0.20722368504448582,0.2915416650933955,-0.3631985028526685,-0.4505874653599028,-0.2332458598375649,-0.4580348643033954,0.5330359304307185,0.35773261955542246,-0.21506855436370703,-0.33709454745228135,-0.4761408065123023,0.11098371414710798,0.28198309043453634,-0.4910332189567018,0.2902230373537615,0.0549897400409408,0.28896269280353987,-0.10883523845005223,-0.47255312291534424,-0.24831527179968024,0.40728842632952905,-0.2713346406581722,0.051145795815371944,0.4272496739326269,-0.004074241201031601,-0.5197123110804467,-0.44553246119712747,0.1082541183580863,-0.06399345328987059,-0.3018542201238728,-0.4311082791796365,0.0481878636261337,-0.3116321355232802,-0.04795199739716872,0.2969576548434123,0.22442713563602557,-0.44019302638624447,0.07515930498449444,-0.2831604238631171,-0.5462845244793111,-0.2909050608482365,-0.12432533494358365,-0.2985103137828407,-0.49804235038632183,0.3642867665229136,-0.4146426609465305,0.12266437149547081,0.025524662468052527,0.5283611776574683,-0.37356543611659254,-0.07790529184346634,-0.11893595408582242,-0.006499893849277831,-0.3862179273558063,0.24727487936224507,0.35400337681395366,0.4860820714041146,0.1907281905690469,0.1127210748639266,-0.4060786521954001,-0.03764085183945342,-0.21912295082579192,0.1832578481961667,-0.06666480385106287,-0.36283142205030783,-0.020449852185211503,0.2463248297203623,-0.07980636752613243,0.17920432994184327,0.17715815333415325,-0.2332714184666123,-0.1929868301173136,0.4041568298914864,0.09426718743606231,0.2724539413578537,-0.262210361987472,-0.39581783701074624,-0.049130841217384785,-0.41323064534089676,-0.2026278389485592,-0.5992339318804606,-0.4096371562096843,-0.18779924233259426,-0.09856155041878802,0.1714488089766682,0.09277911854860658,0.23784180932078455,0.2795085152427797,0.24288739305604595,0.04693031298200115,0.18894478869703485,-0.43189579866874017,0.06310872518566683,-0.29884204709146533,0.1530401913115003,-0.24655300050468806,0.18974178171987408,0.06926685312672427,0.2503351809110837,-0.06225369771506043,-0.2100586391338358,-0.04852098575901851,0.22500601120161492,0.22191392545839764,-0.227350139112698,-0.4109565086813718,0.13743826132245435,0.3079370769417305,-0.04607479246802958,-0.20763920914792042,0.3329278164980911,0.13290998974541626,0.38917007767409834,-0.19648180056108056,-0.29664778297452726,0.13772726806486127,0.5463635932520003,-0.3162783167951973,-0.29306325581686704,0.23647304733935456,-0.2158375005982823,-0.07790781515218052,-0.1441375017782413,-0.4739697751087246,0.04741134352915699,-0.3656649324067532,-0.09893785983491347,0.2675886703871535,-0.4378070328566684,0.3657298067772767,0.14584423830326831,-0.0423714031960767,0.23421471017991494,-0.37105493534106854,0.14305264929579797,-0.2708987800327512,-0.3994513381668335,-0.017482824481752944,-0.17057408452951114,-0.1055224958078212,-0.3715072576421633,-0.08040369057080991,0.2299359162800035,-0.26984286872304525,-0.1661109917939561,0.10486537105812026,-0.37471082354969915,-0.03794263465765095,0.2249548378358266,-0.417200109010716,0.2742424738526855,-0.07523212569852665,-0.07020647347524385,0.1210382465499305,-0.034234387656776194,-0.31948766827402375,0.4407657900025377,0.10882978290013576,0.033133651145416596,-0.35249680209145146,-0.3458428343459338,-0.061845622599313685,-0.17294584095262786,-0.14397692767907183,0.24275852438680975,0.37312170040243026,-0.4055639802838205,-0.44336425519527156,0.22031987748335757,0.23505894049350903,0.19314251963855947,-0.12157149385298127,-0.03728589564859807,-0.31315615608723846,0.051868315419210255,0.03606498508786462,-0.1570544405189354,-0.467307661002166,-0.4339241697358365,-0.1103479753075646,-0.16154856160760112,-0.25343132405890584,0.1034870220957964,-0.3899000831248201,0.2601125471178925,-0.09046913902389522,-0.19647622918974644,0.009448585945900624,-0.2140276175841069,0.14787630050894865,-0.026679010047798,-0.3511764309688432,0.15769604770475035,-0.2372902002156553,0.33445354276331796,-0.050392948638128654,0.21648960067750117,-0.4555556606298296,-0.3955529394057259,0.34199247193889143,0.06498705358780547,-0.45315648660974367,0.06922407730938733,-0.39175748923921505,0.2363594620018962,0.00810079338417026,-0.006921441815396715,0.26060491271576147,0.31568593684338614,0.013879803783426648,0.27982206781399105,0.3324612529568264,-0.07776894543957391,0.13614071818871581,-0.011553682518385238,0.004227882961378239,-0.1602454409317716,-0.477643895532543,-0.22509386103558932,-0.13858526084188302,-0.2024067729653737,0.04835104556176558,-0.506573097104801,-0.34377628600526455,-0.014003899463770182,-0.3002434509838424,0.07074169693782217,-0.34154292444266804,-0.36929385672427445,0.032244548824449465,-0.0028546705670057793,0.024747817159169794,-0.4967418271489197,-0.09292908693439078,0.20216693311703804,0.15689680400299805,0.032161104578117036,-0.14232310671674706,-0.07483283521494435,-0.5094642016303431,0.06966141146004055,0.11535902983712962,-0.20579503235621774,-0.3488152782317182,-0.2476778637156764,-0.19667453911897317,-0.20096847671148577,-0.48949148081570965,0.03479984779995608,-0.4110761378898594,-0.2775796018138643,0.18173669818642066,-0.5043162622383375,-0.14231840570731294,0.04897012167804289,0.1955497115936244,-0.17183022382778665,-0.8017574459214034,-0.41675372943793765,0.31594506127860256,0.2338259304564202,-0.47352927223620106,-0.08360743451066763,-0.20669645211281576,-0.14179258230821962,-0.5262311934847346,0.09211145216713074,0.20111599207981654,0.3163601632878147,-0.2663640293221941,-0.5604296871055765,0.2668542268342669,-0.47555251583208813,-0.3224899243997223,-0.3151917604099111,-0.24405420146584786,0.12441108761111463,-0.10072857483693377,0.2084337473363171,0.14565359940682623,-0.5186008415761812,-0.16982979228874162,-0.27802400714901,-0.34792176936101327,-0.39571705824130116,-0.19027599643536108,-0.47819647703703133,-0.37468290162687834,-0.04920472427382413,0.15633117206791133,-0.4278680090863911,-0.4136228031844265,-0.45399077666242904,-0.4292566730064261,-0.28576117291566316,0.09971392527195184,-0.37197228269609145,0.22282767914789617,0.10626792085301266,-0.4110429586759907,0.28217468401579127,-0.14606189718501322,-0.43852343857661985,0.1711908631449919,-0.15816591152950973,0.3006896504341521,-0.23829864481310864,0.2062594693137858,-0.5214858521848026,0.008747853224602434,-0.40758094965384783,-0.16238407910784786,0.4350716714316625,0.23775753017502238,0.1475295282554699,-0.4842131353803226,-0.3941243454570465,-0.000986568127524759,0.1349311849493386,0.02593351962985503,0.3275697827767011,0.00017222631074398606,0.3292124763156479,-0.003615030315447841,-0.5782429074183446,-0.4500708135276682,-0.48593546309608104,-0.24771822152935297,0.045181280976122576,0.04879169438832647,0.32019818361127944,0.2247548399723478,0.03134492324315486,0.09622465996193343,-0.2536560174282144,-0.551694168806121,0.04888270516677673,-0.33820178513828086,0.3538387117315686,-0.13015985736241423,0.2019875739365209,-0.304776232993538,-0.1839961376759704,-0.334832930505819,-0.4509014788251243,-0.07673849712093922,0.4631370325054717,0.17520962289776232,0.19293634745061622,-0.1317166803320537,-0.14209452836168454,0.39946561899781496,0.18246513719307345,0.0500040041975583,0.10108454373280884,-0.21618624890389349,-0.05074141876005707,-0.22350903093384647,-0.04647789728292953,-0.04764237625763519,0.2258160518120736,0.2017460759212899,-0.23785478048020847,0.3279751564508159,-0.2647367127315729,-0.14904148104324672,-0.037174235264113405,-0.019871593378378124,0.24952700132340072,-0.27241747330161287,-0.05248978318210402,-0.05705123675495763,-0.35431307654192123,0.32828161136345685,-0.4257086733438351,-0.23718328993886653,-0.4076057839886376,-0.5914104310063679,-0.4410767253468308,0.481867482030156,0.21675211513060677,0.27668301095643055,-0.028734356454233476,-0.07091430605748657,0.24826030767252488,0.05847412382464575,0.2995656405337026,0.0908317052849923,0.21236734798377008,-0.0914964566825242,-0.32870766029179443,-0.13560722034447445,0.21954993286776434,0.18366272656283822,0.3141145444569976,-0.259857746920406,0.07591080956230603,0.2550796313622536,-0.22315097808230008,0.08253590601347108,0.12061698282743648,-0.16222981606278777,0.044376784330668724,-0.09294855663923718,0.36716700248470063,0.41185504339582557,-0.21223975134871195,-0.24474410216145026,0.3220692325036151,-0.0008020239508438946,0.39482245088649254,-0.1902146261485373,0.17656191240860494,0.20890876429725042,-0.03542163848839906,0.12438653590769391,0.36957237394150244,-0.3061486099233886,0.17213158832381145,-0.5081202897053786,-0.04960157546515838,-0.3102981269096115,-0.2722282192189007,0.39929210969703316,0.25525292755473916,-0.03329964557772398,0.28187153874868837,0.06500413609341854,-0.2048883927223837,-0.27498255152104845,-0.43727998254554784,0.10219059491283201,0.026457536726670363,0.3535071547293242,0.39491247556850556,-0.3309105646681284,0.19044329674654714,-0.3385658791814834,-0.2540782922116313,0.1341557020537364,-0.008436524169669009,-0.4410728839566772,-0.4506984334606127,-0.094918351245237,0.2781061292688575,-0.39104070968710997,0.37727286428611745,-0.3859422554270084,-0.006656368889621276,0.0785249860626952,-0.43018531732415044,0.20323506090416457,0.10844869758876523,0.0031855899747867127,0.1285974819178351,-0.17256972648851693,0.061223588960694415,-0.29116722071636947,-0.06315979957412156,-0.17072927353632802,0.29942569315009193,-0.24579180584434648,0.3761026282778273,0.4824325090690382,-0.4019483747700165,-0.15205650520254943,0.27756509787216527,0.2803917099675498,0.05796217098934781,-0.4134835721553224,-0.464782749094711,0.16591406809925158,-0.27323340433289106,0.09779716092889104,-0.2051275573604484,0.36993703584162785,0.36226898658125267,-0.25788723250897394,-0.5082048095755426,-0.11358700136159883,-0.08346570360272873,0.31137960311309476,0.05779425572602547,0.2685732564433092,-0.2389510111853323,-0.4907119362994518,-0.040135815308906406,-0.1810445702059672,0.130219099810368,0.016217550403053286,0.2674761028553137,0.09163466986038697,-0.1676691146985576,-0.012366947082269767,0.22134984783844497,0.053886247555269336,-0.04904786535731346,-0.2721811463139954,-0.4050334668122303,-0.07014440001757521,-0.45810951463638516,0.20002234404655692,0.07579818044780229,-0.1034364605506233,0.34394945777169966,-0.14447674368272548,0.05279049504102592,0.1126720500758286,-0.33928958512710466,-0.2373370277135311,0.2687010817507514,0.3181052530902944,0.30068671558863436,-0.197701309545968,0.09445931337563192,0.4854795609455297,0.17301940794794243,-0.44971678261105635,0.2955996320098376,-0.10698951829952627,-0.41834120665871766,-0.1910149900024024,-0.41617642927560267,0.26002346871615684,0.4451269959363719,-0.22005639120401677,-0.394580619201171,0.022811982766460476,0.36165398784815184,-0.19802615193216774,-0.38807993123817913,-0.3955408548024222,-0.1675649974231767,0.5505119324913035,-0.2744435260000629,0.16164203573163774,0.18606563607947374,-0.4381452422762776,-0.2298463741946309,0.36934829430279625,0.00697880337065112,-0.37146015355070394,0.102264853041966,0.16268357749650245,0.20234348936387817,0.07053139529035216,-0.3581807169380235,0.15715223887179622,0.33998080474690684,-0.4159065495313294,-0.34035933393443185,-0.5389973740337515,-0.4771965354171005,-0.33672988352934274,-0.06916925727104346,-0.2885736813378771,0.031550919382101424,-0.42160981013323134,-0.2721228452368732,-0.2239787337085633,0.10738550059112911,-0.19060977088294867,-0.46857996544050884,-0.3050566184311917,-0.16770093969108366,-0.11494177875815119,-0.12637765656894107,-0.022018529637522016,-0.18211506320754742,0.32956922461863514,0.0925708955405537,-0.01757608891275443,-0.15104101934231584,0.14771771483385326,-0.5358953662222986,0.13335513699699275,0.10532661694261264,-0.005521448282200103,-0.3478888529408318,-0.05696404363230517,-0.4537681466148903,0.05682217250818043,0.10099738349562952,-0.02599595588603819,-0.3440938365287515,0.22523648478273142,0.022899018877492343,-0.08349594324435575,-0.19929411117827103,-0.39295211551056936,0.2575858347360362,-0.10881801637898834,-0.11051268089692402,-0.2395488117900111,0.07858892145334563,-0.1514353730659282,0.28295821131462245,0.16277626163467737,0.4010295581021251,-0.25070576197357514,0.17577264097754228,0.09097694181603388,0.3245201041954842,-0.38987633899304375,-0.16323395382597478,-0.18804835214973342,0.3257853814524366,0.0007282210878358608,-0.23728492920342625,-0.2509781021192902,0.32694491494847333,-0.0694613135433322,0.1460359141385028,0.22348697775123344,-0.20098565807292895,0.04629767125836022,0.5068757651390001,0.3431209059940795,0.012877610903616745,-0.021479334249277546,-0.18730696395899576,0.07888845531340877,-0.16997821957877376,-0.19041448431718538,0.1541598055686142,-0.6769804182759899,-0.632271608989433,-0.30430367654775775,-0.6180065572016271,-0.3696005646981117,0.3072391083670997,-0.21825488185284864,-0.13321526189747843,-0.30983612229980656,-0.12044465492232322,0.18938829113293526,-0.05967823859436721,0.001655793566462886,0.22960136577958284,0.398653149215063,-0.3010985300650988,-0.03817454526475164,0.2996729181138175,-0.03177745311995023,-0.22850257034542631,0.3406345317268331,-0.4653878514565116,0.010833163449763615,0.3140299672156658,-0.15215304091467496,0.2863226646966616,-0.13533416373182772,0.2230129377802833,-0.3586990744797707,0.2656239433877132,0.40065012242905096,-0.30674213085926755,0.4161831377843579,-0.23504494149575936,0.2127052263967656,-0.20388450258050245,-0.052606636571964356,0.04327612976337919,0.2186205648917815,0.07241013809280805,0.07218602926234233,0.08701930902719815,0.3881640834319144,-0.5709635971767273,-0.30327962929098223,0.023245081682153862,-0.07549650861817808,-0.10694092013992693,0.40094385682894684,0.34066895460873114,-0.38202230172096147,-0.48490665337299177,-0.20495131154856294,0.07811365139829936,-0.45474029457716064,0.250641208025981,-0.3444990612603437,-0.387920937755288,-0.32113397568498225,-0.0023315416704911157,0.37252372092731706,0.014589767073444025,0.07853151995344963,-0.1256424214708194,0.27982742896276097,-0.34928676824500415,-0.11053895258171786,0.17641809565296226,-0.25372178358628905,-0.35774892278522474,-0.31602838483035744,0.15370596723352017,-0.45238685092251857,-0.2320066679021756,-0.28263468635697064,0.03763558173575691,-0.2740905884981318,-0.42181874577470435,0.3002088515852308,-0.30657899954581797,-0.18803270654023135,-0.26257653222422855,-0.2368015753569658,-0.36410913494419367,-0.47987130441524495,0.4279709620352108,-0.031535047883631144,-0.31752872116416436,-0.023361955351213846,-0.1470996729644598,-0.4116620817549885,0.16843617027526553,-0.46507970391916964,-0.18917042184826025,-0.09263905113192675,0.45645608183401437,0.11774585344226914,-0.44957457304787735,0.28903067137600363,-0.19997717357322672,0.11523744102198276,-0.4299605265600983,0.16376641904823772,0.31262504802777685,-0.2773980321539327,0.33097121051632933,0.05396774725061127,-0.2900861761431109,0.3562560061252729,-0.3634040291668022,0.025940544181756967,-0.3284321354132994,0.37439046975630547,0.11640977709649698,0.38027937253724087,0.23538060014543935,0.3638408578472869,-0.017294665698184317,0.3597629831207167,-0.4810683880284094,0.2743901994967792,-0.1347614795110209,0.02964380586653028,-0.03185836360192704,0.049307726114473094,0.3645286617324464,-0.4176528084184977,0.3123883726034177,-0.3261143180757461,-0.3444884042591526,-0.33523015946338325,-0.1820769437917305,0.026369373016471086,-0.3866883455042774,-0.2596651247880114,-0.09121666655766929,0.15604262506902045,-0.09067960454920423,-0.3662296850743608,-0.25807171105365356,0.1890180976077269,-0.2428414196233273,-0.471942136853071,-0.25274455750841673,-0.19259412041926935,0.4289604032236224,0.20623826729673403,-0.12085946597674872,-0.2144757296738616,-0.06635042801879401,-0.4166533533941567,0.19954257669442108,-0.11371603218618549,-0.35050399792922077,-0.18546559857791398,-0.5357326981006899,0.005495530166270114,-0.050962093007667394,-0.06936801222433836,0.11973724054720294,0.26736373517285295,-0.48473948899752906,0.3299619269639354,-0.15528214568031354,-0.399858118065615,0.2544340372044971,-0.41800684507931296,-0.42958863383491,-0.40465136174043187,-0.08990269842761478,0.18693567198046382,-0.37448799801219557,-0.5107565098628145,-0.05799248745638346,-0.45387502539526275,0.42645617789591234,-0.06532020710894994,0.21547873534567763,-0.04141115674263175,-0.3975100348546124,0.2313162905215831,0.07521776523945813,-0.4844848163610936,-0.17641839111707167,-0.03411130575017998,-0.33522878166457976,-0.02684484452670907,0.32426246564923894,-0.44570345389869387,-0.42168852823128894,0.25319494543127435,-0.235781230962799,-0.34191746415209223,-0.29963925973071504,0.10101444076507081,0.2618765886928203,0.06131311450344545,0.2762595192557233,-0.4961533930203107,-0.4679204063441296,-0.30479498466950294,0.5185647083218292,-0.22468980249760342,-0.06611220939825323,0.32258424414584236,0.022642164345669975,-0.32594910891612494,-0.22400749379686744,-0.033840202606693126,0.23034912170096625,0.2870309553617747,-0.028588938740334472,-0.030932537101801875,-0.13873877055327472,-0.3608489092168708,-0.32505640953315906,-0.5645243612626208,-0.00029258749022714287,-0.1684560623158904,0.09605356689026368,-0.10983597264492087,-0.15672594926482614,0.19898119078990306,0.05243583421772765,0.20149483486133116,-0.10847529194439492,-0.36058271959116855,0.2578186789442719,0.35933217926096006,0.49046446044637676,-0.11463304146948877,-0.24125580092076707,-0.24539132149019807,-0.2480753074451511,-0.4630213073001158,-0.3703418202954158,-0.1294271917271081,0.3103483063772339,0.0319360402347262,0.009996769753519496,-0.02177554031715284,0.06584601500611532,-0.027828122772707093,-0.14789592988904213,0.46091390995810005,0.10808115338124953,-0.4574703602850748,-0.28669504823678016,-0.32282335675305945,0.263199174731843,-0.03290176355840315,-0.21677411045370543,0.15762467927619653,0.09451531558943853,-0.10024061608709323,0.1335436961530603,-0.3422852148545789,-0.026403511920867904,0.32801152292928554,-0.49812905529673823,-0.0692877984922742,-0.2727966942157844,0.3512901688977411,0.11371727105952585,0.43986840094036195,0.3302520531929989,-0.14584121692121338,-0.26071412421658735,0.28945290475762686,-0.4189575012406666,-0.08444490143031458,0.08477403531648932,-0.11681899279536095,-0.45737391169260017,-0.3401349156162589,-0.23547031205918717,-0.3740021380155532,-0.534640333165303,-0.19413299602822956,0.05764058681795881,0.07166411252575124,-0.29949522448270993,-0.2555607783838577,0.2097186822068332,0.02626828175835641,0.13696604071661142,-0.28700746985165343,-0.0033218448095016194,0.16372218619384324,0.08361856879665817,-0.12149559970072507,0.0323153736777424,-0.23679867782363243,0.28955411915066637,0.040226933326987534,0.17431494004685505,-0.21034519365833307,0.23564547257544138,-0.2190541598287749,-0.38652442554112104,0.12503919643910588,0.053436013316600264,0.11338104430147172,-0.5192996999137739,0.024855251022066507,0.23795197067259793,-0.020515216469593915,0.16409774026632792,0.16872749291229092,0.07921248723196897,0.1215538646497076,-0.022555513309878483,-0.2946758958417202,0.14161465024850478,-0.004683555216806148,0.00284618471722491,0.03197736076059932,-0.0965847805579541,-0.6936575461024456,0.03565068572074231,0.3563147631380903,0.11630632617666316,-0.01649976110166538,0.14738321148084352,0.22755389867049045,0.05622261139925337,-0.16195371218010285,-0.3378804689083257,0.2350765358567333,0.6999078115316597,0.15468655733885273,-0.23507877407455585,0.3845194269380789,-0.25643603051389074,-0.18044074715592767,0.04144513010834222,-0.1888677939743492,0.28898947380546164,-0.38935968882333644,-0.2485236385831643,-0.06058159073117784,-0.2600680049972559,0.3258192178244409,0.14213685873437942,-0.049197503991349215,0.24491985515060857,0.3946523543261116,0.20167535146777193,0.00928613467714469,-0.22568936717841748,0.33644708550525704,-0.11655376353855723,-0.17493318698246707,0.43931704520829534,-0.292911418180418,-0.23844381314402585,-0.06377286692628605,0.11641764674092947,-0.1487193596549621,-0.1707137750081659,-0.07120625057075335,0.19718638853430684,0.10887533502964863,-0.5337695795784008,-0.12440916890411911,-0.43554773326765583,-0.3493110375294004,-0.497097550176364,0.06820607670189252,0.20457273235898588,-0.38028673989305944,-0.3838213478667067,0.08923305471939798,0.10918316513406384,-0.006996524219714687,0.06822726319750876,0.25009449379553983,0.24736285248685533,0.41082259902267626,-0.17674472329098753,-0.13702360455538595,-0.4722092957276383,-0.3299504049606546,0.4848201297533785,0.2645766609952805,0.2520403854300454,0.2578274339987629,-0.036710886107951,-0.08597211306998923,-0.2674415303795773,0.36754042241630885,-0.09899610703178983,-0.6181358120133017,0.03233882218714963,0.10470597983302257,-0.28708443503754416,-0.38876552907553946,0.11001250819728395,-0.190152941842685,0.4905488985933603,-0.2640687981874106,-0.20923683398021253,0.12865346438572953,-0.25481530369821953,-0.02126925551960316,0.18373425003767233,-0.23032992898310528,0.07309719974706683,-0.4194864652765917,0.09120453725821893,0.5319410677199348,0.35648895480745785,0.18542437157548963,-0.43279336673412433,-0.01764593304644574,0.30346255527939753,-0.21852918148966516,0.3502191314783825,-0.10898718990446297,0.16713670573402847,-0.3278323420849775,0.298943208164249,-0.21161756242426563,-0.0161018282774031,0.12979309891880894,-0.11372165187594932,-0.20576540578339722,0.0018184858992847793,0.1626003741470338,-0.10477851902915677,0.20283937938233534,0.4739550704461497,-0.34325317454967735,-0.3353662827393576,-0.3616524491593788,-0.16999895932413447,0.003623661937566096,-0.3878520274256752,0.10433262821487428,0.17081419388237987,-0.4157461888227788,-0.2854074241964888,-0.5217306646105467,0.05238757709984971,-0.1826199592257234,-0.34388530450036425,0.3513125955559855,-0.1874088639097082,-0.4813378957259501,-0.31458822091760613,0.1720363586754938,0.04509614284333483,-0.285441937682108,0.008333422329453099,-0.09018871953439865,-0.05919744199172486,-0.03130157647716778,-0.0948309924478919,-0.04744471501213527,-0.00919179225702317,-0.0701696760342414,-0.1180251741558131,0.011334302126737129,0.08473114496078901,-0.026441620275236756,0.015912286165247022,-0.07723017483706664,-0.11029993837608605,-0.03596414760004709,-0.049154697300067406,-0.07879161260006468,-0.004352004977839721,-0.024397608322916237,0.05093416216774432,0.07538038479649325,-0.015958381777925888,-0.10357983194288987,-0.0970045491184471,-0.05837493233924849,-0.09293638491419542,-0.06319758826889742,-0.04783919682043989,-0.09852561946883516,0.5902457912264333,0.040906214449819754,-0.12394216950324331,-0.13163971390953305,-0.09172430437127607,-0.02250924329222031,0.008989614287958267,0.11585246802218756,-0.020846866453702508,0.9556940839190791,1.3123347413086353,-0.6012095489440291,-0.4474294316744285,-0.2786136290450537,-0.1485525146136979,0.055965344940847206,0.012159763383558569,-0.0021173007696975877,0.7094689229743499,0.05940329904162349,-0.11263403631116627,-0.15502951368067724,-0.07827325453090543,-0.07662605601667768,-0.06309161831492,-0.037714536950048436,0.04410432155313972,0.06888666028830262,-0.06534370657580767,-0.020090569113743035,-0.09082841095481954,-0.026692938972209566,-0.02453348646533964,-0.005911569696036118,-0.03473027377009628,-0.05010405262080359,-0.030223980963113507,-0.01884870166961834,-0.049532083837233676,-0.12292361946828624,-0.11517591978295018,0.0064239895949349144,-0.08723110953626531,0.045898734199664,-0.01894149953112001,-0.005862696378599345,-0.09826903538223743,-0.1031943618521581,0.0031403617986580906,-0.056363696583026604,-0.030425894441083803,-0.5309708387176507,0.02589777413491618,-0.10546676728604379,0.06587617815325203,0.00966755288794862,-0.09672627125577211,0.05904325582478372,0.037657468233632536,0.04607352656682266,-0.10704132146452824,0.10665371364598383,0.04040818156605978,0.16881123968092693,0.028701340300721332,0.04079463923818446,-0.014107134378141529,0.012314300396352508,0.057648723990313205,-0.15718514862014807,0.040227768884405934,0.06423836352623065,0.0587771410006422,-0.049452096779132655,0.01357485117359199,0.06407444590010956,0.06477593289215813,-0.04199067435029281,-0.15810675599484936,-0.005760042055758432,0.013778474397207034,-0.04317820481812177,0.0062925642496582095,0.1436895144408748,0.0527318707309855,-0.0037351650187568163,0.02095813937950601,-0.21961760272501946,-0.019975079174002295,0.13445831348980533,0.0875838525921224,0.031019957295118403,0.18752600685027496,0.3018817016616371,0.182589559348615,0.14992662342242963,0.013625999119115162,-0.01372172615529853,-0.01843035527298819,1.6289977887745672,0.10953007485884486,-0.1506914552142499,0.016570573139131968,0.010650967125898617,0.05339651716524721,0.07514399736813135,0.07081456492705487,-0.07416914710175321,0.20863075436721992,0.10573773606923234,0.06768245840571716,-0.10444112676826596,0.02753857059042505,-0.07175320331331328,0.04375463388453205,-0.06919473714459892,0.004990356751279239,0.03297068335312449,0.150466371384619,-0.021825771994073453,-0.04025855544452121,0.17772127526172596,-0.012080500569691961,-0.16157256973194367,0.00411504757253898,0.0843459765485684,-0.0526170528870472,0.06447346366114483,-0.09871872174254216,0.0371449258967531,0.009099657324469717,-0.09971002031346281,0.02330891493433135,0.0181902548556845,-0.17984948694047617,-0.18028564639739442,0.44347545244814984,-0.43325118064359686,-0.3436243293164375,-0.2241609279236863,-0.5219505486353732,-0.12922455516004872,0.43743117978193624,-0.2972881698750207,0.2889172562025004,0.1727983554585756,-0.2738528094869427,0.31969216616869894,-0.01849784489829778,0.4410267033093977,-0.013886786044113437,0.2191660568815871,-0.40182533100501466,0.26597552024083604,-0.15702990566545752,-0.2967714218505451,-0.2363284630985665,0.16078200790511787,0.3559139865464729,-0.22213225311653237,-0.014740592595170465,-0.42094425448575784,0.34514429525431134,0.19730944138441092,-0.05852938521697827,0.16715799559701214,-0.15093820906938998,0.01748204150875825,0.05979010178162192,0.03929527545608584,-0.46587336581454913,-0.07305840524727882,0.4380484076951248,0.20819295639540844,-0.0451800833982723,-0.11663062848371253,-0.38841609611541594,0.19301562069992312,0.07689151995541209,0.08952412677051642,-0.2894212937208661,-0.24345194910183915,-0.31914346089534606,-0.23835361784013284,0.15738487913810867,-0.5384665727190846,-0.1660759270337118,-0.28051684403573046,-0.11807864271768877,-0.10652422337367248,-0.2042688092540379,-0.16041784873673004,-0.1596601884201788,0.27046065200138286,-0.03823388603211689,-0.2988027782176345,-0.5150090294472819,0.2998641621665485,0.35914944713693425,-0.452445313988457,-0.14549554329761222,-0.027937344053301467,0.23455850996155872,0.3408076369028035,-0.3377643974691531,-0.1580604224916451,-0.1755564739561913,0.10526806167897648,-0.06690563134924365,-0.06505077389330795,0.08859532935198451,0.25680307390685425,-0.2542332172792666,0.3013215373397029,0.03728915627328213,-0.011433062986563651,-0.150603991842762,0.040267143760097275,0.08925612683903811,-0.441671877056935,0.018292769161714812,0.08331113180315264,-0.15477966627228043,-0.06522874926098038,-0.05291199286212191,0.19398125335738203,-0.07971431896958472,0.004700265822216243,-0.2881998334140662,-0.32177570253318416,-0.5602594799529682,-0.36940249478594395,-0.390148216234455,-0.07059124720091156,0.08408767350728621,0.2036760557889396,0.027123982743601192,-0.12225799208294177,-0.10015985368629654,0.127137771063996,-0.2920068904918138,0.016252512844656217,-0.1090203029834245,0.18871868986487067,0.05031585656731893,0.030261811236533334,-0.38229006226445206,-0.17493019098077037,-0.2917977901954266,-0.20738387714189074,-0.03975049249804991,-0.0786305493922611,0.24686332546142123,-0.424925389061346,-0.11721487296303726,0.978023679084226,-0.7165298653731531,-0.007790427238079591,0.07949709112256044,0.09865297267351622,-0.4225566760566115,0.12622321600418027,0.15875963701695234,0.2806676875570286,-0.23155678724659187,-0.1982648954633995,-0.2831417790282591,-0.224178782305386,0.1297363693849956,-0.1996941030194982,-0.012624998013630056,0.006374123328302228,0.019000403897274736,-0.3172359210584564,-0.30051918560548385,-0.06772161815970103,-0.08294191834176957,-0.3083596790150251,0.00461659218441572,-0.27398006820933984,0.013564279151869144,0.07322791717941975,-0.3074377937003386,-0.017073861744213256,-0.3659641747653366,0.054897966495660755,-0.08338728718452144,-0.05027860221079182,-0.04771710972701119,0.013476478815811616,-0.28527781749826936,-0.11570380833092721,-0.5380302752830195,0.11659958241365923,-0.353749899354119,-0.4231697181208603,-0.37982682607045176,0.49358125581868073,-0.4367121491311342,-0.09810435617435524,0.044401507942812876,-0.14575227840066238,-0.30721095338690785,0.1221994216470886,-0.2968898347580201,-0.17371502005002232,-0.019502195847544226,-0.40267924435362307,0.027950156037603868,-0.024453842745494312,-0.17961902235865904,0.0006610035604813909,-0.033670915654095364,-0.43558610981110646,0.14372886518821534,-0.30140174178220175,0.044961825821206294,0.28715985173946434,-0.0790072774669885,0.047221702908323525,-0.2820129011649056,0.10020152048021636,-0.3979006731087193,-0.3929669613989577,-0.2630606889293338,-0.09860616104828682,-0.26672689745826805,0.1302954968900695,-0.4607157660403074,-0.41455965698940633,-0.07353291992211469,-0.13956560050485164,-0.01600874512652971,0.26979567769071994,0.24364214045915605,-0.25167877063410166,-0.36519828589957526,0.12219418137748128,-0.3191084729073333,0.1756839362407858,-0.2688914851395652,0.1710446536433266,-0.30207019855241984,0.18565998268306141,0.4655819812575115,0.3016906580741668,-0.46488676095225195,0.05854126967369347,0.0982707813489523,-0.2819719247601157,-0.419105035837107,0.04155633075872165,-0.5376945391313502,0.18362039121893917,-0.19677637574215817,-0.010672818010990345,0.2844211285229752,-0.1845464483092203,-0.2836112647594964,0.04526196028088661,0.1727315521830802,0.286798139669173,0.06546137369220846,0.3055109419637487,-0.31855723965369936,0.13661440448578363,0.07342131459105533,-0.2835427317380769,0.13082796700482524,-0.27532290866302944,0.1445671940111279,-0.44524640732337417,0.004936821992558303,-0.22022144957375267,-0.5090059519565487,-0.44627692712668954,-0.11824169374653472,0.050892044209314334,0.11719314775720027,0.09718039194332552,0.03400334716317482,-0.3875286301626011,0.21411727923520898,-0.23039431475958919,0.049319389295271694,-0.3488196781557359,0.27733341560965635,0.4215839193228628,-0.20296900377803886,0.09807018561308853,-0.25726895144697515,-0.10917800171188125,-0.3443512777041565,0.008064353196902095,0.12369848580118313,-0.07227975918423492,-0.4084769784912188,0.30559574056097316,0.1611448770326262,-0.10596379326361302,-0.07921785472945286,-0.06793007895169255,-0.24476100447182433,0.17577518409365137,0.3107931531646224,0.337551598856756,-0.3515771316962619,0.23927105208839394,-0.23765584142075305,0.4880488139977456,-0.14746455135569775,0.08176403939681365,-0.36861571129248777,0.0422387066796028,0.08400800385720811,-0.16188268088753963,-0.16116867460002188,-0.46786648569444594,0.35615236380536114,0.4745790838096901,-0.030670935590258967,0.44759443052290904,0.1574175590080051,-0.18982462024157007,-0.2927013237409619,-0.04146982874908867,0.09064135640338564,-0.20549697995762062,0.017323042073671555,0.28902002937148097,0.06631590731856199,-0.4142990501354125,0.2727030027604572,-0.10906379611043247,0.12996858950539733,0.059302377288735046,-0.1374387221624072,-0.12856553295875622,-0.06004976863855316,-0.17743538151058483,0.16247261599932133,0.36892712538810496,0.05249462359384914,0.051448473278372216,0.2558529429656625,-0.3970835996494065,0.46705760038631006,-0.31225579745837334,0.16240811926913196,0.2844247602991029,-0.2842010600026123,-0.2621986091672793,-0.1658013387390296,-0.21096526082999878,-0.22720296543394403,0.029782424468211378,0.08254833045916471,0.22795843323050202,-0.03125153668581749,-0.13699573375026136,0.2983799449129369,0.1083778948401431,0.028228922361983412,-0.4314230485003222,0.2853713560578311,0.2733870423933339,-0.420640014159335,-0.3353971073018119,-0.37068692762827005,-0.06072221509881942,0.4418208643553631,0.4078529137201892,-0.16751272859399194,-0.48251546826369063,0.2262233499802544,0.3014083966840705,-0.26818191639377187,-0.038115280910741386,0.38410100033775485,0.007187966381950829,-0.4622116034048378,-0.5610706825070617,-0.41781974807682243,-0.2815466988443291,0.2084527796649656,-0.13684260398308074,0.2835772266684027,-0.1751667810573388,0.2836013947195372,0.0570395877021194,0.08390052180958142,-0.5164769256643397,-0.24782299159680934,-0.5652274428543987,0.23500836830637634,-0.20587684257536143,-0.23438764116466526,-0.29898129276447677,-0.19533596741399717,-0.40925599033732585,-0.15126779314904357,-0.17556578308993237,0.11364121173439927,0.08482959689084171,-0.10572842152745983,-0.22087877846523984,0.34447759049033955,0.15367706449328486,0.18305389612550355,0.41347390509386284,-0.21687390627345068,0.07425261321106723,0.020682153814637377,0.26434027451198866,-0.5713535230807254,0.19760541795089,-0.08609992954982668,-0.4831545353292605,0.11665742578969417,0.31979496790262,-0.24714518254652446,0.03881534308708641,-0.3648174920636044,-0.1189330930156341,-0.21453293798481896,-0.4456861380462906,0.28207846970999834,-0.20061802685965105,-0.29474054823373685,-0.27795127016648696,0.24910599590911972,-0.21384750517370366,-0.3604802542398513,-0.2773344262523473,0.19856450053775296,0.3858613000625219,-0.1207667657503007,0.13494885277101942,-0.025610170382009436,0.10186213276894288,-0.26499202566420116,-0.07040025349428503,0.1295421279336455,0.3249829507753062,-0.33590460545929796,0.09031187359495357,0.12523383230213825,-0.13801862698899867,0.3634397640305692,0.2331555984099144,-0.3409166318885127,0.06023678221298452,-0.3387613370625734,0.21144513510610122,0.2614807458066131,0.4024973149643311,-0.4167081146474579,-0.12035325898972077,-0.4776645466830226,0.28384677347835946,-0.24968858222187712,0.18152793662595143,-0.24070890454383034,0.2793416835566877,-0.3585983424821278,0.1996426629967786,-0.37705944501187305,-0.42178800579010994,-0.006275621628980289,0.20455550872045633,-0.2909495389078725,-0.1809089980666497,0.3549691731217859,-0.37986146856590086,0.11804781613402272,0.2996738319343791,-0.2185766566617171,0.04212634957376658,0.2506428441771957,0.11168032900669146,0.013118801622110127,-0.13132914467431478,-0.054309764571686486,0.1129513835660388,0.11275414448897478,-0.3262333993104721,-0.4461986169266112,-0.01565993316928006,0.25641453984213963,0.20061754177051086,0.1583505095223228,-0.30470020866899605,0.13036673413255653,-0.006568288136806848,-0.016837251486981928,0.18761380150568796,-0.13618472643878768,0.22759057505403946,-0.23899786521095695,-0.6321683149776707,0.23345053139234376,-0.029259255477636723,0.15283994470867085,-0.42745859797740904,0.054209379007229115,0.2699315180255945,-0.3908520949895975,-0.20182356051508438,0.13106952150232629,-0.2951050930729946,-0.4353952637851782,0.1678444239667069,0.1580202058713357,0.16645917737421775,-0.3231787770729957,-0.3333350503974432,0.32516565886583115,-0.3037467512909748,-0.05491174121595095,-0.053329355013392775,0.0955642708484547,0.30517259958433196,-0.08399302420282583,0.0962862338438994,-0.3808437317752897,0.3496934187070009,-0.23662177886582927,0.036182544933771175,-0.4270999745179879,0.24500858649233365,0.26323698103360815,-0.36726698705020744,-0.44922748125403744,0.015892163991718035,-0.23245052120678686,-0.45366948343883307,-0.24901581465041528,0.17451386354278461,-0.05949657708656387,0.022678753922188894,0.22611406899632439,0.3364992184237125,0.0539081855009986,-0.5162932108026426,0.10800632564652532,0.32088230233029524,0.1662840603970131,-0.08296095537280701,-0.2712961921779236,-0.05419654064590762,0.38003800707945556,0.23842058937245728,0.26253287457329505,0.18004511453459168,-0.18637868686107573,0.01592831285332884,-0.49758430460754316,0.2606491959791614,0.07450208845316844,-0.40514769707660425,-0.1195185632789065,0.011896295972224257,0.07599880425542921,0.19086625862549864,-0.3225336599585114,0.4774288025996791,-0.34150916282270505,0.1855635625358462,0.0049102028893485495,-0.13484496505558577,0.3442643764872947,0.42107982071142264,0.004360968376274897,-0.6560684435472257,-0.1334616124120431,-0.1360593784872806,-0.015124387214188758,0.3411476968779729,0.05428056312497154,-0.3775638308420615,-0.3375855680602523,0.26277726221971187,-0.13312070807925366,-0.2714103129874347,-0.08022469869256428,0.18158358527114316,-0.07085050966216867,0.09531415832328591,-0.21055010731097148,-0.3825092891310041,-0.49192029721647057,0.07183887827099122,0.21230139992300592,0.022110926141144533,-0.4062071230799816,-0.33814486340624705,0.08377203720621937,-0.03548923202847213,-0.06868776867803814,0.20680121307255028,0.06695347303564923,0.2580983438058084,0.2025139899422352,0.2555325701122396,-0.05042717146546286,0.1833424345462752,0.07543026250330828,0.15614991688769106,0.22634087089828672,0.022710162807644124,0.0278694373912471,-0.3398969959063818,0.14361174452215286,-0.4972590667109897,-0.03654105025339314,-0.13242174899880177,0.2398210593990868,0.244247050590093,-0.04922964778288481,-0.1740081192321304,0.15757647769082464,0.07499383967188865,-0.5670946076565402,-0.3938147764903515,-0.25865151176185464,-0.4992146068572887,0.2500749036585422,-0.003976930005312003,-0.03852570856065119,0.06425668570276888,-0.12446530270829942,0.22130757320849764,0.12089171314100336,0.058120813494894,-0.09669216692621065,-0.20854251816718358,0.025430083967646292,-0.09028771979022081,0.1773039689543429,0.2522454715631856,0.297860782485461,-0.042434244498129395,0.2597391399835801,0.33413290905104565,0.4094686528364202,-0.2739842533066661,0.4743398918063743,-0.7736073206814487,-0.18313586527537296,-0.21118411391963893,-0.210613657067975,0.16397527198896594,-0.09610920808993154,0.24319456795282893,0.18811836069798804,-0.2394000370738447,-0.0764546581674268,-0.1797531234696644,-0.21335100825560702,0.18429891650796143,0.10339908968317922,-0.1030184190962825,0.4194411486454843,-0.010940864377316324,0.10832979336935776,-0.2206225144263556,0.1557225775938225,-0.33753156201234646,-0.2543338357793029,0.42520849648462505,-0.1894341752612608,-0.053785301840369136,0.13104295669649643,-0.3374986721021363,-0.21718700251911216,-0.1004584457248076,-0.18447727255260615,0.22034638295565015,-0.38642240239874037,0.4063633146610326,0.012138905103932231,0.42382390030095285,-0.2408490953216674,-0.20158045076585304,-0.1681560975213043,0.02437393382887675,-0.2620964628689964,-0.4758982960971499,-0.06532940497986282,-0.5940033166218889,-0.0663090182785371,0.019221175685525567,0.13641408122287843,0.14491540051220828,0.16349427097918742,-0.00828186799162815,0.006879939110475908,0.15594240365124068,0.13235714634030124,0.18458231376306605,-0.034803838417368956,-0.19968519462874337,0.05772594214876674,0.043313489525481995,0.047881004058882244,-0.023847414306049673,0.20164356248353899,0.17873018815926253,0.15377450579189972,0.15194494131371705,-0.35790144980432553,-0.15734166646700082,0.15365401176865312,0.3267681504180114,0.09917367136801922,0.1303158690124943,0.18870488519708117,0.036658924210375504,-0.09114858118883835,-1.2601272133522683,0.00009697902675489295,-0.09504047974619696,0.05441136042281999,0.0269542629179188,0.13229010849223483,0.1876127306997314,0.3006051632158552,-0.6123836103997564,0.041012832044371214,0.5511735433101498,0.14431577597841408,0.015232612561151333,0.14693607083101426,0.25271196808437335,-0.2518882523582641,-0.16572248790816957,-0.05898943586352943,0.0786723496898019,0.18250483519769153,0.03943758513039668,0.3490655378585696,0.3111218147200249,0.3251026774651136,-0.11459604078489936,-0.029400032104852192,0.09373640809595794,0.02744904714601999,0.14371345245336606,0.0064358413942403525,0.1936556321057655,-0.005091695051523948,0.16517880794502127,0.4129168674710052,-0.06471201715738037,-0.07342870899827217,0.11303295584593946,-0.02553262233175427,0.09322506337621975,-0.038410806088753566,0.27897626005993864,0.1787465482781566,-0.10184469140044583,-0.03522582559904271,0.13940381914577907,0.08097798699063337,-0.012231200814566535,0.14881066491439576,-0.10170195260797944,0.038288536629594874,0.21684409203279786,0.06156099677440494,0.5202873625538759,0.06231826721345877,0.11453937177179184,-0.22491663689408797,-0.24827653159634863,-0.34658205580041773,-0.503343466467717,-0.3469767780456883,0.0893863751985098,-0.20821559797049735,0.23775163446486594,-0.23777424392828295,-0.09671193249680259,-0.25970130481888226,-0.15125503343899827,0.28670092102742395,0.12765561065616438,-0.02608432094185902,-0.08124153541927215,0.05415792433081719,-0.12682513331209186,0.3002792516324261,0.2634966122443937,0.24558697204310784,0.3137793201146259,0.2858936746995483,-0.2549348780438843,-0.29700138696792217,0.09741588338566964,0.12252323143121775,0.2596448222986875,-0.18412411317926142,-0.11059575997581972,-0.23831202271686158,-0.012851930422374943,-0.10144782004084388,-0.12317294241005383,-0.16712113316942476,0.14175540768715736,-0.02088108623089198,0.24453460849782752,-0.4631503767106201,-0.3042030741902137,0.28857343278851383,0.2475305607301564,-0.3401814553651891,-0.10964554784190605,0.3841542329124246,-0.3753385293845604,-0.5046867617477337,-0.19735939999043436,-0.4721093764833986,-0.28619273604850753,0.2362123964686844,-0.1812891171101663,-0.4080958851374706,-0.0362319119159981,-0.20133240970586197,-0.42245942494909017,-0.28735685111951503,-0.27023599920708163,0.08036161444585199,0.12153791014007627,-0.28300674966601075,-0.07240461238561259,-0.17512862617781721,-0.2959017981522901,-0.0774490249482479,0.18524365508641413,-0.31537010936572046,-0.04752095500873012,-0.34857279215280695,-0.013232541986206225,-0.34745203358752186,-0.03544454265995443,0.08280007947265161,0.12797311891088814,0.2954638383279457,-0.1060370261240476,0.2572882951678805,-0.49243327974926354,0.21531271008343275,-0.7800477277670864,0.3391211789567147,0.11490973064499581,0.4318582301762187,0.16585904422131842,-0.14074218639165298,0.2167857537624088,-0.16251927718352177,-0.4522092537158714,0.05243662350397297,-0.01762053238155348,-0.2655169716560626,-0.162931101415939,-0.04376743368520364,-0.32329601961628973,0.25130118269887725,-0.33095545851689373,0.13072540179661582,-0.10193116786505142,0.35823231112996856,0.03414830632642144,-0.08261265809551484,0.08870395578258382,-0.16972282081824228,-0.2525694779585114,-0.11962168161956581,0.1744467643398784,-0.3616107610345834,0.1700893782027259,-0.017155360692585418,0.7939912935180493,0.2299403311707452,0.04416208872657957,-0.3560538000969916,-0.18068683335067556,-0.35397790369409815,-0.03209162102240312,-0.15735127109028815,-0.05842598811755711,-0.26021548047195747,-0.5214995868101738,-0.10581825113686333,0.01846121759936772,0.25977546261218093,-0.1832835661947994,-0.3970292417544085,0.20876069972463238,0.3506755674901205,-0.10482855226992126,0.040840041540571574,-0.028718454791224778,-0.2143753767453897,-0.3118965992696133,-0.5488006355162482,-0.20944964351802195,0.05466463327063652,0.2855960346677188,0.32253914127670824,-0.010080599042439567,-0.4385852200159722,-0.09276886335723188,-0.18626798598589983,-0.38012158006085833,-0.06369194975917242,-0.23267727691847,-0.31304551712390166,-0.4340100508568814,-0.0987795233328523,-0.4866806143995166,-0.17987086136614014,0.20223188447964086,-0.024240634480254562,0.17027330708087807,0.19299876268818042,0.19354117338526805,-0.20027133174704756,-0.2395454940548504,0.2463973156543131,0.2568461952435513,-0.0017608389936571503,-0.36849875258630105,0.1312029708736351,-0.26693040978338395,0.3467616081433577,0.03662893433511595,0.08236512121606368,0.24600632117794416,-0.3737333113848788,-0.016379888208813132,0.09163803915866024,-0.3486753392268263,0.054290891597221544,0.18776865516782026,0.3264687107724393,-0.01432051668058191,-0.36432486791206875,-0.12179939078068487,0.41221464926607154,0.09490895835715968,-0.17587495132533965,-0.2657984888000018,0.18518863886371117,0.10964524651393137,0.012896362565074166,-0.34332820121608043,-0.3349811313220695,-0.4367712490637853,-0.21976575142900145,-0.3890865590630166,0.03149376030412559,-0.12933234956681564,0.3895132056133393,-0.6875503373919191,-0.4810350684451997,-0.4306677683995721,-0.08222590685221394,0.11384926405196734,-0.038901047136794376,-0.4144933769970777,0.0314177656216904,0.5452317613159651,0.33213843255100306,0.6165526651501293,0.23528300939417188,0.3982375393816042,-0.006166734157244884,0.17374340782957312,-0.16023446419477202,0.08501895478326083,0.31553554732331296,-0.5304313493596995,-0.10244102953581767,0.011332941274117526,-0.005081964400755555,0.3138331195303899,0.02744095440850661,0.0443927796735999,-0.2344143252002144,0.263420221552119,-0.14232168015281196,-0.4324658070705397,0.28590612348025696,-0.4275823288456849,0.011679438394764086,0.28937147735476537,0.2346180613191976,0.04665145355657744,-0.10259146840572177,0.1621762022422152,0.37366235590909713,-0.07533179318079808,0.18659482114489587,0.1083893356198614,0.07880739182623346,-0.016029388702057175,0.061954059977315006,0.11482799997033272,-0.301361227612316,-0.07787765618604928,-0.3714199888621089,0.2066199451026375,-0.14081981241128888,-0.4924075392907473,-0.3000513718973552,-0.24864148894676497]},{\"weights\":[-0.013257339807928162,0.010803761808196262,-0.01170984271804269,-0.009907873124007654,-0.012290284298556426,0.04796653904437448,-0.006131562590036558,0.3031566284979004,0.0037872041106606505,0.008702690108726525,-0.005959574867225069,-0.004794045300959115,-0.03379659939863781,0.01518281952313446,-0.011465523103697898,0.011183395303006228,-0.0005780623558428645,0.02319321316773661,0.018180146754580837,-0.0004165784470547294,-0.03271307781405952,-0.23607306625186322,-0.00403852937598395,-0.08130612849657323,-0.08873805920507775,0.002828975188110302,-0.017436522355953426,-0.006233794669072646,0.0037037086112805383,0.02820270495345559,0.003958945537102334,0.01122777986014606,0.0017337863452719727,-0.09690009028221634,-0.011916497630951161,-0.0026525330854930717,0.002906459495097586,0.004534243937751986,0.0006770887247726839,-0.02530928084109538,-0.01170109972025881,0.0029459257840253874,-0.007294745770896226,0.007384965670984331,-0.0032895585139132216,-0.01507936860563402,-0.005664547482668481,-0.008709331793841922,0.003342875874543291,0.025401843937078103,-0.022582644700728644,0.011219099399439237,0.0024938341418025882,0.013240043655980806,-0.010068132360257344,0.022111324888203904,0.0073197408538255345,-0.05227747487008035,0.015245176789016794,-0.02613001870773389,0.005271572538105901,-0.0013747343717149146,0.01840453254111665,-0.008475289495135232,0.03970420936854102,-0.028408000390173233,0.00788359912047908,-0.09191519471936678,0.006068511991402504,0.014818352615772953,0.015742189298310606,0.006884547293786785,-0.008795301991060952,0.014958741852881645,-0.019452763117482213,0.10133741922584802,0.017978787769907398,0.023361928899308382,0.00012588111134005252,-0.0028932540497604332,0.01697638353297742,-0.003245333132000531,-0.12429553892343502,-0.027111294684881968,-0.017072205078766098,-0.002882999841301081,0.0016728520761766323,-0.016186687266843382,0.01838958016186291,-0.02026828885445766,0.0031254087357467427,0.034859187801671784,-0.0030036249348192115,-0.0005929036644131008,-0.0005902653889217032,-0.05584201351654692,0.03102744635531137,-0.026016135529788844,0.002827503674824501,-0.11821186747046869,0.0978088614988691,-0.0016329492384790586,-0.004878560130866481,0.004474520827080817,0.010202162765510274,0.0008651983539967671,-0.1978433512127422,-0.017728584231047114,0.23133421251222425,-0.004948775987681187,-0.010852152065323731,-0.000443368770849202,0.004100114042611233,-0.010785230502517534,0.005602405040542495,0.01512823042986393,0.005625698237542747,0.009264230897990187,0.008549264261917423,-0.005723491947712122,0.0031889282687393265,-0.001279534265119071,0.014515209149332579,-0.0013966954234703314,0.0024459059236284914,-0.010074137928015564,0.00018346583456913538,0.001642361211043075,-0.012524118525998983,0.012441183240289477,-0.00476164157192835,0.02112938596024706,0.0004981777652862722,-0.008805249908787944,0.015804593930790485,-0.1878949317008877,-0.033482942703999145,0.008560538619196574,-0.008630575349717803,-0.0034364120857197315,-0.00936925436793506,0.00847042725216593,-0.003318476394841891,0.01828929697260283,-0.006410810319436807,-0.006342099382012361,-0.004412524337476258,0.004628430661666085,0.005361313087010473,0.003969960875501563,0.007329619751953801,-0.008157031173228914,0.0013783054289849875,0.0030971328307685454,-0.02023112251434881,-0.004885154283020438,-0.012546179767111948,-0.002793572620666064,0.062462449583134204,0.006430373488031786,-0.0139693513246768,-0.009681100831058862,0.0073448566471155784,0.009986184879473744,0.0011000671628689119,0.009886568694700492,0.0037734812952617165,0.008254973486932092,-0.14932354671171646,-0.011855239032593301,0.0026578267008653556,0.019254002544612122,0.0030889108928147738,0.00817320763963566,-0.0022122440045765387,0.005149873368670577,0.027736781464369552,0.010176210863777096,0.015185705615296516,0.002139454485147321,0.012370808542197619,0.006474948619638438,0.00043368849606514165,0.01963881241007217,-0.007831798193701188,0.011767991659122262,0.008136086717184812,-0.03060625370809051,-0.013352581008215176,0.0008232374354250198,-0.014156006095061733,0.003385342439111695,0.008265426188889844,-0.0012392807932791877,-0.004256675435196151,0.0029638797062906046,-0.016276054081668562,0.13817452037404687,-0.23385372210950656,-0.00528322602334083,0.015372787020838453,0.18238596465902715,-0.0041083425590145994,-0.00559604507783159,-0.0023299681701171096,-0.0003401846947891765,0.004272553416407788,-0.0011256968792322777,0.00912167418265315,-0.014137654205866438,0.002869090341184704,0.0007932486096009692,0.0003874345954784743,-0.0013517255922425998,-0.004083288472557001,-0.002572293595695155,0.00995220974312825,-0.0034285674172906664,0.002008698224788021,0.008281985265948156,-0.0019862317677537783,0.007292181751639181,0.0002490408666706184,-0.0015237361196452693,0.0024906163208523475,0.001830135752191145,-0.0016999242969169862,0.0006822754125374084,-0.006314744761252344,-0.0004715706404746925,0.0010014947815939952,0.004005153546391437,0.005623969592520159,0.0019258921668362443,-0.00544584328892239,0.0027566600911240365,0.0276497776993552,-0.023272571636938483,-0.00701496804209166,-0.0028904055870756125,0.0012689955505169083,-0.02184926811932309,-0.00245356982850081,-0.022019942075969825,0.0008344867643740118,-0.0021346646430120348,0.009080126030621543,0.00042741292467181997,0.006331547966031542,0.007243592628390799,0.00033985846052584533,-0.0005511378895599571,-0.014337106900832145,0.00012564856840680157,0.006973054804297393,0.004111367063174726,-0.0008972647571079729,-0.021525202775846537,-0.0011204817336102199,0.014688618302212648,-0.0007273592342083433,0.000034348646024073446,0.007049134240567125,-0.0006145871602286436,0.0024011956735886307,0.0036389857960791934,0.005609901051174761,-0.0050788648682954666,-0.00012775034474831184,-0.23557514756704123,0.0024120776802798462,-0.0016998033560343385,0.0021010157765270192,0.004184993547499938,-0.007956547536640006,-0.005532188654315795,-0.0019504075208985733,0.024713017314384394,-0.014929083128430177,0.0069662896535306095,-0.0003323674423242057,-0.0092031709183242,0.0071972498538328674,-0.0022781154248949615,0.013786594049604937,0.0018923901679139853,0.007551377519466648,-0.00038485212102014956,-0.11608420146787891,-0.003496413839636802,-0.0009852733980450945,-0.04635811337057097,-0.007967007076946335,-0.0032742183209379535,-0.002945493097530643,0.006453966322130352,-0.0039035721778500894,0.010267629301275137,0.011541688530160823,-0.009921405883032603,-0.010491808673267626,-0.000059113737005123435,0.23286750242517698,-0.007954908968459433,-0.0032552455688745624,0.0144204336984625,0.000901760240695091,0.017845500453164572,0.004916228564854335,-0.012825239319543167,0.054240209759495894,-0.0018215067482419388,-0.0011439960646904548,0.007681315048907922,0.0015288724456012312,-0.016715357786652375,0.004114755369702019,0.00493386040735047,0.010616581014820891,0.01847987287507376,0.014591645684111445,0.003227267479700747,0.01888811093810627,0.012013606056399046,-0.011659843725099624,0.01249867269024032,-0.013328249035458192,0.004204897072768872,-0.010688109599992942,-0.03422069282113703,0.012675842197929527,-0.004605061653252079,-0.0006214593897156215,0.003449390463301721,-0.00396497059117115,0.004012917207357366,-0.00621453038176937,-0.05152624805825253,0.0010853528342466177,0.009501587030173717,-0.0034974469793633747,-0.00028207822298106157,-0.0407092560061577,-0.0004572671609015462,-0.05283358311288873,-0.0010960940677281878,0.0018198785475715042,0.11613010921043453,0.008030935662046169,0.010186517450469685,0.00543279662775145,0.0012694636631419478,-0.01913442588636278,-0.033097795506749635,0.002997598311642649,-0.007580691191026908,-0.010243409709195435,-0.0023518667687047793,-0.027796978258306206,-0.0026610894879386983,-0.015219035422904903,0.012215124315306886,0.036593160627591687,0.011775736991050514,0.004539549243316273,0.007269161402539035,-0.002097566827499955,-0.0016346020767329683,0.01900357770283873,-0.001942697022573227,-0.047389209817557724,-0.0017411546203454844,-0.01698967319394209,-0.002388298936760894,-0.003020368433137485,-0.02266549489560852,-0.01988657996412454,0.00704763191570107,0.10741859519539113,-0.015280170765593213,0.003489609894427673,0.007721556227645095,-0.003338810218682896,0.002729356053429382,0.0003638266415982838,-0.03523807243625395,0.01608743277379947,0.0009458732637239877,0.008493715312590872,-0.018551624052738223,-0.23099984289182787,-0.012402243231689007,0.0004528250599036386,-0.01981548948419755,0.010141773529445057,-0.007682593343702507,-0.010820551221254204,0.002252300163795836,-0.0015181889693897967,-0.0012832817627925336,-0.0007126138653764817,0.008496559882293756,0.0036527310607166806,0.2078178200438295]}]}');\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/saves/deep-q-network-9x9.js","//From 500k games\nexport const data = JSON.parse('{\"q\":[0.3446426680040724,0.4105715586676456,0.5074261637784311,0.40273940154374127,0.33851573661314055,0.4087922056886061,0.5320800333192108,0.3990883232259066,0.3426198799036644,0.4410360712514826,0.5292968445504869,0.4327930227745761,0.27822227130657234,0.42493883113091857,0.5478268916754787,0.44283015539054993,0.33248779334180917,0.42626096135262426,0.5055818363180015,0.43233352130690433,0.3339665423712908,0.41954003260788725,0.5376923947330433,0.43044826910793416,0.22642994985207854,0.3174053412115287,0.5223570308705794,0.34271907160698845,0.3029132743874824,0.43045499277048027,0.39194051628261894,0.39749770196103024,0.3881052818201753,0.08006399718886432,0.5048196002980129,0.40972903947672823,0.3010694743931109,0.018997665041864016,0.523330515984285,0.42945202780339503,0.35595700941583874,-0.042185059934715025,0.5431711819751767,0.44327198443444293,0.31516957405233936,-0.060313322489563795,0.5383375843155773,0.4426678172962069,0.3416159717450704,-0.050425717408169625,0.5484438191433427,0.4285913209941229,0.3532758245983212,-0.06139057361013704,0.543561654611242,0.42039104858579196,0.3383763444132792,-0.06800061401098241,0.5235421294119647,0.40264892647388323,0.3512051214291047,-0.08611176932836105,0.5336460142867785,0.41777719738664115,0.24159183465692244,0.38518103280821325,0.530985383723641,0.46472360220691233,0.28455449815789063,0.38831717771779733,0.5263912746950101,0.4393858933678973,0.21012077435515505,0.39324253250078595,0.5462055686342349,0.4528462023417317,0.24318252216271818,0.39070246709653883,0.5384068444735608,0.45793726707058174,0.1924374197574379,0.389439068791577,0.5400797218726612,0.459845194302652,0.2594044157840316,0.36959560281318116,0.5490528267792147,0.4517137362067618,0.23696688315242967,0.3942772765696328,0.5174411825774783,0.44391445849725525,0.19096857402674453,0.3802121790635791,0.5478286121267417,0.4431220462839657,0.33586487395140946,-0.13205804734632975,0.5382627616200559,0.4632972301784869,0.33668297952509746,-0.13420437056104664,0.5197486125171455,0.4637688548947499,0.32566076156272583,-0.14601143465705618,0.5267902933156288,0.4605226005330664,0.34071872326649016,-0.14765586668755326,0.5328636602132681,0.4484139757879602,0.3303763471697242,-0.15962563230887147,0.4489618725569146,0.4609149733866942,0.31354683716102444,-0.20207646387209607,0.5326799829043649,0.45012235315340693,0.2974298073884834,-0.15406657117240133,0.39394680666606113,0.4572201357976928,0.1523467834711843,-0.28928345622712687,0.36577840691014046,0.4573905466278215,0.24345025792628805,0.40679376493431446,0.5431516935563035,0.4279758643670799,0.27341519296046346,0.4033026778236303,0.5172659182062455,0.4196855311342214,0.27943997502929185,0.3623737082675415,0.5432753354550214,0.3775396827940438,0.3158085726230787,0.35554265059936485,0.5325596938552019,0.38560249111291545,0.3130740164842797,0.3332475238975466,0.357644347652113,0.46192041408393286,0.2856154776501004,0.3535700797784998,0.5405100913495762,0.3508846301882176,0.3357324678057273,0.3887728279525235,0.36064159931561135,0.3652808955299186,0.17706118948122002,0.2376576540789887,0.30052654940304546,0.3120320415547223,0.3360046136912457,-0.09552039886605897,0.5366434875563807,0.42992283434655043,0.27438343889246575,-0.10504283146765583,0.5404845851679783,0.4206975197597077,0.2925900621118313,-0.1796113042616842,0.548002387606709,0.38060971303646396,0.3160729658064017,-0.14767471541007293,0.5234084255271886,0.3833305810919823,0.22915261339304252,-0.13637394175284412,0.3950320580704382,0.46434197104133434,0.3074987067904953,-0.15642924745199202,0.35718399696347686,0.45772498415158663,0.3371762231006627,-0.16658158640856346,0.5344109563481798,0.3789183546068363,0.1955323548549461,-0.28784675244542457,0.5358800459373501,0.2830686654805284,0.30890220413075137,0.3725664454123682,0.5194188256741914,0.4077958539186343,0.2544765233752633,0.35570686615556624,0.5284558359653625,0.4032282003142791,0.24049675087221878,0.2795064484399845,0.31048955647440385,0.4332685675968942,0.16967647364543337,0.3616350243999764,0.42579281665039886,0.437242545990616,0.2419879029566501,0.3588740888782868,0.5090932461321915,0.3665711168535915,0.2479099198243533,0.35519992424771496,0.4998702770807977,0.4181045371764738,0.25132634721045394,0.37289380564630326,0.5290813299184948,0.4026756273415496,0.19389463158268294,0.1909349783075561,0.49355462565577646,0.3194184452519754,0.33682528947299584,-0.15836040331372198,0.5354019708182871,0.35567930138521825,0.32172316067157725,-0.16984285617452952,0.5211787471848258,0.40722238758781915,0.24047463288703133,-0.16915894097055237,0.5264483496492285,0.3559669763627408,0.15034230543351448,-0.38172997428802713,0.5461026721467561,0.38434511905651264,0.30031555118798475,-0.2926308626870692,0.45704189580071614,0.3289312090063488,0.11627761159153323,-0.37404805798788504,0.5196234893481992,0.16842478350051618,0.13278111693553551,-0.38188722402770914,0.5225344857048816,0.2573937852931896,0.07908870866571692,-0.31601371905408376,0.5053328852334378,0.111490269645231,-0.015478514354223705,0.43969714089230827,0.5316776195059716,0.4438540815714212,-0.1719831509562783,0.43904641205658507,0.5283699295563384,0.43979427697045004,-0.13620592033757295,0.45186822620823885,0.529441321298268,0.42963515771084415,-0.6706240328152224,0.30290978706777016,0.5233883677164644,0.19924576891252704,-0.05390145776777874,0.4326875478605922,0.5325993286651991,0.4217199617347586,-0.4329916312867282,0.3236255690162136,0.5243706254468735,0.2682662925275155,-0.25230296728721596,0.29574055491723183,0.4854995047786091,0.33707377803598737,-0.0939131385760233,-0.01,0.4832652525096979,0.02022089060197336,-0.0781258262345279,-0.043280518930339934,0.5029807486441953,0.4409199273623271,0.07073404953650513,-0.1237011698849354,0.5318816540193854,0.4207139587353865,-0.06917458013816355,-0.19823219023400307,0.5328432587786314,0.35853841792559843,-0.06972540135244923,-0.4063451647722607,0.5295800981170967,0.032920190768996216,-0.39200251055220026,-0.18704769579459252,0.5197870248428442,0.3302928740687554,-0.08579638669190269,-0.3298929846878545,0.5260084494639827,0.034376490678360634,-0.19835893178636843,-0.39537575967737093,0.5490218082012347,0.10997213412789214,-0.11,-0.4828237907385763,0.5174189098439754,-0.01,-0.22160333098515456,0.3670170179598701,0.5357959812315066,0.4475165412841844,-0.21248801992150887,-0.005136069022826593,0.5344604404189962,0.3427836057654288,-0.48028433912804136,0.10206165153667687,0.5165578400559503,0.3319896016736665,-0.46868274367731555,-0.009869907750744636,0.5308729201335806,0.11567151199360637,-0.09074044838223468,0.1180500879750373,0.5118512195470817,0.28677488920516236,-0.0759753325657875,-0.02265776319445309,0.530119373590283,0.08082494778261537,-0.15058465680901284,-0.001720336489541503,0.5272305251840314,0.03443980706407399,-0.11972973090475536,-0.02488967375806455,0.5188857913376123,0,-0.2485518145413478,-0.2298106618363015,0.5267722030200531,0.36102511110942037,-0.1435792444445101,-0.5226064913334086,0.5243583436858442,-0.01,-0.12541573948854967,-0.513032300831401,0.5361526027648988,0.20969604419821708,-0.11,-0.96012375,0.534896048719077,0,-0.07816693836849918,-0.5045054486910624,0.520724909937253,-0.01,-0.11,-0.51,0.5213911500453925,0,-0.17332656946971706,-0.51,0.459335919789268,-0.01,-0.11,0,0.3870667760805303,0,-0.07372228596030975,0.402708989400496,0.5343869330912502,0.4215328815813296,-0.2553535012641327,0.20557005368669234,0.5404963180704915,0.20173091805301882,-0.04935648904023076,0.328678373396091,0.5184544406434678,0.33235123047988063,-0.14249089725146294,0.16863502016024803,0.5255552708496546,0.11401991293883545,-0.08060672673511379,0.23872111556847092,0.5183412531690265,0.3281091160912324,-0.0697199405522892,0.029328614273500163,0.5151368100961213,-0.01,-0.1202097157315812,0.08903585295456183,0.4905990991719062,0.10451501165426841,-0.07266930921021919,0.050037802587374676,0.5106663521335914,0.07200641338887981,-0.11252710151825347,-0.2666059284533619,0.5290530406345311,0.24873212870848257,-0.10137327850497564,-0.43815555944995643,0.5306054022059545,0.10577920063705681,-0.4813053826421795,-0.3367671756065909,0.5229099488897171,0.1156316075366467,-0.11,0,0.5154162683560938,-0.01,-0.9671515784369635,-0.41708280452704255,0.5460488376206376,0.1537865312023815,-0.606391304984359,-0.47048911139761396,0.4439811922423265,-0.01,-0.61,-0.48634221723514737,0.5246436166296878,0,-0.07087096856081543,-0.51,0.17768038493764582,0,-0.040176302835862175,0.24584364067604852,0.5109552786241093,0.3069618584480034,-0.22229830028162995,-0.04728493169128345,0.4936089249460464,0.07746933361201414,-0.15164778860817613,0.09292756889850316,0.517872549912503,0.11230140877090253,-0.17829586733923705,-0.01,0.5166290428982898,0.15209681090541116,-0.22494103363250362,0.018535724813479468,0.5125278185435597,-0.01,-0.13716287521418502,-0.01,0.5134538820441176,0,-0.0913241674371379,0,0.5183066603831628,0.03409047792235941,-0.61,-0.01,0.4087143160095415,0,-0.7949050229258471,-0.39679003570962607,0.5257204743690188,0.07637707134046101,-0.11,-0.51,0.5251449374747097,0,-0.11,-0.51,0.5077314474327619,-0.01,-0.11,-0.51,0.3886933301211446,0,-0.11,-0.5145121592197599,0.5199848397297147,0,-0.11,-0.51,0.4106886768958146,0,-1.01,-0.51,0.4275481447271196,-0.01,-0.11,-1.01,0.3041524687422818,0,0.260805370616866,0.4532583834351338,0.0148432223760784,0.42051479894154165,0.2991848427243196,0.45607847883292585,0.044715175056349796,0.41987675670231694,0.30276667802628887,0.4111730416221093,0.027543915903620535,0.43472341500717343,0.2939847428468864,0.4126363305131209,0.04131871401286078,0.42901007529820867,0.25722189176415433,0.4629869669266902,0.00809656308294093,0.4115178111660328,0.2500109668504545,0.4047598363850013,0.026994254002250164,0.44458011720827545,0.25097008227328693,0.41064393202849697,-0.00919056343601427,0.43085028424987565,0.2705688311847476,0.44310161144885457,-0.049604334394473364,0.4155586701752525,0.27634362918526817,-0.05032831317932385,0.03331539865646699,0.4582858229737314,0.26234754070381516,-0.05682431153544461,0.03431427453409051,0.4590432233366261,0.2433770551556844,-0.0555792547193284,0.023072662332435826,0.4619310143986137,0.2661469419498937,-0.07328213118966101,0.03747271130655139,0.46212300653073163,0.26650299300017183,-0.055777952764324824,0.028679954304857175,0.45762110471758843,0.22176175224576394,-0.12661600509954787,0.013687751051906115,0.45719589224339197,0.27296011326192643,-0.07384338659980998,-0.01509222813853875,0.46135843319137926,0.10497811928408843,-0.32167018037743345,-0.06665564489659906,0.4531278313798358,0.29757992474349143,0.39381964267098046,0.028165127392991148,0.45456689298552744,0.22700368794461254,0.329418469430049,0.002636611665275731,0.45464558419110124,0.2519671596241906,0.3315529345940172,0.02591541118128235,0.45485934341732304,0.18053903430682489,0.31513861810973004,0.03479542276513193,0.4515130334208162,0.2175191822095846,0.3278834343056563,0.010419259859357172,0.4571148611081324,0.2629228794703435,0.31446302903738055,0.009198628996865212,0.45822100764568474,0.23465635851469938,0.3182416237396868,-0.04777972234163786,0.4580074576041713,0.03570515021608261,0.1565769713094448,-0.09600025446331423,0.46218146459687504,0.27656355357427054,-0.12272693361456384,0.02066020087413775,0.4585430073009593,0.2727853325898315,-0.2047079442839734,0.026960389901978514,0.46343953156788287,0.2567980053455524,-0.20751677025882498,0.014497623113681711,0.45578704606534237,0.11763572416673476,-0.36569003834665537,-0.05114642563596586,0.4615712398922575,0.2456527460172473,-0.2274760757228319,0.0058572187861694325,0.45775200046752007,0.07118155376597689,-0.38369933511267207,-0.09437252524684112,0.45922181460067324,0.04713311268326254,-0.3985527120098195,-0.16373037618184363,0.45933737341752773,-0.04932759111368452,-0.48921059111249066,-0.3337294766260743,0.46085250959862656,0.2385514507336302,0.3349560197778532,-0.008213744030803317,0.4615171688999815,0.2885040410461823,0.3605589347031381,0.009278595141447861,0.45512865271264025,0.24046942799291213,0.31867515632775384,0.02510525146271357,0.4602564233455778,0.1896135679809437,0.30571915321823273,0.012610098823042853,0.44458312208287026,0.22494202167057858,0.3244407724001791,0.03502903271188191,0.4641034008913802,0.23496085386311213,0.3126071380385433,0.013399624855830067,0.4592635377633933,0.18530886474234765,0.3171310573479385,-0.0013567284164499194,0.46368488777719646,0.20917592849467748,0.20646028136098535,-0.1021427737179661,0.4352065784156662,0.21361739384861622,-0.146341094731581,0.03192494586716274,0.4711299087312373,0.26846472870200433,-0.19852104486714792,-0.0033452017929974827,0.4656510612974237,0.2291823268905553,-0.3167765590622901,0.015427324156324397,0.4707170839478062,0.10410274035495859,-0.39752039035668696,-0.201665244729801,0.4641007333986324,0.2091330081250754,-0.2530301153585695,-0.004850104219010755,0.46279133086371066,0.11529463557595061,-0.3783334433133595,-0.10286187130203261,0.46822686064659574,0.040405975568526806,-0.4209111100266579,-0.20845838849794385,0.45815987747509285,-0.10258051234898129,-0.511877625,-0.2567357215831725,0.4531170455520439,0.18091044335519302,0.3617766626577869,-0.0061714141677796696,0.4706223487334762,0.21504041188069742,0.28484705953047845,-0.016188099749413723,0.47338675789282897,0.22523560802452297,0.3069452430265904,-0.055684230611298624,0.47022176293945667,0.11397856210821963,0.21945887366963604,-0.15744817119719076,0.46322221443145684,0.20857735226534052,0.288283151095544,-0.028584712021470185,0.46793453400849594,0.06794713243556023,0.18479924009450802,-0.10022716655663375,0.4648955957057018,0.08829289173164506,0.22235026666126248,-0.3220349506088326,0.4682887879139282,-0.034712661912954516,0.04896824542383305,-0.3377708561948003,0.45895374810824185,0.25330217048318027,-0.2366573560118428,-0.02528626645115352,0.4686111807848251,0.13683132270602152,-0.39709903389282625,-0.08728526633343076,0.46413601857439846,0.08273338628827097,-0.36584548508444203,-0.16564864278207278,0.4666575424150088,0.028132199282427973,-0.47597386014473964,-0.34674924253821787,0.46003239980781685,0.1691619587587967,-0.44357588202839415,-0.20199971419300894,0.46293177207595204,-0.06996746599864699,-0.51270229978125,-0.41012374999999995,0.4571431314905854,0.017725443098699764,-0.5052677134816768,-0.3676178296274071,0.4578653042175769,-0.08449366879682327,-0.515098637953125,-0.3967407618625637,0.45416242172396454,-0.2151223727959179,0.4170721354159199,0.031000431966846095,0.4123508345924866,-0.06750032792097442,0.31724711951990264,-0.14967332903129493,0.4277636946090707,0.04052992238051699,0.4538595732997835,-0.1637588293602526,0.32743962029363893,-0.07327074781784249,0.43933999593423784,-0.3707260826505414,0.23518964294221878,-0.29030209192519046,0.45387421258290833,-0.15324391905903592,0.31359400699616413,-0.1810144932142405,0.44401167546330844,-0.41,0.11753984123437271,-0.17734727297025799,0.4432575079029931,-0.34806838071954727,0.17839413452698571,-0.5320486418207357,0.418517946703277,-0.41,0.0778554699330986,-0.1703161397791848,-0.14786194043259984,-0.12127367710659978,0.45551777426195006,-0.043342956911149116,-0.41577799864993803,-0.2361708695188175,0.4468108284297202,-0.0659049906245659,-0.4644595739225019,-0.22548437607657668,0.45516683206192093,-0.11,-0.51,-0.36580954146574196,0.44866511570043477,-0.07266307440623865,-0.3635037123557325,-0.32892861245310334,0.45152577285755613,-0.1231919765272679,-0.4663302589987479,-0.3627874043689953,0.4377334526543643,-0.61,-0.46583933835585545,-0.36511237433357,0.43512086550087653,-0.1171890378754304,-0.51,-0.41,0.39765359703726316,-0.009094134350043543,0.3887874353654929,-0.14125288767932606,0.3465837322638932,-0.061208240153202385,-0.05564057557935851,-0.2688670977403472,0.4489173987518937,-0.12569623964435978,0.016892954969431297,-0.2933737790833849,0.458070669037177,-0.16803373754554174,-0.04215822393613081,-0.41,0.447250849045551,-0.5685846207027707,0.08940139326170513,-0.32250112819448407,0.45533428354020594,-0.11,-0.036771906296019834,-0.41,0.4495349519871955,-0.20632525,-0.033986676868555825,-0.3793095528079663,0.45646299291866566,-0.11,-0.04384420089286363,-0.3841002585635416,0.36737467888629166,-0.11,-0.46958047148291604,-0.25191033298371224,0.4564580482369738,-0.11,-0.51,-0.37117591218316115,0.45132917865873046,-0.07352179228265389,-0.4859298676784027,-0.41,0.45381277658319885,-0.11,-0.51,-0.41,0.31693400208152317,-0.1784015920235163,-0.51,-0.41,0.43978329752675177,-0.11,-0.51,-0.41,0.2298387337657618,-0.11,-0.5000283676358167,-0.41,0.3495173262234099,-0.11,-0.51,-0.41,0.03761731853270234,-0.3964617246103608,0.33363424875294845,-0.1395639587139019,0.4347754014188424,-0.16096466554325262,0.3591691715098958,-0.26598529622904143,0.1749447795717418,-0.1267217371659468,0.02573334237456073,-0.29013940714137426,0.43687412030853623,-0.07217590084066697,-0.011367323066786741,-0.3720855111426563,0.4464802217209466,-0.7524944567973147,0.1728006064488986,-0.3249943786644588,0.4318765595456675,-0.11,0.14304018368985666,-0.38369286210795406,-0.01,-0.11,-0.008249554811714849,-0.41,0.4511022132728674,-0.61,-0.011558327431770592,-0.40170466779547076,0.41323574349762676,-0.17044047668948803,-0.45930017472038853,-0.3736127943275107,0.435189984842761,-0.8833180252332417,-0.51,-0.41,0.4357468636783227,-0.11,-0.5004698702342478,-0.36770641445361874,0.4308857085939422,-0.11,-0.51,-0.41,0.2243222476603812,-0.11,-0.48703670330307086,-0.36410149183701823,0.41919528200372685,-0.11,-0.51,-0.41,0.16724199288394057,-0.11,-0.51,-0.41,0.29977498246925727,-0.11,-0.51,-0.41,0.1466033973845615,-0.0890257178434111,0.023211806919585812,-0.3075962485823756,0.42834898367703317,-0.11,-0.04036312665706869,-0.41,0.42538803934212893,-0.07757466691159302,-0.014681243776374822,-0.284725513908438,0.43079991933980205,-0.16059625,-0.021137500000000004,-0.3766208731343614,0.2722676663750425,-0.07403705127138885,0.006549037649970129,-0.41,0.42145142203110414,-0.11,-0.01115875,-0.41,0.34316441677109755,-1.01,-0.01246058196677466,-0.3926918234762846,0.35415953034493697,-1.01,-0.03893622126285323,-0.41,0.14080370169562148,-0.11,-0.512025,-0.40290125,0.4107151497727388,-0.11,-0.51,-0.3255273462064739,0.34313909460855174,-0.11,-0.51,-0.41,0.25757572716604243,-0.61,-0.51,-0.41,0.03499058840880391,-0.9883408745753837,-0.51,-0.41,0.36832116412571575,-0.11,-0.51,-0.41,0.0718030182858065,-0.61,-0.51,-0.41,-0.01,-0.11,-1.01,-0.41,0.014831050753303933,0.2907127390696434,0.41164976116494145,0.47662255325706715,0.4138257227930248,0.3380199906884668,0.4122102056926317,0.47153261462207013,0.4143422445947408,0.33057404067677115,0.4185284662408266,0.473950530515351,0.40588839468996574,0.26919467436810024,0.44521786960114135,0.4862074796362688,0.4146209991392327,0.32870451310265997,0.37222740244198926,0.45731961435502977,0.42065958788384594,0.27640236617048586,0.3121566317571756,0.47364124998719737,0.3163312289820328,0.28142531695618184,0.3689809518201733,0.48041906476980684,0.41428186052526633,0.2774610385295186,0.32544829037635625,0.48053171091741687,0.43226601302233825,0.29644608852582705,-0.05183926997947957,0.4847432613660294,0.4220805185663472,0.29218149905723273,-0.07741127959742942,0.4887364881783358,0.4188198607362747,0.33904557072961405,-0.05826890558338894,0.4776113069235583,0.4254995842638488,0.31071566675524054,-0.10227181418277034,0.46285266249881585,0.4442031403739823,0.31869167956063216,-0.08450047913265146,0.48420148284076975,0.3694428711866454,0.34522140908203075,-0.13474017526082688,0.4793768872674222,0.39658517661712367,0.2689239884327438,-0.10627534696532545,0.42929761809015615,0.3744565839622904,0.22530720134394802,-0.24594912207569403,0.4661387391985136,0.2831337368052745,0.3379384464986741,0.3777900966754043,0.41353010648623223,0.42697465470742435,0.20106580472874586,0.25647860342445067,0.26647350689535954,0.43904359873414295,0.2230821411686634,0.2621482022073082,0.4471202434582514,0.30359203810342017,0.2339140304168405,0.2264108928860969,0.47638214974698384,0.23232820166617346,0.2335043924187736,0.2792158971977173,0.44435357910362583,0.3134506167630018,0.24345799978240726,0.2756887300977143,0.44448853923172027,0.32084437890551804,0.16282571862610407,0.18425103373810134,0.44044703841557836,0.18363527856628933,0.15711314758328748,0.253034857456821,0.46103304281907737,0.3080195215126887,0.32866086408402884,-0.14819230805051667,0.362123278928075,0.43885295799900664,0.21770243258458402,-0.2595802747429777,0.25619596011441226,0.4284361385947042,0.22705949714755802,-0.2395642373246307,0.4499330429007914,0.37070867216340453,0.23130066766761975,-0.3914124034796254,0.4513214052167056,0.344192380923212,0.30597193684257834,-0.2610929383874511,0.44631550821763577,0.3465778044604176,0.1811334190025039,-0.38301589864143776,0.41832472896169776,0.24679654846627544,0.14618282027457258,-0.37450973783975505,0.45867722062146926,0.2826501829226436,-0.27612150848355743,-0.5023875751791617,0.45914421585537196,0.03745368417348845,0.2954694896384198,0.36971956069760376,0.46464112639299726,0.3777363685417385,0.28608474298765296,0.32087944427150183,0.34875823714442944,0.3252661509720836,0.2717459249534559,0.27541730272073545,0.45568515541937726,0.2966251672802506,0.26721771610633016,0.241460055821654,0.4498183978260577,0.2705539465445476,0.19611795373602933,0.2888446491603952,0.4545293327563706,0.3419652890213483,0.22318609807413187,0.28301421710607794,0.4361512717327771,0.33176121448493,0.21959656047935303,0.27779686358145333,0.41561319685106635,0.32732929203676386,-0.02259881785213874,0.20876960661940847,0.45321848626366124,0.2532198322653626,0.26766255052144494,-0.12365437140481461,0.47321959153142384,0.3019770088234372,0.34223592306367795,-0.12827441608183215,0.46859480398495074,0.34191589420698326,0.28243973844764325,-0.25258201913174555,0.43926233309944157,0.2818459505796808,0.19771005492235091,-0.38035982536031276,0.4687037718737756,0.3226976971781075,0.24126377573766392,-0.2441980475111429,0.4730669541930264,0.2733871482966759,0.23042025657724646,-0.30688004780824824,0.4641246355666132,0.19400195863149494,0.21691924420548508,-0.39799110977535296,0.4697627061595211,0.2339698985803906,0.07566825703701863,-0.4726014131454498,0.47053519202842964,0.09964457800896367,0.33432897866994704,0.3479508189841754,0.4814221727212762,0.34125071100953913,0.22489819257255636,0.2730208563145684,0.4616842937913134,0.28903959509915256,0.20913155532717664,0.2803009006006191,0.44276978115812005,0.32122280819202187,0.1585556811893493,0.25458986234380876,0.45826851317820616,0.3021613612389284,0.26401605214575957,0.2804240734528843,0.44069052859209357,0.32629779318079716,0.16377060386375605,0.21971317099905058,0.45917203037594,0.3051452315700301,-0.05784624866577325,0.174430725650454,0.4209634614947145,0.32976978767231513,-0.23361784604767025,0.08978807277800396,0.4365046073949642,0.0585035645581628,0.2851843895878858,-0.19907194965867586,0.4724608611605254,0.38652493648785685,0.22216104744176302,-0.41226144407657955,0.4440893188242422,0.35614180926276534,0.09864406704338124,-0.3195312026652242,0.3802706503721501,0.23642517371088717,-0.029243259536972842,-0.5147896549656908,0.46427207020600414,0,0.19354743163289692,-0.44720400319389025,0.42241179095295267,0.17321032116853355,0.00025459332399922763,-0.49770488176525535,0.4469282245464247,0.03616781220549994,-0.024935964565260926,-0.5013792637479384,0.4163117774579278,0.034342018569705625,-0.03772279878506088,-0.4880924213909114,0.4476746609320041,-0.01,-0.057445613866897734,0.4335190636012355,0.48218886194438876,0.42344692764955766,-0.03866523137504595,0.2503115068365733,0.4639473270903228,0.367047276447078,-0.055124274386327055,0.32150122078608373,0.462071062565412,0.21959617399187398,-0.5383850375040904,0.03485757902368738,0.4752050435765625,0.034436149808749886,-0.13452412105118997,0.2660607990709913,0.3525121622509653,0.4281603598693142,-0.3954917632605361,0.12104270449635401,0.44015483399602906,0.1392211660208779,-0.11691407422789671,0.10383103839112498,0.4580063554270358,0.03181060825038707,-0.61,-0.01,0.4513763464116615,-0.01,-0.023125499753633087,-0.1919192781478269,0.4819670233315105,0.21912848102411206,-0.1625851081288642,-0.42651708301565794,0.46072000379253947,0.06582359799332507,-0.40308318012127986,-0.3574644903272512,0.4702468907145899,0.11680683593207362,-0.11,-0.51,0.47071536187448715,0,-0.17591287582063023,-0.3916687181255188,0.45938599641746064,-0.01,-0.11,-0.51,0.4414573992064415,-0.01,-0.10963858490764884,-0.51,0.476763023928404,0,-0.11,-0.51,0.4007576408086452,0,-0.19394064245783593,0.18495351365965818,0.4182858682670154,0.28506212925809987,-0.19590488975298687,-0.01323321115681973,0.42622776948431773,0.07087618290765953,-0.10545381291970934,-0.0015430789690825068,0.4344709280053184,0.05746221825583821,-0.07131623281705374,-0.01,0.3684482426200253,-0.01,-0.7466494401860416,0.039154440946080185,0.390150002630149,-0.01,-0.24235778603561914,-0.01,0.3928049338386399,0,-0.10863533652087735,-0.022296174966989876,0.4012425695249542,0.07652018750619935,-0.11,-0.01,0.3819334830896974,-0.01,-0.11509482153172004,-0.40018297972087025,0.4425818737398015,0,-0.61,-0.51,0.45898822504022496,-0.01,-0.16569015060886153,-0.5032808590458675,0.4546425781201542,0,-0.11,-0.51,0.3162718250802679,-0.01,-0.07005210162832454,-0.51,0.4339330349823481,-0.01,-0.11,-0.51,0.3628839025080601,-0.01,-0.11,-0.5130208092342485,0.2219211550759345,0,-0.11,-0.51,0.19307850944951604,0,-0.34564218722701273,0.3063966314941984,0.4676100088755548,0.21389554652532172,-0.1238175177835135,0.05571899187629249,0.47255792334925595,0.03011786077663514,-0.07279146206238533,0.04347709924614747,0.43605381628063744,0.10128119798288025,-0.61,0.037172469909063505,0.3528237959427597,-0.01,-0.09298092156420754,0.12015887430508819,0.42272696934631643,0.1414027155871419,-0.11,-0.01,0.40114591459467414,-0.01,-0.11951364204090911,-0.01,0.42674899333529737,-0.01,-0.61,-0.01,0.30129753331229864,0,-0.45659050056043243,-0.45278599294078253,0.47336792316711623,0.07409353725501572,-0.40167128421177845,-0.4964370051181916,0.4283281461404561,0.030457282399698707,-0.6172060186995344,-0.51,0.3805781988789156,0,-0.61,-0.51,0.28520972764634595,0,-0.4061851174572765,-0.51,0.4083668513154993,0,-1.01,-0.51,0.420056429043267,-0.01,-0.11,-0.510135,0.3082150237881114,0,-1.01,-0.51,0.1987222112616482,0,-0.6104321412423991,0.05333700613169129,0.4430695186571889,0.03581323074298709,-0.08647490630694385,-0.01,0.4259904696411921,-0.01,-0.11,-0.01,0.44254049865260053,-0.01,-0.11,-0.01,0.3868076960539019,0,-0.04792592432308063,-0.01,0.39678897728371804,0,-0.5188344362596884,-0.021137500000000004,0.43590133355287164,0,-0.15509955267733502,-0.011265711194115173,0.36142376158207296,0,-0.11,-0.01,0.20476164384689272,0,-0.11,-0.4946545895978497,0.461638833156935,-0.01,-0.12261164445705307,-0.5211375,0.36147313758223093,0,-0.11,-0.51,0.3078479803397224,-0.01,-0.11,-0.51,0.09,0,-0.11,-0.51,0.31907621968382843,0,-0.11,-0.51,0.11948562340775962,0,-0.11,-0.51,0.1286599376799979,0,-0.5799654807092975,-1.01,0.13448333977188806,0,0.303105144120298,0.3726407906181432,-0.05796185712197478,0.4307231668299424,0.2729845009410016,0.43205277004981535,-0.03093677296579946,0.41205656086954534,0.3152982123587421,0.44975143077245816,-0.08130433049437129,0.42367498240683016,0.2502663234616078,0.4432510122962414,-0.0656244587986871,0.4043218639226076,0.29910069928228833,0.3313465513920938,-0.03151198547337753,0.4290496398560078,0.24565964842665616,0.3473035440466944,-0.04293787654435008,0.43669346249380264,0.17618033803421362,0.2811965756920576,-0.08719121295971406,0.42382481775875125,0.08241366964221512,0.191274756805269,-0.2766172506182286,0.37255886333329424,0.24343793725136356,-0.08195600512950396,-0.03176966779396013,0.4331577065014141,0.19034486633964806,-0.1065933201756897,-0.06806545471414331,0.4451288003977055,0.2645260894161841,-0.10684281624017244,-0.08998336192563411,0.43736319658645073,0.23135131932456354,-0.28812180582015334,-0.14191471311770223,0.44761642637483834,0.23610499806391314,-0.2088941769738297,-0.09478363054224992,0.4391840597669993,0.06868495025261037,-0.3736379322806731,-0.20063580525809213,0.4445098116392125,0.08775010564401287,-0.44823608829340533,-0.2386060397239522,0.4439993625854337,0.020619483376843554,-0.48110057278304275,-0.3391949474098607,0.44010740624743205,0.2849341545506819,0.37363761147401986,-0.07084246040769847,0.38798633432459007,0.20838681830465558,0.26160436911932305,-0.15603611341074924,0.31301995532554355,0.22652776596640478,0.2922154724118493,-0.09844823848930633,0.3670479667470975,0.02128803045073642,0.14052575337144801,-0.21098183083964817,0.4255492400675134,0.18652305096430183,0.27745518564185623,-0.142456441079524,0.34563404059528147,-0.035170506285511924,0.20440284282500784,-0.2997113745795045,0.3002654101715375,-0.0022768343026241047,0.16620151810778067,-0.236968932965256,0.43082245611296943,-0.06146530163668214,0.02525929776425301,-0.34329558754827294,0.4170368223916065,0.2715258268121038,-0.1729052483224522,-0.15553836343922453,0.4402955222961189,0.16045863703195423,-0.42910918929486486,-0.20107629843618177,0.4340091506078063,0.06910163709955781,-0.3857809013873581,-0.21533299582559393,0.4436715490503537,0.03685565132764071,-0.5088135653940871,-0.3095045222474128,0.4533052732449084,0.09325137577916853,-0.46950685854058466,-0.2587758161033985,0.439794941238027,0.02705357935512503,-0.4950397551335854,-0.3754315068809196,0.4493261637043203,-0.16898618506383223,-0.5102605443961566,-0.3913670738931148,0.44593034323955405,-0.09072885927345517,-0.51,-0.41,0.43113127495714665,0.3009122465948725,0.34925415428865697,-0.132370325556936,0.4495938766204517,0.2984689379051228,0.3174421867160361,-0.16516893097081695,0.42499983439372324,0.20890519527283216,0.26520680218225273,-0.11335802286901477,0.4461969999957347,-0.0018729402894530622,0.1415367621333427,-0.1797998255950175,0.4248217931248623,0.2342957993882589,0.24251069160142222,-0.11439254217888806,0.4453076620173783,0.16363987363772287,0.18279356266985736,-0.18891560297274507,0.4357312742170881,0.10753151649191912,0.13802608354563645,-0.274287195682008,0.44702075101621164,0.0035100997845523806,0.10838281639385715,-0.36658149214445224,0.4429152962773348,0.24878033545330822,-0.2512865401322071,-0.18039851076409735,0.44104734180989746,0.10442329144411326,-0.42645406254448026,-0.24872850452070358,0.4392743412568104,0.023387464637269033,-0.35682930067304797,-0.24654323929356523,0.4067329468229298,-0.01700307287605958,-0.5062303168956748,-0.33829347367388696,0.42803204659867283,-0.1828754637745948,-0.43514956230857443,-0.24971572982171003,0.43954647865529234,-0.001702786512074242,-0.48634542497505157,-0.37020511244036886,0.37811406304469586,-0.0815631949550788,-0.49732502568981,-0.37968044406913476,0.41784002800346587,-0.11,-0.5029125,-0.41203752968749996,0.43991221667825436,0.22502122173880074,0.297299322387223,-0.1430944816028721,0.4385945721953803,0.13719053922342664,0.21884141835084056,-0.1921162505538676,0.4408291172576005,0.03314419895365183,0.2168141795204493,-0.29153573665889765,0.43253603354286,-0.019199921664908297,0.012609915728259551,-0.36302096903095477,0.4478314468354085,0.11333136456044339,0.15926460687787036,-0.1891318232231835,0.44699175655675966,0.01971076301464509,0.088217786555439,-0.31972144926927043,0.43888554664716045,-0.07094335864134244,0.0155019515939641,-0.39154809514319605,0.4428710597030176,-0.11,-0.01181770379938761,-0.41,0.43137934903145037,0.10346600375500382,-0.506698560812093,-0.21585772997288166,0.44144974259802605,0.0052226559856742225,-0.5005845791255858,-0.349567112099684,0.4430458664603048,0.024108688387726954,-0.506724149348088,-0.3735884191590831,0.4431328731303739,-0.12425286429092718,-0.51,-0.41,0.4342694505107114,-0.002090143206423506,-0.51,-0.37440369560489606,0.441819576281904,-0.11,-0.51068625,-0.41,0.4341315195698112,-0.019273317860147687,-0.511569930046875,-0.41,0.42018393437049933,-0.09738941918037432,-0.51,-0.41,0.38764310204355024,-0.19783914161359822,0.40250556163449325,-0.15421832622732348,0.22315298835119016,-0.07217628676944127,0.42825619366466366,-0.3726053751525388,0.07841824666949528,-0.17025122617546024,0.4382761416316182,-0.27399982024948766,0.1371985414424995,-0.5355255728092654,0.41601606266860247,-0.3727819276354343,-0.01,-0.1774168828693503,0.29491999784295214,-0.33760194768880547,0.03225378215258492,-0.11,0.3753778759663413,-0.41,-0.01,-0.07001178651119605,0.30687828548340923,-0.41,-0.01,-0.11,0.17717346366086656,-0.41,-0.01,-0.11,-0.36057853305616616,-0.32055830508982974,0.43687384666544926,-0.11,-0.4485599415741403,-0.41,0.4300130626369668,-0.61217125,-0.51,-0.33427939791905714,0.4190419987351628,-0.11,-0.51,-0.41,0.32658102367195957,-0.11,-0.51,-0.41,0.42712983983926645,-0.11,-0.4922315088108618,-0.41,0.2986998532699834,-1.01,-0.51,-0.41,0.24879175900307432,-0.11,-0.51,-0.41,0.07258630174803704,-0.08980829053686054,0.058047673387712335,-0.34813703391359396,0.42080923482706456,-0.07242640453388245,-0.04735,-0.3713248525492179,0.3804041322675435,-0.5507495908558045,-0.002469699094568352,-0.37208265475270386,0.40659275991816135,-0.11,-0.027205983685562644,-0.41,0.37604264066702325,-0.16731661345837104,0.019196045701340873,-0.40670473449003175,0.3788923740972433,-0.11754346943301576,-0.021137500000000004,-0.41,0.37160598817886,-0.11,-0.013178842357207572,-0.41,0.3849541245321687,-0.11,-0.01,-0.41,0,-1.01,-0.48886452036730427,-0.41,0.4140780388284998,-0.11,-0.51,-0.41,0.29198508423120645,-1.01,-0.51,-0.41,0.29094540625710086,-0.11,-0.51,-0.41,0,-0.61,-0.51,0,0.3670794317385417,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-0.11,-0.51,0,0,-0.09239808319443549,0.35703488355693536,-0.41,0.10556767841575712,-0.17666162401826527,0.3173440514154183,-0.41,0.0338263571184073,-0.11,-0.010752736776959941,-0.4111475,0.4107195314237101,-0.18370428806906008,-0.014425611974606095,-0.41,0.2976612508204146,-0.11,0.17186140178287473,-0.3718751287163643,0.03321089920581468,-0.11,-0.014985260206972837,-0.3780800024847925,0.32449381976506475,-0.11,0.029286185676636912,-0.412475,0.07367535593727664,-0.11,-0.019417118495613714,-0.41,0.14515767828979192,-0.07215153297594364,-0.4715539290041621,-0.41,0.3835156420339089,-0.61,-0.51,-0.41,0.2706816561458965,-0.1788821062900089,-0.5151446841391405,-0.41,0.2761084862888759,-0.11,-0.51,-0.41,0.10437171513289772,-0.11,-0.4868403219418901,-0.41,0.28550872996716065,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,-0.11,0,0,0,-0.13881607004626192,0.021115517492352714,-0.41346407053458467,0.42359929981629957,-0.11,-0.04740895515707109,-0.41,0.253995094425909,-0.11,-0.014998377973321082,-0.41,0.34656099594985046,-0.11,-0.021137500000000004,-0.4033459974230541,0.1654415666419454,-0.11,-0.012025000000000001,-0.41012374999999995,0.20694060218984098,-0.11,-0.01012375,-0.41,-0.01,-0.61,-0.012587500000000001,-0.41,0.02453656686287859,-1.01,-0.01,0,0,-1.01,-0.51,-0.41,0.21375177299181447,-0.11,-0.51,-0.41,0.1854835011357698,-0.11,0,0,0,-0.11,0,0,0,-1.01,-0.51,0,0,-1.01113625,-0.51,-0.41,0,-0.11,0,0,0,-0.61,-0.51,-0.41,0,0.3520110132209675,0.4138193334543657,0.4993820118657691,0.018271427143457846,0.3780508493542345,0.3975706967203924,0.44959618831817716,0.08714865051042123,0.3142679301496438,0.39808996567469457,0.5305191624478002,-0.05152783188534339,0.3369493969481671,0.43916746474884366,0.5359814297621075,-0.048503174242299156,0.32840304865621783,0.3867842872002187,0.5378136620844008,-0.052088691746579846,0.3498928505007043,0.3835920655058218,0.547073457103243,-0.056821830982213564,0.2599975546037044,0.3931429868202448,0.5337192673041409,-0.05404260591832086,0.2971404047842107,0.4416603969889925,0.42197147664134455,-0.0563991007563156,0.3446039894239899,-0.01790370944278292,0.5167843012264804,0.07662725452267766,0.36660907830793876,0.008693317959463459,0.5282795479389977,-0.017222035749790827,0.3647425122529243,-0.06144470476247829,0.5384211224456098,-0.05264353079811374,0.3454041433507827,-0.07687230292592455,0.5358745485888335,-0.051328705158406054,0.3403021191942753,-0.06392951251246505,0.521571402126393,-0.055567512911790955,0.2936461780127696,-0.09494358124578511,0.5432808169122556,-0.05291894070408961,0.3447829644979279,-0.08767688227058021,0.5127503960220252,-0.04834719743040336,0.19935898626169013,-0.24045378069817677,0.5381277518223039,-0.14131650040755142,0.3307401906526851,0.3791345430437008,0.5249894606494383,-0.049109414388189526,0.2870275752888641,0.37881688787648,0.5327220699890955,-0.046401122666537696,0.21488270539286766,0.38599438638825184,0.5301979883115356,-0.046975003464570314,0.24360029792361979,0.3717954327012961,0.5287292924566472,-0.04792092785859143,0.2600943413445567,0.36041622133226453,0.5337213175782819,-0.0495618650626275,0.3235294559724683,0.37329544790681557,0.5337503253873113,-0.044119069220788704,0.2579387708082952,0.3545077729313914,0.5429147958778219,-0.04941543329795637,0.20912591895872443,0.2855869545410399,0.5414691172342627,-0.10131392592050549,0.33193658638996365,-0.12450180056313646,0.5188055035552744,-0.06247420964275938,0.28027836869009004,-0.14954398756551585,0.5165074427724693,-0.061115641176985654,0.3065410614409434,-0.18088402254653385,0.5242618143141965,-0.058268236979840834,0.2009395584090084,-0.32121402222588813,0.5290544175334556,-0.13584496516874536,0.29520842634495426,-0.2530351287146043,0.5298201990549412,-0.06522258052856703,0.18091592461011077,-0.3351684651333038,0.5388385182368289,-0.1662748804447279,0.1750691194567059,-0.40391111680916214,0.5402715897016254,-0.20024060205111838,0.003014655500870128,-0.48086153382860813,0.5166601478157282,-0.3523794642366862,0.2980607245729625,0.41252218674472513,0.5434720817244169,-0.07747530043273884,0.33481813909434593,0.38537398006771434,0.5312291560267539,-0.07630858644419057,0.31457890783924614,0.3331522521904873,0.5297802950149171,-0.057070936339068776,0.2979676880642025,0.35961373968024035,0.5428200317448411,-0.07708181550504137,0.3154878369634606,0.33162168231871497,0.520098050142526,-0.061275131028396074,0.34530661161411197,0.367542457236738,0.5337799166176908,-0.07007199465129156,0.29340774994076957,0.3236066684517161,0.5385220093614186,-0.06306603342497182,0.19870952798150715,0.16437343486396921,0.5239834601438108,-0.260993196141082,0.31503291902256053,-0.10530007218869993,0.5309447089658018,-0.058305514865433755,0.3186993671335827,-0.11993498101132676,0.5358347976861823,-0.061928447393091175,0.3450411080895464,-0.16945432562457308,0.5195585095957942,-0.06536585424225867,0.281498336360342,-0.3275013744475989,0.4925803795184736,-0.14044447062511345,0.3009620609170664,-0.13886898629013836,0.5018377501998776,-0.06242298279197647,0.25695441215521964,-0.2846459093363092,0.5400924004317015,-0.15574352275472853,0.2621309356589129,-0.33789584204095874,0.546005593627201,-0.14869625484595878,-0.06261624162023129,-0.50391375,0.5278383599459742,-0.462631555462098,0.26895675863262625,0.2648033595460769,0.4631415950693502,-0.0745280512234713,0.33705544988210384,0.338978223383892,0.5283623008632589,-0.08089210317703453,0.2535603153493542,0.3255420339635035,0.52143182435862,-0.07227365774457695,0.18204431364270515,0.25250742516547336,0.5242933098577994,-0.142671147819185,0.3510171512611885,0.3651728314933174,0.5361007175201611,-0.06931076682445686,0.2935097398957397,0.31805456057098513,0.5259122898591863,-0.11015634329818247,0.1745085024951501,0.28303492268724145,0.5398575585701744,-0.10217541355197336,-0.39349858437450047,0.055871004716472036,0.5160535913020885,-0.3934478022908036,0.3095445174034664,-0.18699612802737392,0.5102584104263901,-0.09757627237838282,0.14375101179014427,-0.2842592312264199,0.5153348381747752,-0.18461472341596308,0.19456930626796196,-0.375410430381739,0.5245734680636901,-0.19862286109684377,-0.0024444743536191707,-0.48915514437341245,0.5325280551869117,0,0.20612200934769237,-0.38681912062369406,0.5120374939275385,-0.25296276954149244,0.06598765880646348,-0.5013061136998729,0.5144273529691775,-0.46799034402846246,0.009726209957508447,-0.4698479738797676,0.5198922401993709,-0.4677332994974535,-0.28857595445439027,-0.48461380586495945,0.507162356613277,-0.4919808008150297,-0.014644653302460599,0.43023752648109637,0.49357102386922524,-0.04651889030316072,-0.32062918926533435,0.11023063302882453,0.525609973854935,-0.16105846075537622,-0.03474375654398242,0.2431040686525887,0.5211264658176582,-0.2520160754960968,-0.07338709321094655,0.13894802942365012,0.5238767334302297,-0.4275442441383157,-0.04828118859812056,0.27524118218739474,0.5007177017533286,-0.2563181887904654,-0.6525295874082688,0.0364233157729252,0.5380169408914041,-0.29811249373215176,-0.1094767188845758,0.13320582511307036,0.5267479352643264,-0.4240847929026355,-1.01,0.03454513117025668,0.5268923621320117,0,-0.20883566755058644,-0.10875219878180274,0.515592381291042,-0.09293905217153502,-0.053560987501674324,-0.36534742981281587,0.5056500467754177,-0.2126674744702012,-0.2606791408332994,-0.3917987336704385,0.5050135227952739,-0.51,-0.11,-0.46913532507834116,0.5284123777562579,-0.46445925933532306,-0.6884986889625289,-0.4087784460253163,0.46576045407835603,-0.36187829326308957,-0.8453724570788844,-0.51012375,0.5086547429218737,-0.51,-0.11,-0.51,0.5200171368720784,0,-0.61,-0.51,0.4045017427195885,0,-0.12371668334424815,0.27026778341456226,0.5367826470484218,-0.23535412437693637,-0.1001046125824097,-0.003129770282743955,0.5361968482576726,-0.32303683299869923,-0.102419816932552,-0.0012055558446704639,0.5396778688839418,-0.51,-0.11,-0.008960902604843474,0.5316943722795536,-0.51,-0.19584930539768627,-0.01,0.5369246289417089,-0.38651224455505984,-0.11,-0.021670108278572728,0.5453689427050051,-0.51,-1.01,-0.01800216667174638,0.5238828259549454,-0.51,-0.61,-0.022496190645592662,0.451448955809584,0,-0.5201258403360577,-0.51065494265625,0.5184416969543378,-0.2985195223752167,-0.12928462097057378,-0.51,0.5329452665374811,-0.51,-1.01,-0.5108567002735205,0.5301425939919465,-0.51,-0.61,-0.5269058332245617,0.48439426209155856,-0.51,-0.11,-0.51,0.5424402351488569,0,-0.11,-0.51,0.477262412680024,-0.51,-0.11,-0.51,0.421209792857605,0,-0.11,-0.51,0.24439220551802143,-0.48046049429727394,-0.03938652700614887,0.22384394375242317,0.5259009305760907,-0.32994638205011234,-0.07160431282146053,0.009499434538349389,0.526696886459659,-0.34019426952170373,-0.6963143314637594,0.10863129078087778,0.4758778336020021,-0.29218391211567585,-0.07608593762462684,0.060393325555732874,0.49392959868012015,0,-0.1905932149978429,0.09524728497941945,0.5380772576295823,-0.42816054489170025,-0.1630031322151724,-0.01,0.45473683367957024,-0.4693454060148834,-1.01,0.09044067113759122,0.5216398644425247,-0.51,-0.11,-0.01,0.40435161107064854,-0.46565604784726894,-0.13243714260383285,-0.44262073343800973,0.5190760150034676,-0.4660525211779834,-0.09120976955374639,-0.51,0.5269185717665408,-0.51,-0.11,-0.4829506801595808,0.5126504969457296,0,-0.11,-0.51,0.2971236750048241,0,-0.11,-0.51,0.5204691805634466,-0.42590571714113273,-0.11,-0.51,0.42951592094332497,0,-1.01,-0.51,0.3183213529327372,0,-0.11,-0.51,0.24684409760132664,0,-0.11001381016653956,0.027688368183315472,0.5144005473919634,-0.51,-0.11,-0.01,0.4993344252575303,-0.46632183384623405,-0.09103342732475103,-0.01,0.47798687364005643,-0.4663041293218326,-0.11,-0.01,0.46306942331287587,0,-0.11,-0.012475,0.47681181584804627,0,-0.11,-0.01,0.4256165321553753,0,-0.11,-0.01,0.47686698802101496,-0.51,-0.11,-0.01,0.29590134172678534,0,-0.16081857281668954,-0.5106975,0.5284584930223019,-0.4646268053181589,-0.11,-0.51,0.44086570301443073,-0.51,-0.11,-0.51,0.40977009375653634,0,-0.11,0,0,-0.51,-0.11,-0.51,0.2845913238047584,0,-0.11,-0.51,0.17887874428990566,0,-0.11,-0.51,0.1781755015864668,0,-0.11,-1.01,0.26101204863078653,0,0.19419128808070027,0.4621367047755516,0.037123930590095076,-0.05666910360202077,0.27954090973872764,0.430741602128842,0.045051661773941834,-0.050115154108493584,0.1588311306534169,0.4536150092283817,0.0382113522156519,-0.054752184891312713,0.14143745510855738,0.45291195855149863,-0.00728312758546373,-0.13258621712025592,0.18519412667872903,0.43005308601246056,-0.010067297369168934,-0.05621173175064162,0.1474685672641428,0.45139605944130046,-0.06124804307314036,-0.0972071192149025,0.1713162876546879,0.4419824380476606,-0.031903595029396326,-0.12704379010493755,0.040306077396193594,0.4275752711992692,-0.2095875549200104,-0.2702876123347442,-0.09892127357705868,-0.08259315263457512,0.0415827913053686,-0.07140291792524608,-0.1699872885406921,-0.14905296789223169,0.043474900558989955,-0.15957954375560926,-0.23708378281001286,-0.3856238037195288,0.03368802328395729,-0.21066035822368043,-0.22895735599821668,-0.32605344280326437,0.03724644654960471,-0.2559457491946291,-0.2743066298054138,-0.2643571677738425,0.03776320345866516,-0.2933205039379792,-0.2743990156729245,-0.3940670476032838,0.010659695412670603,-0.4092609034911448,-0.4025836222091585,-0.4571116199037519,-0.029482431109285338,-0.448307740945574,-0.3746270123522108,-0.4864326341542002,-0.012776515135822477,-0.4252763756528079,0.15961855432526728,0.3924808414156892,0.022646915639487047,-0.060547884507587475,-0.17291444842161371,-0.058298526554241024,0.022035105913642602,-0.0732531428824616,-0.04537116475734199,0.013235726380058937,0.0276042379975455,-0.07375559878095274,-0.1828981394113367,-0.1073192630475086,0.03456049010094311,-0.17974572467453614,0.017489337431826485,0.11467860750109128,0.02097778196224323,-0.05281434258043871,-0.15402992247065367,-0.13710198459686007,0.010886427174095686,-0.17371584985692942,-0.1655473806247323,-0.08117637934988937,-0.09576779798843542,-0.07777252972210065,-0.36784806414186866,-0.1467062665502421,-0.15886110235623319,-0.057282958382687446,-0.4527184159745175,-0.37943821738223427,0.03209206897128836,-0.3561934946580275,-0.3772392423577813,-0.5295611425510306,0.03323116926942432,-0.4261844246965921,-0.4158141492371757,-0.5233645853911434,0.013584074864574965,-0.42004123262934856,-0.3641987704637108,-0.51172125,0.005084895979870661,-0.42515740243235234,-0.37263348204847613,-0.51059625,0.007626999004683127,-0.3581555807732795,-0.350363919298094,-0.51265275,0.02221271358326988,-0.46616419208922016,-0.41378174874035095,-0.49700951581800185,-0.04473169255185676,-0.4647130865293688,-0.36992072420507605,-0.51347069312773,-0.41,-0.3245636882539741,0.15870800003568397,0.34600324470845867,0.009525942858832393,-0.058357351892000364,0.21240110950776117,0.3617192424404435,0.013861341904857646,-0.06146853329482116,-0.12357426415746303,0.13726576472677815,-0.01050238095113567,-0.05353162726383121,-0.015566970548491273,0.05805775779675381,-0.09574039239928658,-0.11428663990846928,0.04329338702195809,0.08397670635202567,0.026602301313042195,-0.06295031853149911,0.044044431983340314,0.06076677174948379,0.002528636137770047,-0.08586741568328696,-0.114146963313049,-0.021441206892152436,-0.009524528732508527,-0.06091271171845303,-0.1540950579243664,-0.027453906445243925,-0.11990817998919434,-0.2653273673929737,-0.23922570761602316,-0.3485415271590011,0.02597940264850954,-0.32746172812054275,-0.31934552783318426,-0.4498869590900874,0.03468921338221956,-0.4531193117050258,-0.34191757280526774,-0.47473498885089976,0.005459092611033026,-0.4229310597437799,-0.404927879861799,-0.51,-0.02006506213241677,-0.3785032628313611,-0.4075171971774922,-0.4687804698452135,0.01604715253724294,-0.45776087679679095,-0.45549807776454754,-0.49005612274760424,-0.015241337395619288,-0.46342818353379384,-0.3193606527518774,-0.5088193136693117,-0.11755186408704957,-0.4708057307276903,-0.3908902153836183,-0.51,-0.3018411094514441,-0.4671500951134876,-0.0801902698037639,0.3384781444481443,-0.019069283902839202,-0.1620540211423264,-0.2264942161454504,-0.13745644123946474,0.008105089901639705,-0.2357071706527267,-0.10857262614205382,-0.1043320750284552,-0.1216812504512486,-0.05973286894456345,-0.17637520667157291,-0.14912572768627286,-0.018976969250190465,-0.3086858048249782,-0.05513982054386225,0.1422500754108884,-0.11640283645447666,-0.13014621619741137,-0.17938446241816353,-0.13905776560783895,-0.07874512057831198,-0.19961732125488124,-0.16391553678679707,-0.016613297265720993,-0.36072004561529314,-0.18377582558031194,-0.15473431769864915,-0.14407362759318434,-0.2672867825816756,-0.3473893314739247,-0.41601275551048855,-0.49475455799921003,0.015195510306066674,-0.493542804029373,-0.3849836897964126,-0.51,-0.05405608967365569,-0.5023512796875,-0.39872139271423324,-0.51,-0.02656963905193009,-0.4294951903793552,-0.3987615154062484,-0.51,-0.08369021004807987,-0.51,-0.4206033731735968,-0.5085412322394847,-0.011001564891135967,-0.51,-0.41914940187913496,-0.51,-0.1073707274323033,-0.51,-0.4111178098191396,-0.51,-0.2873294644456955,-0.49154283642002566,-0.19501319683941046,-0.5479077283902573,-0.39639392600492995,-0.4880530825838974,-0.25470628230423786,0.4456722095225178,-0.11790986673647752,-0.22852320213897676,-0.9045943086422787,0.44251459396720483,-0.29462384308740297,-0.46350739160142623,-0.055206653383353926,0.4444444317271216,-0.26387980975725817,-0.4650326279545457,-0.11,0.43089786016846005,-0.41,-0.4656210026669445,-0.1622412230798678,0.4487371537001076,-0.2970945323490891,-0.42525586723025255,-0.16946872293719628,0.4251329994599595,-0.41,-0.51,-1.01,0.40481968764354986,-0.41,-0.47401694127274674,-0.61,0.03498602637035857,-0.41,-0.51,-0.5562870608785355,-0.46575714876141794,0.039625500287931964,-0.51,-1.01,-0.43878833487262886,0.02508212847388651,-0.4645805429044739,-0.4109175087910197,-0.51,0.00591838653682481,-0.47663731691710604,-0.41359772705972336,-0.51,-0.04977501912628994,-0.51,-0.61,-0.51,0.01476288215681419,-0.46543851837432054,-0.42978186648138034,-0.51,-0.29534792269894855,-0.43431556994281395,-0.41733814217927157,-0.51,-0.1910180330854887,-0.51,-1.01,-0.51,0,0,-0.18720823343554438,0.38186309090159715,-0.29246424042099484,-0.44531947899455876,-0.16145407444734944,-0.017762710975740812,-0.296983958639487,-0.51,-0.1387434465350125,0.07038685084226085,-0.41,-0.4869959404494987,-0.1125373382113467,-0.08545169258655815,-0.41,-0.51,-0.11,0.16376055840470288,-0.41,-0.51,-0.1795255686868522,-0.14121351042584152,-0.41,-0.4650680537394186,-0.11,-0.0278791210447241,-0.3993607104846246,-0.46655893644846014,-0.11,-0.06557309341187707,-0.41,-0.481776469765956,-0.5512254547356346,-0.51,0.01874048040947252,-0.5117265989618606,-1.01,-0.51,-0.020155348422591826,-0.51,-0.61,-0.5120515544377547,-0.02131635892017913,-0.51,-0.5065058438394796,-0.5759168943398578,-0.14149063725309655,-0.51,-0.5065058438394796,-0.51,-0.13627411799637643,-0.51,-0.5065058438394796,-0.51,-0.2812078200916307,-0.49992188400152426,-0.5006990850412154,-0.51,-0.3648627679026511,-0.51,-1.01,-0.51,0,0,-0.61,0.34263548450087056,-0.3215309822604117,-0.41653909988448246,-0.11,0.3243131690471583,-0.41,-0.470251773011178,-0.10506853351386455,0.09814732653756825,-0.3732011470068612,-0.51,-0.11,-0.0069848023621775146,-0.41,-0.51,-0.995120833328103,0.16155563058769914,-0.3759866337864219,-0.51,-0.61,0.07325132489619049,-0.41,-0.51,-0.11,0.052138209959489895,-0.41,-0.51,-0.11,0.009394794385271073,-0.41,-0.51,-0.45307649820011353,-0.45009420665372407,-0.040619197595648956,-0.51,-0.61,-0.51,-0.10799615530297627,-0.51,-0.6000365572178182,-0.51,-0.12462641283663144,-0.51,-1.01,-0.51,-0.29902740636231817,-0.51,-0.5815714563707409,-0.51,-0.23449262027729012,-0.4760690088781691,-0.1788492322643831,-0.51,-0.41,-0.51,-0.61,-0.51,-0.41,-0.51,-1.01,-0.51,0,0,-0.11,0.324610159278085,-0.3902821720964284,-0.5106975,-0.12697680149639667,-0.16636285454243344,-0.41,-0.51,-0.11,-0.03667302022197563,-0.41,-0.51,-0.11,-0.11274959136357092,-0.41,-0.51,-0.9549451539771765,0.07868754899063979,-0.4041284757464405,-0.48000178835237745,-0.16172124999999998,-0.1123991190240746,-0.41,-0.51,-0.11,-0.0703502404672953,-0.38025050443101305,-0.51,-1.01,-0.01,-0.41,-0.51,-1.01,-0.51,-0.19796737389326208,-0.51,-0.4969221597445341,-0.51,-0.24791662649173862,-0.51,-0.5035323842515962,-0.51,-0.3087681153917547,-0.51,-0.11,0,0,0,-1.01,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.14074257036183394,-1.01,-0.41,-0.51,0.346465236830005,0.45022084438126814,0.48314701785177844,-0.06278143240428846,0.3180610231256199,0.4339317015990353,0.4813562350282051,-0.06279565236137079,0.30609717259231073,0.40626868989394693,0.477539449429119,-0.0604036819405094,0.351957223245542,0.44825378036769425,0.47322633149607246,-0.06712589400887048,0.24682904960904295,0.34379107317027563,0.4798451309606055,-0.056846445046560654,0.30468682745177295,0.43735900408599915,0.3698283548088858,-0.07122721505309278,0.22034472997828516,0.27335461665219757,0.4803630223930836,-0.05729926197722681,0.1762130452455199,0.28301873781556464,0.4665417792520007,-0.1784941084067928,0.27002025414980263,-0.06222051935038561,0.4858982863195303,-0.06491169851698905,0.34077470184738967,-0.07092860794759466,0.4807748486344608,-0.06531002949923667,0.3218501877209984,-0.06453359944303738,0.4750269917667648,-0.06097833294585075,0.2297740088404693,-0.3409108190641629,0.4798453889434031,-0.20793703835754213,0.3231540152691128,-0.12404466088594553,0.4742193947276054,-0.07001075333383162,0.2658428942063897,-0.18674111803238572,0.4548228821298724,-0.19809627834964832,0.28466211027444016,-0.258742907954349,0.47289895882431837,-0.20176660779135852,0.006663407212795104,-0.43307918504686815,0.4622243345395397,-0.46491385749755176,0.3487652728230387,0.38990048966064006,0.4373323207699235,-0.09408354787550553,0.2157114182479477,0.25139857503819574,0.4585089179709554,-0.11015409422009037,0.23331050287554944,0.24429779418100514,0.43498081432845076,-0.08901936672193471,0.08352448028853213,0.22929089987424048,0.44741704024958895,-0.1656535764220157,0.2005559321725141,0.28582393640584575,0.4433184344554788,-0.08831128959856901,0.24776953963443354,0.24474783701553615,0.46274168416865524,-0.17611670522110714,0.26937391673402095,0.15093544780441015,0.4228401524426845,-0.12289082835103318,0.046106282232298096,0.02296043605688376,0.43001511162167716,-0.3398447986929276,0.2577256402997653,-0.22460979938983455,0.46700714514982145,-0.1107285095485606,0.1788099793495831,-0.38155849331800584,0.4375287886994384,-0.24079852903720797,0.20876820133669677,-0.3138955124607593,0.4794856187073382,-0.1883110977048879,-0.03555026184577257,-0.5075275826936658,0.44697586326416827,-0.37195160712372877,0.12493051397177203,-0.39921943272226074,0.4591544964200778,-0.2519788502366777,0.04765602888213902,-0.513134392209054,0.4524479160485349,-0.40160535892660487,-0.03598791806721762,-0.5047332655569824,0.4695849834347553,-0.3986708800903911,-0.61,-0.51171,0.45032666251996617,0,0.34038045075361356,0.355788023328182,0.4845093378416743,-0.07612261050470666,0.31161028879664804,0.37826388214126583,0.4780985603977972,-0.08605057237155843,0.2813007435708757,0.24546289917722347,0.43655093633919123,-0.09597699866184697,0.0864486342298013,0.21078182405734813,0.4506148941279212,-0.22912225166001354,0.27573827728767686,0.28086217395486324,0.47452790693423424,-0.09832231048943348,0.18977692105922478,0.10592961414125965,0.47660176985182756,-0.20491033432669126,0.1326056272865955,0.16871407129114757,0.4574419155213115,-0.31980766346005174,-0.0058416581026007955,-0.01,0.46440368819166555,-0.46406461008673633,0.3089695434129778,-0.12937111676986363,0.47212389721610387,-0.12771870968646706,0.18952956420266767,-0.24661614955141145,0.47579109046888757,-0.2191240749970837,0.2955400829983662,-0.4031226990773875,0.44788727270932144,-0.25371703672853146,-0.026443450536715297,-0.47638808925715553,0.4792264611186547,-0.46654027159050815,0.04826983233642855,-0.29566319624234577,0.3977674927287044,-0.19082398346512142,-0.027134820951039862,-0.44448349782626745,0.47438236459459554,-0.4671131725354407,-0.4223627133146356,-0.47289656290475385,0.4338926862488955,-0.51,-0.11,-0.48888551579105766,0.46853509610386757,-0.51,0.31736054736703334,0.30514995836490955,0.4748064197613088,-0.09921025267723929,0.20074191635233862,0.26340560947173997,0.4697074630716577,-0.17964542069114156,0.09605895587837936,0.25027250550879365,0.44844859731712083,-0.153028966452568,-0.055208118201387275,0.0606499222677653,0.4637445274774137,-0.37570556207078715,0.057459880200463796,0.17705624780335144,0.41193401403896207,-0.3401948035635566,-0.003375302180566378,0.08279772210235109,0.42432552492495657,-0.31037728144102744,-0.06484988483435462,0.06221964048754638,0.4592318001594479,-0.3733807235936065,-0.5159435808245698,-0.01,0.4493801447664044,-0.4341507167129597,0.18485180457945716,-0.40050249225769813,0.4443241757940265,-0.36149437113013494,-0.038222738190142096,-0.4815147665328827,0.455634614163166,-0.48225988544008486,0.08983774335916048,-0.4891367676158022,0.45978018232209633,-0.42220377889448224,-0.03093318546235288,-0.51,0.4332265233867405,0,-0.2760819379416347,-0.49347109715991466,0.41533371877106173,0,-0.11,-0.5130979209375,0.45785930969799293,0,-0.11,-0.511270125,0.4428898996440294,-0.51,-0.46217256936220097,-0.5040375,0.3782801782324158,-0.51,-0.2346293898579621,0.23548464583719914,0.4739639004212695,-0.2645323720307424,-0.17839014622768734,0.07416121302495328,0.48819440532600006,-0.46649897016060893,-0.16622262769228882,0.14259277848458332,0.4495283508643064,0,-0.11,-0.01,0.4721441938960919,-0.51,-0.11745526384512966,0.0735737348046711,0.47865584616167084,-0.43332301835577824,-0.61,0.033402543400541905,0.48263425483130645,0,-1.01,0.05948175783245399,0.47112417847847804,-0.46650672491438966,-0.11,0.029904265750217526,0.37640277720552895,-0.51,-0.6866251467824476,-0.45592200828397844,0.48780579776284577,0,-0.12288525212521648,-0.51,0.48055422757872535,-0.4310696442073081,-0.08615746629542695,-0.51,0.47414129984510794,0,-0.11,-0.51,0.3538800962091236,-0.46847868779994034,0,-0.46404783103011904,0.43319900484214535,-0.51,-0.07754806038871155,-0.51,0.32751275652982764,-0.48517378155315904,-0.11,-0.51,0.20176980049339865,0,-0.11,-0.51,0.22231482134070465,0,-0.61,0.16450685598838943,0.4428064352782922,-0.51,-0.16464000228589556,-0.01,0.3746016805312834,0,-0.0764187467273131,0.02018027413594805,0.4557919145375168,-0.47136368678248913,-0.16444973402345978,-0.03321709360143342,0.3282684212812263,-0.51,-0.1829619192777409,0.018516672607243247,0.45040660803760113,-0.51,-0.11,-0.01,0.3852581517474665,0,-0.11,-0.01709442003198386,0.43293483771269886,-0.51,-0.61,-0.01,0.3214279286919013,0,-0.11115875,-0.4483784914886357,0.46552726061878297,0,-0.61,-0.5295379826964616,0.3880124979135112,0,-1.01,-0.51,0.33419741235641665,0,-0.11714989920188759,-0.51,0.28223623493271605,0,-0.16567811980930663,-0.51,0.4242765625327278,0,-0.11,-0.51,0.09,0,-1.01,-0.51,0.1637107304838867,0,-0.11,-0.51,0.09,0,-0.852648142434886,0.2142923384817642,0.46304405645286006,-0.3928035952181452,-0.0700049611176989,-0.01,0.4445772407990416,-0.50290125,-0.11,0.009842779671124938,0.4423734841099251,-0.51,-0.61,-0.01,0.3419223312536372,-0.51,-0.11,-0.01,0.442933513820272,-0.4656818549441452,-0.08516708149241789,0.023672095165974752,0.34653888176574393,-0.51,-0.11,0.019361725284767012,0.32112967125548064,-0.51,-0.11,-0.01,0.09,-0.51,-1.01,-0.5029125,0.4330026956027245,-0.51,-1.01,-0.51,0.3699696023358431,0,-0.11,-0.51,0.3083617340484555,0,-0.11,-0.51,0.19010033444711363,0,-0.11,-0.51,0.3518618414568637,0,-1.01,-0.51,0.2092272475380236,0,-0.11,-0.51,0.12970616929569684,0,-0.61,-0.51,0.09,0,-0.1721247457306182,-0.01,0.46522180386311385,0,-0.10603778741478276,-0.019591998021291974,0.424073875541119,-0.4918102264766283,-0.11,0.021643417595048384,0.3931157282883285,0,-0.11,-0.01,0.1612509237677418,-0.51,-0.11,-0.01,0.3648758221568881,0,-0.11,-0.01,0.2623604236422518,0,-0.11,-0.01,0.18717239081370707,0,-0.61,-0.01,0.09,0,-0.11,-0.51,0.3816381783254399,-0.51,-0.11,-0.51,0.16172144203593375,0,-1.01,-0.51,0.12178237703156877,0,-0.11,0,0,0,-1.01,-0.51,0.16523288707055997,0,-0.11,0,0,0,-1.01,-0.51,0,0,-0.11,-1.01,0.12646355213107646,0,0.2174102107080012,0.42301056115012636,-0.04893827802347431,-0.07472911620663851,0.21828632139487136,0.43072578370945724,-0.05655676082457075,-0.11095889862074085,0.1936946566895036,0.4514698776780157,-0.16913172042872254,-0.1388894420497201,0.036159822382786276,0.4316843725746909,-0.36550218703548054,-0.3371972830708673,0.09968850501141047,0.22718163285373968,-0.06756132999320878,-0.1361098001291646,-0.03661551880004768,0.09485412650484099,-0.2149048269363552,-0.20914842920059762,0.1155023448427619,0.33329063360029765,-0.3062031724442949,-0.359444444999855,-0.07765811472316908,0.3532746381893234,-0.4020482896091603,-0.46692793756467893,-0.34297861340087504,-0.30208071189187563,-0.05269172160062443,-0.28960371217829145,-0.5123223719623925,-0.40040971907856987,-0.046323893346550765,-0.42590201885855866,-0.37171946380011833,-0.5023387500000001,-0.07750365516432156,-0.416985455591833,-0.38365691911761807,-0.47466736172723684,-0.06288105850314081,-0.41780289616110594,-0.3447828139269832,-0.4465865644025241,-0.036100303287325816,-0.26712312166513524,-0.40594647299068,-0.44365294191407495,-0.05530691416904796,-0.43297042117027856,-0.40565265583992005,-0.51,-0.1234209987696971,-0.46605307730923984,-0.11453439477480763,-0.4934240604541789,-0.37189092953822883,-0.51,0.07185660341014788,0.3896962712180053,-0.10404087875315274,-0.17929112471085318,-0.11684452925416852,-0.11372499574845696,-0.08395237695544601,-0.13947166178076637,-0.15113052451016853,0.04109622315040548,-0.13334328675100304,-0.09545076986201617,-0.27315654190216876,-0.14883944646443129,-0.23014975460141907,-0.2596851330385821,-0.07827212775013334,0.09530779475330842,-0.18756698408916164,-0.1294219530321562,-0.1519678938214314,-0.13740542149130178,-0.14188202250809342,-0.18186917943707,-0.19509849288653136,-0.1001155999019081,-0.24306535284005348,-0.2714582507345247,-0.26101192423713937,-0.14145013748976482,-0.38715569999135596,-0.41952864400573725,-0.32411825266312255,-0.44889203697075813,-0.07495110624559397,-0.43493051196134025,-0.3012736333886143,-0.5456930412514311,-0.10572111387172888,-0.3649754763496579,-0.4397046722915183,-0.4935847635127464,-0.1806969474545321,-0.4907476204826279,-0.4286855161262012,-0.5253762933206417,-0.22232642072527553,-0.4420859653645448,-0.61,-0.51,-0.14919384228249294,-0.4666087861352061,-0.18954729136937887,-0.5317234967840323,-0.4108244221120181,-0.41057248231136806,-0.42126648233589287,-0.510135,-0.2967975805175403,-0.51012375,-0.10971605631355172,-0.51,-0.41,-0.51,0.15408913451024397,0.36057145131043644,-0.15241873963782954,-0.12832725056009764,0.12012482316571953,0.3542733641063823,-0.29953947261517616,-0.36093736278543437,-0.03880587985087301,0.08056180148865087,-0.18970262033152857,-0.10276902040727987,-0.09911321873735027,-0.045374032007222245,-0.25972439490966837,-0.23853940098385804,0.18130568055574925,0.014229827938028499,-0.2262996758468575,-0.14911650531560572,0.003529549508225871,0.14081818445005037,-0.4015838450461086,-0.3424876449293672,-0.0783718473607105,-0.025500520943347333,-0.23896791338446413,-0.1922547199459922,-0.0257079033813066,-0.11272599377960249,-0.3303176374221307,-0.36896299425532364,-0.3138840005256715,-0.4907888424915704,-0.09120095729894244,-0.38582433738563654,-0.34741819042447863,-0.4586165873209521,-0.10630052775792355,-0.45382776710052025,-0.61,-0.5023387500000001,-0.10003541679723808,-0.51,-0.21440101858033456,-0.51,-0.37070157904204326,-0.51,-0.3754505975552539,-0.46617332667526556,-0.2507389909517985,-0.3745069515376099,-0.5583622162985448,-0.51,-0.18750618028740107,-0.51,-0.51,-0.51,-0.2960478397615864,-0.51,-0.11783010110391934,-0.51,-0.41,-0.51,0.08564974604791774,0.31198135548665273,-0.41,-0.3882586119770142,-0.14492497543666866,-0.14015709511428545,-0.2026668722722541,-0.19628964465109597,-0.2867519799727288,-0.019691114380074586,-0.29246327522924814,-0.2883792515465914,-0.21354065669479882,-0.1584357920688166,-0.39459323445224753,-0.31221365068150886,-0.16847762024799628,0.015208612280319913,-0.2764839243925685,-0.47221798267598025,-0.20571977531590752,-0.11184775303663047,-0.3393829661305999,-0.457845472531324,-0.09989518944055191,-0.08242446101371943,-0.3799447603653955,-0.49863109812037826,-0.45196233204610325,-0.06758162597238644,-0.41,-0.51,-0.41479525287529806,-0.5050084627815006,-0.14366710779441078,-0.51,-0.3939740593094472,-0.51012375,-0.23034739840313162,-0.4992940176392295,-0.61,-0.51,-0.2968006831893001,-0.51,-0.33716698076265766,-0.51,-0.41,-0.51,-0.61,-0.51,-0.3427013567920137,-0.51,-0.11,-0.51,-0.41,-0.51,-0.19298566973188674,-0.51,-0.41,-0.51,-0.45392143866579615,-0.51,-0.38588268193570613,-0.51,-0.6147864069192653,0.40393394714241654,-0.37070394746479085,-0.4721990107980251,-0.13227995746528334,0.4158081408800943,-0.3709294091771377,-0.4653587925464232,-0.20059625000000003,0.42065986326782573,-0.373273789978987,-0.51,-0.09310246214226396,0.18995549907108497,-0.41,-0.51,-0.07147285641980064,0.3067182994400926,-0.370665428944579,-0.51,-0.11,0.26561380959761133,-0.3767176672042283,-0.51,-0.15213561681461485,0.245485516004486,-0.41,-0.43303609355786377,-0.11,0.027928307332066755,-0.41,-0.51,-0.44931097380529295,-0.51,-0.05463607795092796,-0.50290125,-0.5065058438394796,-0.51,-0.12015893179172663,-0.51,-0.5065058438394796,-0.51,-0.2192782175306442,-0.47736211680683943,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,-0.4579655583564612,-0.51,-0.2992824977385708,-0.51,-0.11,-0.51,-0.41,0,-0.1462871408329309,0.36283791920531694,-0.41,-0.47591953485295346,-0.2157311549206703,-0.15474418633824522,-0.41,-0.51,-0.1508038592810898,-0.007338310059585356,-0.41115874999999996,-0.51,-0.07862365951879789,-0.01,-0.41,-0.51,-0.11,0.09757274333434386,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-1.01,-0.022754250954105326,-0.374099455325522,-0.51,-1.01,-0.01,-0.41,-0.51,-0.4851806301100316,-0.51,-0.2095246791898002,-0.51,-0.09063870248701192,-0.51,-0.41,-0.51,-0.5065058438394796,-0.51,-0.3599585356824642,-0.51,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,-1.01,-0.51,-0.41068625,-0.51,-0.11,-0.51,0,0,-0.61,0.3431897675539157,-0.41,-0.51,-0.8809837036214264,0.14815975780918464,-0.390028782988917,-0.51,-0.8909737554142684,0.06420981448414395,-0.41,-0.51,-1.01,-0.014942460085231086,-0.41,-0.51,-0.11,0.14073799852144195,-0.3732994904175264,-0.51,-1.01,-0.01,-0.41,0,-0.05114427555962788,0.002363306121280646,-0.41,-0.51,-0.11,-0.022014738724142717,-0.41,-0.51,-0.61,-0.51,-0.18909038772271403,-0.51,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,0,-0.51,0,0,-1.01,-0.51,-0.41,0,-1.01,-0.51,-0.41,-0.51,0,-0.51,0,0,0,0,0,0,-0.11,0.16690487789595215,-0.41,-0.51,-0.11,-0.09910490537588094,-0.41,-0.51,-1.01,0.010897644384424431,-0.41,-0.51,-0.61,-0.01,0,0,-0.11,0.018310414303132475,-0.41,-0.51,-0.11059625000000001,0,0,0,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.61,0,0,0,-0.11,0,0,0,0.31394026906779077,0.43610409504366554,0.5416642326467767,0.38655747199837115,0.22064528808256378,0.4451812855412322,0.5134264850158454,0.392237064912931,0.23711399895044388,0.4445230115281573,0.5118359915300276,0.39119030677863187,0.24715711255720477,0.4086197932133994,0.5159300138267482,0.39441238828520614,0.2811877367834713,0.3864068579014043,0.549396242594896,0.37995204692973295,0.31396148050108924,0.406102055031153,0.5162238135137438,0.3899239594107059,0.2829501178850794,0.4089992980290109,0.5281873491528193,0.3774536943702328,0.23387006724533263,0.4374223455401522,0.5318669095196678,0.38793734677767644,0.179665816504668,-0.059760835549295926,0.5362710414819338,0.37625211085213167,0.33334671349218037,-0.0600717663622654,0.5327105817784326,0.38996269585411275,0.261176028481253,-0.055014930886770286,0.5084130185256348,0.39288944102865886,0.2879271578943053,-0.0867691723423553,0.5199037161914619,0.389918560516708,0.20305156615337125,-0.06663615584689117,0.5313626618438188,0.38690449975594177,0.32814886072499827,-0.07666736802826637,0.534292655227103,0.38845579612536457,0.32852756822421936,-0.088255639967172,0.5360565331596833,0.38998750727170844,0.28827572292998505,-0.2190905087619615,0.538366832317209,0.3025509731948374,0.3196381290588409,0.37509556642350483,0.5350276317898055,0.3785279774771804,0.23882056509340133,0.37347801273194176,0.5349657635346207,0.3749371512218307,0.27359626731944325,0.3919416359622873,0.5353004042262389,0.3873448263051995,0.1785171700422151,0.3807596200163164,0.5287071330364029,0.39749528604195683,0.1702251905410965,0.3859206797117464,0.5377757449601958,0.378181221310713,0.12356921389388059,0.3712413962641332,0.5365240353971409,0.3791824677117933,0.256180824970923,0.3843515984978315,0.5214693823477105,0.3882899826178924,0.09864117171656431,0.32221710610365567,0.5230212312128703,0.3271535829718661,0.20304527494606567,-0.12785300438004374,0.3964692021040217,0.3689903427422544,0.15892594455145959,-0.17001994221119643,0.5296250824622811,0.301600218742042,0.24721178747547307,-0.1836609344041253,0.5326746380919634,0.3704263186808949,0.27284485976031897,-0.32258817910304294,0.5258533808338794,0.3316305324584925,0.23519208656706206,-0.20579917943950582,0.5468369734822397,0.3647615846851195,0.14439900589337099,-0.3349563572071735,0.5402230942931614,0.2712601714159125,-0.12289449780383283,-0.31588350617094213,0.5007583605347347,0.31832150892135386,0.05943501018298977,-0.5103557900353511,0.48580291772007195,0.17225277235157316,0.2956985723160297,0.3849172752487662,0.5336864679250997,0.37809321442381716,0.3077811890134539,0.4065655161848586,0.5417634118602239,0.3922521346177043,0.23843781293783212,0.391472311367287,0.5406706744074723,0.39052964658123707,0.2541818211600909,0.3817610291748326,0.540630399404375,0.3880699222292312,0.24714298714147204,0.3767582313424682,0.5398584769866416,0.3763686530199742,0.2820007721944009,0.3874040415647981,0.5358685640688676,0.3839464873738713,0.24832863408814476,0.37675970889828003,0.5249589193446846,0.37568338335942414,0.01035288354212013,0.26706679720499316,0.5417683696265047,0.2420955029619896,0.27033117613801205,-0.10306603271408751,0.5021605048890052,0.38126514434106673,0.32364393293549865,-0.1243800828295322,0.5213225422635278,0.3858757590634683,0.24271547149573275,-0.17230184987891894,0.5318245580695153,0.37233108458502434,0.14277050760799498,-0.25786440320125,0.5099087392116575,0.2945031014789199,0.2497706623784148,-0.16534440916509316,0.3382527794929182,0.35837217077879824,0.2487049004463698,-0.23560343765761108,0.533616477185737,0.317322078741414,0.2203094336037717,-0.2931761288174461,0.5090534257007574,0.2605647033988886,-0.01915766360375816,-0.49859333390625005,0.5259828650248635,0.1960240063848916,0.2568101406473933,0.3607153407158254,0.529114572758544,0.3630219803839123,0.20590151628303674,0.342346399024343,0.5335601657210586,0.3705374340805401,0.23635761876441558,0.372650119191937,0.49873302711794565,0.3761580274968381,0.11084441053431181,0.3065826763229269,0.5285039895096751,0.27253731962990585,0.2012618561521131,0.36100458375469946,0.4895052461305853,0.36907582694513996,0.12176778100102906,0.17148936496786465,0.5287988830186677,0.2883752961715247,0.06446147302117983,0.2383221042148224,0.4804534423873239,0.33649031721821043,-0.11272941129903731,0.07406455751070973,0.5147372794170153,0.02890504187416474,0.20997625097361988,-0.1875340056141871,0.5226391065709175,0.33393463828633724,0.15414957114749997,-0.32069975778571236,0.520048899008141,0.3262539976732151,0.056974848913393356,-0.3812662923714745,0.5240330306611649,0.23950669566607072,-0.05227788881603916,-0.49404568473582283,0.5093729313965958,0.09148669551126301,0.12323699059837477,-0.42035310969836437,0.5266351739314952,0.2779322163851472,0.052496708460729194,-0.508914168556644,0.513264677184906,0.06897816058001345,-0.028951299153094398,-0.48951604009909266,0.48768272748252617,0.11620085483212556,-0.61,-0.41868490444773987,0.45500873962425853,0.061477974789516956,-0.0023342984284255644,0.44813077395357864,0.5048250563710645,0.3748174967929497,-0.11099881030495268,0.3414206441173647,0.5105301617243257,0.19193441766171299,-0.043703079864164975,0.26002703737769334,0.5446586778827877,0.24802300967804916,-0.19455804723779657,0.08820669063175995,0.5397055317645252,0.09591990315225143,-0.08197963017268413,0.28173816671258095,0.5113644427205414,0.19131060678131726,-1.00335125,0.03381794807961099,0.5317134025644741,0.17416049289761093,-1.01,0.03656890930488553,0.5223942819810632,0.030507690080542577,-0.11,0,0.538334762798232,0,-0.08590115113352759,-0.29645583576947704,0.535433417309775,0.28908796186376756,-0.11615151325115232,-0.3289629420575003,0.522994624150246,0.029686992495838782,-0.15674654690014658,-0.41297125027738296,0.529720782980639,0.06394893096481719,-0.11,-0.51,0.5054161108326802,-0.01,-0.2033902099995271,-0.32900165393921377,0.5446308252501394,0.06696774341379932,-0.11,-0.48938150748401127,0.5382349415533894,0.027896696483046192,-0.11,-0.51,0.5259051910104448,0,-0.61,-0.51,0.4239799566602473,0,-0.57021777623661,0.23191045004537356,0.5340778770780866,0.18809404417850512,-0.1579826558937518,-0.017199516083641436,0.5386692629456687,0.06418686248725367,-0.13129278840437764,0.0016700858767747916,0.5373800817918908,0.1962870543963364,-0.19714899614613388,-0.01,0.5216985016613701,0.02734450724729058,-0.18234747955509772,0.01500536833159385,0.5430172960389011,0.15140812177845497,-0.5336647716587213,-0.021137500000000004,0.5290891596610975,0,-0.6069203940718818,0.019733476460768187,0.5208395107440398,0,-0.11755295737887665,-0.01,0.4179506306201382,0,-0.07490897514361156,-0.4008455543935362,0.5301685311562404,0.02939952223423166,-0.5021558778113961,-0.51,0.5197110212329199,0,-0.11,-0.51,0.5332047445028647,0,-0.11,-0.51,0.37483944735397245,0,-0.11,-0.51475875,0.5217694540818857,0,-0.61160875,-0.51,0.3650288191064095,-0.01,-1.01113625,-0.51,0.4233971703160814,0,-0.11,-0.51,0,0,-0.2188636402024491,0.25937273742769734,0.5063139187036202,0.31912726136454056,-0.5394218701588414,0.06211204502171458,0.5383109828594103,0.0295429171173449,-0.06576220649123841,0.05847323875445666,0.5127434206500336,0.14584197130288906,-0.11,0.046621811318305305,0.5140059020900184,0,-0.08044178272917238,0.19972058300537146,0.50970249921999,0.06389414147656228,-0.07459208854808275,0.09021286497672165,0.5402109867190661,-0.01,-1.01,-0.01,0.5455144098627754,0,-0.11,0.021137223055607418,0.47260438772040986,0,-0.1979705146393194,-0.51,0.5375316655595619,0,-0.11604899779911398,-0.503475,0.48923174867154046,0.02242196844449057,-0.11,-0.47365071193900954,0.49064492217911093,0,-1.01,-0.51,0.4304920971612448,0,-0.11643908238764628,-0.51,0.5219286757821527,0,-0.61,-0.51,0.3991661955684076,0,-0.11,-0.51,0.3522051267965624,0,-0.11,-0.51126,0.1555770812930991,0,-0.10706114275895866,0.11445540054271901,0.5392830493669797,0.09564978347353023,-0.112167119929228,-0.01,0.5046834026898901,-0.01,-0.61,0.018755446122865775,0.5207203275765784,-0.01,-0.0820108058788869,-0.01,0.3047766806218219,0,-0.08127795656473087,-0.006741429895711868,0.5176951374222117,0,-0.11,-0.01,0.46536050614644825,0.027270296300188755,-0.15156488921968247,-0.022486823342003023,0.4631709090995139,0,-0.11,-0.01,0.209735611182412,0,-0.11,-0.51,0.47669276462267623,-0.01,-0.61,-0.51,0.3529314373294884,0,-0.11,-0.51,0.43653928267569636,-0.01,-0.11,0,0,0,-0.11,-0.51,0.37787101745353446,0.027822693414986013,-0.11,-0.51,0.17012668860158975,0,-1.01,-0.51,0.24729824074327778,0,-0.61,-1.01,0.17126155090219042,-0.01,0.3010039863341729,0.46064760305515473,0.023196456018041635,0.39511127911965255,0.2454172423154126,0.453109143980558,0.027075280305808178,0.3941430052465318,0.26976597546955783,0.4510940523653507,0.013728973871822377,0.38720045612456133,0.19202993481288266,0.45477438736150394,0.01944805136692384,0.3785450415412115,0.23114946132288722,0.4529450760944424,0.0032178795564521585,0.37657514440097584,0.2143753562890534,0.4519134552418129,-0.010038449258737647,0.3630218549422734,0.25092340617499936,0.44222077148687144,-0.03463146639857346,0.37857995206375405,0.13823202250209474,0.4382754011917267,-0.31748678135074615,0.25131183662720724,0.17325384158963905,-0.0509376194915068,0.03975726624377944,0.3913074055957453,0.13712783108431886,-0.07385015737985515,-0.0013222344169178872,0.390740415332415,0.15901674205231048,-0.0755292593786573,-0.020902992268686405,0.3921670521968148,0.056155393941521324,-0.4040979393882242,-0.10883242100649138,0.3895521355996189,0.04793578594143356,-0.2002840152180687,-0.12861234093550455,0.3874767696756001,-0.026243062529879225,-0.34518828752346054,-0.20890344680653125,0.392672633728817,0.08195353494946389,-0.30395968684193175,-0.25192360684650417,0.3935385829017087,-0.2997207551446893,-0.4089330096919024,-0.2888385908482366,0.390505022123782,0.22534716265746235,0.38921918819897827,0.01821562419357836,0.3851090840844947,0.08839205807919542,0.014777122285002393,0.010589493079096518,0.38810282982772054,0.07107963735538068,0.13446680288281662,-0.0475490919735892,0.3911325906916835,0.06965001792941009,-0.01702179262285343,-0.1839320354995522,0.387182557470047,0.22431381206527204,0.18759353706747767,-0.01682953011330291,0.38943750651426656,-0.017454522853946445,0.0054701657624180635,-0.20589180331758586,0.3880240753053555,-0.07962049367816554,0.02101307497355792,-0.18577959600433597,0.3921695516996439,-0.11784602988621756,-0.01692190323872228,-0.37794033142318595,0.39369722572159116,0.10780028722983029,-0.2314165932442761,-0.04574713197467365,0.3859864522241532,0.0015089147679207549,-0.5130989168158466,-0.09941494823743134,0.3850055598973019,0.04592152622372398,-0.4334646287381568,-0.19043004938093103,0.381052693679218,-0.07168502414139738,-0.5159584760687258,-0.2646709094559194,0.3847098906149827,-0.05035353181577239,-0.42904752307086985,-0.2621789273840494,0.3854984803011787,-0.05413370889886015,-0.5106975,-0.36480217613344335,0.3830237810366447,-0.07434154916730334,-0.49499444113175495,-0.31393115798538174,0.38905077136957783,-0.11,-0.51,-0.41,0.38872236428765433,0.28443995551495904,0.3564393483004918,-0.011262229973353508,0.3886391844762887,0.23912419851832917,0.36078255288838856,-0.055894870777161154,0.38514709918594525,0.12644082644975496,0.12455332778972414,-0.015704750297191213,0.3927706465001213,0.06644135175153856,0.005651491727115569,-0.13271889694202493,0.39107220953441924,0.2676256083205935,0.15950145047015368,-0.03705567696841578,0.3932787154041932,-0.00013132272661176003,0.08845722863257122,-0.1582763458908954,0.39247845708791906,0.08373459601349606,0.10632539409123397,-0.218067807586318,0.391020764007895,-0.37460762849317764,-0.013112796708944958,-0.33802355458925387,0.3904097975314678,-0.06254260789342721,-0.3290801682479727,-0.07389566998584854,0.3905800644091228,-0.019711556669187235,-0.3140003085881217,-0.12564792342664183,0.3849376443399481,0.04165562691558028,-0.4767022784552513,-0.12275314099125771,0.38713303885625605,-0.029448717758580698,-0.5140331696441851,-0.29888957261144744,0.3886885030354122,-0.03718750074461129,-0.47813671445531014,-0.3673594092071153,0.3882071252560151,-0.059267350366313754,-0.46764611225907843,-0.40249262848437495,0.3881395091553285,-0.0324755239225169,-0.49653689599903367,-0.345689186369581,0.38876122969753185,-0.11,-0.5106975,-0.41,0.3856754983674323,0.16254452244135767,0.33380507859701214,-0.059661011276825,0.3888550345195121,-0.11275640406438867,-0.023500985700961922,-0.20969019808450823,0.39058749920541797,-0.2723139890033398,-0.008313249348571364,-0.28769452979149956,0.38456180341221696,-0.056028752848898494,-0.014433762907922554,-0.27080615043347,0.38426361480433585,0.10482741504205662,0.04196407261497857,-0.19994665797787664,0.389105476798872,-0.11,-0.018146940645912338,-0.33741932945692454,0.38996111873447803,-0.5339898496660826,0.0011306829859026165,-0.3591956339530637,0.38571801264492805,-0.08878169360165555,-0.017690004030014618,-0.41,0.38773518258414935,0.012377319470513772,-0.3660912143977508,-0.257667348104556,0.38369677735986013,-0.05119199220478894,-0.5121076277687067,-0.20690360358922222,0.383222363118699,-0.09178266912627871,-0.5118494220419831,-0.30281034804184814,0.3814241330753633,-0.11,-0.5124935089969408,-0.41,0.37939974715879615,-0.11,-0.4969255397436109,-0.41,0.3815240448855687,-0.05873644812349045,-0.5108088749999999,-0.3818665990254644,0.37727690995239704,-0.12587883178451637,-0.51,-0.37448152731307877,0.37723202824691376,-0.098711648889067,-0.5146398845473253,-0.41,0.3544983468036129,-0.14717146972429593,0.4549739573377336,-0.15528171989422282,0.29577150049888584,-0.16816498881744932,0.45070378545032885,-0.2904439178410227,0.08410988983975132,-0.10684296419877216,0.44776351120766145,-0.29711329303855083,0.1278619419927737,-0.11,0.4365727248357041,-0.3842537897799787,-0.01,-0.43418271106472567,0.4485799652030171,-0.24152097688254487,0.0956684809265954,-0.11,0.43775427177304477,-0.41,-0.01,-0.11,0.41483868728171863,-0.3581538518872489,0.030304336063165037,-1.01,0.226623761517672,-0.41,-0.01,-0.5197873647280801,-0.38068510662228366,-0.36542093063182507,0.38380239313711595,-0.11,-0.51,-0.36335595164614504,0.3822463434537444,-0.11,-0.51,-0.36596521121311626,0.38204663517230575,-0.11,-0.51,-0.41,0.22375140024738432,-0.17507176235193278,-0.51,-0.41,0.3706104461700245,-1.01,-0.51,-0.41,0.28920017312162555,-0.11,-0.51,-0.41,0.24175711236860128,-0.11,-0.51,-0.41,-0.01,-0.20180235214888637,0.09432083530743338,-0.32384310140799116,0.38025436540546476,-0.2206230166824893,-0.06067532864786973,-0.41,0.38144305298847975,-0.11,-0.013638720636465408,-0.3649595742997695,0.3818377983224717,-0.11,-0.021137500000000004,-0.41,0.3019113352876741,-0.10898914483667321,-0.012025000000000001,-0.36422102481961893,0.38176235256301927,-0.61,-0.048309542027692234,-0.41,0.33189174121385406,-0.11,-0.012475,-0.41,0.3286037885167714,-0.11,-0.020737046256731277,-0.41,0.20499112237206438,-0.11059625000000001,-0.51,-0.36779216577880247,0.3757772707621344,-0.11,-0.51,-0.41,0.3071443629587821,-0.198707543995576,-0.51,-0.41,0.2518094605078398,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0.14743503194719312,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0.10528091602537781,-0.11,0,0,0,-0.13944493291925408,0.3640425585936396,-0.41,0.06197865659061361,-0.11,0.3441980032493652,-0.41,-0.01,-0.6786741515972552,-0.013495038406378052,-0.37383576851838823,0.37973059160256994,-0.11,-0.01232134441059626,-0.41,0.2881374833301059,-0.5211154902882253,0.010096517069335781,-0.36612954632682426,0.38412931524040406,-0.11,0.13917950232942122,-0.41,-0.01,-0.11,-0.01233637298595864,-0.41,0.3129133220709498,-0.11,-0.01057375,-0.41,0.19051663437799513,-0.1755347859165203,-0.51,-0.41,0.3659948326903983,-0.5705777594849488,-0.51,-0.41,0.24823726462542187,-1.01,-0.51,-0.41,0.1989934176086696,-0.11,-0.51,-0.41,-0.01,-1.01,-0.51,-0.41068625,0.2550138506591833,-0.11,-0.51,-0.41,0,-0.61,-0.51,0,0,-0.11,-0.51,0,0,-0.052895615535248346,0.3249772933014239,-0.41,0.06169120851269664,-0.11,-0.021137500000000004,-0.41,0.33599124896960586,-0.634203496786211,-0.012025000000000001,-0.41,0.2587882311378411,-0.11,-0.021496849144802127,-0.41,0.09419176810176605,-0.61,0.02048724374182561,-0.41,0.2314973916154495,-1.01,-0.0348515986255626,-0.41,-0.01,-0.11,0.021566464294053563,-0.41,-0.01,-1.01,-0.047274781304306325,-0.41,0.09465422659607006,-0.07853841348344326,-0.51,-0.3653700620191168,0.24693509291560323,-0.11,-0.51,-0.41,0.06091041867379458,-0.11,-0.51,-0.41,0.01777029525486596,-0.11,0,0,0,-0.61,-0.51,-0.41,0.09325527774928025,-0.61,-0.51,-0.41,0.029203052463952515,0,0,0,0,-0.11,-1.01,-0.41,-0.011890225,0.2792422312598052,0.362976086199003,0.4582284034842366,0.3714432358987392,0.33235461099474767,0.3334850278080575,0.38021699884054605,0.38919660898996417,0.26859992832743584,0.3626423314296252,0.3541024859847241,0.3904526401147887,0.2994018645203286,0.3411805235851239,0.4442905100691368,0.3706889590409725,0.2554209889184141,0.3333229144570913,0.30324795007420896,0.3891286864425721,0.30697530156043096,0.3148790860831487,0.28744279191058225,0.38686116135778104,0.29277288875137103,0.23979881511405224,0.3072752494420795,0.3862852184306142,0.0374781471911225,0.20082846022089512,0.28835410888182783,0.3795579761573315,0.3353758117894805,-0.09849731893622338,0.4384269372950801,0.38513287089534654,0.24367018785933897,-0.10665008230076067,0.44813876281293497,0.32258722921722927,0.2704756929078173,-0.0873987502400045,0.267058100695076,0.3790918541263211,0.058012204000133065,-0.2628040785757178,0.4237024232178539,0.2651801744811145,0.27731148552748125,-0.2033084717408059,0.3948535537747986,0.30821042632829654,0.22284319235462677,-0.2837004841333262,0.29092751812381196,0.3549148261350031,0.1737877175443733,-0.30451032741802947,0.3435007386380429,0.26721955713200685,-0.445463894672291,-0.44691744938176503,0.38470543583285566,0.01503273076285948,0.2926695597364748,0.38802972215893555,0.09209302648511258,0.36392346332925135,0.2195617983596306,0.061906551952943534,0.08107265930299432,0.38207000886530296,0.17262274265207744,0.17500843708611746,0.06636692668360257,0.381613197592506,0.13072814356098178,0.06240345093272574,0.04525352290816122,0.38036421164043643,0.2568459740651546,0.18880125809159753,0.04359098851114265,0.38094147176636994,0.1367234603548345,0.010949088197257251,0.017938284434650602,0.3843719611189371,0.06767476562999956,0.02723258779198416,-0.013058728835952101,0.37539023792361387,0.08324839494081668,-0.00850392711108736,-0.009335613783619807,0.37379413318990173,0.2732836088452366,-0.1801825101778705,0.08410276680348462,0.3842158250205564,0.09914003302482215,-0.5009544531132938,0.05318695828471276,0.3753239697546708,0.007775850854905016,-0.46843566681718957,0.03978802294168295,0.37116113509805393,-0.0025046942628647872,-0.5063062753305323,0.01973301731216607,0.37621236594897006,0.13860828504382522,-0.4486447612215903,0.0018327139681512637,0.37742148533738074,0.004691049606638305,-0.5101705815121793,0.011560207333731332,0.38087696628834405,-0.11,-0.51,0.0049308663718251496,0.381533117425101,-0.0568935860220543,-0.513654181450499,-0.010580207140731945,0.37568793556275687,0.2564193268076698,0.31113916420365667,0.3597443226164692,0.3118270030493989,0.28694127009179815,0.29915781161643284,0.36456692427737913,0.3853264597126392,0.2413367678963067,0.14193126779373244,0.055893391333546094,0.3812713800511285,0.16752259618823925,0.036784058414770886,0.03903978883926343,0.37664846536383256,0.26383190291796843,0.18701388712778094,0.07423380715005884,0.3177385720686675,0.10865845245670494,0.07043186398461099,0.06612262430317244,0.3840085418329131,0.1092801459812971,0.11513847568825086,0.01881393426862243,0.3836170827336126,-0.00450226327108183,0.002775095290134053,-0.011504103868637549,0.3645740958512851,0.3421528565111098,-0.1896027487825924,0.3372670907396065,0.37778048972598965,0.23467656767826164,-0.3288449125001956,0.2524736346703508,0.36752445421048857,-0.02868623445591048,-0.4264139226145327,0.031588294023341956,0.37451755210301974,-0.009766019346743114,-0.49875025110017873,0.0052264602361404185,0.374878458568454,0.05075953176640398,-0.40928605437082005,0.06990583408323094,0.3785367215406855,0.012299677879398271,-0.5051448468071735,0.06402235039518431,0.36468393111633757,-0.0385854822108451,-0.4589579157600732,0.017266531933570233,0.3723179039274668,-0.09725457604714116,-0.5080080246280952,-0.011815272827370608,0.3639992339522954,0.26632085588143983,0.3667386829804776,0.023286303650252613,0.30762143733611275,0.18329174274010854,0.02360486062558754,0.018989570712334414,0.3782841937695007,0.18418956880039575,0.09262939598529303,-0.03093052649198816,0.36287875066476066,-0.09434936093137872,0.04180506463770795,-0.014364037752766113,0.3755250071608873,0.15055152660080312,0.10666074594018674,-0.022708019296109935,0.3812622648150846,0.09832326891850565,-0.001177206999362804,-0.03838755199134136,0.37501124768134464,-0.028791697153392096,0.04815746125360691,-0.03681201373767931,0.380834107968361,-0.07066646366000019,-0.009349569666933514,-0.015716573522852013,0.3789488984040994,0.03277305103874659,-0.3514440259969808,-0.016474391178695886,0.3753086855656138,-0.03862478589301483,-0.5085066981441778,-0.011836166852790134,0.37301193948025974,-0.067060106905337,-0.5114730310732312,-0.0055755840003026205,0.36965874354652783,-0.0664464726255139,-0.511513317929696,-0.01803810342552077,0.376986482839845,-0.06680524989835514,-0.48871468758470404,-0.049357303133693645,0.3670031136082303,-0.11,-0.5130941857576574,-0.009595584384624477,0.3707531829430722,-0.3683340008507879,-0.5100455104389363,-0.017798242024682703,0.3583696658295374,-0.11,-0.5102117310025518,-0.020040785144454475,0.33961263464758057,-0.36342615381686105,0.23752449239073176,0.44255969785275645,0.2570432692077336,-0.04002764909604747,0.11151179767270428,0.4379663301950966,0.05413793482405313,-0.21717747599653933,0.13773681001891117,0.38730567430750573,0.029410560090523098,-0.09636990895150097,-0.01,0.44823475038605004,0.029588680263886474,-0.8690587139348669,0.03655104436766862,0.3341015271708371,0.11554362999973677,-0.8161180534198054,-0.01,0.3138701828546575,0,-0.09966838058812161,0.009673631348109427,0.3711938142316857,0,-0.11,-0.01,0.2668362074437042,-0.01,-0.13896718901897703,-0.4304171217362294,0.4391423237860208,0,-0.11,-0.4722106156732341,0.4322863356971801,-0.01,-0.11133878000205982,-0.51,0.3717764274089905,0,-0.11,-0.51,0.35116666843953387,0,-0.18899671957870096,-0.4677403382071818,0.409235446298218,-0.01,-0.11,-0.51,0.32071864038392184,0,-0.11,-0.51,0.26125946880360235,0,-0.11,-0.51,0.11991323238835622,0,-0.13833542151857606,0.3644890811489006,-0.02600465469850427,0.09010206264407242,-0.1382372982452704,-0.01,0.07405776492672946,-0.01,-0.61,0.019896071771239837,-0.016933012308438335,0.3737150741909832,-0.11,-0.01,0.05537106792277535,-0.01,-0.11,0.17414528452379438,-0.022874243158792815,0.029961478950610194,-0.11,-0.021137500000000004,-0.015816301796017958,0.3218355576363073,-0.61,-0.01,0.03956103686192762,0,-0.11,-0.01115875,0.022827189737398258,-0.01,-0.61,-0.51,-0.006829596310491078,0.3582416236458625,-0.11,-0.51,-0.019158216589647874,0.16120241643734506,-0.19510665120037807,-0.51,-0.015600695032534143,0.1253377428891557,-0.11,-0.51,0.09,0,-0.6122004156249999,-0.51,0.06464951253132062,0,-0.11,-0.51,0.09097827141559718,0,-0.61,-0.51059625,-0.02503104402485653,0.02877582362659531,-0.11,-0.51,0,0,-0.17715776478865924,0.08566928900313692,0.3446000985854939,0.13730578146065842,-0.6188989582257493,-0.01,0.2685186504522379,-0.01,-0.9441841938538786,0.043563386955033256,0.007748923005202307,0.3818923171394654,-0.44979607375433717,-0.01,0.047569409259456304,-0.01,-0.11,-0.01,0.042115279413679485,0,-0.06908827607752316,-0.01,0.06234635817483116,0,-0.07472874557137871,-0.011532684689183989,-0.0114102023917128,0.3235496207674115,-0.11,-0.01,0.02782154185423568,0,-0.08492663833673597,-0.51,0.3075960509656867,-0.01,-0.11,-0.51,0.24564523354991116,0,-1.01,-0.51,0.030114194557337368,0,-0.11,-0.51,0.07694356443309983,0,-0.11,-0.51,0.03918525374584403,0,-0.11,-0.51,0.07982357708728188,0,-0.61,-0.51,0.045878504624855765,-0.01,0,0,0,0,-0.61,-0.011363654626587064,-0.012101719871327533,0.3441562420123322,-0.11,-0.01976533726920631,-0.029002485926848322,0.30902956499369827,-1.01,-0.021070506098420552,-0.020455475886528428,0.10829902262273955,-0.11,-0.01,-0.004408522202015349,-0.01,-0.11,0.07486602674367895,-0.026708698588234447,-0.01,-0.11,-0.021137500000000004,-0.01445264437654072,0.1308643203106532,-0.11,0.029819536596353016,-0.013406770999796733,-0.01,-0.61,-0.01,0.02396452021612175,-0.01,-0.11,-0.51,-0.019089880172908146,0.148375749555353,-0.11,-0.51,0.09,0,0,0,0,0,-1.01113625,-0.51,0,0,-0.61,-0.51,-0.015108270051588695,0.08691024665338852,-0.11,-0.51,0.08839124999999999,0,-0.11,0,0,0,-0.11,-1.01,-0.017053950806874895,0.024799458907588928,0.25410017773494736,0.4229440920445279,-0.06380096231582688,0.36532734214760487,0.22743721502899747,0.32963206634316294,-0.104363332708754,0.3876915470645447,0.23997709841092066,0.4394807145507851,-0.21481547690070676,0.34881372938636823,-0.27920560842161396,0.43394528946510913,-0.19191322539549108,0.1958114236767988,0.23902184057987377,0.27226065543019257,-0.168820448808277,0.3966339849266466,-0.03905718189263192,0.19426835458315242,-0.3056233342212538,0.3869935620916397,0.0678155388307654,0.19393390057380994,-0.32820891631542176,0.37911999224482995,-0.11,0.3278119371915636,-0.41,0.12390484314401695,0.09044915673141195,-0.15800892466395886,-0.1470579671186284,0.3853842189891693,-0.01575783424957513,-0.3296214704664785,-0.17526217799557903,0.3820097081290225,0.044598870567059634,-0.2767759534084402,-0.22693924409639268,0.38397099745872443,-0.021272749413226825,-0.4487672435673429,-0.3146880317928947,0.3843086406048608,-0.06501763733394905,-0.38532227656453566,-0.3485532291480088,0.384316115296186,-0.0667105400051241,-0.4774561279744416,-0.3323165673714061,0.382883167163265,-0.07710188043051175,-0.49949559754884576,-0.4019269567512468,0.3828707156486966,-0.11,-0.51,-0.41,0.3792012388288942,0.21049660657636704,0.3851390048842133,-0.5210292242611169,0.36049125275322447,0.026897438320017814,-0.044944540775914546,-0.429787197647813,0.38874073177510104,0.03867964745516843,0.052600256348240754,-0.4523355405205141,0.38059366253290067,-0.10225540015625,-0.012025000000000001,-0.42462981720540854,0.3850737538993498,0.10226544165457949,0.09786506328885934,-0.41885588282787073,0.38397864430512907,-0.1312070739857609,-0.012419682529524483,-0.4356262127272187,0.38487054389329545,-0.049685773802220626,0.01453296112990552,-0.41,0.3841770518304446,-0.11,-0.014437583393594017,-0.41,0.38540867485110003,-0.29218760574225866,-0.4466373054623774,-0.4166227810230956,0.37183882904848986,-0.07761851507490247,-0.5138590535567692,-0.4699344921630177,0.37842759016416677,-0.08202844045834216,-0.4575771387922505,-0.42176525,0.37401879337006577,-0.05830672794420108,-0.51,-0.4103680893836769,0.3638860631850112,-0.06008051298312933,-0.47964443981983257,-0.41,0.3790592811957174,-0.11,-0.5112155302198191,-0.41,0.36393959378267693,-0.11,-0.51,-0.41,0.38178731996083365,-0.61,-0.51012375,-0.41,0.21959157646715824,0.2709211538601399,0.3255826176387167,-0.207339975097066,0.38880060039695286,0.09616960000713226,0.36694827830679916,-0.32506391566989307,0.11404751936835508,0.07574004379182143,0.06479967412239751,-0.456475111792588,0.38923307309397126,-0.06227695252667242,-0.011756074151655997,-0.4453986192715231,0.3801153698432272,0.13194657292974343,0.062488430893999004,-0.4074651412563827,0.3844793080106784,-0.5195358481508132,0.01745146324804401,-0.4119447624185939,0.38302169422792254,-0.42226707838599936,0.015168239499432102,-0.4189755078688009,0.37918748113913747,-0.07176900429482751,-0.015365867548731439,-0.41,0.378764918855757,-0.0025570941806983896,-0.4582842590442388,-0.35742043590463124,0.3645492891105701,-0.025430827655690783,-0.4744329034811082,-0.3588359038698684,0.3701225275454725,-0.08460774864512523,-0.48401997419929194,-0.4196580163702408,0.374889152026693,-0.07758604897171159,-0.51,-0.4252488273424627,0.35428882512932397,-0.07699989260904358,-0.5083866337272759,-0.4128692153132085,0.3705456854836517,-0.11,-0.5108088749999999,-0.4102128387499999,0.3498039736072926,-0.11,-0.51012375,-0.41,0.3502331241489679,-0.11,-0.51,-0.41,0.22745494809164155,0.07313788230125337,0.36085777459673457,-0.43562491321699714,0.14678261032196438,-0.5257883608085181,-0.020444261378391417,-0.5066218996876579,0.3801650647413887,-0.056289609841247853,-0.017371475032481012,-0.4239275430613686,0.38008207373464714,-0.056607644018055944,-0.013758479201081992,-0.41584473456844984,0.3665535716146268,0.028725015218997573,0.015207511756913926,-0.41012374999999995,0.37390499651691733,-0.08021632290090189,-0.0127141890625,-0.41,0.31047884104886775,-0.09870548290662272,-0.010744203853731864,-0.41,0.36771800324202353,-0.0833342826247312,-0.010585,-0.41,0.24249395543060698,-0.11,-0.49785010819592457,-0.41,0.3561895899805084,-0.11,-0.51,-0.41,0.3606927752588691,-0.11,-0.51059625,-0.41,0.34026860216945043,-0.11,-0.51,-0.41,0.21076233016105642,-0.11,-0.51,-0.41,0.31486743669868317,-0.11,-0.51,-0.41,0.20394873409148595,-0.08179485512926338,-0.51,-0.41,0.17790865392225425,-0.61,-0.51,-0.41,0.08801694301139643,-0.20833450635454578,0.4449404107233984,-0.33459390745081385,0.08670267455654801,-0.11,0.3962821702416707,-0.3729289170796589,-0.01,-0.465488339804224,0.4220021390115801,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.17834749101835318,0.32381107569711287,-0.3722676005782487,-0.01,-0.11,0.18211431029776096,-0.4034841924401865,-0.01,-0.11,0.238072212874811,-0.41,-0.01,-1.01,0.06467448979968507,-0.41,-0.01,-0.9158229436032733,-0.48663451429102766,-0.41,0.3411182596099059,-0.11,-0.51,-0.41,0.2916472678420092,-0.11,-0.51,-0.41,0.17391420682334013,-0.16115875000000002,-0.51,0,0,-0.11,-0.51,-0.41,0.19594669961458622,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0,-0.11146480325802735,0.03433379768539583,-0.41,0.3416437521399216,-0.11,-0.021137500000000004,-0.41,0.30022881314975775,-0.11,-0.022582519112049983,-0.41,0.3131702353061907,-0.11,-0.021137500000000004,-0.41,0.061866843829866736,-0.11,-0.010135,-0.41,0.25417252848865113,-0.11,-0.021415667246058742,-0.41,-0.01,-0.61,-0.012025000000000001,-0.41,-0.01,-0.61,-0.01,-0.41,-0.01,-0.16068625,-0.51,-0.41287678811180895,0.2677904917394684,-0.11,-0.51,-0.41,0.13470944409203295,-0.11,-0.51,-0.41,0.1281405773333462,-0.11,-0.51,-0.41,-0.01,-1.01,0,0,-0.01,-0.61,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.01,-0.11,0.3449805934504268,-0.3864591692623053,0.04835111895723063,-0.11,0.10400064944984799,-0.41,0.028789719068887096,-0.11,-0.015987234972385432,-0.42102562369390645,0.31660233208675637,-0.61,-0.011554872140642563,-0.41,0.0876605374616447,-1.01,0.16775813659525585,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.013382193220099375,-0.41,0.1597129088431486,-0.61,-0.0201230715261657,-0.41,0.0924275555321763,-0.61,-0.51,-0.41,0.2008227413987918,-0.11,-0.51,-0.41,0.0359615447695002,-0.61,-0.51,-0.41,-0.01,0,0,0,0,-0.61,-0.5000131241762696,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-1.01,0.1050158237128568,-0.4256221858629609,-0.01275535,-0.11,-0.011260000000000001,-0.41,-0.01,-1.01,0.0063304308010823495,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.012025000000000001,-0.41,0.09277284120383225,-0.61,-0.021137500000000004,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,0,0,0,-1.01113625,-0.51,-0.41,0.0053457724269547376,0,0,0,0,-0.61,-0.51,-0.41,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,-1.01,-0.41,0.02527891644536509,0.33450611133359154,0.45169970703267787,0.413183594462406,-0.1345249122950663,0.27097476757233363,0.3232903473587063,0.5226950060605078,-0.12804570049564154,0.3305823650636681,0.45304635883336314,0.5117248704885784,-0.12324924502725691,0.33077793430496694,0.44641992116140283,0.5292283152133712,-0.12925292784260245,0.32926964818398163,0.4427135094961275,0.5399167863788528,-0.12447548570444443,0.20840218508163266,0.4226556085905655,0.38126212719653846,-0.13098681631242615,0.3119501151181524,0.43106551195337695,0.5358129077857806,-0.13646178535074918,0.11314577738055448,0.2481624753839814,0.497632444956429,-0.2795700908114036,0.3031853600532232,-0.055009104719681935,0.5280663942779883,-0.12816477190098824,0.345875282215742,-0.06945387658435387,0.5176797108284622,-0.13578886603809764,0.3230996516319365,-0.07143222756705339,0.5366289118676189,-0.14163170137763464,0.2453387053570433,-0.18968315570819563,0.5422410344711379,-0.19023483844322678,0.3022298246241676,-0.08732116144899311,0.5206303711243602,-0.14045950174262622,0.19777700690969666,-0.28203027734479985,0.538397732749473,-0.2233638395158359,0.2495612723917579,-0.23007813404521127,0.5268676251911173,-0.20214320097235206,-0.4368955930501762,-0.44171968060773137,0.5107906439305385,-0.4382595368871992,0.3221218241282782,0.38144763537910276,0.5361610088570802,-0.12333339400597057,0.1599461507455016,0.3396754021538251,0.3935552781848383,-0.12104245627482083,-0.006374938095312546,0.380788777642615,0.524267244279449,-0.12086648602325623,-0.061564487934603285,0.346836455447392,0.5317035210271355,-0.23232884145051066,0.2344461179577994,0.34946870669823227,0.5315065706118068,-0.12162041846051493,-0.07444080211833991,0.2865958462093521,0.5447653450654711,-0.21740821527395254,0.04096121414270887,0.20649643893348202,0.5227588781366855,-0.21539904841961077,-0.2079076536304273,0.07661257083074391,0.5203435821831233,-0.51,0.15940167715779638,-0.17664846159147196,0.516200557308345,-0.18123736302853183,0.0748486267042624,-0.3012518391988232,0.5195733347031306,-0.2909473562990337,0.13404494990395568,-0.35860109098289406,0.521742700550469,-0.30263291094361994,-0.01965136967397749,-0.4640816091719388,0.5241196560262287,-0.44276880157455367,0.01726887059695141,-0.3703378851879955,0.5406746937746073,-0.34356591801397784,0.025721061524593764,-0.5048314263011963,0.5446796022878193,-0.43820393147040293,-0.1008261423342688,-0.4895980819351898,0.4906220345464547,-0.51,-0.08588271488292788,-0.51,0.5348636568450549,0,0.2900619138509539,0.4010083195103319,0.524861220057225,-0.12357998469880999,0.33054663420781777,0.3791012140279355,0.43973581741831774,-0.14254822744555606,0.17080146713350866,0.3002092273411489,0.5420552259968637,-0.15424237809947353,0.162991563607583,0.29597357895250365,0.5350961715881553,-0.23732341192065232,0.29739854577684394,0.36321532828478115,0.5433935774186702,-0.14190609884187072,0.07188451645845689,0.19201884097863328,0.5322007490175305,-0.27395185720156573,0.06732180129622689,0.18555697033517451,0.5348305349903463,-0.2505608329593497,-0.0038703301468850943,0.08194133579881588,0.5185508662884303,-0.3972275180124054,0.31483796585183693,-0.1534715728865415,0.5058643021528644,-0.18268615809841887,0.06879196851902893,-0.2971929119576894,0.5252872405082177,-0.22663469451810153,0.1835848166069725,-0.3238123724979408,0.5359477791378263,-0.2525862329849111,0.02350709866267713,-0.4650393193761975,0.5332014270909886,-0.3640898781525554,0.21290124408786779,-0.28877719267496654,0.5318538583873398,-0.25697328403760883,-0.34748760941982326,-0.4946911681080241,0.5239821150662324,-0.51,-0.028657078609018574,-0.42115804275657837,0.5276318484869829,-0.47351021752398814,-0.06685212903484442,-0.5036111249999999,0.5211354560282259,-0.4728157563606048,0.1815484134693096,0.3511193195815138,0.5285844203353862,-0.14693319688352402,0.008227595104663005,0.2997086298249525,0.5235762775962791,-0.2538851105138272,0.08205140543935704,0.2348668821524563,0.4930117125127294,-0.2541390463792891,-0.021657767366892622,0.09840104233216738,0.5171689226229615,-0.51,0.19016813124349405,0.19253319276907632,0.5424065298249805,-0.23236933665000298,0.0399855085956748,0.07585938277165784,0.5208000610468728,-0.4721593988076659,0.002639251909856949,0.1153507883076561,0.4956108607968653,-0.3915217428110105,-0.11,-0.009744957733968374,0.488774700206,0,0.06226186705015515,-0.37557167267978814,0.5282497148652666,-0.3528052293867022,0.04834580244519046,-0.49219787766413026,0.5149760769223083,-0.44681185979601357,-0.044962287484135804,-0.4920832476896443,0.49532647587137296,-0.51,-0.11,-0.51217125,0.5225743464241226,-0.51,-0.0692828377647822,-0.491692755946817,0.5145064936152048,-0.51,-0.11,-0.513256741767948,0.5354579902472791,-0.51,-0.07331301154523567,-0.5079314576723845,0.5251677992608634,-0.47874129234820567,-0.11,-0.51012375,0.4439600695782935,-0.51,-0.19835421128581684,0.1980539918092976,0.5140354662814266,-0.2388375603539809,-0.5422017078971232,0.07686496481394776,0.5289633213236693,-0.4380566745593704,-0.08579999869786005,0.1507215677374291,0.5404832233988472,-0.36287249855669285,-0.61,0.43834371636553154,0.13610775421258195,-0.51,-0.7879533314567937,0.14780185603478582,0.535750889669527,-0.41702945873910086,-0.61,0.02868758925831369,0.5288086706104496,0,-0.1558182829912129,-0.01,0.5271032375530801,0,-1.01,-0.01,0.3861593176685636,-0.51,-0.6044282279505664,-0.3886405627850991,0.5374494049582744,-0.51,-0.1572554274092627,-0.48087285856353823,0.5274647427818119,-0.48746579506768467,-0.11,-0.4254403575095167,0.522166994735462,0,-0.11,-0.49256301399452285,0.5041731216396261,0,-0.11,-0.51,0.5242421981568621,0,-0.11,-0.48357954877195447,0.41688446843809285,-0.51,-1.01,-0.51,0.43474985174106223,0,-0.11,-0.51,0.261654410898315,0,-0.1614625,0.09403112231713373,0.5280109686081288,-0.3863635329014894,-0.1094977219318662,-0.021137500000000004,0.535592245899123,-0.44175968958203976,-0.15445531935989418,-0.01,0.5272452741288943,-0.47365154384301356,-0.11,-0.01,0.4137655675492427,0,-0.12045894277521234,-0.01,0.5368803130142853,-0.472563820630222,-0.11171247403070159,-0.025720288023975788,0.4488867439521746,0,-0.10670715159612668,-0.01,0.4522210443025949,0,-0.11,-0.01,0.26657425956771175,0,-0.11,-0.51,0.5232711628458019,-0.51,-0.12049301020174932,-0.51,0.5060009332446981,0,-0.11,-0.512025,0.4167435405742864,0,-0.11,-1.01,0.3974542821407446,0,-0.11494213142694118,-0.51,0.38201880899498347,-0.51,-0.11,-0.51,0.09,0,-0.61,-0.51,0.17412658573425693,0,0,-0.51,0,0,-0.09363196261042253,0.03173812778140709,0.5336726213923444,-0.3881742064891807,-0.880147975499565,-0.01,0.5202028994554334,0,-0.61,0.028771775679711717,0.5280739856005167,-0.51,-0.1216315595385057,-0.01,0.41064640176575623,0,-0.1132947246436684,-0.01,0.5383935287028857,-0.51,-0.11,-0.01,0.37692249570771463,0,-0.11,0.026056239205461275,0.4168644100550311,-0.47607796627617616,-1.01,-0.01,0.22777977789153012,0,-0.61,-0.4703077248795249,0.5125079343680808,-0.512025,-0.08199041703002483,-0.51,0.43810609183113985,0,-1.01,-0.51,0.37689053259611016,0,-1.01,-0.51,0.1796282894640387,-0.51,-0.11,-0.51,0.4378480998510567,0,-0.11,-0.51,0.11922791123404988,0,-1.01,-0.51,0.2848624161822494,0,-0.11,0,0,0,-0.08167606176123215,-0.01,0.5008062669203636,0,-1.01,-0.01,0.4098928843117532,-0.51,-0.15840464949521962,-0.01,0.4373377050202006,0,-0.11,-0.01,0.37606186999265545,0,-0.14250977761767117,-0.01,0.4442996096317265,0,-1.01,-0.04426657022286039,0.2277962637922271,0,-0.11,-0.01,0.1706465351994277,0,-0.11,-0.01,0.09,0,-1.01,-0.51012375,0.3188769148710114,0,-0.11,-0.51,0.2719972144941235,0,-0.61,-0.51,0.2699368847167491,0,-1.01,-0.51,0.09,0,-0.11,-0.51,0.1361286115799666,0,-1.01,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11855129694205027,-1.01,0.09,0,0.21792218831888233,0.4641390019470245,0.03129648581044517,-0.16761074157805864,0.272750008137411,0.45415778250396266,0.02430523622489544,-0.19820302953438676,0.03141351712744704,0.45031139089542443,-0.03094734767304139,-0.20960182853483217,0.08654064718225912,0.45037227048132145,-0.0884631695330771,-0.2846600431028155,0.2525845396876788,0.4583540210735736,-0.0006521056251701306,-0.17657444351696386,-0.04450882439419819,0.43761465485591095,-0.18955486105955538,-0.28341952943716336,0.009201806759716788,0.43916772565072104,-0.2676074486789061,-0.35999265250997914,-0.07204047071760389,0.3885331194826558,-0.3247252828623083,-0.4717569964085189,-0.25749292665853213,-0.2045359566332694,0.03050340758138304,-0.33078312666218695,-0.34006576558654605,-0.43910754528965423,0.03339401642345483,-0.4954748876854972,-0.32185496816375964,-0.44307081577502194,0.02529051535665399,-0.4267094641439848,-0.451223979229594,-0.46680737229225555,-0.021648204493459715,-0.45798847414004235,-0.3483002838484309,-0.41811928837887163,0.008493199346378703,-0.4465075148759368,-0.3564452606052277,-0.4503651940755605,-0.011502765211831217,-0.46156878540686136,-0.4078383149755338,-0.51,-0.03010331056921541,-0.51,-0.25051250375652323,-0.4856451052064411,-0.33374822290846556,-0.4806061471852404,0.10995903217745148,0.38576674450679166,-0.03230610738747279,-0.16584344042191257,-0.17921117523033808,-0.1304623041130605,0.02406248239386165,-0.2071480946574756,-0.05783464577064645,0.08308705459783217,-0.053634906576276106,-0.15656648800826986,-0.29832905005802446,-0.14215804085235037,-0.01822104055335474,-0.21186254804470422,0.00631346761629384,0.10253328705813354,-0.07387999178869596,-0.14000372237314015,-0.2563018699906451,-0.1468453985399134,-0.06646549950156701,-0.26398874682127854,-0.10131892406938615,-0.01203437386716913,-0.23865928072020567,-0.20796926517764924,-0.28188733879319267,-0.11690878921297054,-0.26869686100107126,-0.30127769577658503,-0.392899192199092,-0.510135,0.011689984135383136,-0.42816308605817566,-0.51,-0.51,0.009553522119380289,-0.51,-0.32630382208761516,-0.4841463345716037,-0.06245208693216228,-0.4699066373868711,-0.30942173533488676,-0.5148611966162173,-0.23710976302026085,-0.418025586982823,-0.4056430008322921,-0.51,-0.07430094363209987,-0.5114745631430785,-0.4412317184611511,-0.518382482421846,-0.10341935940950656,-0.47150346804001275,-0.19112453107553443,-0.51,-0.36541764999480436,-0.44908312738790557,-0.09976421146512388,-0.5106975,-0.41,-0.4743709297146624,0.1655892325150773,0.3561861435852828,-0.005224971230540611,-0.18797766333145985,-0.20809233867205446,0.36870792839353783,-0.1533646430419772,-0.32355284511028376,0.015703899577837747,0.12004292352985516,-0.032011048996986646,-0.2157886188586567,-0.1530723650386286,-0.05225351930787487,-0.21965794113688253,-0.4088122784021514,0.175083298462822,0.10214464025804695,-0.03128343822730483,-0.21478353769663908,0.03197399095974704,0.12897446865154868,-0.3645496535628836,-0.3471371480560922,-0.10275029193242574,0.013954302317822048,-0.1907064706783615,-0.32527624363219126,-0.1615371610679458,-0.07602119329787432,-0.3323408197538112,-0.42656751476583565,-0.36650437430049704,-0.510135,-0.001846639085820701,-0.4893828477447121,-0.3426783478256503,-0.4602953392544475,0.0004324592114785999,-0.51,-0.3707235277869131,-0.51,-0.02641238192873411,-0.5048548022954907,-0.45106586036859314,-0.504117375,-0.12780118958975267,-0.510135,-0.51,-0.51,-0.028427674586052658,-0.51,-0.15118267994042053,-0.4920156213683712,-0.3652421830124135,-0.45418932790848043,-0.45391620856658293,-0.510135,-0.20984410705605752,-0.51,-0.18525447012936863,-0.5053395957201915,-0.41,-0.5045575906452604,0.0264349278413789,0.350887350666797,-0.22853864393084988,-0.4628437526522215,-0.2884857775927478,-0.14677196028118908,-0.027602702810888346,-0.3630395501148762,-0.1716209078966714,0.03584959697042927,-0.24744298681311455,-0.330776126723501,-0.15400391435145344,-0.14624022813260745,-0.2116534614397925,-0.44789871906191936,-0.04357550250057213,0.11602394109353803,-0.3209269312596726,-0.37443310781256955,-0.4132444358636894,-0.14630431941843586,-0.40391374999999996,-0.36450052566436264,-0.13076171707145062,-0.06594790721205193,-0.379766696968296,-0.4192218014470005,-0.2068604421162588,-0.1338197834055377,-0.41,-0.44520147908273877,-0.31621516934136784,-0.48254357814683835,-0.13426392064627893,-0.51,-0.61,-0.51171,-0.07571857182620126,-0.51012375,-0.51,-0.51,-0.2417398778352325,-0.48020098713554904,-0.37661136385098937,-0.5131605435657798,-0.2517199913110709,-0.4832925389617043,-0.42074133768284244,-0.510135,-0.329565521074838,-0.4909590055570958,-0.1262500635714679,-0.51,-0.41,-0.51,-0.4421678465432411,-0.51,-0.36436390478128444,-0.510135,-0.61,-0.51172125,-0.3201601214532258,-0.51,-0.14183145885423346,0.45444337748853775,-0.3259717326790378,-0.4328422046473296,-0.11,0.4392132076284939,-0.41,-0.51,-0.11,0.4439138916823983,-0.36697825029728254,-0.51,-0.11,0.276258847578704,-0.41,-0.51,-0.11,0.41893324765454865,-0.36631237158620306,-0.51,-0.9861021021122546,0.3146443593484527,-0.41,-0.51,-0.61,0.22471195479917067,-0.41,-0.51,-1.01,0.054155090234719816,-0.41,-0.51,-0.45678898545244867,-0.51,0.01735778038448497,-0.48092265394071215,-0.48910988621375023,-0.51,-0.06293547690866913,-0.51,-0.61,-0.51,-0.09695521057864005,-0.512025,-0.41753491528364634,-0.51,-0.2973179661118867,-0.51,-0.45850578857601837,-0.51,-0.1221302172857835,-0.51,-0.08913646092515277,-0.51,-0.41,-0.51,-0.20820022094185722,-0.5023387500000001,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.13623406606020236,0.37471770133698157,-0.33963141182549667,-0.4780631733820345,-0.20361124185156604,-0.09571706708786923,-0.41,-0.51,-0.09761745164798834,-0.04513739159423871,-0.41,-0.51,-0.11,-0.0683155635873276,-0.41,-0.51,-0.11,0.08067881160322693,-0.41,-0.4816422445327021,-0.11,-0.03967583553123558,-0.41,-0.51,-0.11059625000000001,-0.054679698727951684,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.42935283437847876,-0.51,-0.3681704571136132,-0.51,-0.2879595468333472,-0.51,-0.3650988797710043,-0.51,-0.61,-0.51,-0.3856230196498814,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,0.3296256838512966,-0.41,-0.49238991124219605,-0.11,0.18198632822908567,-0.41,-0.51,-1.01,0.07124949504267689,-0.41,-0.51,-0.11,-0.0029578942127270044,-0.41,-0.51,-0.11,0.1208013824458654,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.61,0.008340071953996997,-0.41,-0.5106975,-0.11,-0.004825,-0.41,-0.51,-0.4681782462719847,-0.51,-0.26533304054500456,-0.51,-0.1181163832900657,-0.51,-0.41,-0.51,-0.5065058438394796,-0.51,-0.349687915529495,-0.51,-0.11,-0.51,0,0,-0.4373899043191503,-0.51172125,-0.2936016280624056,-0.51,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,0.16968359985219997,-0.3707262511061868,-0.51,-0.11541203556798746,-0.11379446556969018,-0.41,-0.51,-0.11,-0.011751650597058447,-0.41,-0.51,-0.12074094840746764,-0.12782808798899017,-0.41,-0.51,-0.11,0.06189719959548447,-0.41,-0.51012375,-0.11,-0.01,-0.41,0,-1.01,-0.01,-0.41,-0.51,0,0,0,0,-0.61,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.61,0,0,0,0,0,0,0,-0.61,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,0.29524013995458714,0.3353554628910672,0.4644975244882075,-0.16568955187491177,0.3066016562633743,0.3132322914508464,0.4295215871031094,-0.21268988937072897,0.2981909423967304,0.3514002319305102,0.4084263312418957,-0.20704131684418933,0.1953013923881093,0.181228213170973,0.39616578262024915,-0.279697440197472,0.16768043086642986,0.19817665142163857,0.41204445848878235,-0.20365603704771268,0.1776742313410824,0.2195890913338186,0.40947625985126607,-0.2549010505641683,0.10295497190058872,0.14493039656926116,0.3932127735891442,-0.3097459664566236,0.018770549678657572,0.07444431676375837,0.44183928427586205,-0.4822809360864099,0.24303641581409424,-0.13065790537826893,0.46198888816574646,-0.23796749756351113,0.24649249451794997,-0.25865005702796107,0.4425784904626746,-0.27503826791559377,0.1301297518435091,-0.23965029036099722,0.4431845410636027,-0.3147848534175231,0.027762402710543727,-0.49950050207459745,0.45699836272880306,-0.46459196726402396,0.1201666478357955,-0.2483225942038409,0.3438761024024179,-0.25475984766968707,0.09864805117095306,-0.43722841802642043,0.4115354178189361,-0.4613833504663273,0.025504939685863898,-0.4214307177453789,0.35326862372141077,-0.3708605734256901,-0.07953224787612137,-0.50346375,0.3775656175594946,-0.51,0.16269750220265292,0.38356995514957054,0.07582055904703672,-0.17438680232301554,0.04415854977672737,-0.024035949532587114,0.09506071876782929,-0.18459040459364087,-0.004261814239619376,0.014153101105475222,0.0382524579529297,-0.19180627741273373,-0.040661098167113954,-0.04660897203794538,0.08980095079303518,-0.2601946504426651,0.018140967439320217,0.1110959414824805,0.02580856235502668,-0.16710564911875256,-0.05638753030055099,-0.052718129078402294,-0.016128300110709645,-0.29022970305539375,0.0014508260418732224,0.04410177780821364,-0.006464482092466781,-0.18565939469770698,-0.05409788097512645,-0.08560379140590285,-0.02771850809483645,-0.31761351959956585,0.00788398456744245,-0.32505029023302223,0.0849942577375114,-0.38318540010098007,0.01909080413011087,-0.525240756350054,0.09442745733391499,-0.3387524112817975,-0.37735648105421743,-0.5045062261260517,0.005126489944169725,-0.3734618882872471,-0.06185391327016954,-0.5161043672046428,0.03532285192492995,-0.47119492675586633,-0.10974417105957424,-0.45245801473477015,0.048849597596526954,-0.40165970257977424,-0.11,-0.51012375,0.043383272170140916,-0.51,-0.08978877146121408,-0.5046126844042157,0.04785633867403456,-0.4428304124699146,-0.036216185181768765,-0.51,-0.07975413230086172,-0.51059625,0.24204430208639915,0.2179171202845534,0.3580695886076312,-0.267332999548622,0.11949447319608547,0.2316561982082856,0.1460253572120299,-0.33260875231839243,-0.03789680994578698,0.014401908821506056,0.05507490025266102,-0.27968089372688065,0.012475093930521899,-0.007908848480222627,0.07107703343753845,-0.36215723686422113,0.05863497878447161,0.1636906793291375,0.0586143800244029,-0.2757263045997571,-0.11,0.03171322273950705,0.04797301834847417,-0.49326541517623756,-0.03851078856298323,0.02665629863028613,-0.007919215631689281,-0.32505421385152633,-0.08841716893185698,-0.03221650732198689,-0.03414012967295497,-0.4727600710033098,-0.05321367500591885,-0.33365893849682493,0.3878364930740908,-0.44133568624119235,0.009226456564812024,-0.49212155681854136,0.34835756127537,-0.46501650443611703,0.055862993133016174,-0.4977078036490341,0.05994831195746214,-0.4308051585125231,-0.03196251068784831,-0.50290125,0.05678163398451584,-0.5077363046228961,0.03571541829724113,-0.4637090779271458,0.0601276472257547,-0.4690252419524607,-0.06615377235208159,-0.5025577244895439,0.0795504438580196,-0.51,-0.11,-0.5020260795329252,0.04435068850035345,-0.51,-0.11,-0.51,0.053843922210775434,0,0.07677833493910703,0.3341203632459868,0.017421370414304325,-0.3969988670991132,-0.009969851672678796,-0.052067563891990805,0.04764285430421055,-0.3614691700280406,-0.2030250582288255,0.03735859950152518,-0.06825158022893894,-0.2184825056931874,-0.08487132083253286,-0.0826368949467082,0.04200000874126011,-0.414517331346001,0.009631986736887081,0.12963255634216683,-0.06548198843228845,-0.2691109538719022,-0.5190436537376113,-0.08826430184237583,-0.0497435040360881,-0.3896005431406908,-0.11618712231574727,-0.06470410821817123,-0.05517530098383858,-0.345911843352557,-0.10348697214765636,-0.09639914927573799,-0.08604856068731599,-0.41716859666984824,-0.057923361110221554,-0.47562803117720437,0.019506691003572205,-0.4219447727409521,-0.07096858712555784,-0.51,0.037668768140566536,-0.5114625,-0.0014999483998578017,-0.48855288664596513,-0.07017564746717442,-0.46374307138867105,-0.008956664881027133,-0.5184730439927544,-0.12430020548398302,-0.4697561889057483,0.1770639228822405,-0.4631750298179671,-0.04640203758867885,-0.5045465312094948,-0.11,-0.51,0.019956934611406487,-0.5047138648237,0.148633896371128,-0.51012375,-0.06956806623670274,-0.45142619798119754,-0.12611580279444976,-0.5170191071359377,-0.07140465244550812,-0.5076492179475074,-0.4608441240681602,-0.01,0.45517168231245847,-0.4108748859364653,-0.08421346299656368,0.03363413203945157,0.42743151549338415,-0.51,-0.11,0.03013302580320574,0.4103173473379361,-0.51,-0.11,-0.01,0.34579852844261944,0,-0.11,-0.01,0.31546884729610913,-0.4427241254425698,-0.11,0.0221956418270313,0.26277330565925694,0,-1.01,-0.01,0.23038634357978532,0,-0.11,-0.01,0.11775273912599418,0,-0.7261945737693595,-0.47487848663939647,0.42897728451391814,0,-0.11115875,-0.51,0.3451008660645038,0,-0.11,-0.51,0.2617493489864684,0,-0.61,-0.51,0.16476696484295825,0,-1.01,-0.51,0.36239465905884144,-0.51,-0.61,-0.51,0.09,0,-0.61,-0.51,0.22064595944710425,0,0,0,0,0,-0.07841669826455899,0.3588911539015504,-0.004881119433085583,-0.5106975,-0.11,-0.03306582948966674,0.08028971907692192,0,-1.01,0.04553630541526113,-0.04097137612703519,-0.5007814281569857,-0.11,-0.01,-0.0016203956206285175,-0.51,-0.61,0.08167048289108506,-0.021117479217116524,-0.5046066117344995,-0.61,-0.01,-0.011715392542077957,-0.51,-0.61,-0.01,0.07579883142142801,0,-0.11,0,0,0,-1.01,-0.51,0.05871791663703651,-0.51,-0.11,-0.51,0.056294310250551344,0,-0.11,-0.51,0.08493203275239122,0,-0.11,-0.51,0.09,0,-0.61,-0.51,-0.00981986564508765,-0.51,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.17703670330307086,-0.01,0.26956409362820666,-0.51,-0.11,-0.01,0.22292747353058318,0,-0.07232366413523311,-0.01,0.03654645839692397,-0.51,-0.11,-0.01,0.055910961663755705,0,-0.11,-0.01,0.04197398198910088,0,-0.61,-0.01,0.08425322397287587,0,-0.61,-0.01,0.07732297892157092,0,-0.11,-0.01,0.014757665228154596,0,-0.11,-0.51,0.3266732687681157,0,-0.11,-0.51,0.2024364042962244,0,-1.01,-0.51,0,0,-0.11,-0.51,0.07765124513472253,0,-1.01,-0.51,0.06701082438321966,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.17036803652224367,-0.015570244107099836,-0.51217125,-0.11,-0.01,0.09,0,-0.11,-0.01,0.010158882170453023,-0.51,-0.61,-0.01,-0.01641743195859453,-0.51,-0.11,0.018062324973440333,-0.029004267343588238,-0.51,0,0,0.09,0,-0.11,-0.01,-0.013375736621804173,-0.51,-0.61,-0.024173883465316306,-0.014886317456678944,-0.51,-1.01,-0.51,0.075670299510773,0,-0.11,-0.51,0.07808970934379424,0,-0.11,0,0,0,-0.11,0,0,0,-1.01,-0.51,0.09063376102311746,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,-1.01,-0.006308323868492727,-0.51,0.1677095521026577,0.4450862487995031,-0.10279249915565304,-0.20748925606644686,0.01715575180952257,0.43609745873019645,-0.224795405438224,-0.3297755202429542,-0.02894905667180543,0.4330235004277144,-0.24778409114513042,-0.46559388977479593,-0.031840581325251555,0.41452498436967294,-0.35790416037849193,-0.4706496413511289,0.07089157451965857,0.38438586699102273,-0.23289363847299582,-0.379514900536258,-0.11,0.36029017905640726,-0.3727696252895217,-0.4969265485249642,-0.0657547602044624,0.3101356947402009,-0.36249600923882064,-0.4906924515277439,-0.11,0.24557171973424688,-0.41,-0.51,-0.37066930668882564,-0.42853214740674933,-0.06337085404047521,-0.44050666421017765,-0.40878621262297193,-0.51,-0.0897635224295441,-0.4882429955805327,-0.61,-0.51,-0.16472090643982384,-0.4892776146878078,-0.42527504640837627,-0.50290125,-0.2948197796064944,-0.5044978890191391,-0.51057375,-0.48058261067443847,-0.1535546704443376,-0.47610704193507014,-0.3767460729790937,-0.51,-0.2606375398891735,-0.51,-0.12773279376278926,-0.51,-0.41,-0.4747345704196778,-0.11,-0.51,-0.41,-0.51,-0.2590005427834002,0.3722302400435467,-0.4531665101025891,-0.44217920121708104,-0.2135947210024824,-0.14590146909550616,-0.49556740676869737,-0.2960044508177463,-0.16851933600755106,-0.09004651637644248,-0.4751515215022128,-0.2916148745473868,-0.32437367128859224,-0.16651364569789262,-0.5325953730804592,-0.3428195281991576,-0.06913735311387031,-0.047473442191799636,-0.4752925167057398,-0.42348780222298954,-0.22106934423337937,-0.1508309314321279,-0.49870555484252643,-0.43929610459624446,-0.44350094624378045,-0.06639360889101661,-0.45366662533612045,-0.3848688044526863,-0.15859543765770268,-0.0876516947438645,-0.4106975,-0.4384128670480491,-0.5183890882052119,-0.385436609839679,-0.5169181561599067,-0.5061972535337476,-0.43181214869039636,-0.51,-0.470876010849247,-0.51,-0.36508742265995775,-0.51,-0.4544262681813557,-0.510135,-0.25134962040077663,-0.5106975,-0.41,-0.51,-0.51,-0.5114139635459631,-0.5086575335738426,-0.5054941378710732,-0.31058247689552787,-0.51,-0.41,-0.51,-0.4201706529835544,-0.51144,-0.41012374999999995,-0.51012375,0,0,0,0,0.007302554175872375,0.36597947858994967,-0.37919928467659925,-0.32215209452442983,-0.07636244051622723,0.3606091555812771,-0.37060736993919907,-0.4836123859599303,-0.19710875009793402,0.10683037618803902,-0.45932896747544694,-0.3971745946514184,0.1431268763666087,-0.08574087624748683,-0.43773838387580066,-0.3788950106797191,0.18909252992270464,0.0896159160860728,-0.3938103535572253,-0.37994426125993475,-0.11,0.07838106940352549,-0.41604838590472876,-0.4744732096915085,-0.07448401458161061,-0.019652252974328897,-0.4404510014598605,-0.44342900747034164,-0.11,-0.08195372479174906,-0.4260506872525102,-0.51,-0.39927603184043353,-0.51012375,-0.20227787159147406,-0.5111475,-0.45361305422906717,-0.503012625,-0.3275480630492556,-0.51012375,-0.4539151871611749,-0.51,-0.4352543802434649,-0.51,-0.51,-0.51,0,0,-0.4539151871611749,-0.51,-0.4118264146862476,-0.4938821747074586,-0.11,-0.51,0,0,-0.1416409583396753,-0.51,-0.41,-0.51,-0.11,0,0,0,-0.3980331912462613,0.3481740917921343,-0.44548289241801703,-0.51249525,-0.5656243313656883,-0.14404017028568503,-0.4912886766008617,-0.51,-0.12046371345563192,-0.045486558612220056,-0.4327931812450232,-0.45659214377172674,-0.11284446316850129,-0.03404014057333149,-0.41,-0.51,-0.0808653733360792,0.09003134546184954,-0.41,-0.510818362130122,-0.16315315450629558,-0.13269448218760782,-0.45560132481956256,-0.5098056595331532,-0.11,-0.015601735146486518,-0.41,-0.51,-0.12324616525770934,-0.12286942148748203,-0.41,-0.5072962968439337,-0.19287710675211145,-0.51,-0.4700698593370382,-0.51012375,-0.10185666153481099,-0.5130106523893565,-0.41,-0.51059625,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.10981787014571062,-0.51,-0.41,-0.51012375,-1.01,0.40657519119252095,-0.3731335657376642,-0.51,-1.01,0.20151337428631155,-0.41,-0.51,-1.01,0.1279281290480456,-0.41,-0.51,-1.01,0.08437628673914754,-0.41,-0.51,-0.11,0.2507459487468654,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,-0.005126589770857449,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.61,-0.51,-0.21344788636898343,-0.489925287711733,-0.11811765105541605,-0.51,-0.41,-0.51,-0.5065058438394796,-0.51,-0.35074431956147717,-0.51,-0.11,-0.51,-0.41,0,-0.20012375,-0.51,-0.41,-0.51,-0.11,0,0,0,-0.61,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,-0.11,0.2297831347961623,-0.41,-0.49891674498810834,-0.61,-0.09866218939378094,-0.41,-0.51,-0.11,-0.014419758579542254,-0.41,-0.51,-0.11,-0.047910326284578,-0.41,-0.51,-1.01,0.016492294569641762,-0.41,-0.51,0,0,0,0,-0.11,-0.01,-0.41,0,-0.11,0,0,0,-0.5065058438394796,-0.51,-0.4924856576043807,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.20059625000000003,0.20005026838468676,-0.41,-0.51,-1.01,-0.01,-0.41,0,-0.11,0.0068111082531650356,-0.41,-0.51,0,0,0,0,-1.01,-0.00033714522210464637,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.5065058438394796,-0.51,-0.3404180071644514,-0.51,-1.01,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,0.09315639379139448,-0.4126578180101299,-0.51,0,0,0,0,-0.11,-0.006527858670771857,-0.41,-0.51,-0.11,-0.01,0,0,0,0,-0.41,0,0,0,0,0,-0.61,-0.01,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0.3303166595599271,0.42419698980602427,0.5410412363572568,0.37731840946879447,0.27602534087706,0.45134559377570566,0.5438583040211555,0.4040648595349187,0.32227672479704456,0.4494028517130168,0.5296524605064603,0.4055518501586513,0.2998651059893128,0.4392984092300084,0.5391197230964337,0.409482408159337,0.32391400969925255,0.3425804108992498,0.3435058218883124,0.4022450832358497,0.24189727586870702,0.3684867484876242,0.5218351034174314,0.3859253039649574,0.2928462973842822,0.343520931090064,0.5180246899106095,0.35477696528615327,0.3451861120179733,0.36797068605781663,0.3734868276158918,0.3832284045591818,0.3569077357041927,-0.07974135488666531,0.5026762146603752,0.39913538759510153,0.26331913815159314,-0.07176046379581912,0.4998882373051702,0.40667662272502325,0.35957833796039723,-0.06600583633916049,0.5359796460615727,0.42150417858965167,0.27375508653659103,-0.07562100446504252,0.5489440509631255,0.4107356582722153,0.2735566818234023,-0.08853424939029393,0.5179609280130408,0.3210971290596184,0.34994564258604083,-0.12676887618259786,0.5042533306995304,0.39535833040358803,0.31806426719137276,-0.1386140322172853,0.4727769678352659,0.41371537809629594,-0.07503442263158756,-0.3042054355703073,0.10256586559280498,0.41053929640723746,0.22604355249273103,0.3846093322440621,0.524270621349089,0.41002799051579863,0.22694242602536074,0.36682519368563377,0.5143482362688409,0.3849747849038233,0.3187388277697368,0.3904734546646278,0.5302083103372381,0.4015849412634157,0.2075759119648701,0.38233952594784054,0.5501054689180587,0.4078457310282273,0.29021374701359853,0.32268311468670124,0.5329329608764584,0.38669964026691106,0.2274922967265758,0.3393608607244134,0.36406406357797316,0.404423946394694,0.27195213400659424,0.37059825669520635,0.5048692404543635,0.40598861961205296,0.08876543696265027,0.28284680753967945,0.5341142981030131,0.3818923127299071,0.33976398107425376,-0.1297072522957764,0.5337721877044403,0.3879418463210082,0.23843325025600567,-0.1642773758162479,0.4914041003713106,0.3559735438244044,0.28305021932777086,-0.23195687063625103,0.538880704880349,0.40923592396838676,0.09186887013696608,-0.3712818105835703,0.5204734874198191,0.310419271659791,0.29115713515703107,-0.2153133080233339,0.5284821199341364,0.3768496409353831,0.2878006076171683,-0.32938719290463986,0.39648719878456384,0.27838726190695545,0.1852231674378756,-0.3746818639452363,0.5138837983903081,0.2715773092185135,-0.5162028891488996,-0.5050401788716267,0.5298919948829419,0.13518928735492655,0.31063849904024904,0.3533168507122104,0.5159826856569254,0.3531122829099413,0.2642435551040326,0.34706967425641555,0.5461185515551997,0.3296168117480398,0.14237910593058445,0.284786076551631,0.3574981424415973,0.4027932491880133,0.2987013150563068,0.2726242399064573,0.5110778297794939,0.26769878523656476,0.23986105678596356,0.22531713788126956,0.38654273178562804,0.2062587711591116,0.16688160959110537,0.36674042421220654,0.2777815627523362,0.25812898805584067,0.2916022621293143,0.3153713587801127,0.4686500804331841,0.28100884925353015,0.22555192488059023,0.1515917212281628,0.2415767168985218,0.36546168284695857,0.35095852552459117,-0.1171551370009277,0.5235528596529194,0.36814989600581105,0.2791067625669207,-0.1615798646021627,0.27730800193893956,0.345243671545923,0.3291083107866079,-0.2133923709741801,0.49618864391941764,0.33466275181439054,0.2240002614438154,-0.3308379181024219,0.5247282602851324,0.28708242456152017,0.22913022024922827,-0.2596893684162276,0.5355566987266627,0.2516849447708633,0.1930560931335837,-0.3263724884856013,0.23499344866550984,0.3731805788456479,0.03847043541998529,-0.374683582713934,0.4859335763579027,0.2752922573797501,-0.055938797783183454,-0.4625433500294387,0.5266943591354049,0.08729979431570817,0.3313808218160011,0.30551748429631903,0.49340662324005,0.30578182355539224,0.21277729516023103,0.28138590082515463,0.5114012436469559,0.27569869455139934,0.20315305794409705,0.28323911390132456,0.5243606691174367,0.29317021960876555,0.11917373796982213,0.20850649273217217,0.46241961888135436,0.33645899430921544,0.1792515174081473,0.2584600027027712,0.5070968552884095,0.31877695205492235,0.16604645584049782,0.1676910324148481,0.5051932668017737,0.2543685042585825,0.2550156724566611,0.19307107637635598,0.5248579274153726,0.23815123882912395,0.05031412388820559,0.06161942204128167,0.46808434114495256,0.17351062033234305,0.17070114040188597,-0.17240156134672377,0.20249057522606598,0.3035125653396037,0.20452206371255616,-0.32422103096102056,0.2557233933901954,0.3939994396197452,0.12267268969109953,-0.44793213290707723,0.19859279193300952,0.34661968132977283,0.047744958985500956,-0.5102216516628926,0.5285370629043536,0.13728153578447094,0.006224592828708048,-0.40467206371273373,0.5204761093265089,0.25562458128590093,-0.0764193535912818,-0.5089182808372351,0.48277373649553673,0.17183953574873254,-0.023049987017756707,-0.4866869685463423,0.4834891173105305,0.20665004868244574,-0.016541821651542374,-0.4908054921482073,0.50546024157008,0,-0.11809789119264603,0.4430903700470088,0.5026033171032719,0.4025187897662496,-0.5700154475385825,0.3689733840365188,0.5231073665305401,0.271283408755185,-0.05764025964819417,0.3605165404830924,0.5460574581365193,0.2089456326852493,-0.06966214011273696,0.1116027831378116,0.5327950923155541,0.03209279641874621,-0.007923530308472416,0.2553408676143523,0.5269483757890989,0.3176858273231431,-0.38877413883944006,0.10977906725113523,0.4768461948954521,0.03247101178175063,-0.3798783747210683,0.06427505770661184,0.5113343569916353,0.06843662605081138,-0.13042258185111755,-0.01,0.4671171643265138,0.032282102223617416,-0.18497902784081854,-0.24449657659747112,0.5324518704349034,0.20537099642546472,-0.2615819737487005,-0.3988470805381469,0.5464949384106419,0.16206059631919525,-0.15415165786616197,-0.3921256650101995,0.5282799488955032,0.10315698946511903,-0.61,-0.51,0.5350544495451406,0.03149471440095949,-0.15644587154481843,-0.4398518695263709,0.48196457266138343,0.18330929471218857,-0.16027314920100155,-0.42959013484846936,0.4591304813306354,-0.01,-0.967288426350431,-0.51,0.5244124021555536,0.06773436493411925,-0.61,-0.51,0.46495604657173956,-0.01,-0.11048821575051293,0.2632085122311505,0.5216444614886908,0.2380837406239485,-0.09464306773535093,-0.006817863226087345,0.5385442419893067,0.032113354692673506,-0.16594424345603886,0.025471821081492825,0.5420809792059553,0.06823651048678163,-0.12849754005277636,-0.01,0.5384554987687988,0.0312184756203953,-0.5103633724109126,0.033722158697683774,0.528719347899435,0.03258393013762042,-0.6020130017622888,-0.020607305982407932,0.5230769276072011,0,-0.11,0.016951385913139286,0.5213833945747538,0,-0.61,-0.01,0.5015885714619173,0,-0.5971684582989017,-0.40194973395288114,0.508996089274555,0.03181536934049742,-0.61,-0.5926078276319808,0.5259664443980081,-0.01,-0.879789839583394,-0.5121052263371795,0.5331149299429893,-0.01,-0.11,-0.51,0.4363674439101475,0,-0.11,-0.51,0.5350130086750433,-0.01,-0.61,-0.5106975,0.4552786441488977,0,-0.06919968965375232,-0.51,0.3929506800226134,0,-0.11,-0.51,0.26757644253730123,0,-0.19299131052652624,0.26689754500148993,0.5231329907676265,0.22168458940931618,-0.18191782180796995,0.0321329402262321,0.5265620990300289,0.06716899511219526,-0.09582449884805888,0.10292365524735997,0.44683448298951023,0.1760449711277999,-0.11,0.0472417456636882,0.2903854423614723,0.09023419759741036,-0.1067514603355032,0.1568618396848473,0.4161400004256992,0.15926883785931845,-0.11,0.31197843920961094,0,0.09979857525504991,-0.11,0.026432327363350994,0.4799190578872386,0.03256773010977876,-0.61,-0.01,0.4797066182834951,0,-0.21179560392337587,-0.3801105220401362,0.4496537881800964,0.0911321446985778,-0.072895638288378,-0.4696762006696075,0.5061553592847339,0,-0.07174141798321554,-0.4855327769908976,0.3210888387069391,0.032870019020930584,-0.8911230656221085,-0.49959444079660204,0.39846430300523356,0,-0.8429476505283836,-0.5005296065954665,0.43421375199948525,0,0,0,0.42798090388827525,0,-0.11,-0.51,0.377290495239856,0,-0.19260331274284975,-0.51,0.2158882406005182,0,-0.11233595463040547,0.02402218856454838,0.5150014305111522,0.11143052660743352,-0.10876138376481564,-0.01,0.46047192085339883,0,-0.11,-0.01,0.36286456685812907,0.05497271030203566,0,0,0.4695370056315152,0,-0.11,0.059654976309753194,0.5079507954578029,0,-0.11,-0.01,0.42834026426313543,-0.01,-0.11167584782211255,-0.01,0.4452700951407066,-0.01,-0.11,-0.01,0.24077334905680414,-0.01,-0.9513149819610155,-0.47588617891870305,0.4567622548378703,-0.01,-0.2006975,-0.5398488780382193,0.42303067606163386,0,-1.01,-0.51,0.3754651690294024,0,-0.11,-0.51,0.17822438816280486,0,-1.01,-0.51,0.42635484073218693,0,-1.01,-0.51,0.24867735855402712,0,-0.61,-0.51,0.22421358200028882,0,-0.16172124999999998,-1.01,0.12663698711510407,0,0.20496703260244026,0.46036456559468386,0.0030588565300214525,0.34745549595124914,0.2380761003824797,0.45166080411258136,0.04003912169447903,0.3346092467474878,0.24884000134502893,0.46415765125952213,0.02357074120886444,0.3510877335147979,0.17905903248610747,0.45222045596313054,0.013602456476789225,0.3525044301542878,0.2531298557847929,0.44719820400699556,-0.02082993660134328,0.31507141096464447,0.13124338313463202,0.41399725060600034,-0.029466540467324942,0.2983200622826575,0.22808582103131061,0.38261257536056265,-0.1227921633267683,0.30918967244909534,0.13318753347938175,0.4248758911005761,-0.1962398447097551,0.19396047050567417,0.16385459515937192,-0.0695176485216252,0.01703894543477081,0.3496589308227692,0.12459096458107202,-0.06475030816037206,0.016514679587900902,0.30920798356018286,0.2045751509075368,-0.07388698891602084,-0.007341932292043692,0.3518778945948451,0.13458521333224852,-0.24363840305964285,-0.06291074035634271,0.35595317221325384,0.17228909538187054,-0.17962280732490368,-0.07114034702135572,0.36489100601679164,0.08923990773171601,-0.2421681690930787,-0.1569110695412926,0.34767279162228126,0.09019754102669073,-0.3023922175844853,-0.1451153551199524,0.3381976916809396,-0.033434513775698824,-0.4767119609083127,-0.2340874510794087,0.3549510926273953,0.28827890628386155,0.3916299393389492,0.007293176079833608,0.35657539668147165,0.13270342080533767,0.03957926818543831,-0.0038909971603622966,0.3532778921048335,0.11190517037226738,0.19679445173500282,-0.03343020420669013,0.38254278581514656,0.052583580449158146,0.036448340280921615,-0.1497838070699952,0.34559190100704984,0.20967774409416706,0.14494838296212284,-0.005934513726110584,0.3757414476413992,0.15192984187536596,0.027936774984682222,-0.25303074567331896,0.3650512225495311,0.07696236358165506,0.09419957655983174,-0.25233172204755105,0.3597351667683929,-0.49324359563764747,0.015577252066951854,-0.3812652759279174,0.3619430766359397,0.14824361556650936,-0.1546812750026551,0.005427297990832972,0.3808950356850106,0.12332791197877241,-0.4719743357508243,-0.10063427944230732,0.36479271686635795,0.1415159549021721,-0.39055448853248137,-0.21909770577266993,0.3654367975955127,-0.05060530498042705,-0.5105812233004241,-0.3230336134291936,0.3638784557209027,0.11094094578877994,-0.48940375547128945,-0.20615107487308454,0.3517530043338937,-0.02857046506287081,-0.5036867774328019,-0.2856246497732846,0.34026201923779287,-0.008230834537317641,-0.5027878003784998,-0.3384807065405005,0.3472970224560134,-0.11,-0.51,-0.3850484805558306,0.357200323764527,0.17913729787333876,0.3494999381951587,-0.010110909221344808,0.2636154045294703,0.2370639091315888,0.28502210719326493,-0.06607315028935037,0.37591419324032177,0.24209231134271025,0.18368091282314275,-0.04776462270829184,0.32338835345330996,0.030826979743116566,0.07770496284319076,-0.1113551705185879,0.2403999071062888,0.2361043198510102,0.19701913272831065,-0.019981700503032634,0.3175346567322725,0.19437456798377037,0.1446558584429964,-0.14429791542691195,0.3448608826920191,0.12755866399619706,0.07892169634318326,-0.2513156147452094,0.35846126406720485,-0.4198914845951501,0.009917351926009352,-0.28546532743192077,0.25079552913158043,0.08428659086547488,-0.19133022291524118,-0.00909110215740649,0.38036289819395297,0.11383879369277486,-0.3182628597591502,-0.12683470377640357,0.3792961770890053,0.1506460973204239,-0.39479980454570984,-0.16221048392046836,0.37835964506029324,0.0703604891269605,-0.4915205788554085,-0.2517762235194353,0.2969540423521076,-0.07055198367793293,-0.43896346216473425,-0.3236631349376149,0.3770716250307933,-0.003901940727024017,-0.5106975,-0.40962924514246446,0.3646533738689892,-0.020118202029551058,-0.4928389114854165,-0.40632716749211834,0.33114473427664615,-0.042445054612410764,-0.5121482758883357,-0.41,0.35621706630880634,0.2677634049809512,0.3628644117492076,-0.10309950906987263,0.27898218593073265,0.06715502521999706,0.05612190482559614,-0.1418710317196626,0.3490886680063211,0.1684084628021185,0.07728379087346937,-0.22931428022847944,0.3166946115213485,-0.033696958530379566,-0.006546382606290535,-0.34725089587194613,0.3223612910944135,0.004135902359601366,0.11880164961509314,-0.3269870665477689,0.33142377492082176,0.022871005601794937,0.0006282856399195519,-0.2852156058066533,0.34783134528705545,-0.48933956330616474,0.048572777528899096,-0.3945470707176138,0.35336826223309775,-0.07354579322053553,-0.009855165817103263,-0.41,0.2993785645553607,-0.07323104118565485,-0.35606357646432796,-0.1781762473432521,0.3717228022817213,0.04528486914191071,-0.514564282415354,-0.2882619465338751,0.37485369022760023,0.06058454620003773,-0.4812662717869638,-0.3638907021320352,0.3276497370548532,-0.11,-0.5113804973381013,-0.34720810737890373,0.35108696043030035,-0.07198045418215608,-0.5114625,-0.40245701937309736,0.3660824340518741,-0.11,-0.5124334875,-0.41,0.369185041044423,-0.10070804817341032,-0.51,-0.40290125,0.3641525159576335,-0.08447747660232753,-0.51,-0.41,0.3239049274369774,-0.021661802853429744,0.4333377858528747,-0.19523678045018614,0.22022536115640332,-0.1616135025446926,0.4405137590426571,-0.37909670759108655,0,-0.07172136549145995,0.4486581141716402,-0.15869811438899548,0.09573229345063432,-0.11,0.40526341345920625,-0.41,0.012916643049272267,-0.10955506051784145,0.3590715098707446,-0.3543788426690671,0.11667675821918164,-1.01,0.41617885468664173,-0.3632581797889757,-0.01,-0.11,0.3733482369531696,-0.41,0.026307141644737256,-0.07123099709747138,-0.01,-0.41,0.23567492883245675,-0.12133716779135251,-0.4338551750601713,-0.41,0.328919548826504,-0.20821096925055121,-0.4432784551709379,-0.379851206092231,0.3469150893755436,-1.01,-0.51,-0.3650500076347263,0.36960165117273924,-0.11,-0.51,-0.41,0.10847172890686317,-0.11,-0.51,-0.41,0.3344979770172874,-0.11,-0.51,-0.37310666689880806,0.12714912512993243,-0.11,-0.51,-0.41,0.22551813252988576,-0.11,-0.51,-0.41,0.11246839516078357,-0.17787334012774414,0.1002646125452655,-0.364575258470613,0.34041518176709007,-0.07503241690916015,-0.023085516208447968,-0.41,0.35700166263814415,-0.07061255959617571,0.024501539018234104,-0.3672874126539372,0.3167634689040982,-0.11,-0.02029273441364797,-0.41,0.2471125640213412,-0.11,-0.008479067180925743,-0.41,0.34474031693264146,-0.11,-0.04943467583699725,-0.41,0.2592999242140372,-0.07184031531398512,-0.012025000000000001,-0.41,0.3074381075361285,-0.61,-0.021137500000000004,-0.41,0.14203119862056024,-0.5249915685675447,-0.51,-0.41,0.34979872197612394,-1.01,-0.5211375,-0.36607790830906006,0.22596088079613477,-0.11,-0.510135,-0.41,0.3218270979155631,-0.11,-0.51,-0.41,0.12456609338343666,-0.11,-0.51,-0.41,0.24900674381499127,-1.01,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.01,0,0,-0.41,0,-0.1286366198888936,0.3240680473592508,-0.37834415215780404,-0.01,-0.11,0.32394032418980107,-0.41,0.049507386527426735,-0.07266152430161754,0.021188183710248807,-0.41,0.32059268487951714,-0.11,-0.011010971674977959,-0.41,0.31588473545319407,-0.11,0.016784438746227294,-0.36464459719669534,0.3371183225529567,-0.11,0.11978958042935042,-0.41,-0.01,-0.11,-0.014097047380917948,-0.41,0.2899997566049915,-0.08480039098031752,-0.011428452779693583,-0.3884072386337728,0.11905952246626664,-0.07372289985174219,-0.51,-0.41,0.31653189634577145,-0.11,-0.51,-0.41,0.1662747591257993,-0.61,-0.51,-0.41,0.20183296163076575,-1.01,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0.2979171283185708,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.41,0.0638219132424853,-0.11,0,0,0,-0.11,-0.012025000000000001,-0.41,0.36402006767782086,-0.10830410251689113,-0.03758246866380484,-0.41,0.29545602831806045,-0.1614625,-0.021704459033235472,-0.41,0.32026338628140183,-1.01,-0.05066409895733375,-0.41,0.15373554567217948,-0.11,-0.012025000000000001,-0.4106975,0.25914373644055616,-0.11,-0.01,-0.41,-0.01,-0.11,-0.012025000000000001,-0.41,0.0672772544737519,-0.61,0,0,0,-0.11,-0.5125875,-0.41,0.1687945376022656,-0.11,-0.51,-0.41,0,-1.01,-0.51,-0.37292402895967547,0.12456667673955028,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-1.01,-0.41,0,0.29205747103883906,0.3908525495702366,0.46289114255969244,0.3851427390910457,0.29263496418708995,0.35714488354490465,0.34123139447938633,0.3999005373746903,0.3161439146971499,0.4109686610902983,0.4763645032629175,0.3857893591272685,0.3364149198490064,0.4040502386303697,0.4436937427090927,0.3753157694320196,0.30931583783400635,0.30566136234402613,0.36579776479145026,0.40090702994788263,0.27924833075705696,0.3293500131057694,0.34202727936392935,0.3811327718338791,0.2632757504687239,0.3034155120394682,0.3161373779526154,0.40276200805157375,0.13846149004957478,0.21992621940767468,0.17633472518281337,0.372975898719495,0.3172346772206681,-0.11613566758225893,0.46653425465254267,0.35297707965195957,0.32356685180081574,-0.07777963475661118,0.48179629694390674,0.33987172380666636,0.31750063773763526,-0.12088474145751472,0.4800781336105937,0.36026134592823356,0.21490633830402883,-0.2784562607965932,0.4542129038610444,0.26187309632593014,0.30082405049291316,-0.1568407444871929,0.451824845728318,0.2981733047781802,0.27639769746869647,-0.26751806622843877,0.4765595104920068,0.2623433520886904,0.20434936612257468,-0.3273706280273989,0.30046372206468597,0.2641619824672877,0.012610628345123706,-0.4284048766080691,0.11440017791885355,0.31341924792555975,0.28049724210718546,0.3127008166150585,0.32945126695933086,0.31832565119851575,0.24035540343277165,0.10537116465646873,0.37853229981405606,0.2547488082301471,0.12150122726203588,0.15637647195269375,0.36070718505238,0.15458857025721226,0.15817798301359431,0.08804240392700907,0.24328648862147004,0.22692974390595622,0.19331094175408903,0.17827071341159037,0.37063964077930334,0.22422267252727604,0.08864449198017396,0.08385431934938281,0.34710925555816774,0.13844546561642393,0.19280042572629444,0.10898792611958522,0.34653302792011,0.25047653034216655,-0.03736545550666405,0.021739696803406178,0.3946837040410086,0.08035345905193864,0.22901776573525787,-0.15508618225858758,0.3867739320076591,0.22281449280426507,0.22786115167593443,-0.4377955113248242,0.173660320194027,0.1685679757797387,0.11292318270458343,-0.4357450365846101,0.30014380871067364,0.16014395018442634,0.00003392221528449729,-0.49814260856166503,0.268359775590659,0.11584869199261325,0.2331354268144034,-0.40031337273797923,0.1658550666798006,0.16224661340877364,0.03956362798293158,-0.5015962879256193,0.21675918137493988,0.05339564672531552,0.006877326949785066,-0.46201889925677503,0.3291505719219125,0.10313432641751218,-0.11,-0.5120854209375,0.36930111284445244,0.057474441328915875,0.26977589613295716,0.30119078139515143,0.4042370656231245,0.2880523476532338,0.24360989756802576,0.2801326981999764,0.3975470418308869,0.28114134921001116,0.10718745191521231,0.17055353294479164,0.36402907229758663,0.18335100395749881,0.17011311808628135,0.07147009274292597,0.3571069167953249,0.1902009006967046,0.19260180412946432,0.19880455002634217,0.19746924612127958,0.32491065128176944,0.2794202648683667,0.11853932794551664,0.19903102983212126,0.21649465854114083,0.1257644823597103,0.11396844947005183,0.3163829004277418,0.2511132727361277,-0.18335995244517408,-0.01,0.2800280026599419,0.04819298345141129,0.3336259025721665,-0.19848789421188667,0.4227358605397047,0.2954137412223713,0.22505355523653997,-0.2541536746059607,0.41995508975731555,0.2612819275543464,0.1659317388408636,-0.46997619509383504,0.3434777875503036,0.23106621045420453,0.12140494564203479,-0.49204999157557383,0.35347747648140204,0.1329799749433665,0.10185192243130983,-0.4100993530509587,0.31222289103097023,0.1918610755576072,0.0726548001154319,-0.4736619795709836,0.2990122875513707,-0.01,0.08159770285302816,-0.5028414804657133,0.15903874663778647,0.07907635951037276,-0.06447630512633627,-0.5058240977679677,0.3213104944907768,-0.01,0.27263268003188723,0.2735371074016319,0.30291034249998505,0.27507300160963843,0.17150605347033837,0.06830783281274888,0.3553723301411536,0.2353565543321952,0.0962827848878566,0.12028499447016254,0.359876498440212,0.22082391469408916,0.1514721135792896,0.009556177943474757,0.35959706437451844,0.11673670061114828,0.14130993824251756,0.11791066476247422,0.35652457808794413,0.12530070130433743,-0.022351246094031385,0.010739601416901595,0.3646498907636027,0.13878805852148643,-0.06747017008435915,0.016910048811820653,0.34142896706721565,-0.01,-0.0738187484619587,0.004113699994771279,0.29035690559603455,0,0.09825114815762911,-0.37200777835737986,0.15194733854157721,0.2313950190851422,0.006881577681999471,-0.5007950141808591,0.34731745194737346,-0.01,0.06802839969926186,-0.47071095923934614,0.3603184689706572,0.09538288207703094,-0.11,-0.5086921617898748,0.3410132085693379,-0.01,-0.0634431098075244,-0.5059418457546687,0.335859347128691,0.026051328535812858,-0.11,-0.51,0.3635264001419091,0.03145326152610897,-0.0701405584391529,-0.5086972728968574,0.3399021552742851,-0.01,-0.11,-0.5041859016612913,0.26649300304354573,0,-0.25877358009004486,0.22929136601226874,0.46398589486927705,0.2626926695495152,-1.01,0.07825032124041598,0.45764012521769826,0.0674945180191727,-0.10017730938455008,0.10917515637139004,0.4480519184605826,0.030271234994301496,-1.01,0.015496196932096843,0.42643652863802056,0,-0.440136108963452,0.11469224189751206,0.41962602317109987,0.004484496803965322,-0.11,0.0378562648154112,0.3155038355534796,-0.01,-0.4436385899599585,-0.01,0.37768286228222414,0,-0.61,-0.01,0.36141671610020587,0,-0.16082850378377056,-0.51,0.4741828784647965,0.030068060140601614,-0.5763708956436088,-0.4671969466811473,0.4702136625435151,-0.01,-0.10879329093996849,-0.49339490732698527,0.45074259519366827,-0.01,-1.01,-0.51,0.21685442594670526,0,-0.5256886133439627,-0.51,0.3864954327457606,0,-0.11,-0.51,0.2983252041850458,-0.01,-0.11,-0.51,0.3044608819943258,0,-0.61,-0.4955022144906721,0.13092209373388466,0,-0.07340738254451054,0.029165359711789553,0.31768883356309113,0,-0.5623940059888592,-0.01,0.3442275497968762,0,-0.11,0.02257718981222595,0.33087909179975195,-0.01,-0.11,-0.01,0.2565615920565345,-0.01,-0.11,0.02165673031041968,0.27384516559694255,-0.01,-1.01,-0.02452204253874926,0.23336378423603935,0,-0.1190691225526981,-0.01,0.27758332485953974,0,-0.11,-0.01,0.21968703636287826,0,-0.10434290623297816,-0.51,0.3053902192060507,0.02986475643334153,-0.11,-0.51,0.23495402257476072,0,-0.11,-0.51,0.3019588048934079,-0.01,-0.11,-0.51,0.10724784428238882,0,-0.17970311509679793,-0.51,0.29387373205496736,0,-1.01,-0.51,0.11152431053812942,0,-0.11,-0.51,0.1503974100981481,0,0,0,0,0,-0.033246587933198145,0.07043474541159041,0.38444122443799533,0.12930545759584672,-0.07014291480324476,-0.01,0.41837723226736995,-0.01,-0.0696783287060721,-0.01,0.30163144358919697,-0.01,-0.11,-0.01,0.28504583024671293,0,-1.01,-0.005014258224016014,0.28983297273899267,-0.01,-1.01,-0.01,0.26899452634004783,-0.01,-0.11,-0.01,0.28533140574057764,0,-0.11,-0.01,0.12604657093572497,0,-0.11,-0.51,0.4141348930133855,-0.01,-1.01,-0.51,0.3471412646052903,-0.01,-1.01,-0.51,0.2980840995158776,0,-0.11,-0.5106975,0.20424162906917118,0,-0.11,-0.51,0.2798397043648018,0,-0.11,-0.51,0.0977801616910325,0,0,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.01,0.304325711658965,0,-0.11,-0.02104103461092415,0.27183466653040866,0,-0.11,0.008074289505624036,0.27810433181939054,-0.01,-0.11,-0.01,0.14303640233382528,0,-0.11,-0.01,0.2767441133332503,0,-0.11,-0.019268686619633595,0.12338889790717521,0,-0.11,-0.01,0.15212264497424388,0,-0.11,0,0,0,-0.11,-0.51,0.22563783875202403,0,-0.11,-0.51,0.14887310899826608,0,-0.11,-0.51,0.15423360679021078,0,-1.01,-0.51,0.09,0,0,0,0.18072256920202914,0,0,0,0,0,-0.61,0,0,0,-0.11,-1.01,0.08281099654097644,0,0.2447296482134089,0.4477944038408839,-0.06620032474926495,0.3341942039344402,0.29422572069879716,0.4456457937538258,-0.07969273099762605,0.3311300881663409,0.23578705357272486,0.44679566899955964,-0.1225929029457017,0.3337849203758802,-0.023470472199754323,0.4337380082015761,-0.3610853053120665,0.1334208860365008,0.20333674763615656,0.3749052219155746,-0.0841925539431763,0.3082847345974436,0.16325103031294858,0.38988728166417475,-0.15429211545508514,0.2551915109771975,0.10266546326700986,0.21129874625824574,-0.24280835016590788,0.2646241476484512,-0.51733906168754,0.16038616450606996,-0.41,0.04041697971802435,0.19720320389331736,-0.13931559764350548,-0.06528692280813565,0.3751102042735728,0.1026819265033283,-0.3531047507148339,-0.1304921691252012,0.36927269496893317,0.059541755107467384,-0.24291888817050866,-0.18041841291288724,0.36074919097088937,0.08056397386674795,-0.46785894587582505,-0.2530003793447046,0.3394347322939964,0.0495556802408018,-0.3750013032734037,-0.24406845529850998,0.35206378521791043,-0.2096863471953874,-0.48274654411373685,-0.3129824952526563,0.38349442714369386,-0.06978895207796684,-0.4704356485888694,-0.3511474480203046,0.3452240102746215,-0.08189108585316003,-0.511314,-0.3885987341127598,0.3137837109216005,0.22494530480689642,0.38445935398355313,-0.21655493412352692,0.3269392147244884,0.017050913453980913,0.02309502148961035,-0.24081725489866154,0.36677433606617355,0.10450558465672802,0.07116921334656436,-0.2853635249705786,0.3720393525145968,-0.07274688991229014,0.0016266580549147112,-0.3618824358345926,0.34956841676472167,-0.23898089256715088,0.07712568656945201,-0.37242888144994074,0.3813130973002947,-0.039266084864148315,-0.00030642941598399594,-0.35806107634409917,0.337308278720225,-0.11236797266436291,0.035616784533729746,-0.4050900242662706,0.37052445364620146,-0.11,-0.008745682796674863,-0.4106975,0.35265403296926656,0.10107081675732824,-0.42115878397319645,-0.23895270774221755,0.35561731723008455,0.0020806643220104316,-0.509000389128391,-0.41044344809146444,0.35779829531644985,-0.019693589242132225,-0.5033554612318789,-0.3321225256772024,0.35975400288238596,-0.61,-0.5120854209375,-0.41,0.35184453603853894,-0.013763632027501888,-0.510135,-0.3639279850882303,0.35899564269546147,-0.43295643912408777,-0.51115875,-0.380282548990417,0.3625709728438292,-0.11,-0.51,-0.40078970166043065,0.3519025207408285,-0.11,-0.51,-0.41,0.2077075159190762,0.2454162787127437,0.32048371255077557,-0.17967393863488662,0.36688081594760275,0.09113618062027319,0.3520707423127607,-0.257260507910771,0.16026492902141712,0.12907411662831972,0.07029376643092237,-0.31976401645124913,0.3742957934010538,-0.2761188355871602,0.006185737461258473,-0.28391548852900544,0.3539894468075334,0.11400415890040788,0.12089727863051779,-0.23359731394346664,0.36447227246801167,-0.0010890197907179391,0.04306683550936518,-0.37972677304354324,0.3531992870288457,0.029695853242253174,0.01762451453020252,-0.4114750296875,0.37090291213108434,-0.11,-0.010594417490569052,-0.41,0.3758885597351571,0.10825545348114517,-0.40689861827751855,-0.3804782460667687,0.3708294704840897,0.031409206875470955,-0.51171,-0.3784321515799821,0.36320689190400907,-0.5235788940433865,-0.48691952139302036,-0.3883558288968108,0.2003625180894047,-0.07348506629403412,-0.51,-0.37790054387769434,0.3466710427690093,-0.007838274223312063,-0.4980447559689235,-0.3774454669350048,0.14191055914279602,-0.08284027961996135,-0.51012375,-0.38247332637197706,0.35931192965738834,-0.07905446694758864,-0.51,-0.41,0.3619935211267793,-0.61,-0.51,-0.412475,0.304104804321865,-0.17405630762097457,0.15318492528744682,-0.3310119208973149,0.33864463541326323,-0.2523342265455202,0.0014212714286155961,-0.3633640322163451,0.3091672015166276,-0.08222016449258163,-0.01077215630120874,-0.3602023037922688,0.34263771712483965,-0.5319746724718746,-0.012275867663192764,-0.41080887499999996,0.34957720636865475,-0.06911989206737645,0.0028113032735315718,-0.40638312850805797,0.32593389429978153,-0.5252267160023268,-0.012025000000000001,-0.4106975,0.3560405085847467,-0.61,-0.012025000000000001,-0.41012374999999995,0.36743026670738904,-0.11,-0.013293248444483772,-0.41,0.2502712345538178,0.008375820757684779,-0.49743843957272516,-0.38536782227878097,0.33293464438261794,-0.0715082722276068,-0.51,-0.3787710785132383,0.3131787234477289,-0.11,-0.511464778125,-0.39930721200242203,0.3237518772769199,-0.13607842060134973,-0.51,-0.41125999999999996,0.19197751201324081,-0.11,-0.51,-0.41,0.2785365796546371,-0.11,-0.51,-0.41,0.24054881593334163,-0.07423092022446734,-0.51,-0.41,0.11643134414631337,-0.11,-0.51208444640625,-0.41,0.13157707153380815,-0.07255649188619255,0.4329247300446302,-0.3715201814450019,-0.01,-0.11,0.42381727385075296,-0.3366389241729047,-0.01,-0.11,0.4258235581766943,-0.3713979522851626,0.09722847808343388,-0.61,0.1519092996976535,-0.41,-0.01,-0.11,0.33691831128391786,-0.41,-0.01,-0.11,0.2576194156389673,-0.41,0.02942082690335779,-1.01,0.1393670750820302,-0.41,-0.01,-0.11,-0.01,0,0,-0.08926925328633492,-0.51,-0.41,0.3444462340416158,-0.11,-0.51,-0.41,0.2219391995681782,-0.11,-0.51,-0.41,0.24195320222398076,-0.11,-0.51,-0.41,0.05947077851261761,-0.11,-0.5003121701733487,-0.41,0.27814627306227957,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,0.025722069403742796,-0.3847064395164903,0.3348128774139267,-0.11,-0.04326999733769777,-0.41,0.24176567926582324,-0.11,-0.019182312923892948,-0.41,0.3087555235427604,-0.11,-0.021137500000000004,-0.41,0.175172433407368,-0.200448878407674,0.08269034033468833,-0.41,-0.01,-0.11,-0.043715739247757346,-0.41,0.13131226075937852,-0.11,-0.022190579366027675,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,-0.51,-0.41,0.25232544732197876,-0.11,-0.51,-0.41,0.06192386930958671,-0.11,-0.51,-0.41,0,-1.01,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0.12042694767064395,0,0,0,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-0.11,0.3584778542370496,-0.3795374489248731,0.027344654574453515,-1.01,0.15792297628912894,-0.41,-0.01,-0.07205788209303338,-0.01057375,-0.41,0.259740221035813,-0.11,-0.0111976228437245,-0.41,-0.01,-0.61,-0.012239208051603119,-0.3996053874555516,0.2811416542457861,-0.61,0.036271142683392876,-0.41,-0.01,-0.11,-0.008751624513073954,-0.41,0.09107041366797206,-0.61,-0.01,-0.41,0,-0.5232746503784962,-0.51,-0.41,0.2071343098673781,-0.11,-0.51,-0.41,0.06383549382223375,-0.61,-0.51,-0.41,0.08813044954195962,0,0,0,0,-1.01,-0.51,-0.41,0.02233405564598221,-0.11,-0.51,-0.41,0.02759987468043449,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,-0.012025000000000001,-0.41,0.1747905348021123,-0.19786661284685653,-0.011608750000000001,-0.41,0.06663343454333094,-0.11,-0.01464005101444812,-0.41,0.08821218823475116,-0.15870653702296444,-0.01,0,0,-0.5357010954992849,-0.012025000000000001,-0.41,0.15188885289736787,0,0,0,0,-0.11,-0.012025000000000001,-0.41,-0.01,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.61,0,0,0,0.3062402453365506,0.4232830588778835,0.5252198925729353,-0.09509974439097522,0.3542229403232681,0.44124836675289014,0.5278509227356589,-0.10418927895228285,0.27630517382120456,0.39161693917824153,0.5366342017105193,-0.0980274261221726,0.34962873740014416,0.4375859887664114,0.5141749589743586,-0.11517607627413456,0.3460412022287271,0.37123064950469997,0.5117280545489892,-0.103680002681476,0.2978435721519874,0.2992657791063621,0.5419152122901392,-0.10143993883365308,0.2526792932439602,0.2738182792504347,0.5120412541426955,-0.11397239493254574,0.20530002263996505,0.24023698256086812,0.5449172512858024,-0.22027171515347876,0.2850359882548719,-0.0623744575709307,0.5491201515554629,-0.1053625314853725,0.35644182757098386,-0.07646452445163913,0.5318290199169818,-0.09771817310421428,0.3047983058396438,-0.07922322553884147,0.5229595360964632,-0.10990125006942292,0.19479015922084716,-0.32502307582958806,0.5213267752362408,-0.16894978111031708,0.30430689556544155,-0.12369929169956366,0.5186254680776775,-0.11663428866861182,0.2755987386373962,-0.37377278010387366,0.511836318021829,-0.20461191057400552,0.28305567823283434,-0.25141272703583895,0.5265200206498966,-0.18837545670483424,-0.06874396319540507,-0.51012375,0.5275965804072471,-0.3545765481251088,0.30224606036869683,0.3815346994594476,0.5409761935904445,-0.10387162125322438,0.21628607166791902,0.36821400616860117,0.5222897782647005,-0.10157189748345857,0.3208141448469119,0.37810789660760813,0.5207433154768495,-0.10653247116732173,0.27195810218639677,0.236768714492818,0.5203677700012354,-0.1485995178820731,0.22144420576488966,0.2507050704076799,0.386832899466091,-0.10605077090886364,0.18864787387641668,0.26139771267331213,0.521382987083229,-0.1741340988604381,0.22508926973257534,0.32214032507227397,0.5151728633719855,-0.15523548981687113,-0.14715954346558688,0.060938647283974565,0.5394101925646545,-0.29369635087595225,0.27236828548863534,-0.1566096255444027,0.5112897990468028,-0.13428471229517316,0.18827067638037304,-0.34913865272061406,0.5151999237029686,-0.27350406883522044,0.17249531257372944,-0.3755763494485524,0.5182944967100963,-0.27183808213375815,0.005142284440301674,-0.5080251968189065,0.5149170832316622,-0.40209472858705597,0.2442007637080277,-0.43902914627405554,0.4957971033525932,-0.2807740786187718,-0.02202538927468365,-0.4706138178532754,0.5281792104385357,-0.3153559663638915,-0.0021827668080113757,-0.4918239513630104,0.4860296946902087,-0.3940832965401113,-0.4267320421087999,-0.51,0.5283205703665497,-0.4714231289038581,0.3482605335060458,0.3658948659920282,0.5021726741876724,-0.14530306412166832,0.3334730047125853,0.35232421595357954,0.524330904612816,-0.1546362055666314,0.2632436646590736,0.27253249212727326,0.503663051588004,-0.14315057325932776,0.08684454000881185,0.16335992571220326,0.4024543364594082,-0.2623307577678832,0.13439124672420513,0.27537053844948023,0.21104326287304828,-0.16023413380332185,0.18799238310967467,0.23330822022647518,0.4845388032963017,-0.2987691394195859,0.14935389231846563,0.3521254491914984,0.24330360172473553,-0.22403327266842907,-0.02006822749182032,0.059289508737549734,0.5123401939816962,-0.3991913793342909,0.3198559591966944,-0.15341461387507235,0.5187067350481288,-0.1536632625206797,0.22669206802056788,-0.3084162288594868,0.5321827821498445,-0.22792816966173984,0.1999675601770019,-0.2868481729354908,0.5076108189853595,-0.26055883645528455,-0.11,-0.4738279438557599,0.5293967565186994,-0.51,0.26724704096259616,-0.2955655358371311,0.5264135315641197,-0.2303369486501082,-0.06459545736564795,-0.48636964109537045,0.5227633411793301,-0.47154966991043534,-0.02042111712511651,-0.48164068607892985,0.49513962899708297,-0.471091915164696,-0.61,-0.51,0.5091365013563757,-0.51,0.2724028422257558,0.28475887085488466,0.5170811101155985,-0.17817918268989982,0.16872146768087387,0.21594700322295887,0.529997672840034,-0.16611571710320913,0.229935043346064,0.21565188044790687,0.4868204512830901,-0.23343631113288868,0.07468297312813882,0.10942557740376806,0.47341407020257725,-0.41340888773827494,0.1663193594924976,0.20058156893847753,0.48346045235032187,-0.19903974687556164,0.011895604145790752,0.13785089468957007,0.5242563084907272,-0.41775276561776997,0.04526895364088058,-0.0037878106490919017,0.47178734690876317,-0.40837452375849426,-0.06345851460824614,-0.01,0.49974604196795014,0,0.20103733836509513,-0.27836867939912224,0.5104120791518705,-0.23836555621361621,0.10237105258185752,-0.513574125,0.496866662954859,-0.4707470363452713,0.03958604051327112,-0.4988960234001911,0.5143480138652474,-0.4522401996068834,-0.030439579085529925,-0.5066227636933415,0.42214226720099857,0,-0.11,-0.51,0.5076968336719195,-0.51,-0.06383919738862874,-0.51,0.4989850205365005,-0.47064685997333877,-0.06590725322550006,-0.49471475828824873,0.5165064037606215,0,-0.11,-0.51,0.4611308878737144,0,-0.16780819962308344,0.31046817194684023,0.5416500979637933,-0.3720640761935205,-0.7711038487965025,0.07757915319421946,0.5314218331631095,-0.51,-0.0772763666237254,0.13129500991686002,0.5171313216574347,-0.3472618924741968,-0.11697413810425315,-0.01,0.5281129769900833,-0.51,-0.7314771746487503,0.031090532305427028,0.4838737419363808,-0.51,-0.11,0.024930776150014808,0.4983611502906447,-0.51,-0.07066689250605661,0.03147804480384512,0.3398720605240298,-0.51,-0.0712400665403906,-0.01,0.3745117808319012,-0.51,-0.61,-0.38649568309862203,0.5308834220215467,-0.3805655731328346,-0.2028092547283521,0,0.5346212954687203,-0.51,-0.11,-0.51,0.5022715507258305,0,-0.11,-0.51,0.4268461376380768,0,-0.1139399637531559,-0.4761674183070462,0.5165823688011124,-0.51,-0.61,-0.51,0.292477441171471,0,-0.1144323992564158,-0.51,0.37698109882818603,0,0,0,0,0,-0.11292579234534315,0.028080387645349245,0.5403560336189298,-0.4699413545396617,-0.12859576490822555,-0.01,0.5386120636517208,-0.48124473593562267,-0.11,-0.01,0.5294699866138581,-0.51,-0.61,-0.01,0.4136426314016037,0,-0.07709312107871133,-0.01,0.4842986969026891,-0.47271625234439424,-0.11,-0.01,0.4571531139726223,0,-1.01,-0.01,0.44983623778034165,-0.51,-1.01,-0.01,0.3576697692058894,0,-0.12279612308338612,-0.4717002353151503,0.5226656191488135,-0.51,-0.527898164334379,-0.51,0.4714566909785375,0,-0.11,-0.51,0.4125181593344923,-0.51,-0.11466284839148155,-0.51,0.36633720314404944,0,-0.934226934984379,-0.51,0.4276267270104675,-0.51,-0.11,-0.51,0.13872948416898673,0,-0.11,-0.51,0.2627949094281332,0,-0.11,-0.51,0.1655887504924381,0,-0.04646079089640325,0.15716239781462057,0.5399636472878405,-0.3569563621812907,-0.15954668661002314,0.09465890648690976,0.5085034736980886,-0.51,-0.1712278568348632,0.04423848848339328,0.38183652955327146,-0.51,-0.11,-0.0005829365149868978,0.39814758058343513,-0.51,-0.4589775410202843,0.01200783312240391,0.4690817416255582,0,-1.01,0.024937724556115252,0.4514821630318556,0,-0.9339656083725916,-0.01,0.3783646912316865,-0.51,-0.11,-0.01,0.2309393261946242,0,-1.01,-0.44582580826777013,0.5338682346157556,-0.50290125,-0.61,-0.51,0.4234159048841798,0,-0.11,-0.51,0.27658167297371244,0,-1.01,-0.51,0.23446274829001318,0,-1.01,-0.51,0.27382414567431623,0,-0.61,-0.51,0.27935778367615227,0,-1.01,-0.51,0.13337058675989943,0,0,0,0,0,-0.6077224642554816,-0.01,0.5136211930148447,-0.4780593948151293,-0.10275251778127645,-0.01,0.48002962701196616,0,-0.61,0.020751630780443238,0.4087742810926468,0,-0.61,-0.01,0.3594568902255189,0,-0.61,0.016622311785364177,0.4462541687766815,0,-0.11,-0.01,0.14698278029393397,0,-0.07692636228045399,-0.01,0.13700863543999817,0,-0.11,0,0,0,-1.01,-0.51,0.45124636651787653,0,-0.11,-0.51,0.24830265986099195,0,-0.61,-0.51,0.1966241366660995,0,-0.11,0,0,0,-0.11,-0.51,0.17275208321259444,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,-1.01,0.11327980720712023,0,0.2536511471963803,0.45997871049402006,0.006908814836995642,-0.16451760951990355,0.2204026331273894,0.4550988206997487,-0.003041076973570026,-0.20455756559527657,0.17513918095079542,0.4580975177913747,-0.09864821695868323,-0.24363420633949223,0.08279040880132012,0.4372054000354817,-0.16764595120763637,-0.4092597669067243,0.25185537412743436,0.4237071796555466,-0.02133316771809618,-0.20359405864650892,-0.03172576043930447,0.30958144382639047,-0.1484255494960698,-0.3699157890301131,0.02268512641657287,0.4224308706950702,-0.319173143474681,-0.3104305224990815,-0.478331415972947,0.3968055206803495,-0.40326430611063874,-0.51,-0.39090484302938405,-0.3380976209943191,0.019055212407882226,-0.3336442563411953,-0.40687589709088207,-0.3871951591116402,0.009110237548448544,-0.4432808322574983,-0.35700876679742877,-0.3749873750593341,0.025267734798684716,-0.3604252867125144,-0.34102146263633887,-0.49965934237419296,0.0012468419686529402,-0.39354171371965996,-0.32877562577440145,-0.4277946881076656,0.034053276151186994,-0.5023387500000001,-0.39129946375815283,-0.4833185174440232,-0.0019322161897875698,-0.4949702112408204,-0.43038893481621077,-0.5010051647786364,-0.05043457364387727,-0.4734021206186866,-0.41777365554543067,-0.51,-0.30242706447870704,-0.44888585452015267,0.07680457169096364,0.38814041319668313,-0.1459786245998781,-0.27658568599465955,-0.17867694308917764,-0.1036638893147303,-0.011303394876187705,-0.2153247705352587,-0.1400863877457177,-0.005524567710083285,-0.06959443666134464,-0.23814080991224285,-0.23484278487018762,-0.14928373158498645,-0.0793159412421746,-0.22615425095999442,0.016439258382736386,0.18280468409904949,-0.12651223212989773,-0.24682185995776987,-0.1870317190539889,-0.13412643749058892,-0.07345800374208783,-0.32264301540475004,-0.23501138534621036,-0.0806112184593846,-0.28884596833006104,-0.26513819091480423,-0.5683942082461543,-0.14765238834635466,-0.38753927565322616,-0.472761181668961,-0.4509312283222189,-0.49953431073641175,0.01619685231027581,-0.51,-0.3541993010208929,-0.51012375,-0.020964334419401754,-0.510135,-0.35283288401701096,-0.512607457916222,-0.16394466168987604,-0.5023387500000001,-0.35329774350683296,-0.5106975,-0.19363638972101152,-0.51,-0.41026013888056145,-0.51068625,-0.07854734746728581,-0.4725910343884691,-0.17632791138640913,-0.5111246317411277,-0.36592959859068525,-0.47714724905729783,-0.42077844112774176,-0.5101125169860831,-0.37035082872069486,-0.51,-0.11,-0.51,-0.40096424327010294,-0.51,0.15342643123663924,0.30722712216522696,-0.04020320685298965,-0.17609846056169096,-0.11740137555640848,0.3444969894523803,-0.2701220851982318,-0.3974303577567588,0.11664339349923412,0.05429806300394904,-0.12021488181485938,-0.2065974314118604,-0.11714990250125894,-0.027658178710173707,-0.2066781260343117,-0.2710722313012548,0.09224526695644522,0.139243134876928,-0.13348687794516897,-0.23884555142536756,0.0005496877750806733,0.1723302817961325,-0.3388246402021661,-0.4408783012385225,0.0585107843754717,-0.052587602594422064,-0.16406934636178439,-0.30935599722096135,-0.5294969953658758,-0.0852064645286624,-0.35518118052647246,-0.44211968937506974,-0.40132398622397136,-0.4332146502307816,0.02386168255714647,-0.4208084033759491,-0.3706170900903713,-0.5005699841372121,-0.022280879591161526,-0.46215131625499933,-0.39393462051279843,-0.5023387500000001,-0.05507947409233463,-0.4686421819715352,-0.4247849178751135,-0.51,-0.26303930898737415,-0.4911288876096984,-0.43391450451139857,-0.4952617815706864,-0.10055564075802023,-0.48061650043807636,-0.4916307728808985,-0.51062775,-0.043645412924453196,-0.48274746370926,-0.35881072279225124,-0.51,-0.2987336026630708,-0.5023387500000001,-0.11,-0.51,-0.41,-0.51,-0.057104724909488466,0.32828154431808126,-0.24835682565448286,-0.44852564245604853,-0.2917480348307207,-0.12038145075856917,-0.03706304877823415,-0.2877757291104664,-0.010588599809597438,-0.06354557761794523,-0.28125870482464077,-0.3509939957894369,-0.22624024750316962,-0.13785446984743782,-0.3109687066989205,-0.3615394913941547,-0.07109470254589735,-0.025072423913261456,-0.33233316714736005,-0.3765309063671944,-0.22687958737242842,-0.13917826109938403,-0.3143841814707264,-0.3826461259707142,-0.3485263649062413,-0.05843996116851137,-0.37656744578951246,-0.42574474285388264,-0.11,-0.06365023544302363,-0.3800267232477101,-0.51,-0.61,-0.51,-0.08892102016644372,-0.51,-0.61,-0.51,-0.15128144041493388,-0.4839589132677435,-0.4539151871611749,-0.51,-0.32622420042608474,-0.4791186694754025,-0.51,-0.51,-0.3561698206575134,-0.51,-0.41911235194031227,-0.51145125,-0.34021082913226924,-0.51,-0.4347493877014846,-0.5106975,-0.36522430436919445,-0.51,-0.51,-0.51068625,-0.41,0,-0.12586308555162276,-0.51,-0.3978605568162604,-0.4566053251915049,-0.5867495809769073,0.4200868746628818,-0.32407312283889467,-0.4176258233164091,-0.11,0.4253580874941904,-0.41,-0.51,-0.0749129934645506,0.4253577573257048,-0.39212454528744506,-0.51,-0.61,0.35823344078483993,-0.41,-0.51,-1.01,0.398528105634406,-0.41,-0.51,-0.11,0.2973851931532586,-0.41,-0.51,-0.11,0.24851495273925756,-0.364573077249031,-0.51,-0.61,-0.01,0,-0.51,-0.5065058438394796,-0.49900948290650987,0.013258887341918928,-0.49708123585762387,-1.01,-0.51012375,-0.08693492302316617,-0.47481670522271296,-0.5067279426294039,-0.51,-0.20277309436370552,-0.51,-0.5065058438394796,-0.51,-0.3338691202046159,-0.51,-1.01,-0.51,-0.22149676284769387,-0.51,-0.11962500233887177,-0.48432355713234243,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.61,0.37163591409917485,-0.41,-0.51,-0.61,-0.0793778315692136,-0.41,-0.4757568833358171,-0.11038450025225229,0.05902262546022037,-0.41,-0.51,-0.11,-0.05733861424642623,-0.41,-0.51,-0.5372923508795407,0.07324431644991518,-0.41,-0.51,-0.11,-0.051205993659089094,-0.41,-0.51,-0.11,-0.034181593114934655,-0.41,-0.51,-1.01,-0.01,0,0,-0.47026174863671016,-0.51,-0.3740996353745872,-0.51,-1.01,-0.51,-0.2126573583910919,-0.51,-0.4972279870242596,-0.51,-0.32967845444244953,-0.49068208263047625,-0.11,-0.51,-0.41,-0.51,-0.49837215957336645,-0.51,-0.35019827650459284,-0.49291806541316224,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-1.01,-0.51,0,0,-0.1822572304977324,0.28512832501190233,-0.41,-0.4750425468814235,-0.11,0.18632342354761455,-0.3649184759448299,-0.51,-0.11,0.05700619622768577,-0.41,-0.4908341657164682,-0.16059625,-0.002782775982122309,-0.41,-0.51,-0.11,0.09605547043735085,-0.4077051011123949,-0.48679188698375314,-1.01,-0.01,-0.41,0,-0.61,0.017598406381719115,-0.41,-0.51,-0.11,-0.01,0,0,-0.5553016358925149,-0.48562276998446446,-0.2980521773824111,-0.51,-0.10876144187549597,-0.51,-0.3657033611278037,-0.51,-0.5065058438394796,-0.51,-0.2924083552917198,-0.51070875,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,0.22896257223074573,-0.41,-0.51,-0.11,-0.03158249679265461,-0.41,-0.51,-1.01,0.02152999751998142,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.61,-0.02091407392099359,-0.41,-0.51,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,-1.01,-0.51,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,-0.51,-1.01,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11306338701702916,-1.01,-0.41,-0.51,0.33431924710380134,0.3857483537105696,0.4819296516433679,-0.11370285534154077,0.3456733862169507,0.35468796429944804,0.4695080460223075,-0.12471684478253126,0.3076297254927762,0.4569635969986609,0.41969765571018225,-0.15634892790744065,0.1433257987867374,0.3337392732763825,0.46246345503829456,-0.24242907677063108,0.2713876288391331,0.29253788681896453,0.45908786336472995,-0.13827690063015427,-0.02247916811107286,0.18904501198193058,0.47396656487320105,-0.2762205609402673,0.18782741790011004,0.17261161471216685,0.4522524837369089,-0.19141714317883543,-0.08565487298299199,0.07873544243505039,0.44736495801635784,-0.4314899599112274,0.29306241935138116,-0.09280133355364562,0.4660000862703789,-0.13800824532027975,0.16861095910553292,-0.25215250360924135,0.48225346077774256,-0.3354012159994968,0.2570837675327915,-0.34592145338635105,0.47740679996500424,-0.25431724278637263,0.03394254065978461,-0.4801323017395,0.46353634041454217,-0.47056412907996026,0.2056561107378843,-0.275428861561487,0.46971933198467347,-0.31712082295456123,0.15490178039623276,-0.46844716495284494,0.4648925711287316,-0.4691193827817493,0.0385993834217554,-0.4220050261655852,0.4359385771551708,-0.3578868887130309,-0.06406269997019967,-0.5106975,0.4505947586098829,-0.51,0.3303264809515722,0.39181219498961606,0.34480081100085286,-0.22808679775574242,0.14348598345331856,0.08623709151156657,0.3991525938039494,-0.24094680251389772,0.061569087290453135,0.1214383196114213,0.32832226522276975,-0.26193205802661534,0.12322332243176887,0.03449513942952753,0.2307148765283582,-0.3710286020543969,0.01868635107766247,0.12167258780488009,0.3543453833985775,-0.2781504662194822,0.04591705472216297,0.021414071340903555,0.3600475575190819,-0.4106546140719697,-0.4596430533632571,0.05894655066314082,0.2692741238820356,-0.4946787558038146,-0.0647573262940739,-0.005571787260136686,0.3750883552023887,-0.43321136124653736,0.19000925359978663,-0.29081134497844924,0.37383127024674956,-0.3154220842091655,0.13583958138897875,-0.49526954288948705,0.3094833638078026,-0.3877016144207614,0.06191718676715876,-0.510135,0.1822529515824018,-0.44613921560563763,-0.11,-0.51,0.2382057078333224,-0.51,0.04124617026363864,-0.4804377996334344,0.3409722766808024,-0.48957924345566595,-0.06547884001282961,-0.5106975,0.3563222561087902,-0.51,-0.11,-0.49525239364651946,0.32368176585939107,-0.51,-0.11,-0.51068625,0.33801559216866905,0,0.2660118255491112,0.2683033781149226,0.4260343518304823,-0.1983039890547271,-0.012859538301437094,0.15270105797469077,0.41413509083264893,-0.3201853873173578,0.19298690583064826,0.13948935759074665,0.27779041635237856,-0.25069577313908376,0.07642189504308361,0.010628210918071973,0.2613178826226256,-0.42970182333273726,0.23373063608512645,0.16229208599945336,0.3093272433513111,-0.2748222427533703,-0.12021767083232184,0.09776208738129229,0.3658941733364033,-0.4430375174155968,0.015246409845326998,0.02272017494595709,0.303452337333916,-0.3672857327319159,0,-0.007885204700834867,0.16920096669236442,-0.47347184747159166,0.16807624829445195,-0.316077710367345,0.4005379192677408,-0.3521927611012267,0.0977988805323516,-0.43968196331727943,0.2763817857519928,-0.4687765365328741,0.12622233628622057,-0.49074498473964284,0.3669791160062264,-0.3988522513588309,-0.06372481669970802,-0.51,0.39365108591721576,-0.48056445691592414,0.09797410392478392,-0.47104069473978616,0.12161003982661676,-0.4080629649420972,-0.11,-0.4950110763048428,0.3677162662715034,-0.51,-0.61,-0.5102565,0.26029969444116163,0,-0.028999952702864006,-0.51,0.18036902058466178,-0.51,0.22551782049358327,0.3248106174903583,0.18867668632355813,-0.36670539167071153,0.09059468824889459,0.04072922484256227,0.3736259316869284,-0.4459236239581884,-0.4408620324536696,0.00008058541436907246,0.33539209340520737,-0.41138432788345425,-0.07120417536103246,-0.010781975467782954,0.3830568740067673,-0.51,-0.25649604691793815,0.014321189631222054,0.3838610158622918,-0.42032109197139433,-0.27707927300905744,-0.01,0.30542560588216816,0,-0.11,-0.01,0.3309307498091836,-0.51,-0.11,-0.01,0.2897726647280206,-0.51,0.0010041667759418602,-0.5102565,0.33467633565799193,-0.5024214046187694,0.006465178660191674,-0.5106975,0.3840829108686995,0,-0.06595365618380182,-0.51,0.26924904813966977,0,-0.07434075715211438,-0.51,0.2605136769395958,0,-0.11,0,0.3550415081165803,-0.5029332532198617,0,0,0.2888747582750567,0,-0.11,-0.51,0.2864489613432091,0,-0.11,-0.5033951715796389,0.17706337340081238,0,-0.511600580012969,-0.01,0.46813304785751414,-0.4532606264218442,-0.07189798462202004,-0.01,0.4616594755316715,-0.4350272383334923,-0.16414077312641706,-0.01,0.47618962007078336,-0.51,-0.61,-0.01,0.33831240618028546,0,-0.1723453777215276,-0.01,0.43434053048617116,-0.51,-0.11,0.02057770064235582,0.28194409355595235,0,-0.11,-0.01,0.31670924976295606,-0.51,-1.01,-0.01,0.10321465558871018,0,-0.11,-0.51,0.46476602862569416,-0.51,-0.11,-0.51,0.4160491619004463,-0.51,-1.01,-0.51,0.2940381118527318,0,-0.61,-0.51,0.1221916537713705,0,-0.11,-0.51,0.2924046229446051,0,-0.11,-0.51,0.15404869882672934,0,-1.01113625,-0.51,0.12765008370995312,0,-0.11,-0.51,0.19674487961916753,0,-0.11,-0.01,0.2749850625456821,-0.50290125,-0.11,-0.02524066183912721,0.30427127877311394,0,-0.12901416247510095,0.02239077145579812,0.3215315747406929,0,-0.11,-0.01,0.14733031625858986,0,-0.11,-0.0009828614686840514,0.31894787791650947,0,-0.61,-0.01,0.22351501735088208,-0.51,-0.61,-0.01,0.1984130229082683,0,-0.11,-0.01,0,0,-0.11,-0.5116087500000001,0.27764159863652466,0,-0.11,-0.51,0.087506009856044,0,-1.01228375,-0.51,0.14731364223969545,-0.51,-0.11,0,0,0,-0.61,-0.51,0.13148053921976305,-0.51,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0.38405092155878107,0,-0.11,-0.01,0.32659359853973,-0.51,-0.11,-0.006138480336368356,0.26293783339933297,0,-1.01,-0.01,0.13908622769914492,0,-0.11,-0.01,0.3277522855813329,0,-1.01,-0.01,0.12255777375710628,0,-0.64290125,-0.01,0.1510329017719788,0,-1.01,-0.01,0.08795196385717582,0,-1.01,-0.4957196766773766,0.29035424034885304,-0.51,-0.11507040907962193,0,0,0,-1.01,-0.51,0.12481955305315776,0,-0.11,-0.51,0.12322740651185363,0,-0.11,-0.51,0.17000705866119398,0,-1.01,-0.51,0.09,0,-1.01,-0.51,0,0,0,0,0,0,-0.13035025431082545,-0.01,0.2590521431668727,0,-0.11,0,0.1999481832244482,0,-0.11,-0.01,0.18987584528551446,0,-0.11,0,0,0,-0.11,-0.01,0.12975235222588138,0,-1.01,-0.01,0.1480437672141327,0,-0.11,-0.01,0,0,0,0,0,0,-1.01,-0.51,0.12276686722822211,0,0,0,0.12300129889826941,0,-1.01,-0.51,0.09,0,0,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,-1.01,-0.51,0,0,-0.61,-0.96,0.0913361760971696,0,0.2132303226314399,0.44615408416540203,-0.07519471274846207,-0.19810077306306034,0.13805295149361685,0.439508310072112,-0.3087745959669659,-0.42564213574981946,0.026709284730194818,0.43666212949946814,-0.36933002567641043,-0.36780642991938695,-0.08172777606385115,0.42657218291530163,-0.3675842631080512,-0.40995474820211136,-0.18196732121202305,0.26235073916363866,-0.2830369208949016,-0.35153425394202825,-0.040275585398291146,0.38526519775709833,-0.41,-0.43076482875892763,-0.07207357767959514,0.22635099118994137,-0.41,-0.4153771462041476,-0.13388429503846605,0.2054639684045797,-0.41,-0.47219812183937043,-0.4539151871611749,-0.51,-0.02948958917547614,-0.51,-0.34802211256351756,-0.4576630889356892,-0.04508110099491759,-0.4969642569459293,-0.40844839451535864,-0.51,-0.12323354500799358,-0.4727628316206183,-0.13917467051381893,-0.5028497493877149,-0.41,-0.51,-0.61,-0.4766956256278554,-0.15576010105641547,-0.48733331200789615,-0.4891144066400501,-0.5002701955060171,-0.16291391399183902,-0.48851990210096674,-0.10398135500497585,-0.51,-0.41,-0.4383647908449515,-0.43584560429556013,-0.51,-0.32233394388878994,-0.5106975,-0.02039343760727327,0.38010973791578845,-0.3618854650753731,-0.483991097632702,-0.29494969677235316,-0.11699501724562661,-0.2208069912427916,-0.3185774564944004,-0.14796355745853335,0.005561542596933233,-0.38659569923865084,-0.42882835229059474,-0.35852064478804807,-0.14354748638103507,-0.395123082953423,-0.43169734024790996,-0.5396727698946497,0.08817866309571601,-0.4022911854331813,-0.4296237024388193,-0.48454174724188004,-0.09969152766291074,-0.41372307654687496,-0.39628442065528574,-0.10417236151757989,-0.04503187486547973,-0.3716771041272627,-0.51,-0.110135,-0.0792363009038242,-0.41,-0.49395815185034747,-0.42551072704366755,-0.5083671392700503,-0.18268134268839903,-0.5102352375,-0.41806446047184487,-0.512025,-0.26369381520409335,-0.5023665628206241,-0.51,-0.51,-0.3648497752961512,-0.51,-0.14328393861341135,-0.51,-0.41,-0.51,-0.4067466739249207,-0.51,-0.36858382079981006,-0.51,-0.14194998661558586,-0.510111375,-0.41,-0.5019045022174862,0,0,0,0,-0.11,0,0,0,-0.375495347560461,0.36097437273165217,-0.3108974054977386,-0.387399873397044,-0.11,0.3564973844222279,-0.3830317136972878,-0.3950472225954365,-0.047392486507142215,0.05258245012130802,-0.2306685735143119,-0.40965264979808874,-0.05510635022001226,-0.03370030577779315,-0.37890799310737755,-0.4647925022800048,-0.44339469499777745,0.16136827502124254,-0.3373319910498019,-0.35612690456307106,-0.11,0.1131796557811557,-0.41,-0.49824953807345473,-0.11,0.03314117109964849,-0.41,-0.4657349546032289,-0.08262078270895898,-0.0734548819181638,-0.39948962159375245,-0.4505340280107174,-0.42159174812429867,-0.49753281221178614,-0.2120438080516886,-0.4944171908852615,-0.5166436887184226,-0.51,-0.22895323469384232,-0.51,-0.4303739062556073,-0.5028155137500001,-0.3205243036181691,-0.51012375,-0.1020227820703995,-0.51,-0.41,-0.51,-0.51,-0.51,-0.28928329211024595,-0.51,-0.4461467237760638,-0.5038181147851155,-0.3772661759989355,-0.4751092976378601,-0.11,-0.51,-0.41,-0.51,-0.10968399474180986,-0.51,-0.41,-0.510135,-0.08174169699719655,0.3379354690526933,-0.41,-0.49094673409599715,-0.12876590481515998,-0.11334359274028992,-0.3310567287809174,-0.4613853508238904,-0.19463652494662737,-0.06699905373565347,-0.40243203782427617,-0.4864197043094979,-0.18196476119201876,-0.09404331799756538,-0.41068625,-0.4822329119253631,-0.11,0.04694527205982871,-0.41,-0.49566098606494835,-0.46566621556463145,-0.12139148091399247,-0.41,-0.5023387500000001,-0.15233875000000002,-0.08918758101245067,-0.410235125,-0.4914003751439771,-0.11,-0.01,-0.41,0,-0.4556095149129553,-0.51,-0.3314844972432678,-0.51012375,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,-0.51,-0.51,0,0,-0.51,-0.51,0,0,-0.17375369861611833,-0.5328652279532162,-0.41012374999999995,-0.5023275,-0.61,0.431267572412486,-0.3708158229053346,0,-0.11,0.29274763388585623,-0.3819924328246217,-0.51,-0.11,0.29535749633092634,-0.41,-0.51,-1.01,-0.01,-0.41,0,-0.11,0.20293537772862813,-0.41,-0.51,-0.61,-0.01,-0.41,-0.51,-0.8885195835056652,0.11622889030884453,-0.41,-0.51,0,0,0,0,-0.5065058438394796,-0.51,-0.2513676113638773,-0.51,-0.5065058438394796,-0.51,-0.30854070467600303,-0.51,-0.5065058438394796,-0.51,-0.3713379790730015,-0.51,-0.11,0,0,0,-0.5065058438394796,-0.51,-0.34100332178442533,-0.51,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.61,0.2266998408534678,-0.41,-0.51,-0.11,-0.08072860410744448,-0.41,-0.51,-0.11,-0.030934593538851578,-0.41,-0.51,0,0,0,0,-0.11,0.04421171226677527,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.4184937179471977,-0.51,-0.4071280552786051,-0.51,-0.16,0,0,0,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,0.15915087912846798,-0.41,-0.51,-0.11,0.04098165121678199,-0.41,-0.51,-0.08902586039645742,-0.028819905984531973,-0.41,-0.51,-1.01,-0.01,-0.41,0,-0.61,0.015572923320145591,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,-0.015604959659802678,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.03936928176392181,-0.41,-0.51,-1.01,-0.057534021296875,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.010243581244350144,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-1.01,-0.51,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29766919810265335,0.4061663589455053,0.5067644785912454,0.35582012209483616,0.2875068481873841,0.44372144934636715,0.48849509653959555,0.36316270506846215,0.28793667526920297,0.44859303975634196,0.43010848330276324,0.36097426296029406,0.1237709952657186,0.4478299879570522,0.506856214930659,0.3442221248915991,0.2831114194669271,0.33708747323450683,0.5247130764882975,0.3448021366590631,0.32172650763360133,0.3354402283406245,0.5500323433795566,0.34819078717001806,0.27970708460391797,0.34492176148500575,0.47029294028233815,0.346648748357668,0.1111292686953716,0.24132104897626977,0.22970095590137632,0.31599861845602434,0.282387383532103,-0.06648250301500906,0.4988154807090332,0.3665579805216145,0.32059788710470877,-0.08090691255702115,0.49658471248993,0.35845178963451846,0.3106510823750987,-0.07115532270013226,0.5079445743566643,0.3718837079087466,0.17353997505015878,-0.1692929672646955,0.4864769492706617,0.26699545936586494,0.24672710171379944,-0.1615925518883943,0.5069079583610451,0.33445193368066045,0.130466460434348,-0.27331497965598867,0.4874645295323971,0.24531148062812902,0.08587131931520081,-0.2900707773771796,0.48632257435134285,0.33026620929576894,0.012415991121971531,-0.4714569444517258,0.5206854230801229,0.06160314643919419,0.26989622142313135,0.3779462189786582,0.534035124208392,0.3817032252554287,0.2110473196205921,0.3626055104085288,0.5206096601824319,0.36809382197098334,0.2045478487486078,0.372503140030018,0.5276089500313709,0.3794115115456588,0.25121541715247114,0.3189829608708417,0.5033967395814017,0.32229683023897515,0.2654732131942681,0.37186718237490796,0.45202578328604476,0.36445650776564065,0.14333985123582632,0.21825861091293458,0.4936643118271035,0.3184358711667757,0.14578068317869375,0.2647033906999527,0.5096973425074697,0.26891704596188115,-0.02476707229832079,0.10415437012617468,0.5100332722013884,0.20924389069700441,0.24859196478944567,-0.1457439303070088,0.524337764709811,0.36547582697758596,0.1529871671618391,-0.33615940387814486,0.5298750227760367,0.31658404356330155,0.18129075301763467,-0.3280886261060507,0.5371213031219584,0.31581971817529686,-0.42377142199507456,-0.49631169138610426,0.5184086900796021,0.02643008528259494,0.02697686965762948,-0.32891509740646196,0.5281616629443426,0.24334730228531953,0.0948417373491946,-0.45845306012104237,0.5144642693722153,0.061155219438085266,-0.028949428911119006,-0.46068620903250956,0.4855700580065915,0.159283006970589,-0.035399683793862935,-0.51213831140625,0.4832961794284566,0.02655505084036207,0.29543160881018626,0.31815087253180563,0.5046444512478038,0.31721615746649384,0.26827510461514764,0.33228407357013423,0.49192031340860476,0.28810431644435697,0.269917687878702,0.27433981462068285,0.44118095981274796,0.2788611548327945,0.23249991989350038,0.22547078974922866,0.3760198356439745,0.25583248492761895,0.24069263955005257,0.23901698051322667,0.2414933931672021,0.3526907699101897,0.20718154212874176,0.17615241587426156,0.22844624742652525,0.2866668117956676,0.12811445195427756,0.19304573276809786,0.20480806739684795,0.3026343262695118,-0.1231798494680843,0.01750540427692226,0.019589111060120477,0.1326952872950881,0.3236759642015363,-0.15751708113935828,0.5071849744281453,0.333008022248707,0.23038637075568333,-0.22137970287993258,0.4860669330274619,0.17539144219268832,0.19332673177135948,-0.32256521583662906,0.43304462636685054,0.1964917082813637,0.07222188939475518,-0.4132540051757602,0.13610251724350841,0.2748645434233161,0.1120419014171885,-0.31654010794277476,0.37895301864150327,0.22943918097265506,-0.0298058956262612,-0.45316059698906486,0.4896803797972823,0.12896016705761632,0.16944280887801194,-0.4445585789741626,0.4786870085813793,0.1266288109819071,-0.029384097981936037,-0.4936451079931481,0.48038892018262636,0.019988938893667575,0.22619832760668007,0.26525809846058496,0.36654527548894345,0.29438961933550295,0.15954099002042255,0.1778884021820661,0.4252655120739337,0.22481050772834177,0.07241849930937658,0.1773276939738213,0.42108289892210954,0.2731748092668384,-0.2015039854626806,0.09149009560046681,0.44680814281161907,0.09295760167198594,0.19241052153903113,0.19463043436143168,0.3915993847345434,0.24453334146206995,-0.06322389720983937,0.03911267969658884,0.33681474835715075,0.028223860319457048,-0.014647498007778592,0.07970453849639826,0.1161852319318615,0.2426445039207313,-0.5152810129154528,-0.01,0.40664825168259433,0,0.1535578427953245,-0.2732672787877989,0.3857508904534466,0.17927128457375532,-0.0435176484878082,-0.4871898182488619,0.4817286643089176,0.14726616918005034,0.031150491912141795,-0.51012375,0.4497653843433759,0.011891374685699662,-0.06852519782992313,-0.51,0.4163410617327393,0,-0.017563398192595725,-0.4543278180711406,0.44502805793102207,0.07409076238591664,-0.11,-0.5118938110716642,0.4522736132568385,-0.01,-0.11,-0.51,0.41603664278056895,0.02829723673931074,-0.009583523205028525,-0.5119541249999999,0.054105564857465066,0.07819979890939575,-0.14380279158127715,0.22059371351245816,0.48322717134654436,0.1506974367162754,-0.42962152364768197,0.07816437050437043,0.5176988522878309,0.0888895335351855,-0.11,0.07418982193392998,0.5078231706885163,0.12028941674939053,-0.5236306152003917,-0.01,0.5315702282060213,-0.01,-0.15499784170526534,0.03707435939148505,0.4185579275481208,0.05774394977039397,-0.11,-0.01,0.3032766880473757,0,-0.8814997060411657,0,0.46898005069320564,0,-0.11,0.06914150063870084,0.35706617594101187,0,-0.1990781137489606,-0.4104062709800943,0.5268863383086685,-0.01,-1.01,-0.51,0.5250175166565532,0,-0.11,-0.49288792160735706,0.4744977203927462,-0.01,-0.11,-0.51,0.28619256169519447,0,-0.61,-0.4785035580060417,0.5054183156882214,0,-1.01,-0.51,0.45512715172425766,0,-0.11,-0.51,0.44166360099416446,0,-0.11,-0.51,0.21570246664735354,-0.01,-0.22270252696311849,0.09227036500593269,0.5357286682339971,0.11100457565603576,-0.0846141368986437,-0.01,0.5152879970415267,0,-0.11,-0.01,0.5263186777813532,0.06023249791248694,-0.16826738583732015,-0.01,0.4737733102574463,-0.01,-0.5298251194952707,-0.009040107912030892,0.49337372323322987,-0.01,-0.11,-0.01,0.4712849734187623,0,-0.9106983238922332,-0.01,0.40058134501077247,0,-0.11,-0.01,0.24442280729022242,0,-0.08437316034385299,-0.51,0.4981370249196031,0.021667417392942118,-0.11,-0.51,0.4119523762141021,0,-0.11,-0.51,0.47943757947544563,0,-0.11,-0.51,0.2970656541944789,0,-0.61,-0.51,0.31854258242039407,0,-0.11,-0.51,0,-0.01,-1.01,-0.51,0.129930620154926,0,-0.11,-0.51,0.09,0,-0.61012375,0.09453443550853213,0.49112098081551336,0.020207501912713095,-0.06917453576661327,-0.01,0.44540148068235985,0,-0.162475,-0.01,0.3766061500275386,-0.01,-1.01,-0.01,0.22724828626570032,0,-0.11,0.06444176683112386,0.3617928024867985,-0.01,-0.5202673717184332,0.021420061596965648,0.4436934256461854,0,-0.11,0.016667770353396394,0.28234885676756794,0,-0.11,-0.01,0.23554792169659375,0,-0.11,-0.4796689540538565,0.4688584462684737,-0.01,-0.11385091296386603,-0.51,0.41753551689109725,0,-0.11,-0.51,0.3045718367227054,-0.01,-0.11,-0.51,0,0,-0.11,-0.51,0.36749405074956265,0,-0.11,-0.51,0.17135121982535645,0,-0.11,-0.51,0.17731267532752934,0,-0.61,0,0,0,-0.0788091122015719,-0.01,0.4602118854986058,-0.01,-0.11,-0.01,0.4396705034307043,0,-0.11,-0.01,0.31416216937583596,0,-0.61,-0.01,0.2578013750144037,0,-0.11,-0.01,0.2518119862677315,-0.01,-0.11,-0.01,0.13460215818828128,0,-0.61,-0.01,0.21569548769501107,0,-0.61,-0.01,0,0,-0.11,-0.51,0.32665758662418454,-0.01,-0.61,-0.51121630359375,0.13380900177219082,0,-0.11,-0.51,0.1374096274550879,-0.01,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,-0.61,0,0,0,-1.01,-0.51,0,0,-0.11,-1.01,0.09,0,0.24015506866459468,0.46123619472347077,-0.002190298962003425,0.35374676997031046,0.2510186144117155,0.461068042714426,-0.01227639118556078,0.31547956750324807,0.21673978701823132,0.4595563156943758,-0.0635691670954284,0.31225674014501326,0.08489267231358055,0.4371499062733112,-0.16848758055955101,0.23680983172936756,0.23246071663837703,0.43521256505333494,-0.05137810275065639,0.29175737757842735,0.19281334338257264,0.42447287024024943,-0.2585303336366317,0.20827068855530972,0.00946334230539407,0.43211480652701106,-0.23727151192489876,0.1508214803581327,0.10667518129832702,0.156498607475998,-0.2885627020438421,0.278837948327689,0.06849384051719261,-0.1839559385336149,-0.11000595865195274,0.3208940066598735,-0.004859746160757766,-0.34562172472515684,-0.21153704088064978,0.3386250212495438,0.08418814316399031,-0.35917172333922737,-0.18469112147522984,0.33689578160936307,-0.05952460667576728,-0.45246453864482095,-0.2568116281764975,0.344078050841488,-0.11,-0.4219690970290807,-0.3603568208746352,0.3406627485493384,-0.11389362600110534,-0.4341351652739695,-0.41,0.2853104282595063,-0.12165790906492585,-0.43373979732187024,-0.3737945812906374,0.319457195869027,-0.06534497852893087,-0.51,-0.38542927134676513,0.32912697866842444,0.1738568494335928,0.3911537380568554,-0.05436341019854879,0.331563362345434,-0.11740794554838205,-0.01908653032892847,-0.1564464513755608,0.3327795593087547,-0.03534815761829834,0.0762663072505626,-0.2111693079216224,0.3317816965287755,-0.021597736410522175,-0.016512048943558132,-0.28466658878268286,0.3626090253066707,0.04982567573660384,0.13688458957832994,-0.2732386923531553,0.35725234246001775,-0.05015716009125862,-0.010765691971533532,-0.3291668970549982,0.3619359121020207,-0.05704321505678504,-0.01125286588362419,-0.3751387972977602,0.36133114105280495,-0.061458726194291394,-0.027218756308521934,-0.37017877662739296,0.33207755795716537,-0.0022735786278610393,-0.4317800869593104,-0.2670595813098445,0.33271847279349087,-0.014635290616722002,-0.5223530355115353,-0.23922182177751983,0.33950798313486663,-0.36252890488198625,-0.48251631219941077,-0.3872231866556444,0.3531290716596736,-0.11,-0.51115875,-0.2971613590672121,0.3371884785697695,-0.07447809451047543,-0.48616899648836853,-0.41125999999999996,0.33526878700146956,-0.11,-0.512025,-0.3924929272954825,0.33153631373520137,-0.0786809671017096,-0.51,-0.41012374999999995,0.33641853212854794,-0.11,-0.5120854209375,-0.41,0.24042612034051977,0.27089971658317946,0.36354026329709754,-0.055213502516260206,0.30129963424785544,0.09117441641905107,0.36913736786844736,-0.2505789798602554,0.24096821499532203,0.07765883390525827,0.0928060221037082,-0.13004079624206152,0.34633878634608145,0.02581961935608471,-0.006269883566838804,-0.33499157070281166,0.31109150024604887,0.0074582145038429165,0.09633903810268483,-0.22779885942776587,0.34058087982036805,-0.11,0.017997321783164714,-0.28870456406225165,0.34376702228433725,-0.28882750343487584,0.023092508660858824,-0.39408793582662344,0.35494964729451367,-0.011263317011814288,-0.0106975,-0.3899674186064231,0.3320562806642862,-0.4340010900006123,-0.4460032505658562,-0.2887508090709903,0.328188674388055,-0.07344823463842466,-0.51,-0.3657278953827241,0.3201029552221363,-0.07892031190985965,-0.510135,-0.41,0.32142568071020383,-0.11,-0.5051133911569805,-0.410819,0.3176703097044869,-0.11,-0.4953446591977545,-0.3847033021953961,0.23558748666553786,-0.11,-0.51,-0.36465046338684415,0.2951021324326589,-0.61,-0.51,-0.41012374999999995,0.3463971361954125,-0.11,-0.51,-0.41,0.18439421001802833,-0.014728365690701555,0.33864707994763066,-0.35666536937520066,0.12380841132738646,-0.0632929836331699,-0.029298198629966465,-0.4089224892276053,0.3530724398621755,-0.07428244500186224,-0.014382438429583297,-0.3660687015661599,0.3440591197472781,-0.11,-0.014802659443471654,-0.40501916752546196,0.33008047434186105,-0.01292305367206555,0.0030020653287974406,-0.39265701224560007,0.32597149425516586,-0.15247967128392356,-0.011577012273738313,-0.41,0.3390616596772197,-0.14333669026166068,-0.015822622876106945,-0.3826640093837955,0.3249592102449541,-0.61,-0.012200415625,-0.4106975,0.2477092916252183,-0.33219525363274843,-0.51,-0.41,0.34435189393219046,-0.4523996010071323,-0.51,-0.3792145461241487,0.3055002308475128,-0.11,-0.5114625,-0.378619524048166,0.30230290553623435,-0.5503242334601532,-0.51,-0.41012374999999995,0.1457953690142697,-0.11,-0.5119125,-0.41,0.1597802856705413,-0.11,-0.5101215,-0.41,0.2794553293465892,-0.11,-0.51,-0.41,0.16942051196328198,-0.11,-0.51,-0.41,0.05793327031488958,-0.16340240596172811,0.44623681412814253,-0.35355024753591363,-0.0013504457218978458,-1.001302521158598,0.44481701445783006,-0.41,-0.01,-0.5698921383531456,0.437319987464665,-0.33686824409823957,0.02055157289324211,-1.01,0.364477539923079,-0.41,0.024611144516848205,-0.1331733313612195,0.4024461374656163,-0.3288659557574558,0.017186299777782167,-0.11,0.22177272345115745,-0.41,-0.01,-0.2001482857720508,0.19560594878749843,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.4757113248991653,-0.3776262560294921,0.2892472310973603,-0.11,-0.51,-0.41,0.21916259286491224,-0.11,-0.4843168868404015,-0.41,0.24242484719302565,-0.11,-0.51,-0.41,0.13238422319875726,-0.11,-0.51,-0.41,0.1787108348515959,-0.61,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.01,-0.11,0,0,0,-0.11059625000000001,0.3630588085206585,-0.3781866139854155,-0.01,-0.07951422599513308,-0.0106975,-0.41,0.2098407889941379,-0.61,-0.012025000000000001,-0.38491027989803517,0.2892297637156963,-0.11,-0.021137500000000004,-0.41,0.15488138110452138,-0.11,0.004345399798455499,-0.41,0.190646527918995,-0.11,-0.021137500000000004,-0.41,0.09823230758464581,-0.11,-0.022248761861535044,-0.41,0.05641057944325212,-1.01,-0.01,-0.41,0,-0.11,-0.51,-0.41,0.18843323652113347,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0.18143849867321163,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.09203747990403983,0.35262494770083563,-0.3820825293325732,0.02638590833419136,-1.01,0.11229318168615797,-0.41,-0.01,-0.11,0.0025599714231701143,-0.41,-0.01,-0.11,-0.013952442434515702,-0.41,0.11046489319867618,-0.20146333511360537,-0.010742323204769472,-0.39845380980255596,0.2513732133762328,-1.01,0.05772839887548799,-0.41,-0.01,-0.11,-0.011547858566304012,-0.41,0.08749298967221643,-1.01,-0.012442243781403028,-0.41,-0.01,-0.11,-0.51,-0.41,0.21953517221696373,-0.11,-0.51,0,0,-0.11,-0.51012375,-0.41,0.059649520798998934,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0.02715277563434562,-1.01,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.61,-0.0138475,-0.41,0.25900120662854753,-0.11,-0.04718075774092205,-0.41,0.06799344198132372,-0.11,-0.013215250000000001,-0.41,0.13621195432740918,-1.01,-0.01,0,0,-0.11,-0.012025000000000001,-0.41,0.05906532184909254,0,0,0,0,-0.11,-0.01,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,-0.013188700000000001,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29747760896677805,0.3106390938050953,0.3610411801595874,0.30769555983961616,0.2864646819421975,0.28250142700671715,0.28767291309855597,0.36162849007234715,0.24929923885490582,0.24198375848920897,0.44539773817024364,0.23615634149704812,0.12706984368433605,0.2197235472795903,0.4150169468121691,0.20399616432659362,0.1817759362367521,0.2171237366383547,0.4086375555203492,0.2326001290413504,0.12626925682166074,0.3740881336932661,0.2197202776349902,0.23891556958034496,0.20021804811394311,0.22321211641332656,0.4165727584137267,0.2692730740631237,0.01190057135454272,0.2498525006558735,0.038666691306470026,0.027560874402207343,0.21727250490472338,-0.10660802744584948,0.383516180296412,0.2490302174488508,0.26780171662048624,-0.23785328538082956,0.45616855546003987,0.2501524026040898,0.21450589238142465,-0.23223144968407008,0.4526767906566559,0.2403010396102457,0.08004471186593452,-0.4651246716400587,0.4586644851592856,0.05542579977011116,0.26637734081069586,-0.278811762849779,0.3931921124069331,0.2388766787183169,0.010543907486971975,-0.41328605932207546,0.3707085221099036,0.08262063443620207,0.044728731281087106,-0.45055412784018556,0.36795816788897695,0.0922991752044639,-0.0635182997695135,-0.51,0.3128386380110389,0,0.2781794132059462,0.38434558633845384,0.04240787920922484,0.271472511102482,0.11868104845184768,0.005027564622876837,0.018434414465894153,0.3488945944862789,-0.11094292823539764,0.07937391128301866,-0.018817798636590936,0.3560497724221225,-0.051180898466319014,-0.028370090580501637,-0.03435663779553357,0.3585681251809709,0.18832243318482805,0.10235713720410178,-0.047146749868668035,0.3360773987960068,-0.08122484299481725,-0.020607146910262074,-0.02740836422294598,0.21576749377434007,0.0025912634221713776,0.015790938634755038,-0.044595558466872055,0.3328966207467712,-0.06186983163507773,-0.016067260473421385,-0.00678723881060817,0.3404271241427113,0.04163035331336452,-0.3254029508837243,-0.023290584087106686,0.32862286000101865,-0.028185599014887357,-0.5126701575485375,-0.03625698823344519,0.3381352552602207,-0.0087400351639811,-0.4838135088542491,-0.020609855529524365,0.352349797882093,-0.07506282614844118,-0.5137872975142198,-0.016443032640898067,0.3522838292124532,-0.04537599978822439,-0.51,-0.005547643126133224,0.30989699133799586,-0.040911396048306445,-0.51,-0.006513600073067201,0.3490112668385099,-0.11,-0.51,-0.0018175251674512564,0.28979156087412844,-0.08273022401699534,-0.51,-0.020461415311905602,0.18459040294050919,0.25973937361594474,0.29210569598306957,0.3270443973924098,0.28254996134985566,0.17241605666234958,0.26120926739342676,0.19317855238228163,0.1764143976220181,0.09661137228219357,0.11736156710724176,-0.0071046243097823095,0.34997300155845656,-0.34915251233623773,0.020033121053810277,-0.010675218053781525,0.3262832938698199,0.10564490908021403,0.07933132330495102,0.05267566784988802,0.3566408266982677,0.09801536515782247,0.021964230294099052,0.022859656717935828,0.34207071879890316,-0.4258729622535333,0.04612902421705883,0.0004726728832138436,0.3154064021087567,0.009948512176163646,-0.01422611646289482,-0.012617493037492069,0.3588563940477229,0.13195097364464803,-0.338866261266194,0.21201304899710155,0.3479821870792636,-0.025464813329411327,-0.47964150846260983,0.3589826788939461,-0.01,0.02081438511596748,-0.4937973332714395,0.009116838189945155,0.33233419414097654,-0.42776352359946795,-0.51,-0.004715950450989506,0.33988891218030953,-0.06915598592477327,-0.47245249556207014,0.060327596362304406,0.006853683113468409,-0.5186880731461323,-0.5018690089709842,0.07207377510776433,-0.01,0.006612585770257952,-0.5083936008888326,-0.017455287230076093,0.26055922185881714,-0.11,-0.51,0.00244674833186069,0.25790071499856637,0.15205451798249578,0.3211339274020405,-0.02211227950117168,0.1638520127304066,-0.04244203777227862,-0.009595296210758381,-0.027069648214246712,0.3565453683658763,-0.2918368549842659,-0.007021925485161395,-0.014983513374168941,0.35299226560379554,-0.61,-0.0106975,-0.019735896079369358,0.3193784570889918,0.045787805626242836,0.08432232441383375,-0.014013166420047816,0.3356383019515051,-0.08948751884837593,-0.022908222231805903,-0.01852685860585638,0.3250919864141862,-0.07786782156159461,-0.012531215417827918,-0.014731927977851438,0.32529696981686157,-0.11,-0.012025000000000001,0.01957569305240809,0.20123005281183373,-0.017230949191217572,-0.4519527980136489,-0.00992683569268814,0.2739564117346239,-0.08936404336400522,-0.5125875,-0.06208852703442314,0.3375387349190489,-0.06602019998294156,-0.51,-0.01189817676990834,0.33410391961860697,-0.07364855577534057,-0.51,0.01624003524328363,0.18720659975686474,-0.11,-0.5106377244006797,-0.02199501592525703,0.32074446815084584,-0.11,-0.51,-0.01862398504250709,0.19654045032502346,-0.07042463601887883,-0.5116087500000001,-0.016837790704186922,0.0830487185435507,-0.0925425801588703,-0.51,-0.023840970416197243,0.2034168571178862,-0.15814796716622867,-0.01,0.45966517983778243,0.027082726850970226,-0.11,0.03452750022607581,0.4454550393442467,-0.01,-0.11,-0.01,0.42796179838822124,-0.01,-0.18330820009598842,-0.01,0.3367997769350007,0,-0.8938731451071562,-0.01,0.23294020473492766,0,-1.01,-0.01,0.22898845858394956,0.024720462859039574,-0.18780761193476803,0.026036841261340614,0.19650916955472447,0,-0.11,0,0,0,-0.11,-0.51,0.40328892303563174,-0.01,-0.11,-0.50346375,0.25072685115400917,0,-0.1700607051500488,-0.51,0.3674249494422506,0,-0.11,-0.51,0.23010082886911404,0,-1.01,-0.51,0.2802374304327943,-0.01,-0.11,-0.51,0.12406541654890983,0,-0.11,-0.51,0.1181959655954731,0,-0.11,0,0,0,-0.11,0.35331814666382005,-0.027297247625244436,-0.010854635046421581,0,-0.01,0.05222006548915887,0,-0.5351085733737262,-0.012025000000000001,-0.019010374378141976,0.2659917962301348,-0.61,-0.01,0.07408314441919932,0,-0.11,-0.010229495839876564,-0.02447938431135463,0.26629976331750366,-0.11,-0.01,0.08213838359277977,0,-0.11,-0.012025000000000001,-0.013181611931415177,0.13081348031148288,0,0,0,0,-0.11,-0.51,0.04776334299118393,0,-0.11,-0.51,0.0644939929242451,0,-0.11,-0.51,0.011497892412412388,-0.01,-0.11,-0.51,0,0,-0.61,-0.51,-0.019510729837046496,-0.01,0,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,0.02836625911128341,0.34081701469621994,-0.006117897285763835,-0.11,-0.01,0.19374607848650743,0,-0.11,-0.013324634239071556,-0.011240328885627607,0.31036816556225943,-0.0753007266745994,-0.012407644063877371,-0.012485809205389681,-0.01,-0.1943377426138338,-0.01,0.07147526977467734,0,-1.01,-0.01,0.09731218982593914,0,-0.07525529433594522,-0.01,0.0030729434019653866,0,-0.61,-0.01,0.02565745950214309,0,-0.11,-0.51,0.3351295280666543,0,-0.61,-0.51,0.08886731952886402,0,-0.11,-0.51,0.03414469657552144,0,0,0,0,0,-0.11,-0.51,0.07734837779055999,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.11,0.22867363436845844,-0.012862042671998825,-0.01,-0.11,0,0.026202706455016475,0,-0.14510918064294356,-0.019414719598366704,-0.020464010513898727,0.01663785375277491,-1.01,-0.01,0.09,0,-0.11,-0.012025000000000001,-0.014602160669873146,0.08286928765116791,-0.61,0,0,0,-0.11,-0.01,0.09,0,0,0,0,0,-0.08158758957542661,-0.51,0.05863254187498628,0,-0.11,-0.51,0.09,0,-0.61,0,0,0,0,0,0,0,-0.11,-0.51068625,0.08931375,-0.01,0,0,0,0,0,0,0,0,-0.11,-1.01,-0.011630606859304476,-0.0117865,0.2159794855147859,0.4400424850906775,-0.15078821094971173,0.29976651811786154,-0.06923407125720098,0.44215135486730256,-0.3151843863547938,0.19198908788610153,0.07534610033159296,0.4246923445100028,-0.37790054680714946,0.14080602557382219,-0.04310121869882811,0.4166852450608079,-0.3767377418686675,0.100326227540525,0.05237291062428931,0.31762907316585093,-0.3033445885006922,0.2085248626484862,0.06735334842594677,0.22130810162740272,-0.3204254810650833,0.14898597117850282,-0.11,0.3267864635493529,-0.39795644183131884,0.010523004441087386,-0.09737947239101756,0.25783165800983066,-0.41,0.060654238546217695,-0.03246356575564839,-0.3556459332919747,-0.3227590018007128,0.347121537274581,-0.059893248748186786,-0.51,-0.3760731969333452,0.308425241161284,-0.0359027386466195,-0.46831919247221543,-0.38334111287874206,0.34757376449826677,-0.11,-0.4991156275254675,-0.40038557618492243,0.3250975757763458,-0.08149890800939004,-0.46793059000373394,-0.41,0.3314625946061823,-0.06775406022367007,-0.50290125,-0.412025,0.32084618257186687,-0.07278254368556239,-0.51014625,-0.41,0.33655249056223574,-0.11,-0.51,-0.41,0.22466025454405356,-0.025623998173098305,0.0721712998265521,-0.517009299209001,0.3397619154398245,-0.07811659822221634,-0.036285314001506815,-0.4419116840174149,0.25155008153133585,-0.4703532753197612,-0.0032977277088034156,-0.4675673756621067,0.34640957560692853,-0.08506888931108475,-0.0121516890625,-0.41,0.3395596286028015,-0.021777405599302774,0.016605419123006466,-0.4106975,0.3507947952078098,-0.059025688099646596,-0.020762539046883133,-0.41,0.14839411032991445,-0.5526378348817571,-0.0007130899738242887,-0.4440773288694353,0.3384667369296358,-0.11,-0.020501024190031344,-0.41,0.2523225936425851,-0.050828727537535257,-0.49922797953042164,-0.42523130646362745,0.2757714329987079,-0.06083910699981311,-0.5121391393227602,-0.45877734528124997,0.27531473147088664,-0.11,-0.5043566162887223,-0.4617487028694798,0.32362066187817884,-0.11,-0.51,-0.41,0.23808713302938123,-0.16566412120347296,-0.51076275,-0.4380778923745662,0.26005837040932783,-0.09443284655960449,-0.51012375,-0.41,0.12675434905387165,-0.11,-0.51,-0.41,0.220835016576823,-0.11,-0.51,-0.41,0.02723779876413924,-0.17057185532355376,0.3263036428545704,-0.35045242800288623,0.14199809780680395,-0.00554239194568925,0.3410277545744803,-0.35085262805006123,-0.01091010462635703,-0.36947968308044743,0.04498998835183646,-0.43131440463693643,0.30763267806759637,-0.11,-0.007130958857974046,-0.41012374999999995,0.3566404003760059,-0.015576252077170158,0.09464555052161494,-0.4179899821849116,0.3587410744352292,-0.07404597175535191,-0.0106991453125,-0.41012374999999995,0.28088398369763623,-0.11,0.0689552159750922,-0.4169041414601591,0.33567191127005686,-0.51,-0.012275624200970465,-0.41,0.13811320722912507,-0.11,-0.510135,-0.4019556927857048,0.3498870940514365,-0.11,-0.51,-0.39072891452223035,0.32918484274429105,-0.11,-0.51,-0.41,0.31342645274784553,-0.61,-0.51,-0.41,0.18733294319738872,-0.11,-0.51,-0.41,0.22354797988263994,-0.11,-0.51,-0.41,0.14329211809321374,-0.11,-0.51,-0.41,0.15829690975037244,-0.11,-0.51,-0.41,0.05177670773012117,-0.5275448771803218,0.3480929249386053,-0.41,0.05327491343735831,-0.46518236243676997,-0.01731732351798488,-0.4203223905754642,0.3257143054621874,-0.11,-0.011168588181700887,-0.41,0.31287428263081474,-0.11,-0.0121516890625,-0.41,0.23300412949175314,-0.61,-0.0114625,-0.41,0.31144779858450833,-0.11,-0.01012375,-0.41,0.09419005967364294,-0.11,-0.0114625,-0.41,0.04285166988873197,-0.61,-0.01,-0.41,-0.01,-0.11,-0.51,-0.41068625,0.22288130992425298,-0.11,-0.51,-0.41,0.15862632224378992,-0.07693093525343464,-0.51220450258125,-0.41,0.1679452011506266,-0.10250827440931407,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41068625,0.04291231175964785,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0.057873197187043625,-0.11,-0.51,-0.41,0.051449607259893004,-0.11,0.4060509607368551,-0.41,0.026630480719663258,-0.07186690096463562,0.27538719396219147,-0.41,-0.01,-0.5950691050863648,0.24982812850099123,-0.41,-0.01,-0.11,0.18274126094685328,-0.41,-0.01,-0.18297527863348512,0.23278487053359126,-0.3837562118315458,-0.01,-1.01,0.02325487263733106,-0.41,-0.01,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.4984758988605089,-0.41,0.17251331682170234,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0.045183380739994713,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.13380148650575593,0.24420020536938347,-0.41,-0.01,-0.11,-0.048685374999999996,-0.41,0.046945828809417174,-0.11,-0.012025000000000001,-0.41,0.16450092127344557,-0.11,0,0,0,-0.11,-0.012025000000000001,-0.41,0.11349072300244509,-1.01,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.20207470109375003,-0.51,-0.41,-0.012984737500000001,-0.61,-0.51,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.51,0,0,-0.61,-0.51,-0.41,0.04545235686764332,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.2119666497126675,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,-0.014229713845023095,-0.41,0.11854204150819486,-0.11,-0.01,-0.41,-0.01,-0.11,-0.003734599346194682,-0.41059692078125,-0.01,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,0,-1.01,-0.01,-0.41,-0.01,-0.61,-0.51,-0.41,0.08270639739286716,-1.01,-0.5044875,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.012025000000000001,-0.41,0.017540488594209563,-0.11,0,0,0,-0.11,-0.015138106316342935,-0.41,0.03390052331491411,0,0,0,0,-0.11,-0.01,-0.41,-0.01,-0.11,0,0,0,-0.61,-0.012587500000000001,-0.41,-0.01,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.20549022443824752,0.44404641234140313,0.4047225263114439,-0.15118980897431936,0.2678786712210867,0.3416414283883712,0.49529067023208234,-0.15299394056621765,0.28312770989508573,0.4401227385071964,0.5048992525327847,-0.16120205598661647,0.15877924163748502,0.265167960073721,0.5056109480408889,-0.27057456821463693,0.19967521831342758,0.30073321864218744,0.4938098385197804,-0.151833591674447,0.258547802113636,0.2678618051067978,0.48707969005908974,-0.23073417311510847,-0.13041687568563032,0.33247589930480953,0.49117009071863493,-0.2625453666701623,0.041447034229384075,0.15058844527721588,0.5328473622243027,-0.4763417873303771,0.2783442284928329,-0.09765681264360945,0.5019181161584323,-0.18211334069646365,0.2508716258323984,-0.23993569751101212,0.498588126126109,-0.22531712316831584,0.24519468750700463,-0.2285113058736364,0.5150065406874615,-0.2599063515189794,-0.06278142145373472,-0.48940187197370927,0.4967485688282647,-0.39457999787170994,0.26385921520074446,-0.2198963092295899,0.48679976997645547,-0.34828981857288493,-0.0284916430488239,-0.4748728815832697,0.38116407930842544,-0.5111475,0.01074153962944336,-0.4836701893140099,0.4695775644110725,-0.436373624342886,-0.07288630781286123,-0.51,0.5355885439610563,-0.4746246592450812,0.2597742649726392,0.3790786924981269,0.47486268164128953,-0.19516223352289683,0.07879843402061604,0.281259313626789,0.5277541292150569,-0.2443935693716495,0.14277934824216124,0.27632093747022207,0.5199981034177041,-0.28272433896256677,-0.08397208242713904,0.07918900028713649,0.5432989835661244,-0.4465067502500294,0.143074774487248,0.27089845456414213,0.5124992355814694,-0.22555622855739088,0.08825648494575551,0.04219805469603798,0.5097079688802019,-0.4620548394243626,-0.38062195315836655,-0.001768607095721025,0.5191180416336493,-0.4223341993040406,-0.15001459067460704,0.06303881248524161,0.48474918198799094,0,0.0407865852825461,-0.3798223526861929,0.5261778539976076,-0.3565611247057297,0.04026412892814609,-0.49041786352613803,0.5223799206425161,-0.44211631037801175,-0.010322049952618033,-0.49845588891895837,0.5280155731796429,-0.47588352396920897,-0.07999649525272291,-0.5133792367598438,0.5151308250809475,0,0.018067277138522873,-0.5114625,0.5205932540041093,-0.51012375,-0.07790684496590122,-0.5106975,0.5034126810977333,-0.51071775,-0.0948453422539136,-0.5014413698404643,0.5018859583685651,-0.4757242656323697,-0.11,-0.51,0.41416099173784887,0,0.284403489288831,0.2844293308759511,0.4919138981226564,-0.2513219940268952,0.16645681968719125,0.39915939895734354,0.2716509859109232,-0.32541124407507777,0.13820928849214403,0.14704089068131754,0.3298665845117452,-0.31529410521391793,0.18571869514383033,0.06596165930348541,0.061730979407446,-0.3517411460003089,0.19311622977112541,0.23039250689638785,0.20362097416117567,-0.2812057310319896,-0.11564561917828554,0.10057884937490821,0.42190730744818233,-0.51,0.12847218282839878,0.17094842827487317,0.46567041388532415,-0.4395695596103851,-0.06711689614206286,0.031982966247317154,0.40761883331858023,-0.51,0.2418720592416935,-0.2864242120800131,0.5454711745861096,-0.39278154426923423,-0.027264227312373213,-0.45449135837052834,0.5285465517264925,-0.4502006681471241,-0.17007777744637465,-0.4358348141587704,0.4133151716629879,-0.39769424629392397,-0.03135762522761238,-0.4965926362900543,0.46627516291969034,0,0.10816333131432593,-0.4387208793637129,0.4014909069813474,-0.392803434831787,-0.06413472770194636,-0.51,0.5002689827116786,0,-0.030072255839906963,-0.51,0.4130742108894524,-0.49266542295348253,-0.07081426910755256,-0.51012375,0.43631102756522167,-0.51,0.1612528146203734,0.2700131939113982,0.4625277754927173,-0.49130297182719135,-0.061758310879397815,0.02840027413231819,0.32899412131464767,-0.47772464441774687,0.03269520049250724,0.022241183091768695,0.41267438529880013,-0.4201745805845747,-0.013135930689119571,-0.006737709117232296,0.46440607664764305,-0.4807257275710528,0.01565511614734391,0.03828862840545815,0.34436103673672525,-0.44886567554237294,-0.12221864484584287,-0.0010133501061199892,0.27557694298652413,-0.51,-0.07011219161179842,0.00014140966618553415,0.36119364918770736,-0.4868413422435937,-0.14603498581368518,-0.01,0.18114722480201004,-0.51,-0.011387653044558285,-0.5018411912899458,0.46941334651029837,0,-0.07615305111895387,-0.51,0.3838491876872716,0,-0.45700942940324973,-0.5056396101844147,0.4409595983452645,0,-0.11,-0.51,0.24063750707767773,0,-0.08325569349245232,-0.5069866230424919,0.23078168590595893,-0.51,-0.05209264579766529,-0.51,0.3156840173337698,0,-0.11,-0.51,0.3459400651515463,0,-0.02457371818719548,-0.51,0.01584671651412266,-0.4902016257184799,-0.06219043076481476,0.07799959959195144,0.45771962046025116,-0.4495501038272447,-1.01,0.03566072740446782,0.4966807774224955,0,-0.11,-0.01,0.5395639473565308,-0.51,-0.07623476301409954,-0.01,0.31742803365854017,-0.51,-0.6330584402921433,-0.01,0.4320090287033338,-0.4755972978933809,-0.11,-0.01,0.2183153988889791,0,-0.61,-0.01,0.3400219453890885,0,-0.11,-0.01,0.24334921379354688,0,-0.1157808554997761,-0.4866541225984983,0.5152547775810651,0,-0.11,-0.51,0.376563232602041,0,-0.11,-0.51,0.13641829329179536,0,-0.11,-0.51,0.22795755229101647,0,-0.11,-0.51,0.29981304067770487,-0.51,-0.11,-0.51,0.22543937517491858,0,-0.11,-0.51,0.1349985119470893,0,-0.11,-0.51,0,0,-0.11,-0.01,0.5058355038108783,0,-0.11,-0.01,0.4341857192907546,0,-0.11,-0.01,0.43712805733088894,0,-0.61,-0.01,0.17353175786349417,-0.48783604703689754,-0.61,0.014308745643569537,0.4321286395618835,-0.51,-1.01,-0.01,0.21340992534153247,0,-0.11,-0.01,0.18099846522942858,0,-0.11,-0.01,0.13187118265856973,0,-1.01,-0.51,0.4462865877888237,-0.5107515,-0.11,-0.51,0.17600939591616238,0,-0.61,-0.51,0.1921278986776743,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.20476271975837224,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.12308047889810454,-0.0024654390625,0.44748608791564026,-0.51,-0.11,-0.01,0.3502631980788189,0,-0.11,-0.01,0.20395688663491748,-0.51,-0.11,-0.01,0.16697084965186507,0,-1.01,-0.01,0.16628448989831673,-0.51,-1.01,0.026940337876408968,0.1746191966902594,0,-0.61,-0.01,0.17096358042391574,0,0,0,0,0,-0.11820865807246489,-0.51,0.33278768242799406,0,-0.11,-0.51,0.1591761606388579,0,-0.61,-0.51,0.2390524017624788,-0.51,-0.11,-0.51,0.09,0,-0.11,-0.51,0.13349876328341134,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0.12202814149597419,0,-1.01,0.02442436521889438,0.33673520790316985,0,-0.61,-0.021137500000000004,0.24704511487769792,0,-0.11,-0.01,0.1338302761599955,0,-0.11,-0.01,0.16492753758030615,0,-0.11,-0.01,0.18232349108447002,0,-1.01,-0.01,0.13461703389001353,0,-0.11,-0.01,0.09,0,0,0,0,0,-1.01,-0.51,0.17623354967936922,0,-1.01,-0.51,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.61,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-1.01,0.08005090698767797,0,0.18752601612333747,0.4637905960168248,-0.07734736051598205,-0.24112990417179858,0.06406579687241132,0.44909806886045284,-0.20591719593904242,-0.3167694448536485,0.05667110930049743,0.4445644900970663,-0.21661467460137018,-0.4787930708217548,-0.11,0.4387850207747863,-0.3698290196334502,-0.4165563832381479,0.09265568141743662,0.3771626964905679,-0.2648563165436159,-0.39102512247146615,-0.07048842879079908,0.3654189819598766,-0.2570488159902994,-0.48010787034638525,-0.08253094695405819,0.4039816349134546,-0.33904194931488085,-0.4935283172125702,-0.11,0.3349778827783033,-0.41,-0.51,-0.3983716146714692,-0.4468162475691455,0.015204134066707667,-0.51150451875,-0.4546001526116922,-0.4613394176366326,-0.04612071873440595,-0.51,-0.5611264069758275,-0.4978363601783074,-0.09739675887198122,-0.4891965993149603,-0.12426127147626087,-0.5009919063862173,-0.369547304810861,-0.4543193534995392,-0.36981226017413377,-0.5045048973162677,-0.006415443765347557,-0.4718464368106317,-0.61,-0.51,-0.14921883537516362,-0.510135,-0.4542839926650351,-0.51012375,-0.3436771981608696,-0.46544379017160076,-0.4049077889041609,-0.51,-0.3644819007388806,-0.47418051675077655,-0.3339677802264721,0.3844438025070195,-0.3255207414396723,-0.42971560905478373,-0.27217396103280367,-0.1440601664069503,-0.04910623754133141,-0.33074669452773514,-0.27682961149803587,0.025090544726246757,-0.2854420611363361,-0.3749412790859903,-0.24802850107188756,-0.14610122890181465,-0.2900253091486192,-0.3633224555567275,-0.053731577022323965,0.01944813847438112,-0.2989181040755794,-0.41116763671028617,-0.13890324293675063,-0.12448406254186996,-0.32791888790971113,-0.51059625,-0.11340212139539885,-0.03906931670291467,-0.38091090177809245,-0.4772431758641078,-0.15724071763670358,-0.13932484245544208,-0.3746236893406635,-0.4751580178653211,-0.4342175660229074,-0.511999125,-0.1296455448128263,-0.5077524054195893,-0.39485869272031926,-0.5120854209375,-0.2293274496253806,-0.510135,-0.51,-0.51,-0.21883718245058248,-0.51,-0.11,-0.51,-0.41,-0.51,-0.4216078897229644,-0.512025,-0.3358185197358271,-0.51,-0.10352592719883977,-0.51,-0.41,-0.5094010599738263,-0.61,-0.51,-0.34972879304227433,-0.51,-0.11,-0.51,0,0,-0.37814969344782123,0.36598597329321403,-0.2354374255034427,-0.4285309611317593,-0.04759710717162597,0.342021200871629,-0.35561327429771905,-0.490224736293576,-0.029284072280346594,0.09187428404896471,-0.2948435289972488,-0.4431384334006652,-0.4897696695342782,-0.07022657757523156,-0.3668072688572501,-0.47732354658719517,-0.16885408759308335,0.1226805069558212,-0.33645221073842074,-0.45742662339023904,-0.11,0.06472207611473905,-0.41446215405704906,-0.51,-0.044531508201791484,0.0022300028748143243,-0.38642640293171104,-0.5133435198127823,-0.11,-0.05256537151217682,-0.3955690111286506,-0.51,-0.61,-0.51,-0.07068072318316997,-0.51,-0.289578882764542,-0.5028931953769237,-0.41,-0.51143687671875,-0.434816950889779,-0.51,-0.37239661651110095,-0.5083301974770297,-0.1746238310466752,-0.51012375,-0.38441792655405044,-0.4811450764998099,-0.14643143070735554,-0.5053702345070017,-0.41,-0.48683332128840406,-0.3707345558156434,-0.51,-0.31031501775890147,-0.4956640922803376,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,-0.11,0.33187089766260414,-0.41261172120054807,-0.5114625,-0.28041470269479163,-0.14693629113031964,-0.3232931582107987,-0.5119475674501095,-0.08645993525388035,-0.022520816467018277,-0.4118480553875,-0.46517316391137026,-0.11534941675791126,-0.10930344191451062,-0.3294186153267171,-0.51,-0.08608596245082761,0.13688174498552574,-0.3997718005127832,-0.5129635752311411,-0.5540084052369758,-0.14579977511600847,-0.37623286980065507,-0.47832477541064977,-0.07599434419712542,-0.09496995065084059,-0.38151810059677416,-0.5110805036080057,-0.11,-0.01,-0.41,0,-0.17637629899905582,-0.5116087500000001,-0.38417295736676604,-0.51012375,-0.439446882174266,-0.51,-0.38971792315341736,-0.51,-0.30729235115000525,-0.51,-0.41,-0.51,-0.16,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.51,-0.51,-0.3995416883213093,-0.51,-0.11,0.42005208623780677,-0.3655561709446259,-0.51,-1.01,0.27172191265263945,-0.41,-0.51,-0.12475121267860731,0.337669229061869,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,0.1506188227259015,-0.41,-0.51,-0.11,0.07343431499987108,-0.41,-0.51,-1.01,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.38403056358873944,-0.51,-0.16352103433027085,-0.51,-1.01,-0.51,-0.3631890094131723,-0.51,-1.01,-0.51,-0.3011009592532534,-0.51,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,0.2223586019765481,-0.41,-0.51,-0.11,-0.08705183316951459,-0.36941022972723964,-0.51,-0.11,-0.03250524095702079,-0.41,-0.51,-0.61,0,0,0,-1.01,0.056937160776227895,-0.41,-0.51,-1.01,-0.01,-0.41,0,-0.61,-0.01,0,0,0,0,0,0,-1.01,-0.51,-0.3679408331150321,-0.51,-0.11,-0.51,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-1.01,-0.51,0,0,0,0,0,0,-0.61,0,0,0,-0.61,0.2240668370284446,-0.41,-0.51,-0.11,0.07028464992085204,-0.41,-0.51,-0.11,-0.016497454820824178,-0.404871007990456,-0.51,-0.11,-0.01,0,0,-0.11,0.032713203515784425,-0.41,-0.51,-0.61,-0.01,0,0,-0.11,-0.003669464529406717,-0.41,-0.49781301048156734,-0.11,0,0,0,-1.01,-0.51,-0.2611367813511804,-0.51,-1.01,-0.51,-0.41,0,-0.5065058438394796,-0.51,-0.41,-0.51171,0,0,0,0,-1.01113625,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.080731586166992,-0.41,-0.51,-0.11,-0.07451440620762204,-0.41,-0.51,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,-0.51,0,0,0,0,0,0,0,0,0.2604321315623603,0.42920330748736996,0.3619051896375002,-0.23005448089041058,0.1800455458981468,0.18056041293741698,0.4577090799350771,-0.31153401129989733,-0.038409128830174694,0.2908292304578639,0.4531264501608204,-0.40886692492671445,-0.06289536422530821,0.021558876079801406,0.4688496712757818,-0.43764983645872635,0.04548409711547294,0.19694989528474394,0.39165319413522237,-0.36742364657477916,-0.02659526431476545,0.16126342049207185,0.3968474909372687,-0.4326185797905451,-0.33283425098337216,0.03572770751556185,0.43898864294141327,-0.45108211927415387,-0.11,-0.01,0.35114306848442844,-0.48107311346425774,0.24694313997519995,-0.2617017011155873,0.40753993675777284,-0.37411880655313984,0.0067770722490616,-0.47213009033371184,0.4465077504188925,-0.44841697835454986,0.06545964788493186,-0.4095348830370379,0.44373374217203604,0,-0.11,-0.48764356863648484,0.46217589811786636,0,0.06825320156310374,-0.45607789897168804,0.4527451129085989,0,-0.028627124826026674,-0.51,0.4385016410947099,-0.51,-0.029399735029394677,-0.4879385635593839,0.37325625625985387,-0.51,-0.11,-0.51,0.29741392468014427,0,0.1422856224514323,0.3782866529923354,0.02906309294761725,-0.43486134603444865,-0.10544996640815477,-0.04688292001995461,0.002742049978468636,-0.418392078906991,-0.008838110738492368,0.06427226725867256,-0.060357310084604085,-0.34033562035719267,-0.17718177556640496,-0.09387239257177221,-0.0564663862305689,-0.4707942760566267,-0.022304268821140165,0.1597082016456129,-0.011949147393267157,-0.2528985218326819,0.1755780302497268,-0.08220771339732119,-0.03989471593842041,-0.42872898361212336,0.09759269806550216,-0.04009988981386973,-0.06675577146300012,-0.4987732479666545,0.046893071964970834,-0.07707304351730682,-0.078101849340079,-0.4609320427095883,-0.13561096081928137,-0.4262812331448103,0.0784125000328706,-0.5139264791571078,-0.09623495246863124,-0.5120154756866974,0.013338450256919489,-0.5083346029640772,-0.10260837385730015,-0.491833443896179,-0.0007529017241844141,-0.4905003904522637,-0.08973130871319045,-0.5124562125,-0.07053598188343424,-0.512714224595538,0.0869097325203907,-0.49639989647797206,-0.03212366146735283,-0.5036440697966917,-0.10240622556921875,-0.51,-0.004978666404993658,-0.5138507479890927,0.08190331985511941,-0.51,-0.08241104489693112,-0.4864021759686692,-0.11,-0.51,-0.0013507442330387438,-0.51,0.11509272302258246,0.35899459640791576,0.20761398832096617,-0.48147071201289715,-0.005831520875054258,0.07850306068602259,0.3953323096832304,-0.51,-0.10635258075490925,0.1696450566425396,-0.018084204395945623,-0.43536460973945373,-0.11,-0.02670804982432926,0.018052057570341236,-0.5000290781263353,-0.06593223984584647,0.1817474421097097,0.01707168268963796,-0.49267866944064675,-0.004653712742997709,0.15777453623973461,-0.010091285455650299,-0.49811930438995233,-0.018936248336883302,0.14241656270315786,-0.02260461592896954,-0.47953934543598437,-0.07546898807255796,-0.031305483453900135,-0.017274523919113615,-0.5072524611488101,0.009856710855511444,-0.4989851330544239,0.35526156878492243,-0.5089207609571429,-0.42724535041391654,-0.51012375,0.27960431718861084,-0.51,-0.61,-0.51,0.030637962158927022,-0.5107282994321958,-0.11,-0.51,0.013422178395000204,0,-0.032489927273255385,-0.4973061876389356,0.08955325568530656,-0.51,-0.11,-0.51,0.0953471090473228,0,-0.11,-0.5042035552275498,-0.024236398419420324,-0.51,-0.11,-0.51,0.03554289740528931,0,-0.06796266569776482,0.35721927491791133,-0.07535460451245826,-0.5088825757868873,-0.05195229126112197,-0.11186980100437544,-0.14092133046247568,-0.4983245526106351,-0.4658032169938674,-0.03594869746790918,-0.022047193406187868,-0.5098216104458899,0.07981676652497538,-0.09371902715510527,-0.08457013515268977,-0.5081785571926501,0.196125028677969,-0.028167496436903056,-0.11528015881625618,-0.5130220668557889,-0.12855775033883837,-0.10585629157205381,-0.13862158106188546,-0.5123032420919914,-0.09207864304180963,-0.06997080054196038,-0.08534734527711624,-0.5115455901862475,-0.42651805385951164,-0.08256701532915156,-0.12261376345005155,-0.5077831263696642,-0.11,-0.51,-0.03863295955241438,-0.5126526806962729,-0.11,-0.51012375,-0.05068024107763427,-0.51,0.05568222901023499,-0.51068625,-0.07708905360479694,-0.508333211044888,-0.05101016658095642,-0.51,-0.10636231378396326,-0.5106975,0.09390435434107246,-0.51265275,-0.12660448269922644,-0.51,-0.11,-0.51,0.05946906924863139,0,0.09709080656161781,-0.510111375,-0.11212559975560793,-0.5120025,-0.11,-0.51,0.025532896898510536,0,-0.1903676785235692,0.07641851790026968,0.4379233005939833,0,-0.11,0.03316492174315346,0.3543142393651981,0,-0.11,-0.01,0.31751838762391293,0,-0.61,-0.01,0.2438175481555972,0,-1.01,-0.01,0.26796477604415664,0,-1.01,0.027509271924787873,0.09,0,-0.28133651421875,-0.01,0.17237162215065407,0,-0.11,0,0,0,-0.9253134202253802,-0.51,0.38618889457777833,0,-0.11,-0.51,0.21991352438543207,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,-0.11,-0.51,0.1582422213773754,0,-0.11,-0.51,0.16063187682530072,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0.1596934777826623,-0.01589338260045948,-0.49933083036629505,-0.11,-0.06376958435749354,-0.06817990546197904,-0.51,-0.61,0.020311155296314994,-0.009420669219204288,-0.51,-0.11,-0.01,0.08931375,0,-0.11,-0.01,0.04875164485810696,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0.09,0,-1.01,-0.51,-0.01201443163527846,-0.51,-0.11,-0.51,0.09,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.61,-0.01,0.28820073898174103,-0.51,-0.61,-0.01,0.12267077147177811,0,-0.11,-0.01,0.011720853255093632,-0.51,-1.01,-0.01,0.09,0,-0.61,-0.01,0.0861313269770848,0,0,0,0,-0.51,-0.11,-0.01,0.045512132770842255,0,-0.61,-0.01,0.09,0,-0.61,-0.51,0.09,0,-0.11,-0.51,0.12268211746773605,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0.09475754002933706,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0.01573722288032601,0.049516038533202585,0,-0.11,-0.01,0.09,0,-0.11,-0.02612891953490601,-0.02320733566286689,-0.51,0,0,0,0,-0.11,-0.012025000000000001,-0.012859068616223018,-0.51,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.07409922703745807,0.4430777087232326,-0.36038835304663436,-0.38662379067097535,0.04641976403783578,0.4338068421492019,-0.3245388400211803,-0.4899292186142663,-0.08935989257904622,0.41189124063959925,-0.41,-0.426236495941495,-0.08389992671669663,0.3672655147724618,-0.41,-0.503926715345591,-0.05274418365928992,0.3723629609843344,-0.41,-0.4812662777287778,-0.041323635740948286,0.30496735739322506,-0.41,-0.4885607549103491,-0.11,0.2337246654794033,-0.4118225,-0.4859751054637607,-0.11,0.07388939279161817,-0.41,-0.51,-0.41365894422864996,-0.51024525,-0.16577201918313367,-0.5115045850745517,-0.61,-0.51,-0.2507204335674605,-0.51,-0.4299898834574425,-0.51,-0.3724767732318389,-0.51,-0.11,-0.51,-0.41,-0.51,-0.4122071448852958,-0.46873553303133325,-0.3573956613076152,-0.51,-0.11,-0.51,-0.41,0,-0.12762346002867056,-0.51068625,-0.4119026232437629,-0.51,-0.11,-0.51,0,0,-0.07595431639184537,0.36578999671098017,-0.43847014560602837,-0.51,-0.21959279169846105,-0.14899662808345138,-0.5240179059909762,-0.5024170824848518,-0.3997563754695071,0.0292407839209005,-0.4350978812065126,-0.4950647362767307,-0.61,-0.012025000000000001,-0.41,0,-0.13445087352815877,0.023573059871890293,-0.44561060731014024,-0.5096899669964581,-0.11931886215719602,-0.11859052225778684,-0.4413632451727212,-0.511573875,-0.11,-0.07152236334172629,-0.41022398749999994,-0.49105425707533035,-0.51,-0.02267338562510739,-0.41,-0.51,-0.25834739506279913,-0.51,-0.4643833380927825,-0.5114750296875,-0.4539151871611749,-0.51,-0.41483502184314713,-0.51,-0.17261347295081989,-0.51,-0.41924123302118826,-0.51,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,-0.11,0.35748769061779656,-0.38416829457514684,-0.51012375,-0.11,0.29218040159876624,-0.37636031520714835,-0.51,-0.041894261158270614,0.06988414394908622,-0.4170086724815908,-0.510135,-0.6028264817991426,-0.061206282102107185,-0.43794556221737274,-0.51068625,-0.04754408050232348,0.08394328926358521,-0.41,-0.51,-0.11,0.07756021331953787,-0.412025,-0.51,-0.11,0.008081242082458622,-0.41,-0.4972711564008141,-0.11,-0.014981471712620006,-0.41,-0.51,-0.51,-0.51,-0.29438044716527006,-0.51,-0.61,-0.51,0,0,0,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.4539151871611749,-0.51,-0.41422841194397036,-0.51,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0.2378479403059426,-0.41115874999999996,-0.51,-0.11,-0.04338433812818698,-0.413214125,-0.51,-0.08065061330982361,-0.07836604989726069,-0.410235125,-0.511584,0,0,0,0,-0.61,0.01172989678706484,-0.41,-0.51,-0.61,-0.01,-0.41,-0.51,-0.11,-0.013067875,-0.41,-0.51,0,0,0,0,-0.51,-0.51,-0.4532085944956459,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.10956597852249822,-0.5201147312820594,-0.41,-0.51012375,-0.11,0.2505548308186577,-0.41,-0.51,-0.11,0.016542663918694397,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,0,-1.01,0.1272513154493727,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.502333846438394,-0.51,-0.34828818809640877,-0.512025,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.008327016348105055,-0.41,-0.51,-0.61,-0.01,-0.41,0,-1.01,-0.02422768863813414,-0.41,-0.51,0,0,0,0,-0.11,-0.01,-0.41,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-1.01,-0.01,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-1.01,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-1.01,0.0025739748894500394,-0.41,-0.51,0,0,0,0,-0.61,-0.01,-0.41,-0.51,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,-0.41,-0.51,0.2798811798994856,0.4468469165570594,0.3992707683891621,0.41355507363202576,0.32263391484200354,0.4071081034496198,0.5246498329494952,0.4230372811166718,0.3100647138520239,0.4320477066211242,0.5185984655628664,0.4323341210172082,0.3094109054307895,0.4388464572302049,0.5180823820718264,0.4420829210185844,0.2945052528723556,0.4341956367970895,0.5348739097359293,0.4227977947717705,0.2989893855248924,0.42403946212874866,0.5355326757890365,0.41106878087337917,0.29711229043108867,0.40268785240870597,0.5325274812191687,0.3987584046408437,0.3106610305033111,0.39744746511695017,0.3556197309798179,0.3347735238342385,0.3709879939893699,-0.025630737160212715,0.504401271701526,0.42029564588679086,0.36390451749319996,0.07653210798318708,0.5158021972263093,0.41587620160315886,0.3313540601738138,-0.053400036719233476,0.5298573396868045,0.4290682296317325,0.34672736382440755,-0.06158968842032582,0.543119393171632,0.43126561873826696,0.30339832072947426,-0.05457088802006169,0.5304373420354769,0.3972571534853666,0.3426119583155438,-0.06187525557934208,0.5477311549341816,0.42627922229144183,0.3558792804314585,-0.06817411252330177,0.5335685539604271,0.4139516912522935,0.2506890048823495,-0.20183130331629232,0.5476423828753516,0.38837420146604584,0.299881560224856,0.38622799989812207,0.4092595720697161,0.4581783192977187,0.3221855405662901,0.3801407135172994,0.5188263431649632,0.4528584165360288,0.2640837519790789,0.3937617029297096,0.5239708542097503,0.45595787571652824,0.21671673363907729,0.38466658426152983,0.5265141142292462,0.44765733082092946,0.20777171809887043,0.3730339784772705,0.451037350251917,0.4555655172876598,0.27016506909249166,0.32714341321645296,0.5292981603354535,0.39122032007266666,0.2552934554375531,0.38378292763117744,0.5422207173612419,0.4485653313483188,0.06806028164356177,0.2641733788578737,0.5365291126853778,0.38781764748526637,0.3064372428807186,-0.1292121476480401,0.44113409120443514,0.46448467695529455,0.28754450628594314,-0.13679497003140362,0.5330786260761802,0.44073589117279593,0.33885194662764007,-0.15363146825027246,0.523738356898455,0.4316941999093716,0.1471330025871504,-0.2049245217445336,0.5310521314374949,0.34464328122745913,0.29216454133145675,-0.1882715806720653,0.5480345595865941,0.444232466946447,0.24657844375151972,-0.31364521567278164,0.5352073255329802,0.37233089522242624,0.16083319955495973,-0.26789457137293027,0.5288801530820625,0.23139272051523435,-0.022080554969285578,-0.4900357764452071,0.5274158522668639,0.07995128357452888,0.31576811698262686,0.3997167415759465,0.537289047369038,0.41007830816960106,0.33616205299789337,0.40117941188868284,0.5481504009232744,0.43380881178595476,0.2244172039826639,0.26632128577116465,0.5456783525158813,0.27044628871955345,0.24353782897152848,0.3216610620419137,0.5336217589448236,0.31726393437231537,0.3265832098021913,0.3711420468930013,0.5416542256643658,0.41159961374785653,0.24412398521963397,0.2863820401452228,0.28676968889192633,0.4481977150298338,0.30629997460815545,0.2914010494390861,0.5357605738754531,0.3577103133467361,0.17216994429169005,0.24674279271227806,0.5353083942421906,0.18188274471446517,0.2974314347701253,-0.10796002159337632,0.5235132404125821,0.35641998904769356,0.3285642937393355,-0.11025256421523442,0.5163808693349519,0.4032511936063374,0.29441163787685565,-0.16172939770002248,0.5319235932446635,0.3423906089380566,0.222272125877889,-0.20435847650839362,0.5439268381423572,0.31688466776001734,0.24371099032331392,-0.13986903462122255,0.5378550981980624,0.36166032808341797,0.20013848969289558,-0.27319591548560257,0.5118340938602722,0.3915058130800853,0.26649190631374786,-0.2208699283908457,0.5306007771740483,0.3455844204763121,0.013149167093515074,-0.4290270510160626,0.5080850043957239,0.2650002484040927,0.27745896661654623,0.370567998167645,0.4318941468490598,0.44525653394509856,0.26833315891374815,0.34143994605395483,0.48263282279050373,0.4086002134401509,0.2696954207305238,0.3486505032810284,0.5192692596969419,0.3881545105840706,0.2914722029362957,0.26878071440351065,0.5272210423241034,0.31267088793541975,0.2628786732932266,0.36877473736335303,0.5200515291556145,0.41819418145253234,0.10831716091391899,0.2529036395346646,0.47028700132152695,0.2893615230636059,0.245541211077037,0.24337588457512185,0.5011554213898235,0.30714354219413814,0.006750029762385389,0.20483987220764197,0.525244548351067,0.15275464324767332,0.2776772474405062,-0.17083869721418174,0.527845072166047,0.33799855409414997,0.18111620572773815,-0.21791740531029047,0.5265229640119609,0.38063531479192436,0.17602378548150782,-0.2549115075114077,0.5189178144581955,0.33552490379441113,0.008431410847422889,-0.47942954328752496,0.5309354466091084,0.15386988891603476,0.10993715833900515,-0.3577572262942845,0.5208999161325207,0.19388332195818145,-0.027775729694463097,-0.4505478943758321,0.5134243208670687,0.07051674008719024,0.04196360594861675,-0.4891390932516271,0.5320536765255639,-0.01,-0.023061992027048665,-0.3751156639828146,0.49398222247680523,0.03401120217145991,-0.18624433209101676,0.4247928485034848,0.469471269199595,0.43624371946461754,0.06208294318764489,0.3307717387298498,0.5345025339235153,0.26649312203519476,-0.30400256461668584,0.25016187134350876,0.5243091402491781,0.27773676497569066,0.004169748653023473,-0.01,0.532209544405633,0.1678752705123744,-0.1829350143427443,0.3092425061627873,0.4901334523033389,0.26533873459763974,-0.6921509641612544,0.10263579410585899,0.5285119650833608,0.0723684790557649,-0.14288333602552322,0.1756401882229676,0.505819008103759,0.09588256376586979,-0.61,0.10611885389388392,0.5393088326314712,-0.01,-0.16009927127565055,-0.08529685878371941,0.523606787906289,0.2675652021901157,-0.02793752748936127,-0.38101801547713315,0.5143512377896047,0.03692547419508019,-0.10350681934211578,-0.38758436077049896,0.515539946240654,0.11248286786154417,-0.07159762176605754,-0.51,0.5301438450492298,0.035645911703328134,-0.4364231259239071,-0.3287860384217679,0.5377998905118756,0.10940993116716871,-1.01,-0.51,0.5303805713990927,0,-0.11,-0.51,0.5105172148510402,0.09132639836794099,-0.11,-0.51,0.4058985810137716,0,-0.38981800699538366,0.2856002235103295,0.52639110933969,0.2905075826646659,-0.5208763063690408,-0.013377091151612947,0.5233614274329109,0.11399892175613424,-0.1514100736373604,0.03211975962386519,0.5231970039523159,0.22820492420952065,-0.11,-0.02391861590982798,0.5323123472753575,-0.01,-0.044095210766364065,0.007912069632136896,0.5353492404270386,0.1149811429998048,-0.17427304221836581,-0.02435649866073488,0.5340442461962608,0.03399991487867932,-0.11,-0.012861232995321579,0.5232787322326607,0.07709192094627837,-0.11,-0.01,0.47685475458973736,0,-0.2561496434399514,-0.35578932092660126,0.5251595250106987,-0.01,-0.506426450977622,-0.51,0.5329548224547143,0,-0.11,-0.45032668089401123,0.5168988464831125,0,-0.11373055799279526,-1.01,0.4928742003147037,-0.01,-0.11,-0.508557236763174,0.5417029913272899,0,-0.11,-0.51,0.4453285526373072,-0.01,-0.11,-0.51,0.32467419047628127,0,-0.11059625000000001,-0.51,0.21339906848017917,0,-0.23664006266418433,0.31661779315774785,0.5288924001234959,0.36804549332632985,-0.03454009858969292,0.06751299111263545,0.5201609702489868,0.03471824440409191,-0.5407794513994872,0.09923945177244661,0.473230144741357,0.1444159467030323,-0.61,0.025824808956975843,0.5015638759084123,0,-0.13341475668079453,0.0685337422838069,0.5384985238920509,0.0755245573156762,-0.11,-0.01,0.4868454234440514,-0.01,-0.22521421843599107,0.09214893163882786,0.49835310698376833,0,-0.11,-0.01,0.5011578660653208,-0.01,-0.08266533869246244,-0.35198989229766114,0.5137422520254713,0.03650229959697729,-0.6047025306471826,-0.48831132820278855,0.5225550531097904,0,-0.20521925275790986,-0.51,0.532287358263072,-0.01,-0.11,-0.51,0.4522801233786768,0,-0.9204509257309426,-0.49591703750623034,0.42125234401549017,0.07773964532043871,-1.01,-0.51,0.43292421180167306,-0.01,-0.11,-0.51,0.4063437510997192,0,-0.11,-0.51,0.17362766907739152,-0.01,-0.12557061720418308,0.035429472993769674,0.5065096763203603,-0.01,-0.13157976530330043,-0.016414314968164145,0.4767005923798965,0.03599521610254487,-0.11,-0.007692598834085688,0.5276987794835164,-0.01,-0.5203188703855044,-0.02686698499935543,0.3965712004945775,0,-1.01,0.017784160294503075,0.5390094740847885,0,-0.11,-0.02773658472621536,0.4656608666758898,0,-0.11,-0.01,0.47215138399533624,-0.01,-0.11,-0.01,0.28976221843869776,0,-0.07289681584051125,-0.4800552493388505,0.4450105907008604,0,-0.11,-0.51,0.4617401114317852,0,-0.11,-0.51,0.3892324431915966,0,-0.61,-0.51,0.24304777741640687,0,-0.11,-0.5012446008248326,0.36854426800883155,-0.01,-0.11,-0.51,0.2594031121879971,0,-1.01,-0.51,0.17260626461519502,0,-1.01,-1.01,0.19282577778460874,0,0.30960542472339947,0.4548422292809437,0.035713184372882636,0.4255062289032491,0.22935285108294015,0.4549527760207964,0.01126328985782864,0.40831821580227934,0.2843630210664004,0.4020747723675299,0.03403451108435897,0.44717598364368105,0.24903349458007704,0.4460778285380323,0.02352567845088887,0.3887992598022096,0.2929547129480905,0.41850144125304045,0.025172600568281998,0.44359942110127143,0.20694959592807752,0.4498954954965345,-0.013702415066961461,0.41136160486726514,0.23216928653578667,0.41324954841021755,-0.053849138635904646,0.44031542864616563,0.0953098422685745,0.439606711538546,-0.11304425413943166,0.325643276112011,0.24326744196041564,-0.04912619965741988,0.04220947029206027,0.4485277877227909,0.281153956723126,-0.06823100237158354,0.03786634650226137,0.4523986306278248,0.2479329474161143,-0.05954455518487352,0.027209639955085047,0.4461189121259473,0.04058080711052387,-0.20224737849759525,-0.07495256902111236,0.44749351167913887,0.18253821756085586,-0.09476187321212698,-0.0031591794620206984,0.4458568528759554,0.15881285478868076,-0.32689095486599334,-0.09451889571439101,0.4539538527852665,0.08782489943279438,-0.2509959747710237,-0.17498901047464963,0.4492173766443311,0.019328058412374928,-0.4267107885256462,-0.3454056274626431,0.437958462474043,0.2576645737937821,0.381032093784485,0.03143376167408452,0.43610265205275905,0.19111174651687707,0.32639828348048666,0.016405269340861648,0.44756210552825654,0.08327284990985771,0.3228031394613727,0.026476400624401382,0.4478836236515494,-0.01908784667592535,0.2751453467277682,-0.09032925839501836,0.4482283536852752,0.26236645320207647,0.32953448189401535,0.020005956462998485,0.3942863816650704,-0.02125373459031235,0.22797310944599702,-0.10603664520459685,0.4419265964866997,-0.11074398189359849,0.27394695928803536,-0.13176925475866777,0.4543209330436358,-0.11362260533449509,0.0829185554615661,-0.3241882873851336,0.4527298102584948,0.23885090909041196,-0.14262283115240743,0.013158362783449569,0.448532036456921,0.16041320655788122,-0.3406743309475134,-0.08680690800675542,0.4462593699819323,0.13096472503821727,-0.37359502455045207,-0.12001966007602924,0.447936038083351,-0.2741347397227831,-0.47966082350037437,-0.2864327092132156,0.44604006039567745,0.05405208568217698,-0.3725568408006074,-0.23224031923489064,0.44435865508514993,-0.012886442114278723,-0.4773275590408012,-0.3301596314476863,0.451349309072534,-0.001665793201537362,-0.49960725707099896,-0.3425827274182896,0.4550033716310517,-0.0680958125046422,-0.51172125,-0.36413003736780203,0.4477234519206694,0.2805055501346056,0.3111772410945262,-0.016186011612230884,0.4576750766906785,0.2905224773335641,0.3445837346217818,0.008568472378056972,0.46045195957390866,0.2683992182100132,0.2945571551216071,0.004128231707171975,0.45899059208516274,0.1239522370007036,0.17247524934231884,-0.08388840402013421,0.45521992877524836,0.17129628649237472,0.3167447975115223,0.010077203410579896,0.46235973039455686,0.18160494099121305,0.2848956953376345,-0.09705414658411701,0.45871240681573205,0.10048745475090744,0.2549709076821072,-0.09163741609131815,0.4613684363108493,-0.0687815795514012,0.11337155121859821,-0.3368060308513968,0.4549041900685806,0.24314222242376765,-0.22274109797298347,-0.018909226073128838,0.4542174361436541,0.18578762488835446,-0.31000937055476313,-0.13725432323243159,0.4558773008797471,0.11330369578899435,-0.3775388571017692,-0.1909457205737472,0.4508010706737508,-0.000671981632427484,-0.4125610616509368,-0.3797304513706548,0.45184219169067685,-0.3373638341880833,-0.3925521914465864,-0.2308671940316456,0.4524239350627979,-0.07218382115610934,-0.4823119858233303,-0.2944090130333295,0.4528997726481804,-0.03671591488970367,-0.48826220088283984,-0.39382189682923785,0.4537063044053753,-0.13165888184834895,-0.5123091764352827,-0.3644451847559667,0.4545285108655279,0.27370935269202845,0.32683027736206477,-0.04189642746905918,0.46079142102421833,-0.16069527457383342,0.2069384145450755,-0.09968652185229392,0.45825090637412447,0.0353448152512465,0.24556126399613695,-0.14076482118917413,0.46155304115843315,-0.032363814832927246,0.06244323195559158,-0.19703364375402904,0.4563760824633969,0.05516794507767141,0.14710936315692627,-0.15282998162878272,0.4574568560597643,-0.011836313202502285,0.06088232073907655,-0.3226027333295739,0.43836685372708173,-0.25824136553226196,0.046964684657833176,-0.37028812755136015,0.4465791509659447,-0.11,-0.011134589948187838,-0.3472313343917382,0.442974883960097,0.06283142940731386,-0.355158914865544,-0.20327491921841095,0.45276811242078474,-0.07192282421095196,-0.4351305368818375,-0.22518900569651032,0.4445604149566466,-0.07179245687319483,-0.4794764008364486,-0.27159119302161766,0.4126870755202697,-0.11,-0.51115875,-0.2914594133536872,0.4505136791180478,-0.5215775133965193,-0.507936524042638,-0.41170999999999996,0.44246904588766334,-0.07204479293751062,-0.51,-0.3653828914745889,0.4443126162721938,-0.4525766123225864,-0.51269249664375,-0.3883927771884251,0.4345207717789273,-0.07732833602483336,-0.4903329505011378,-0.41,0.38011227139322684,-0.01265573597012589,0.43638874906902175,-0.07900362675971664,0.2947975912319157,-0.16220306053378009,0.44256973462988347,-0.24511791865993485,0.11329497358287453,-0.13363933361715127,0.4518429299238858,-0.28913360226205564,0.14611076563594547,-0.16288592135752322,0.43932296149207456,-0.41,0.036611740907337195,-0.07029119669279034,0.44756997839814194,-0.33204527105540205,0.11345311055718275,-0.11,0.3887444636651178,-0.41,-0.01,-0.11,0.43530760834671367,-0.30114702088520295,0.03387922011273517,-0.20660875,0.28460473704706046,-0.41,-0.01,-0.11,-0.30625365354553236,-0.29604214004146995,0.4440803402234724,-0.17571218640667044,-0.51,-0.41,0.4483320929425244,-0.11,-0.48969842932436114,-0.41,0.4398996004964797,-0.11,-0.465809846263033,-0.3760700626763608,0.33770127393427835,-0.9760726272894203,-0.503104875,-0.41,0.438184836391379,-0.11,-0.51,-0.41,0.316882459054201,-0.11,-0.51,-0.41,0.14816312259516262,-0.11,-0.51,-0.41,0.07166334048103015,-0.4518606824211882,0.3818897038915167,-0.307184089752478,0.043693354346915396,-0.11,-0.05312798587533318,-0.34260490674800537,0.44316658142097887,-0.09678366598232654,-0.014005352376472838,-0.32433653727988654,0.4465178685017362,-0.07259866652993313,-0.0215410591293461,-0.41,0.3711289704417054,-0.07414049415134744,-0.012025000000000001,-0.41,0.44592879065816926,-0.18582054253781233,-0.05112957547180333,-0.41,0.3709987514664962,-1.01,-0.017888112108625474,-0.41,0.40365931204919436,-0.11115875,-0.02100163984560817,-0.41,0.03671974119062287,-0.11,-0.51,-0.41,0.4389514798293869,-0.11,-0.5207330558409569,-0.41,0.4136390360112121,-0.11,-0.48049639559144064,-0.41,0.3454295678167217,-0.11,-0.51,-0.41,0.07541461114624634,-0.19020253143178395,-0.51,-0.41,0.3516452153753206,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,-0.01,-0.11,0,0,0,-0.9696210269679346,0.33373005405880213,-0.3231688892489345,0.14815474552832586,-0.61,0.3317345754085932,-0.41,-0.01,-0.5284973592740829,-0.011402060449337337,-0.3320340982671576,0.44506033356835445,-0.11,-0.015152913814930901,-0.41,0.34697742707507,-0.5221382126813817,0.16769895716224414,-0.41,-0.01,-0.11,0.17039032025857098,-0.41,-0.01,-0.11,-0.013882630418484889,-0.41,0.41243945174216956,-0.11,-0.013496523316035092,-0.41,0.17142610605115477,-0.13728118002926465,-0.51,-0.3748111928037084,0.43874580289515824,-0.11,-0.51,-0.41,0.3776599695924815,-0.11,-0.5029742420888086,-0.41,0.31875138951112586,-0.11,-0.51,-0.41,0.034839668108805406,-0.11,-0.51,-0.41,0.14324749807747697,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.41,0.03536170108429069,0,0,0,0,-0.16065410965740737,-0.011232676844085283,-0.41,0.4369108223458699,-0.9909253187185897,-0.04008904223895147,-0.41,0.29397124060086527,-0.10363222451162023,-0.012541874981828875,-0.40290125,0.3909033248479174,-0.11,-0.05384620623268712,-0.41,0.1495907547125867,-0.11,0.016257290794779895,-0.41,0.3588065556559849,-0.11,-0.03685775696289843,-0.41,-0.01,-1.01,0.038583891299183645,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.19951713824184653,-0.51,-0.41,0.2926815953991505,-1.01,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.61,-0.51,0,0,-1.01,-0.51,-0.41,0.06951504438094691,0,0,0,0,-1.01,-0.51,0,0,-0.11,-1.01,-0.41,0.03866060589586265,0.3067438124779428,0.43272364955974557,0.4803132201549069,0.4366442783430645,0.26877985820190814,0.4255031366032141,0.47961722567204507,0.4276341071169004,0.29068066971361095,0.4169380960007157,0.4823843308251227,0.4207043209179978,0.35648615206419776,0.4443472243392611,0.40961102116320947,0.4011420686385984,0.2402818257792426,0.35784799449686583,0.4703119729173661,0.3747960800650023,0.28630961435096863,0.30109596258621957,0.47901615733446307,0.30351293128039636,0.18671023679992965,0.3653231267591513,0.4710363749185067,0.4223163541966589,0.1280784748302583,0.25304964219285814,0.4804624152850928,0.32555638234967205,0.28830194907704704,-0.05492350236994528,0.4810886547406825,0.3825293450205909,0.3428480927108439,-0.06870492301708142,0.48296377441338906,0.38760849353958726,0.35158670754902954,-0.05909769650084805,0.47435823399813287,0.435430849419811,0.034647925499288926,-0.2740836716510117,0.4761865053975732,0.36933072966120384,0.23721736369399424,-0.09551117641335874,0.338898840660127,0.442148317919,0.26367914791542524,-0.2924747622002863,0.48145610576259595,0.3282063492625161,0.2763532938709602,-0.22747312438207512,0.4794741233355698,0.31199998913626836,0.05456608046719861,-0.4160192130369921,0.4678781186235966,0.06578058248767685,0.30493588962984597,0.39125187880232215,0.35564611571757687,0.3794840077958175,0.2568058075329083,0.26735309030695475,0.4193154959812677,0.30113765019251126,0.25352799837201007,0.25324223918082406,0.47463140891661887,0.25155340562267675,0.22269064628052937,0.24743992699634546,0.44602963070242146,0.36536310577562314,0.13790914552701244,0.26595913204895577,0.45051054227683185,0.3584574459926963,0.2168003061070408,0.22349237382843057,0.46812125213112027,0.2901249918789255,0.1901958315092174,0.20144529553416857,0.39254534574600686,0.21504717005039475,0.011090620843589534,0.048052088897240317,0.45379002610021013,0.11525727825008525,0.24727568745435757,-0.13847360684233517,0.4682664422926726,0.32198833136517163,0.23117066159357214,-0.3309471915811588,0.4503913966706623,0.2879886185409752,0.2741633029016268,-0.2720319011278857,0.443136789016349,0.27210193752322065,-0.0032015061905059927,-0.45716178723609985,0.444536464035268,0.1484760306391784,0.22365588775922204,-0.34668614596618963,0.45036948094922485,0.3208683383969774,-0.12258947043367352,-0.4696094286653905,0.4150206471999395,0.1311832624624053,-0.00960077344165114,-0.44695186569841333,0.4368971323334188,0.07797778907036011,-0.025812165974472875,-0.51,0.42847219753870236,0,0.3256829872181759,0.37700401970722025,0.46706599767612456,0.3503093534002521,0.3365838841947203,0.3651203497841505,0.48205765873487183,0.3970777769463682,0.23240697251970655,0.25568302570641216,0.45409311301576666,0.23898063542848424,0.19303497869310438,0.19596843541028028,0.4587423156886039,0.2604720454833796,0.20046978113207134,0.25814618448086263,0.4568126567429998,0.28347076287135853,0.1345338825762592,0.1883678868496947,0.4569460312862247,0.3396234113351949,0.027679388289566217,0.14489974560451072,0.415949698132049,0.1709992794093744,-0.03155279868229814,0.0625821328668446,0.47661082992150866,0.0211454967080746,0.2213642375182634,-0.12083735678661867,0.477554543556292,0.30703396629474466,0.1521256064469134,-0.21532836000705324,0.45144038378888973,0.25457421145273706,0.15415228042525098,-0.3034452794869184,0.4680787075305818,0.27210710734544435,0.06161405630414219,-0.44945088792156945,0.45847133465850953,0.17597221891189488,0.1829944032205906,-0.32064299639994404,0.425983478437917,0.26823386736029725,0.12361024146261275,-0.40664000734671885,0.4485091919697649,0.1421960049155408,0.04768222166673348,-0.4766024121940857,0.4533212971002487,0.09840002370635076,-0.61,-0.51,0.44991184705004916,-0.01,0.31229465434111187,0.33731264140649136,0.45100046110622033,0.31147878536564544,0.03500647089942799,0.22913899089358036,0.4450644411644109,0.3172712553001501,0.14290222735012836,0.17717498787045005,0.45498527177766873,0.305145304594297,0.0062819485277580064,0.04740712221141084,0.4573129167691237,0.2261481317564483,0.17433278496396803,0.19477855790404347,0.44411851318369044,0.24812344535751696,-0.3505856405728297,0.07891932638897159,0.4467758140282627,0.14696066746896286,-0.07587521921574532,0.10700936949311561,0.46677594340232975,0.11690077947809788,-0.1606975,0.010706501118227152,0.46378488271943846,-0.01,0.19793707952949346,-0.41125941635387014,0.4499845816837807,0.21068645095383626,-0.03202687431667953,-0.466793093111825,0.4513925222769145,0.11292841545868902,0.014012218448879794,-0.4275045564398253,0.4434811273187139,0.03633345040768052,-0.10791271345671719,-0.51,0.44587627392628976,0,-0.11,-0.4412268159991433,0.45735472716671294,-0.01,-0.11,-0.512025,0.43353415023484004,0,-0.06527882445192354,-0.49982340208997195,0.42903879210486734,0,-0.07653490384295088,-0.5031997614818394,0.397367515071246,0.033856811504583965,-0.18264448714360945,0.44430178289541106,0.3946999248414998,0.22716305231551484,-0.3322912449049173,0.1085181775695794,0.4760409901990084,0.07814861976186946,-0.07072235921674683,0.20665511852987895,0.4635446812042535,0.144847316106756,-0.0726909408428881,-0.01,0.4539879999419327,0,-0.6895948960631209,0.033242191116060194,0.4739337200861716,0.17812667753444594,-0.11,0.07424301472031819,0.4816515969660117,-0.01,-0.5272906384000069,-0.01,0.4489497050287748,-0.01,-0.11,-0.01,0.3475835931126118,0,-0.11351786495414173,-0.41163183256764413,0.4735130601549738,-0.01,-0.11952150831149884,-0.396785807895923,0.47006417741716355,0.0345063479673553,-0.11,-0.4073933746721921,0.47380958172129395,0,-0.11,-0.42657313750573544,0.40489054564725435,0,-0.11185432035028253,-0.51,0.4744660597002483,0,-0.11,-0.50391375,0.39027252799099804,0,-0.11,-0.51,0.38358003377351124,0,-1.01,-0.51,0.18125490549545165,0,-0.12611218700047486,0.062088892539050866,0.38399191877550576,0.07439657972162847,-0.5201385191277165,-0.01,0.3766606588744851,0,-0.10112262521956374,-0.01,0.3263891304236613,-0.01,-0.11,-0.01,0.40281709782326064,-0.01,-0.07113323127571802,0.020515798615825233,0.4335478006205845,0,-0.11,-0.01,0.40742999541232805,-0.01,-1.01,-0.01,0.3649727341134475,0,-0.11,-0.01,0.27644626634531616,-0.01,-0.12976091649364369,-0.48208206538213133,0.4580598852078656,-0.01,-0.17554956118145834,-0.51,0.3226770886797581,0,-0.11,-0.51,0.3034839943963443,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.3259531716630346,0,-0.11,-0.51,0.16287028087684588,0,-0.11,-0.51,0.1269233938280847,0,-0.11,-0.51,0,0,-0.6129160935007734,0.027975133714024672,0.47791055735750587,0.036080076451449845,-0.11,-0.01,0.46643126722458494,0,-0.051949100960890206,-0.01,0.43563033559306275,0,-0.11,-0.01,0.3822510158387668,0,-0.06971729148779224,0.02478147215356443,0.3994738552771321,0,-0.17738178602450733,0.02458527359484343,0.3142243556181895,0,-0.522351857047913,-0.01,0.4018854721972304,-0.01,-0.11,-0.01,0.16592467532093996,0,-0.13551963521525304,-0.51,0.4822687369534522,-0.01,-0.11,-0.51,0.4219589441977621,0,-0.07239744549127114,-0.4922194650793195,0.32724848689802133,0,-1.01,-0.51,0.18629110040631688,0,-0.61,-0.51,0.32125829770573106,0,-0.11,-0.51,0,-0.01,-0.11,-0.51,0.19067652717584394,-0.01,-0.11,-0.51,0.12055644783330544,0,-0.020255864076647465,-0.01,0.44320935222246277,0,-0.61,-0.01,0.32769785722489364,0,-0.4978843304654848,-0.01,0.34337196760378164,0,-0.11,-0.034722507221392813,0.194495651451689,0,-0.11,-0.01,0.24600211409415257,0,-0.11,-0.01,0.2870986834110492,0,-0.11,-0.01,0.12939064595371766,0,-1.01,-0.01,0,0,-1.01,-0.51,0.25167085295721153,0,-0.61,-0.51,0.15251009652615388,0,-0.61,-0.51,0.1193314999165903,0,-0.11,0,0,0,-0.61,-0.51,0.19806044380676907,0,0,0,0,0,-0.11,0,0,0,-0.11,-1.01,0.09004057760869816,0,0.28887644500535875,0.4298836998305197,-0.04893449346977831,0.3381517569280442,0.26492920249670876,0.4307521904411559,-0.06978742182798235,0.3818118168316189,0.1605097892173723,0.4451326010590634,-0.10431720430502553,0.40717427944178025,0.08623184155613024,0.44629974147654716,-0.2090427703351899,0.27224619120170057,0.26174623783924783,0.29215388219926763,-0.04875578443190798,0.31469882238798375,0.12044149716909158,0.22198775072863,-0.15981804313252151,0.25217748217387476,0.07790429016934072,0.1220042480283951,-0.25053303633059165,0.43133609255985117,0.001757774832540953,0.06428413012112802,-0.34370934805650233,0.3913822521742675,0.1942490410608666,-0.14473443535975156,-0.0966784640105352,0.4410584432504059,0.08918311806973661,-0.19460655935920115,-0.12569916373822165,0.4409593388339217,0.17792369753958237,-0.2709986779766587,-0.21074430395297622,0.43664007205980376,-0.07318081626834941,-0.40685278269610853,-0.33920667967788415,0.4272840801580233,0.1346913539979021,-0.41451034153624927,-0.22012229309805612,0.43958463423156574,-0.05766377563223743,-0.41699200864376895,-0.28742329161909524,0.4319958543204816,-0.019462835888456945,-0.44766360673646843,-0.3833282766347474,0.44012018111116724,-0.11,-0.4715091056346993,-0.41,0.4362913797398549,0.2629481172401465,0.35752918994285027,-0.06909284750619973,0.4439577309398633,-0.04035576577481306,0.2075634407311207,-0.14326849352101362,0.4331543436525583,0.1284630734413745,0.21867364911246742,-0.19154009703765082,0.43994817211549575,-0.13388104014743826,0.011699436445400268,-0.28871730735806034,0.437859165963394,0.0910534596758359,0.1710146305036468,-0.30529730121636883,0.4437657529937858,0.07923898038372743,0.09555778894527171,-0.41012374999999995,0.43832405957104054,-0.004631547365756036,0.040915618868674855,-0.3052164421441276,0.4372968030455866,-0.07718085927182698,0.02375915053033633,-0.41,0.43681122518009,0.0997774763242106,-0.3950664494295121,-0.2182741898243276,0.4361313915881882,-0.04129819515375891,-0.4610642452996908,-0.24263340618607449,0.431436621602727,-0.3797474206696632,-0.5114625,-0.37519482436163165,0.4366583778124369,-0.03845089758812155,-0.51,-0.37192500332866363,0.4200110687149517,0.023913105439398927,-0.4451161028326312,-0.35720408376468826,0.44196996593648885,-0.11,-0.51,-0.353890487193615,0.426627587590966,-0.1022416211456576,-0.4947506679518515,-0.41,0.41726631774149037,-0.0944106353957976,-0.51,-0.41,0.3686100909248432,0.25878079883947247,0.34190450844224624,-0.14169534053770905,0.4469892880829457,0.15884500558766698,0.2773128759957971,-0.23096514484078848,0.4347291280375254,0.08939571836887905,0.16664993514329524,-0.19355699426425402,0.43997612455391466,-0.10719408399916211,0.11727799965084497,-0.2813071836019188,0.44069591568051925,0.0008059424241108754,0.19609915382527301,-0.23207317012725925,0.44434800635361726,-0.025618131078282282,0.06718275436074364,-0.2950237928211757,0.4387203769722453,0.02259783691275517,0.0439994261959263,-0.33122580009132846,0.4396738022189801,-0.07143049017101125,0.018178030090519076,-0.40078840905653323,0.44480740086371773,0.07045069435580814,-0.388791210359619,-0.28790575843730415,0.4388189683161571,-0.07644148961531458,-0.44225020337865956,-0.41,0.4341762376263487,-0.11,-0.4878640421070194,-0.2952845894957281,0.44224090008134975,-0.08634044164702459,-0.51,-0.41,0.4336696653758985,-0.5221591548434095,-0.47820490094313983,-0.35459191713558297,0.43581516450291213,-0.11,-0.51,-0.41,0.4267850466835083,-0.07651053768855837,-0.49798447969847787,-0.41,0.4295813103494986,-0.11,-0.51,-0.41012374999999995,0.38748299896607347,0.09980563804171845,0.24477139202346282,-0.2734663356858267,0.430523535188481,-0.0054425508602438215,0.06646842389175468,-0.34338976639427315,0.42717851875498775,-0.030385755578004957,0.016219495380845383,-0.35956871960719383,0.43060888925489554,-0.13278793753212956,0.01085412955377521,-0.41,0.42368611541210827,-0.11,0.055624639895790556,-0.3765991514750686,0.4314884832355779,-0.10251640575234106,-0.014112285403088998,-0.3744333641078699,0.4240019668174813,-0.11,-0.011792656257453947,-0.4106975,0.4226057156164557,-0.11,-0.004628345223145543,-0.41,0.3826059534526031,-0.12760689071163062,-0.446305390891632,-0.41,0.4254589741567713,-0.11,-0.5028323671028562,-0.41,0.4226690339993748,-0.07764811693612754,-0.51,-0.3932300900756067,0.4177817086323711,-0.11,-0.51,-0.41,0.3275948005789137,-0.11,-0.51,-0.37504664495386775,0.4157376631691497,-0.11,-0.51,-0.41,0.3286907689833533,-0.11,-0.51,-0.41,0.31553805504073174,-0.11,-0.51,-0.41,0.19491893873307764,-0.11636007761000342,0.40332008126604396,-0.31728171327852805,0.03563088239773685,-0.11,0.4224061481662584,-0.3725135205726434,0.03333091075428892,-0.137612908686893,0.43174781029187415,-0.3364292506611961,0.07082865688126416,-0.11,0.3123604365182892,-0.41,-0.01,-0.11,0.34062416902540715,-0.41,-0.01,-0.65068625,0.2512394492569692,-0.41,-0.01,-0.11,0.17722977154556258,-0.41,-0.01,-0.200135,-0.01,-0.41,-0.01,-0.17641017956740304,-0.47690072247841475,-0.35394260821148665,0.4268529401923916,-0.18641858827104152,-0.51,-0.41,0.27965894729796925,-0.11,-0.51,-0.41,0.3544683768302508,-0.11,-0.51,-0.41,0,-1.01,-0.51,-0.41,0.1447129037129509,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.41,-0.01,-0.61,-0.51,-0.41,0,-0.11,0.3553487391567496,-0.3950288504735537,-0.01,-0.11,-0.027756834308235348,-0.41,0.3554943746301963,-0.19222985205238013,-0.018173048473019357,-0.41,0.3970887389116005,-0.11,-0.030429894873374802,-0.41,0.16913370808043351,-0.61,-0.010195111362037674,-0.41,0.2757921572881088,-0.61,-0.02309331599937775,-0.41,0.07235486875653964,-0.61,0.018280516972635406,-0.41,-0.01,-0.61,0,0,0,-0.61,-0.51,-0.41,0.2921323703080447,-0.11,-0.51,-0.41,0.07417213509818595,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-1.01,-0.51,-0.41,0.0673537649939349,-1.01,-0.51,-0.41,0.06704597900560005,-0.11,-0.510135,-0.41,0.03631179206408007,0,0,0,0,-0.61,0.3437190411805646,-0.41,-0.01,-0.11,0.15060998204847498,-0.41,0,-0.61,0.020947834869251586,-0.41,0.3843213704898798,-0.11,-0.018749308658922464,-0.3752077769809138,0.10552731910757668,-0.11,0.1243859313021457,-0.41,-0.01,-0.11,0.06578678373816862,-0.41,-0.01,-1.01,-0.006131042016317547,-0.41,-0.01,-0.61,-0.01,-0.41,0,-0.11,-0.51,-0.41,0.18916588504819712,-0.11,-0.51,-0.41,0.10985129197958948,-0.11,-0.51,-0.41,0.18654537864781767,0,0,0,0,-1.01,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0.23781964392141017,-0.41,0.005707445897374605,-0.5221408940226552,-0.024033537584679382,-0.41,0.03363238657131214,-0.11,-0.018031624514872717,-0.41,0.1321581067789261,0,0,0,0,-0.11,-0.012587500000000001,-0.41,-0.01,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,-0.01,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-1.01,-0.41,0,0.3650882692918127,0.42701630066872903,0.4111181561636712,0.000060015692026869905,0.3651630709995405,0.43746703757138095,0.5228367244774108,0.010927036522125348,0.3224086864714735,0.41747902995433606,0.5200923046549024,-0.06973892920551994,0.3472075078613458,0.4317674296283454,0.5274540821417251,-0.06842567500159157,0.31337099025505505,0.43839322146114185,0.5490017766882637,-0.06726631780077945,0.3506384027550571,0.44007026187567705,0.5487514946705713,-0.06745553733687995,0.34641642689426916,0.3424206098225077,0.5283552339446075,-0.07234685155025998,0.18458870054763862,0.3927693748023815,0.5196918385770695,-0.19178051855317585,0.33329345893426476,-0.003430494174485769,0.48084311818196274,0.12091400504954099,0.35387807296929397,0.015990555228098613,0.5121609814310463,0.1091219450984264,0.3363156260307593,-0.05755312005470879,0.537806243474547,-0.06269684969551315,0.27381625198447446,-0.17032616250988297,0.5269058829590325,-0.12115891783467451,0.34030520087440813,-0.059431960188920004,0.5210949369025334,-0.06450284896742275,0.2787533082602905,-0.1868846349717646,0.5137035061373071,-0.14621162110889083,0.30589098120961955,-0.13859956276298138,0.5150910485271301,-0.17758536560023147,-0.06245414221867368,-0.42601758651626576,0.538786073169018,-0.25692031867905185,0.35165670935848903,0.3879857907076719,0.5289724308348612,-0.05602499398139713,0.22934830554142377,0.36472136621031287,0.5180449574000499,-0.060187642488014996,0.2771220205774088,0.38694514257980434,0.5351456994749673,-0.05811679434309812,0.28240690372280974,0.33544243503874654,0.5248041675929407,-0.09862213045094297,0.20215055844574925,0.3562520187839516,0.5199918301798229,-0.060069402588572,0.14079675622626722,0.3460917493363575,0.5394928915720983,-0.0859649117294631,0.2470288846985576,0.3438784845938701,0.5373478466272362,-0.08572786749764613,0.12731486335037395,0.13980455711401069,0.546821465793059,-0.26616499347131795,0.3417019485528179,-0.1261225144598789,0.5399158547951749,-0.061603873820414545,0.28457305646177383,-0.22307283656814597,0.5356689769775062,-0.12835249926482173,0.2672563154185821,-0.24320149667871413,0.5251209672624645,-0.1916101357017185,0.05658667589553866,-0.51115875,0.5311404069682065,-0.46542434649854375,0.2062365169430493,-0.3235942501038901,0.5431238236868488,-0.1319532921146655,0.09829054404128366,-0.4359479927538915,0.5313034814321635,-0.4400444326440672,0.015582805116200152,-0.3722619414484184,0.5358201295659504,-0.47469638286677246,-0.06457606626848829,-0.51,0.5423238647596276,0,0.3452922009394342,0.4075363149212272,0.5142081109615156,-0.07535673055157405,0.3340786778628755,0.40152142836612525,0.5382271965955048,-0.0764225435663944,0.27892516408791956,0.34147422606139133,0.5378627474868082,-0.0833241256295739,0.1494003241053473,0.24351249543018186,0.4951632866362223,-0.16290569201154134,0.3552337244128473,0.38650470122943026,0.5206734937549556,-0.08004221613063671,0.22781716030324567,0.2878608499074558,0.5298620441005895,-0.27000291728759734,0.26108460691470653,0.21770947613066188,0.5377367325727811,-0.16812150347860075,-0.06436005888670322,0.10083203173239538,0.5033527304045954,-0.4285375372140606,0.3544097910260816,-0.1023918512268748,0.5235482495602255,-0.09698592965430938,0.2208578667568396,-0.2634611292529215,0.5409709391932154,-0.16442261232325975,0.10971331679832318,-0.2310163984045038,0.5388115240256655,-0.15347399961400215,-0.023822998670942078,-0.45122828526264136,0.5220409531750313,-0.3531758876411854,0.2558843617026147,-0.18953653526558362,0.5248377662763914,-0.19049171966179648,-0.0642484081420432,-0.36940919297031166,0.5382522731249123,-0.3374867006222754,-0.023691857331420686,-0.3947342801682848,0.5195684003633837,-0.44952780701152595,-0.02242912103698498,-0.5050027500000001,0.5263886700701131,0,0.32931162334521513,0.3737069010607804,0.49591182359047625,-0.09177214701938395,0.1235097390546469,0.34429670265042756,0.5199134131162091,-0.21533785751334727,0.05527140904216887,0.31786934497478814,0.5267365513310667,-0.13944523115146376,-0.007966674242751937,0.11571311586689817,0.5217039800546912,-0.37289622843342796,0.24455191123658332,0.30847415681461443,0.48565725360540085,-0.17559377799061957,-0.11532547460048284,0.22211171806838986,0.527966964864151,-0.4564761114456461,-0.1645941439545857,0.17330094059986687,0.49217036023607125,-0.26926160858273407,-0.11,0.05012040149119074,0.5297260486907942,-0.51,0.14372525976598288,-0.25355627292667904,0.5028076183098735,-0.2765439770135176,0.05715285875632169,-0.4791022999883916,0.5026073602449521,-0.428123700540141,0.05116760799535379,-0.3287206325771751,0.52676614927436,-0.38452282122515025,-0.11,-0.51012375,0.52152060950264,-0.46595332076429696,0.008846647004039997,-0.4983536493077891,0.516415609506792,-0.45624065566310634,-0.11,-0.5057400705376796,0.5227383953982869,-0.51,-0.5147081769475844,-0.4882741967390443,0.5157188574386474,-0.4845663382652003,-0.11,-0.4816112125313862,0.467139014250409,-0.51,-0.0371414402181508,0.4310610481160437,0.4123739115161215,-0.052948999680100466,-0.07588090206597367,0.07711141277887176,0.5237696544006915,-0.42776219473060395,-0.010058190643996726,0.07869879180585523,0.5188891866868939,-0.4250936308809373,-0.0719536627260471,0.036140583778453056,0.5125598181072832,-0.46853859004651766,-0.42583948047189457,0.08077549424980628,0.5134166931108449,-0.4664382890156228,-0.11,-0.01,0.5188327862135148,-0.51,-0.8806692458858295,0.0657008177573372,0.4570077839194478,-0.46593439664081165,-0.11,-0.01,0.39151282608194465,0,-0.41162209857200427,-0.40636579200570533,0.5103090548609361,-0.27378211344555836,-0.023172363049608152,-0.05974477553323013,0.5151192786811294,0,-0.11541616140017774,-0.44286851657164994,0.5408328787514642,-0.4318673739176737,-0.11,-0.51,0.5201950993426806,-0.51,-0.9211360160902198,-0.4330841427213726,0.5371013286338405,-0.51,-0.11,-0.51,0.5006759045729156,0,-0.11,-0.4655271010322282,0.4962976931719304,-0.51,-0.11,-0.51,0.3197297618511412,0,-0.1692896526301047,0.09176450102867648,0.5295166026394772,0,-0.15673546803915628,-0.023848389881143305,0.5343440691920702,-0.51,-0.1033878275448763,-0.0061803707660738755,0.5125287015696766,-0.3756033081434232,-0.11,-0.025807681872562487,0.515472171745283,-0.51,-0.15021043650366955,-0.007229764065951898,0.5382552085014563,-0.46459666312052,-0.11,-0.008640454682354099,0.5091760927242852,-0.51,-0.11,-0.011520007904928027,0.4702228373145556,0,-0.11,-0.01,0.3858821506489809,0,-0.11293784086986294,-0.47201209802640864,0.5115349625400579,0,-0.61,-0.51,0.5062678148536695,0,-0.11989599166275111,-0.4715043555578811,0.48214175212002763,0,-0.11,-0.5376548942664979,0.3601846757767546,-0.51,-0.11,-0.5000975687477849,0.4816562230285669,0,-1.01,-0.51,0.30208440620922505,0,-0.11,-0.51012375,0.1782214510574025,0,0,0,0.21084014158692993,0,-0.7308131625658159,0.09632339858727183,0.518848172912988,-0.3975782810260245,-0.9230067953837092,-0.01,0.5282217547077032,-0.51,-0.044143503998455375,0.06392260599768668,0.5395265294683276,-0.4660658433639232,-0.11,-0.01,0.3507397605285264,0,-0.11,0.024503720183164567,0.4344728217646305,-0.4321388362564593,-0.11,0.0315273307202188,0.493376713176642,0,-0.11,-0.01,0.48808653947777886,0,-0.11,-0.01,0.09,0,-0.11,-0.4417533083835818,0.5328960029764076,-0.51,-0.61115875,-0.51,0.4940559458204679,-0.466296862780059,-1.01,-0.51,0.41277565448031917,-0.4672425282652014,-0.11,-0.51,0.33749528303872106,0,-1.01,-0.51,0.4963042800764904,0,-0.11,-0.51,0.33586963498564565,0,-0.10781738001578871,-0.4799204389884979,0.21435428416718183,0,-1.01,-0.51,0.1293889101311241,0,-0.11,0.024167859392861833,0.5134548798823989,-0.51,-0.11048731155216363,-0.01,0.5319608408782578,0,-0.9215896346136923,-0.01,0.5410990805121023,0,-0.61,-0.01,0.4613995564324996,0,-0.11,-0.01,0.43724210690334053,0,-0.11,-0.01,0.348208628694798,0,-0.61,-0.01,0.32702448814526663,0,-0.11,-0.01,0.09,-0.51,-0.61,0,0.4061753969339205,0,-0.11115875,-0.51,0.3059226272736442,0,-0.11,-0.51,0.31085324054960256,-0.51,-0.61,-0.51,0,0,-0.1889195966653997,-0.51,0.1768539884812411,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.17559024727942835,-1.01,0.16164382569127955,0,0.23320934385014558,0.45757587509810366,0.03703294517508949,-0.11099360101690911,0.2216147797209117,0.43492940512504696,0.00999247017124592,-0.1087014598376024,0.18520937153266195,0.45338158363595615,0.005869701982907426,-0.08213004214640295,0.03801824582001441,0.4435345659909838,-0.1233005548783873,-0.18578060438031788,0.2854466948803923,0.4093474194291213,0.025597247014222224,-0.09536032486351285,0.1786041051853292,0.44962228452880376,-0.09753174569661571,-0.24158212443238886,0.12288440337398862,0.44646647175814597,-0.18238122991641087,-0.20521206000405254,-0.11,0.4369371819039992,-0.2864119341664007,-0.3898392476185825,-0.20882425773240199,-0.18250058599846325,0.046131621295902286,-0.15552932321902035,-0.2819879963361274,-0.356495704852351,0.04545676640861553,-0.42584236625273386,-0.17523009581542054,-0.4088685279069223,0.03335474518573293,-0.34546019760588387,-0.30346153773520285,-0.4025604621209775,0.033522659572171785,-0.40920910944098476,-0.34781585718612107,-0.3861941574713766,0.026594804799239577,-0.2865287517033969,-0.2600967069095892,-0.4226740328453727,0.025784815512136572,-0.4138084608120086,-0.5521133376576467,-0.51,0.008905361682971973,-0.51,-0.17720874211488857,-0.45794887104107507,-0.32752867635647015,-0.51,0.0933475390539921,0.3923488980255841,0.014207720471980483,-0.0921565083403053,-0.13207110144790976,-0.08615628268560965,0.03253517138140515,-0.2131457754275753,-0.18694990229826017,0.021994952324684094,0.03868060065791683,-0.1396182443260929,-0.23837448795606464,-0.14422702157162756,0.007945552783659491,-0.1623997912769386,0.05281097534238334,0.09312254043515858,0.02390071526454876,-0.07168810849275709,-0.32685174304917836,-0.0982179509064881,-0.13414527122996045,-0.17445268077123155,-0.2301061510001336,-0.01765955482112026,-0.2767444763033415,-0.21970200364380751,-0.41992210333299324,-0.15150158786322224,-0.2141710550300247,-0.2862596173507576,-0.30134584795726904,-0.406589589728335,0.030131374235033117,-0.38949193763486467,-0.2969943989214795,-0.5469793273449423,0.011583915997400317,-0.4662573245675884,-0.4539151871611749,-0.4955399009607579,0.0300546513702622,-0.51,-0.236080331913793,-0.556950243827197,-0.02835984384210166,-0.4782120713776863,-0.4244401757594543,-0.51,0.01379723661058523,-0.51,-0.47525061977400784,-0.51,0.0023048231801414253,-0.51,-0.3670428569106875,-0.4911518238516479,-0.2422232642776337,-0.51,-0.61,-0.51,-0.3081290044335073,-0.51,0.15880500321180324,0.33235992642453444,0.0077500914963087655,-0.07078424008853494,0.16057776194254134,0.3142724961269293,-0.18478357966566666,-0.22809628688687508,0.005370680316561346,0.0554104708497246,0.00530329020866549,-0.0907206835928763,-0.022718707347300932,0.05546250428059864,-0.18013470602148668,-0.379493322449475,0.03512182895139938,0.16283135412270588,0.02095993762226022,-0.07129945303530565,0.028160658421505017,0.1633546647679494,-0.21148205162881148,-0.24268639827659538,0.0832627357885267,-0.006533121854377387,-0.10308778324195439,-0.2260191713446735,-0.0209131846806529,-0.01368222883581996,-0.17359825590071612,-0.42100987599675305,-0.3923299515977783,-0.43895734906973444,-0.00037319045157257254,-0.4886353913821918,-0.3633030723817397,-0.368380660714634,-0.03585430549719659,-0.4811363560264895,-0.4409501090784198,-0.51,0.0019424558919749375,-0.4533008837621968,-0.38108072685106564,-0.4938116575958597,-0.30603603667365886,-0.51,-0.26778854465403906,-0.5043411030818258,0.011706432756120648,-0.459912818017022,-0.4417562390515461,-0.51,-0.06676806829028714,-0.47664020834743015,-0.3485243493571163,-0.51012375,-0.1039507053321228,-0.51,-0.12480146029901541,-0.5106975,-0.342520522431689,-0.51,0.07084408460309335,0.33947404043348756,-0.17834514072029545,-0.39303886711794306,-0.1652601708959296,-0.1324264722663557,0.0040682789761779595,-0.30742839636801544,-0.1822091281329015,-0.07561045728452076,-0.07980160755328425,-0.2877870043463086,-0.22140615397692276,-0.1426926125486956,-0.2409631458302548,-0.2854913986490657,-0.11984427176407855,0.024357699261018,-0.22080485732179672,-0.2667300547282104,-0.24586762199694417,-0.14444543101311957,-0.22870794355127563,-0.3406344019854545,-0.13132697925869075,-0.05171426277434542,-0.41,-0.33222017927891645,-0.51,-0.14570091439524563,-0.38426635498449324,-0.46191295415401995,-0.38380049736439836,-0.51,-0.061152905610246826,-0.48247379863085454,-0.1898241320412868,-0.52908276042459,-0.3251740070239044,-0.4211541345154625,-0.42696981354637675,-0.5114625,-0.365699803198922,-0.51,-0.4541068524662716,-0.51,-0.27401709725589235,-0.51,-0.4268285019449137,-0.51,-0.20729727816775326,-0.51,-0.150758840390534,-0.5222863989673036,-0.3292018008746327,-0.51,-0.1305089588162227,-0.51,-0.41,-0.4637823099685973,-0.16782312583513598,-0.5264890331426434,-0.40346374999999995,-0.495036163551457,-0.11,0.443665211520416,-0.22472996281032664,-0.42668844159090047,-0.11,0.4470291268434001,-0.41,-0.46705067592037014,-0.11,0.45056113978258544,-0.3878060059533907,-0.4663484020772599,-0.11,0.3428202919017979,-0.41,-0.51,-0.16217125,0.4348519690110014,-0.41,-0.4396289878364089,-0.18763421901525765,0.2626379169120632,-0.41,-0.51,-0.11,0.2705318609954818,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.4018594818465135,-0.48102335765871623,0.026665458738086133,-0.48700649454034045,-1.01,-0.44910465871398647,0.019839347733990195,-0.49620688600405444,-0.4374605183602984,-0.51,-0.10629595836024601,-0.51,-0.19487751102197834,-0.51,-0.3660724459103195,-0.51,-0.4314151338099029,-0.4861701430736082,-0.06467255251232752,-0.51,-0.4640286907340221,-0.495473498887312,-0.2896237590208216,-0.51,-0.1775047527122614,-0.51,-0.41,-0.51,-0.61,-0.51,-0.41,-0.51,-0.08070000833844208,0.3818884199125644,-0.32790022717407463,-0.51,-0.11,-0.041854995265078944,-0.36534035797898146,-0.51,-0.14830832708772124,0.05827795580539061,-0.41,-0.48896188451437583,-0.11,-0.0905298466853439,-0.41,-0.51,-1.01,0.12005946777314097,-0.41,-0.51,-0.11,-0.06724485180313122,-0.41,-0.51,-0.11115979584699254,-0.0549715348530923,-0.41,-0.51,-0.11,-0.025201810374020087,-0.41,-0.51,-0.41868095299846586,-0.51,-0.11791994020456137,-0.51,-0.4189749530997424,-0.51,-0.2253517360210296,-0.51,-0.5065058438394796,-0.51,-0.15404848892055828,-0.51,-0.22027884818902416,-0.51,-0.41,-0.51012375,-0.11991836762242086,-0.51,-0.41,-0.51,-0.13834933948697908,-0.51,-0.41,-0.51,-0.11,0,0,0,-0.61,0,0,0,-0.11,0.31067764094794487,-0.41,-0.4698196845394663,-0.11,0.27068632136351106,-0.41,-0.51,-1.01,0.09134322835518302,-0.41,-0.51,-0.11,-0.007116843145560998,-0.41,-0.51,-1.01,0.10804811872553896,-0.41,-0.51,-0.61,0.021166178109117112,-0.41,-0.51,-0.11,0.03901554443442233,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.4231623161478525,-0.51,-0.10908204324683554,-0.51,-0.5265295021981191,-0.51,-0.14416069482558458,-0.51,-0.11,-0.503701858751226,-0.41,-0.51,-0.11,0,0,-0.51,-0.47932812974898226,-0.51,-0.3641922409657388,-0.48523880858787033,-0.11,-0.51,-0.41,-0.51,-0.11,0,0,0,-0.11,0,0,0,-0.18654696525715592,0.3017149257562663,-0.36626068944809703,-0.51,-0.61,-0.06422838975830131,-0.41,-0.51,-0.11,0.013044657174815275,-0.37180176127296594,-0.51,-0.11,-0.07311089958521641,-0.41,-0.51,-1.01,-0.02048722383048142,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,0,0,0,-0.21488342062056287,-0.51,-0.41,-0.51,-0.11,-0.51,-0.36712536644803206,-0.51,-0.61,0,0,0,0,-0.51,0,0,-0.11,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0.34820867528578003,0.4306523614737273,0.47875988733637076,-0.06418612962566998,0.3094644986801615,0.31576857426976607,0.4777869231625104,-0.07027738740674966,0.3269605064750675,0.38815203828439515,0.4808754469123675,-0.07193608384965212,0.16902898341820768,0.3700098435845869,0.4771338397925953,-0.1967458604307931,0.31608362565292225,0.4027523635209177,0.48012163272861386,-0.06431174704141811,0.26036540178538237,0.324588793330677,0.4811430730916226,-0.15279340594631297,0.1996852228402045,0.33807734592345773,0.48050628926573,-0.2172609937103276,0.0009734785181478786,0.09641371281671929,0.4789532039400911,-0.3304196462034328,0.3535879896150375,-0.07238600072985907,0.48107453760219593,-0.09213912369899047,0.24093448920668833,-0.24531743853187366,0.4848309841795678,-0.28340615065531044,0.2979897366860057,-0.1698781388136925,0.47061393008034447,-0.2884682301856715,0.0008609417300688149,-0.37052503239117884,0.4827408267730295,-0.3859100970943224,0.2663459391886757,-0.18912733300661208,0.47143000103921484,-0.20192611660054322,0.04272589408409907,-0.3706162002334495,0.4790941197456929,-0.4650246749803263,0.07769417369292723,-0.4294811589444765,0.4660259032894382,-0.3882275826955335,-0.023888986796626682,-0.47427184122487986,0.4813799367565902,-0.51,0.33978000389935314,0.38495042348782016,0.3671637476569732,-0.10672131893596033,0.12683671526521145,0.2665504824575645,0.4463737649189776,-0.1064857845770855,0.17735420961075554,0.22329172925295984,0.44421850002686386,-0.18954072620777693,0.03819850623083062,-0.01,0.4457793021384168,-0.37556084010370683,0.1795561494335357,0.23041626027559425,0.4624620918707068,-0.16253233790548388,0.12643997115595026,0.11895088841449292,0.47204220728035023,-0.3370080838498357,0.10574263027965572,0.020457166872134468,0.44201429940371806,-0.35375633841230075,0.013564027223613613,0.03823238787014157,0.45298736449862964,-0.38914952652624385,0.28835789170367376,-0.2814539157884252,0.42083008513610964,-0.29091083331760054,0.10644598966262789,-0.4959425213898622,0.4154637975832051,-0.48393364032622466,0.09341874013641557,-0.46686187075488395,0.4296330345840192,-0.3761615326265623,-0.5999694944861427,-0.51141007078125,0.46176438550625387,-0.4917922950828848,0.09151718340322626,-0.40878748333176984,0.4394353436993039,-0.51,-0.0691866726410664,-0.51,0.4661247012624111,0,-0.05199849241123894,-0.5038846975926896,0.45004557518595695,0,-0.11,-0.5120854209375,0.3931690510851185,0,0.3114921781149753,0.31826149908114787,0.46802319381737684,-0.10067002324069996,0.2096202266370714,0.28003710486340994,0.3239764509141866,-0.1747723090864882,0.21097842553091672,0.19025445526032805,0.4533646952728803,-0.26484112224066164,-0.07241257257494976,0.045720023321475435,0.46276419430818855,-0.42097326423579795,0.04773579824886459,0.31793475596309145,0.2184394040398516,-0.20340200564551375,-0.01786295492324351,0.07914497531013362,0.4507153579105152,-0.39880136202019895,-0.023894674217396376,-0.01,0.4285066048230163,-0.4666020090309554,-0.11,-0.01,0.455106578047318,0,0.25782519920897906,-0.18246413994542715,0.4703088896248244,-0.2960101416939164,0.002962290473071824,-0.43321160273801895,0.48941376858726265,-0.3757894651111583,0.09067135718920162,-0.4429466602797762,0.44176722969011534,-0.459966474028067,-0.034030930386027315,-0.51,0.4216367306488219,-0.51,0.07508688841180239,-0.4519659675936239,0.4691827826775271,-0.4508129510581319,0.04771751113622698,-0.51012375,0.47165851709134105,0,-0.06472257124992302,-0.51,0.46355445245786914,-0.51,-0.11,-0.51,0.3927592433207998,-0.51,0.2923465074467232,0.21479823401413006,0.4693147482529396,-0.2817097544864852,0.06403035507357324,0.06166330710862708,0.4451941061004304,-0.34067273548326504,-0.01940051656911411,0.11032016765416461,0.44573238245931124,-0.36649307815744203,-0.0712290994961772,0.01872238504551861,0.44247377860428827,-0.51,-0.11,0.06549244541885085,0.44341842705252804,-0.2817602331899538,-0.06587298195562995,0.03157397093680204,0.4466257083197994,0,-0.06453462796676865,-0.01,0.47132516448767936,-0.51,-0.06442303794113186,-0.01,0.4268545906374862,-0.51,-0.60239819640625,-0.51,0.45801962993907824,-0.4789110906223659,-0.06788859620711257,-0.49256440246445127,0.4608511569345545,0,-0.03467328266774978,-0.51,0.4440091083709589,-0.51,-0.11,-0.51,0.426955278635131,0,-0.03244597171780972,-0.4899957288550454,0.45592834647478236,0,-0.11,-0.51115875,0.45342305950120926,0,-0.02739070479601584,-0.51,0.29931978466763,-0.51068625,-0.61,-0.51,0.350677938225454,0,-0.6431838382940624,0.1425938972703647,0.4651653841541768,-0.45008446094501947,-0.12168305526987419,-0.01,0.4786325551117024,-0.51,-0.6957220464129656,-0.01,0.44767806643609886,-0.51,-0.8830364545213328,-0.01,0.3764275515478201,0,-0.12311116738082004,0.069733875483755,0.43222480819938525,-0.46797508976559327,-0.11,-0.01,0.2816715852358609,-0.51,-0.61,-0.01,0.39653002034213053,0,-0.11,-0.01,0.19247142132009584,0,-0.15989766642041547,-0.4658923499146054,0.4819086447439086,-0.51,-0.11,-0.51,0.46782667060036937,0,-0.24080614206075282,-0.51,0.435841447215868,0,-0.11,-0.51,0.2497139488200434,0,-0.11,-0.4665613819273451,0.40469685342388556,0,-1.01,-0.51,0.19329202119019984,0,-0.11,-0.51,0.2942883345873488,0,-0.61,0,0,0,-0.9772608108954957,-0.01,0.37511643510438236,-0.4717045755559715,-0.10796801475623824,-0.01,0.4421691819337334,-0.466904742492071,-0.21536044899494286,-0.01,0.4221831154618708,0,-0.11,-0.01,0.3134099594999561,-0.51,-0.11,-0.01,0.26747945609065443,0,-0.11,-0.01,0.24089278918232213,0,-0.11,-0.01,0.28535204973745415,0,-0.61,-0.024126275742010476,0.15365286800387593,-0.51,0,-0.51,0.3843128502256417,0,-0.11,-0.51,0.2762813435451697,-0.51,-0.11,-0.51,0.16370593874997902,0,-0.11,-0.51,0.21124026994871858,0,-0.11,-0.51,0.2135684336986643,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,-0.51,-0.11,0,0,0,-0.4804438893886117,0.025712486808353405,0.46734816314235333,0,-1.01,-0.01,0.42207440989360856,-0.4660270333654328,-0.11,-0.01,0.328998177263662,0,-0.8921155515828075,-0.01,0.1772927636286576,0,-0.11,0.24794188337509182,0,0,-0.11,-0.01,0.29077840435073266,0,-0.9269059822165289,-0.01,0.21578581940644526,-0.51,-0.11,0,0,0,-0.9061295719711724,-0.51,0.43226868461827683,0,-0.11,-0.48437047522008053,0.1661196204059061,0,-0.11,-0.51,0.26628904830030065,0,-1.01,-0.51,0.09,0,-0.11,-0.51,0.17648144495795354,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,-0.51,0.16110555573721222,-0.51,-0.11,-0.01,0.3845759313446171,0,-0.11,-0.01,0.24237089963740144,0,-0.11,-0.01,0.22548873205614026,-0.51,-0.61,-0.01,0,0,-0.64290125,-0.01,0.2353999350092868,0,-0.11,0,0,0,-0.11,-0.01,0.12814140591109965,0,-0.61,-0.01,0.12630072787166607,0,-0.11,-0.51,0.1785317701497262,0,0,0,0,0,-0.11,-0.51,0.18624587398348508,0,-0.11,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-1.01,0.09,0,0.25762146652125767,0.4350373914859407,-0.04997254173438589,-0.12280116257692425,0.13187497214645114,0.42658466873198714,-0.1336142204977493,-0.25991320077101926,-0.012643378540958716,0.45048762909951334,-0.16345437486313832,-0.24898690534127257,-0.015109300263107018,0.4358112535378439,-0.3737972548160512,-0.4262298154246564,0.12684536064347723,0.33232540681435313,-0.20481359782838765,-0.2332774375962905,-0.309345047404519,0.07452657233231882,-0.25176717763006734,-0.3902532231958994,-0.07363429042331623,0.2671656172314632,-0.30449376651068955,-0.3788644020795862,-0.11,0.3355248414656733,-0.3848957716668611,-0.51,-0.46448319155603024,-0.3744611530867647,-0.05257522101068288,-0.3337164858811115,-0.37409337656031294,-0.4411467707476464,-0.037323865635642446,-0.40508060480757163,-0.5626935837870871,-0.4354066575754529,-0.10926637261113692,-0.51,-0.4213403180281037,-0.51,-0.19822277131122396,-0.49550458485577165,-0.20282487190690124,-0.3624140053785187,-0.0473296666876557,-0.36535206422031624,-0.4127561147489881,-0.4999886804416205,-0.09916668657364212,-0.49404071826507256,-0.41329666106332874,-0.4761762859286362,-0.3393551471572352,-0.51,-0.11,-0.51,0,0,0.005138983209610329,0.3863439153639022,-0.2527985644353457,-0.2925016268516486,-0.15246355451345928,-0.12697320370807724,-0.07545517385489547,-0.24408992469834562,-0.13832405748267151,-0.044991148694822305,-0.17293447237482795,-0.24066178893895468,-0.1801852350870171,-0.15055947643265066,-0.29274726469536355,-0.31442055957645776,-0.08133159691329098,0.1478505983630282,-0.17128651515633478,-0.32602486947542103,-0.16648629906489562,-0.14467867999521933,-0.29170392326977307,-0.3091573188766751,-0.13652742945716273,-0.11261982431560164,-0.36413912697491996,-0.3765553189357503,-0.1875658963466084,-0.15710606004336422,-0.37393654033408064,-0.51,-0.3270032841789916,-0.46455613877221,-0.0656022186618881,-0.5101215,-0.3991167336206021,-0.5106975,-0.2391791511353148,-0.48339730488306737,-0.12002913915308693,-0.5100660038308567,-0.4014265554748481,-0.47656158865421555,-0.2904950304811648,-0.5130375,-0.41,-0.51,-0.61,-0.51,-0.2136682741354263,-0.51,-0.39782575637781514,-0.5120854209375,-0.30058437412510236,-0.50335125,-0.1110227002228833,-0.51,-0.41,-0.47435815666797915,-0.11,-0.51,-0.41,0,-0.0546079103997294,0.36905739119326775,-0.23989420953606883,-0.3018129221202815,-0.25166867175585983,0.3282077719198615,-0.35136254720641646,-0.4477612798131361,-0.06115509688009654,0.07197030794040485,-0.11029701682651723,-0.21339636526754283,-0.11,-0.032995651651925736,-0.2987748250193541,-0.37667673381877603,0.0004940047973656866,0.06605877158917456,-0.2627300573631703,-0.25334305454347916,0.24568216654280686,0.05919035103025223,-0.24469621175129008,-0.3702752210143505,-0.0664641480428111,0.07320549994137414,-0.3646906645028897,-0.40261110347139484,0.09962164020269627,-0.07849994646825664,-0.4016595506871858,-0.4081656527532398,-0.4113189849052897,-0.4661105260997353,-0.1045041611621225,-0.4740276940802223,-0.3921504246271429,-0.50290125,-0.18361880946065778,-0.51,-0.4427057198399256,-0.51,-0.1980904450499208,-0.51,-0.1806571091255073,-0.51,-0.41,-0.47595152381613026,-0.39531704991626476,-0.4883060845965781,-0.09116818161748864,-0.51012375,-0.09520054932337742,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.51,-0.05667260668064353,0.3290899818794509,-0.3831540759444097,-0.4919651680323698,-0.16327936523640396,-0.14674098737095154,-0.23635120854706804,-0.3378556888712987,-0.16687563992986965,-0.013131547628212295,-0.40213071691721475,-0.4211912727963577,-0.4847576380366623,-0.13545011476813695,-0.3577982883229706,-0.45217034880933826,-0.043994137668186925,0.1056700986081772,-0.3658129848094548,-0.4420559496936642,-0.1596480193107202,-0.11539543655174006,-0.3723740481090578,-0.51,-0.10443815045510318,-0.009090877111948217,-0.41,-0.47404302294386275,-0.160135,-0.1107010244550699,-0.41,-0.4784172352312888,-0.42644244121050445,-0.502394272713248,-0.19452216168918546,-0.51,-0.122674971481339,-0.51,-0.3713798245470741,-0.51,-0.13041332841473777,-0.5099585820749336,-0.4120285889494071,-0.51,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.3455618358264565,-0.51,-0.41127936527392545,-0.5106975,-0.11,0.42017592052009856,-0.41,-0.4620626096249343,-0.11,0.29045220297309493,-0.41,-0.51,-0.11,0.27528410410972093,-0.41,-0.51,-0.11,-0.01,0,0,-0.61,0.2186433363613222,-0.37831028859990157,-0.51,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.5020854040653945,-0.46792580967046016,-0.11910201118253277,-0.51,-0.5034542434998334,-0.51,-0.2704721922212564,-0.51,-0.5004706042678093,-0.51,-0.38440000179058764,-0.4952103095209939,0,0,0,0,-1.01,-0.51,-0.23265009874376058,-0.51,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,0.29164536017917303,-0.41,-0.51,-0.11,-0.06471553226392888,-0.41,-0.51,-0.61,-0.06406143289011552,-0.41,-0.5106975,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01516691710161814,-0.41,-0.51,-1.01,-0.01,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,-0.11543510144410685,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,0,0,0,-0.0727710563414467,0.2697217473487973,-0.41,-0.49052141815862343,-0.61,-0.01,0,0,-0.11,0.08525904962893655,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.61,0,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,-1.0117099999999999,-0.51,-0.34787086274506235,-0.51,-1.01,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-1.01,-0.01,-0.41,-0.51,-0.61,-0.004032254019210145,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-1.01,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0.24975636043463253,0.39780764248605527,0.5441495847104046,0.3727983510568946,0.1990828548817054,0.4246887296753853,0.5296009991193883,0.37555120220807536,0.25802380485587045,0.44342139720193097,0.5205873257850091,0.3849496765287539,0.20203772046669605,0.42854149084098364,0.5400257126836057,0.38162884360575233,0.18207902789718336,0.4272192342372463,0.52266820836797,0.3866323734795065,0.2596851240083177,0.4163723998384299,0.5300212982607313,0.3815366937635707,0.21128370889856804,0.4171603427037285,0.5386541593896046,0.381325941238884,0.012368625390661147,0.3609853394302225,0.5135698655676857,0.3205500137258972,0.3070895351766899,-0.0515213233134936,0.5360523433144276,0.3705221207677007,0.3221135947295793,-0.05583412218146554,0.517646531606137,0.34912520215840853,0.2213482484097457,-0.055884535531986274,0.5288903830251397,0.3820735011034814,0.07549205400130168,-0.16507367698848657,0.5229558722499326,0.33762647697087866,0.27758671643204813,-0.07147856722699372,0.5200433339945354,0.3094806214756881,0.2092828984872086,-0.13920161475509363,0.5452665683979621,0.3356354429739231,0.22456255943319262,-0.16264715522980597,0.5306966416430987,0.3297359381900906,0.015156616227265517,-0.33900645815950353,0.5245795099029421,0.09622944832021596,0.03657893373968089,0.3848568536440478,0.5392350183771745,0.38341832048156715,0.09962619249811058,0.38258360427829263,0.5341815385687709,0.37594576922290135,0.0018180812534667346,0.39295053799133073,0.5236885336514017,0.38792468434243754,0.0641857752128788,0.3537995746862759,0.5372591645745394,0.35997723905544066,0.12119748526140312,0.3761749619230407,0.5474675581712443,0.353563048716548,0.09782528757051939,0.30642660235848174,0.5298567528154629,0.30477822813715716,0.04662136555095521,0.3270453044936775,0.5199784248276164,0.29157677581897723,-0.07149777610105955,0.12312696324272904,0.539782146319415,0.030071856269515203,0.17380628317033886,-0.13107969571948672,0.5260537952277301,0.3661974688305434,0.2079947748850764,-0.17999257508919003,0.5244573749834778,0.29087966621994205,0.12212250889829379,-0.24502787762596775,0.5320116203455523,0.32040883345354243,-0.024797751911346803,-0.3736696800657202,0.5108191547142699,0.028469548011297342,0.027028251290376976,-0.24706923200885522,0.5471745633289368,0.30295221356502294,-0.01924472505088213,-0.45153003926743807,0.5443472808610029,0.09282722284966877,0.06639257648955213,-0.42312533724275486,0.5208264145041293,0.15608969189335198,-0.030686564612448387,-0.51,0.5290920808261959,-0.01,0.26012636482176155,0.41804093186844793,0.3904981784048914,0.383011263596363,0.3074387174389898,0.4013387199365569,0.5139720348583555,0.37986472315359254,0.24085605027689339,0.38223966990694147,0.5247962482291793,0.3837809364702173,0.1867147572440632,0.26631881675727187,0.508290406210505,0.32062978384700497,0.2271700021382402,0.3430593024347318,0.5263458117585887,0.3495318112408187,0.14552291986803312,0.32732599258111145,0.4800227389902936,0.3393727369220515,0.13592231506623054,0.32018250919340957,0.5304329103379003,0.30666950537580495,-0.3460715724056882,0.12944109872737553,0.5458672951652854,0.19185513205629068,0.2178898808302219,-0.10762124648360435,0.5145868975688566,0.36147343063547455,0.1357146104431644,-0.17164248195468354,0.5424456340206526,0.3426733837775208,0.1650479728188479,-0.2111798408697606,0.5054017244786245,0.328754644707686,-0.010414116768031285,-0.38821081787046896,0.49164982399568025,0.0931606666205396,0.23741957903648805,-0.2527907639006332,0.5275988917081094,0.31859090305179233,-0.2237902911325278,-0.4735300197596349,0.5228674622517626,0.16938641175121613,0.009653357091792249,-0.4084130805690376,0.5255068238445287,0.18684351134507188,-0.06341273460707539,-0.4502753353180659,0.5445807206789733,-0.01,0.29075993418556845,0.35856617217573317,0.5231111302107704,0.3515511845887663,0.07746951395312869,0.3050703474708304,0.5305880606670387,0.3062352917603989,0.060745849729725826,0.3319861816167509,0.4912967590704518,0.33978024902737064,-0.046945806678113794,0.16006045709190006,0.5135657230836594,0.11984080973695997,0.10117706688075838,0.32799186616378323,0.5254740941015396,0.30197085952110186,0.05149740791511677,0.0033588931980282084,0.5218176502951055,0.09370984373666759,-0.028384396629399115,0.15547277115187502,0.49866670526423307,0.027672800821968123,-0.61,0.021558789268192054,0.4941534267499428,0.06257616094521457,0.027315011902347277,-0.2580682556371158,0.5198423111394976,0.2721468897504256,-0.0388438745044999,-0.4249044424169496,0.5145649511607546,0.1533883867363239,-0.4101975484356804,-0.41615540093683234,0.5249227741248107,0.08506767335156196,-0.11,-0.49370790739292136,0.5027515722459847,-0.01,-0.043781902222028865,-0.4883603903114074,0.493062861797031,0.12658939912274303,-0.45877482443268824,-0.51115875,0.5295601331978393,0.02642324932387575,-0.11,-0.5126183366648609,0.5229881538065035,0,-0.1554478554866207,-0.4361056843133794,0.4807433282140567,0.02492360724782007,-0.09481469321306775,0.35500678287552223,0.5282665297376478,-0.002622543459169382,-0.834080966078167,0.24698387213874107,0.5186221079544475,-0.004897485502633434,-0.12679238278427626,0.109793028890045,0.5181704295596439,-0.010206307546519007,-0.11,-0.01,0.533311511675108,-0.010877140460328385,-0.4431245415848666,0.20952191825078356,0.5064453950486083,-0.008104294202881683,-0.11,-0.01,0.545687810560718,0,-0.49966597139079444,0.012904861204044627,0.5208441061224925,0,-0.11,-0.01,0.4780391824146439,0,-0.1569039931013119,-0.42321666507357203,0.5366985296858289,-0.019898979172453403,-0.1515868091277893,-0.42542818100320484,0.5240110061237382,-0.004681156452881972,-0.11569566933571473,-0.4706389860847525,0.5221005548969898,0,-0.11,-0.4674173641173581,0.47998181053088385,0,-0.11,-0.51,0.5222644202000553,0,-0.11,-0.51,0.5294039765196454,0,-0.11,-0.51,0.4956908390652356,0,-0.11,-0.49635664682900804,0.28273690651659555,0,-0.5446324353723662,0.14883319468028988,0.5084778537456901,0,-0.13728820136500536,-0.016607723136113424,0.534070631307952,-0.009960479872886344,-0.13254528023131879,0.025878268930950556,0.5270144595271213,-0.01,-0.10474335086192615,-0.023042627048899318,0.5153896511367482,-0.01,-0.11,-0.01,0.5359910299146967,-0.008541708985153483,-0.11,-0.011744553605111566,0.5318135918695561,-0.01,-0.11,-0.01,0.5148408622760516,0,-0.11,-0.01,0.41836139941503686,0,-0.11,-0.51,0.5359518232434857,0,-0.16059625,-0.509192456755458,0.5123015321102727,-0.01,-0.61,-0.51,0.5085126604697408,0,-0.11,-0.51,0.3735565035705608,-0.01,-0.11,-0.51,0.4635491571911683,0,-0.11,-0.5210736272634507,0.3866283296260634,0,-0.11,-0.51,0.24002801949728564,0,-0.11,-0.51,0.13576589334799777,0,-0.04469799552481589,0.1584679166226963,0.48717945012376485,-0.02271660347304425,-0.06960386299832295,0.029277012872035574,0.5134150255657859,-0.011289153066689955,-0.04724663393983784,0.0287812729218141,0.5337942151423691,0,-0.11,-0.01,0.4580658616334602,-0.02530548707945446,-0.11,-0.01,0.5245582785189936,-0.01,-0.61,-0.01,0.421565010634411,0,-0.11,-0.01,0.42651442856631383,0,-1.01,-0.01,0.32766490775080137,0,-0.11,-0.51,0.5078863208758511,-0.01,-0.11,-0.51012375,0.5017322343142434,-0.02697005416345477,-0.61,-0.51,0.509119030260724,0,-0.09855974202913288,-0.51,0.3915749163006107,-0.01,-0.11,-0.51,0.48563833674494405,-0.01,-0.11,-0.51,0.31645524404512987,0,-0.11,-0.5023387500000001,0.21236473758438307,0,-0.11,-0.51,0.09,0,-0.4686984897052936,-0.01,0.5274699240659306,0,-1.01,-0.01,0.5228843036288993,0,-0.61,-0.01,0.5084065960589835,-0.01,-0.11,-0.01,0.40625351047090597,0,-0.11,-0.01,0.49156963440388673,0,-0.11,-0.01,0.33490321295581915,0,-0.11,-0.01,0.34154904116689916,0,-1.01,-0.01,0.16082145331030487,-0.01,-0.11,-0.51,0.48583375391651346,0,-0.11,-0.5304928038076001,0.34310959337924407,0,-0.11,-0.51,0.2990367914588223,-0.01,-0.11,-0.51,0,0,-0.61,-0.51,0.27218464967235834,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-1.01,0.1518007711537772,0,0.1934848898200364,0.45784311983171355,0.013284120719279324,0.3265136052316272,0.16021258625174742,0.4509491000092952,0.017625439512009195,0.32714845030103423,0.03946992336744939,0.44982091533090773,0.011057846318293296,0.3241834062269563,-0.017744015861119858,0.4522037314141195,-0.08691747380424054,0.23450025031055688,0.15792959074985893,0.4535870286589159,-0.00004745026056528819,0.32132404316857144,0.11663172958594809,0.4523625689886674,-0.08759453014474604,0.17933099312589168,0.00004889116337856471,0.44244661159324955,-0.07906062100522293,0.16493870984486084,-0.0857331236128263,0.43723423015675117,-0.2390136162282236,0.07251428350444131,-0.14253240462891986,-0.11274749330454079,0.029362403111835654,-0.041326932971490524,-0.20010085410718328,-0.14837815693626488,0.02117173054696156,-0.11260331983263222,-0.1694406555827885,-0.06866576368681684,-0.11115222077602258,-0.09332499173842733,-0.13226330024830107,-0.3113794502624508,-0.16838231790164035,-0.04274801668369719,-0.201310847954566,-0.17302892441175155,-0.10824346984949536,-0.022891079927007025,-0.17141534898400718,-0.3379022182962854,-0.2723263019235053,-0.05816230307940332,-0.15375959273160428,-0.32916216254714825,-0.2081829866084741,-0.02429711730686544,-0.10616619120344793,-0.4897315908190964,-0.41,-0.042417496460974376,0.10946089120367727,0.39337429006591296,0.0006459076509986094,0.008674125157696989,-0.1279444303589514,-0.019319868807924696,0.01666623555167847,-0.03487568057383492,-0.07445991384301771,0.011957009414226281,-0.02248076091453236,-0.022473535270482216,-0.16470955365502193,-0.049179246641952105,-0.059769980514107715,-0.03760557550972755,-0.009244748112880868,0.2306066922425228,-0.024843462034794442,0.008735199097415549,-0.21020933015621676,-0.03549322787485272,-0.03789933563587249,-0.014575439281989438,-0.13276106445627428,0.006305837407991188,-0.13636718107836457,-0.024059334365301877,-0.25297777787111353,-0.05967546040604226,-0.2455789723947538,-0.014562735806801397,-0.271933364739131,-0.29370575760598805,0.016630414799723537,-0.12972551219112852,-0.27216046261145255,-0.5419787974254018,0.015538934663498975,-0.12996145957621147,-0.23887354395083538,-0.42168636738106247,-0.025650024907483308,-0.11160602147778223,-0.1441261544382847,-0.5085656058991467,-0.21706342490758315,-0.11259887849769573,-0.17107093587510355,-0.43974932806705885,-0.15912339975270295,-0.08490249181939298,-0.1594781452186353,-0.5190972845941818,-0.3325353928462029,-0.12251485728402813,-0.43616950035268387,-0.49893496688126926,-0.32427758939936424,-0.09219386024300712,-0.11,-0.509794768770219,-0.41,-0.06494082982778698,0.20904410726002767,0.36235786179968316,-0.0021117698800169546,0.04931025578991079,0.1305941185575888,0.3764039311932992,-0.12687960730544098,0.05953681686036227,-0.0626562312602873,0.11465964729554395,-0.10236849378640545,0.027909711588896772,0.02103320763985498,-0.0005434416038532042,-0.019625907484984936,0.0023323047803526743,0.040986496436981816,0.15957131705938976,-0.017548704400232762,0.04308527172599132,-0.13611300226378165,0.18989667853594955,-0.16557219790593847,0.017780555137950363,-0.02580261038025109,0.001777145200704519,-0.0756579111353124,0.058446191239851016,-0.03988730900707917,-0.008171957702819064,-0.16783042859494807,0.06152546418828008,-0.3979182278125896,-0.33223108466196166,0.02602518778268703,-0.125284673719141,-0.2428207297335515,-0.383276365032752,0.016854510974093257,-0.13977919873436803,-0.2760868482070049,-0.44798856651417907,-0.008212070734654084,-0.12906413178502182,-0.14949129563927566,-0.5129064164684498,-0.2827485636762283,-0.11018419477013697,-0.15030315851168774,-0.41915552407589,-0.023814646696837232,-0.10969034439142389,-0.12438419825496988,-0.4737641893375752,-0.26554734111648437,-0.1106372596961434,-0.13438373989898267,-0.4652570715665464,-0.2712858173507864,-0.11623692380158059,-0.17114301338481175,-0.5108088749999999,-0.36342489252681903,-0.12357771072584117,0.06879548358897641,0.33992005667996944,-0.18680759078901088,-0.03893090057801444,-0.29357155945778096,-0.0849067509625573,-0.03245345315482776,-0.09227751602339805,-0.11056979736067324,-0.07893063322210477,-0.03280351182111949,-0.07998923665105187,-0.17482148456662858,-0.06112528144954992,-0.13273946046738472,-0.08204592512712178,-0.14805213153553487,-0.002090396067203692,-0.18649384432666022,-0.039788029404562435,-0.12019872535794225,-0.07692344687840999,-0.22700950151246654,-0.06250057701296761,-0.1959026506279115,-0.06649160510292498,-0.2465339056380865,-0.08353015592415743,-0.308288576415038,-0.09166745283165163,-0.31447031378543483,-0.0827320351024854,-0.26056671849958335,-0.3499108369542815,-0.1280330625852658,-0.14860913600760026,-0.271869326221288,-0.5215738471381463,-0.24063865342313454,-0.14884322735031116,-0.24935772657872857,-0.4896351372223289,-0.23454476980186673,-0.15190077477771902,-0.154387714046875,-0.51,-0.3356056025009712,-0.1340106349239779,-0.2536330293606923,-0.4677892431466073,-0.3668412177740498,-0.15087470413768375,-0.20742813748604083,-0.51,-0.3771959688456968,-0.1441309170358628,-0.5536586410610785,-0.5121664941471936,-0.41,-0.15915925223214372,-0.18559389287941336,-0.5324730169946262,-0.3887854914453338,-0.15462866103608114,-0.15378872292323417,0.4521788332495395,-0.2830441540109728,-0.011913941484560937,-0.1779983063760252,0.447605489837556,-0.41,-0.01086238243706484,-0.16172124999999998,0.4498903270815526,-0.33909598197159113,-0.01,-0.16115875000000002,0.3089168590759656,-0.41,-0.01,-1.012475,0.44307792220415465,-0.37168876998748224,-0.010647937728564172,-0.11,0.2873181817093252,-0.41,-0.01,-0.61,0.38702354097714414,-0.41,0,-0.09747382205957562,0.13976449911753064,-0.41,-0.01,-1.0146293741971086,-0.51,-0.41,-0.014312441553357251,-0.11,-0.4726586027913449,-0.3553959326067383,-0.0493502267875316,-0.11149701663588571,-0.51,-0.3673345821943201,-0.058974133270691884,-0.11,-0.51,-0.41,-0.03678125740984689,-0.11398299998100699,-0.51,-0.41,-0.022509338798425496,-0.61,-0.51,-0.41,-0.02765486277755598,-0.61,-0.51,-0.41,-0.04536171495646889,-0.11,-0.51,-0.41,-0.01,-0.11,0.37693690549747494,-0.37749797060333545,-0.01,-0.14984289890401953,-0.1350986715891539,-0.41,-0.05274812040482059,-0.11,0.02839243833921192,-0.41,-0.025352068456156805,-0.11,-0.06358304198398392,-0.41,-0.06966593276424064,-0.11,0.11563731662036172,-0.41,-0.011096796076528692,-0.11,-0.02363609057759635,-0.41,-0.014037268728360726,-0.11,-0.03334921554211179,-0.41,-0.03866920205932903,-0.61,-0.02064350711951387,-0.41,-0.01,-0.15370154748785572,-0.51,-0.3665502665721274,-0.09605960690626404,-0.16264264202477208,-0.51012375,-0.41,-0.11268108900358983,-0.11,-0.51,-0.41,-0.08564870899124183,-0.11,-0.51,-0.41,-0.022981537822735536,-0.5611587499999999,-0.51,-0.3647537777314168,-0.031109075032157422,-0.11,-0.51,-0.41,-0.029279446373264986,-1.01,-0.51,0,0,0,0,0,0,-0.07148282754224795,0.35746000245914794,-0.36517273174849363,-0.01,-1.0023436726171868,0.2660927840554087,-0.41,-0.01,-0.11,0.14349884975742616,-0.41,-0.044891554482236425,-0.11,-0.015900663480968608,-0.41,-0.01,-0.11591803781148816,0.07316071338365995,-0.3643297357748285,-0.011829838697290002,-0.11,0.01992937018578301,-0.41,-0.01,-0.11,-0.011780440634265534,-0.41,-0.01218933514863646,-0.61,-0.01,-0.41,0,-0.15839025345996322,-0.51,-0.41,-0.10817572120463045,-0.11,-0.4967362108231628,-0.41,-0.08970774176047958,-0.11,-0.51,-0.41,-0.03270852071456222,-0.11,-0.51,-0.41,0,-0.20012375,-0.51,-0.41,-0.029853714283193448,-1.01,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11,0.28414576254877155,-0.41,-0.021746471650606815,-0.14035555277964845,-0.12817795903181584,-0.40290125,-0.10547538813117689,-1.01,0.028042952327290413,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,0.034584897849610996,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,-0.054306311072906954,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11163817553581547,-0.51,-0.41,-0.01,-0.11115875,-1.01,-0.41,-0.01,0.18142251667092568,0.31741238547118894,0.3963625293182912,0.2536980197858336,0.20088294188173286,0.24018279874541537,0.4320732666887527,0.22359205213905606,0.13999498431313628,0.37586649350413587,0.333936802663785,0.27700445249391004,0.1425212325358518,0.33170033949313854,0.4274768176958327,0.20636321110233227,0.13466466622512013,0.19990569625154622,0.4198446698687801,0.19846835558740406,0.16766613671404929,0.26998579093913877,0.45950276704198056,0.2387022690150298,0.1020853392043635,0.2521993886571659,0.396141565654885,0.19342378374250124,0.06633029485693168,0.13098435577372194,0.3761396575051735,0.2003140118339299,0.21795654182041146,-0.08318283895511082,0.42758227287771544,0.2761592451550879,0.1987149938321316,-0.17956436798127778,0.44571951573184,0.2415276879043231,0.22441507370155084,-0.16386311741769602,0.3896845856980408,0.25389874291468184,-0.22147796151537583,-0.4474049395021784,0.46177642006070807,0.18684454732577477,0.22228559676249435,-0.21658421004160286,0.22280166524779968,0.21970097571517794,0.12440719725303515,-0.36805565154949266,0.3969984042333058,0.07416615409198854,0.18626082991920145,-0.37239111661631685,0.3571312291412907,0.19489892599494926,-0.06408800375424602,-0.475923707398968,0.36926853311159447,0.04711798674187568,0.19744323543044368,0.38224810287501376,0.08972728940750789,0.08415099857619385,0.008533762576162039,0.03470978894198686,0.08159589128822152,0.034455918355400246,0.0006169800809893745,0.03176437183110945,0.06329972846662474,0.028380415603556537,-0.10044684547167373,0.01405421547780664,0.0670082514103556,0.022502539612012977,0.03349037333164547,0.06680324458846999,0.0387327005733053,0.03377954588259587,0.010999997068987391,0.013268836470581856,0.04162014260821237,0.013131607826983584,-0.0311963881312942,0.01719531418873779,-0.018275845365904694,0.04663279923273337,-0.1683502379717733,0.010707693969202417,0.02525960114276813,0.014346866855460648,-0.013324245962294649,-0.20959585552668145,0.06853514876744414,-0.012327424292573889,-0.02871667689763584,-0.4828965962365189,0.10472578218920287,-0.0420881743243071,-0.03200915173780436,-0.43869158843041944,0.08413450356202898,-0.07752168793964943,-0.06332142156982722,-0.5026049518599035,0.0831820794925154,-0.052119856134374226,-0.05939275827974704,-0.45625650405495066,0.054619609838133486,-0.0500502444418065,-0.09064750555598844,-0.5202152556490502,0.06697001137385689,-0.07997961781809185,-0.06291875825886932,-0.4559592914527289,0.0022323403543016585,-0.036488842323249296,-0.025603499187954296,-0.5209809612417355,0.002870203334060859,-0.06272707026417221,0.1597508174440664,0.1642797541355919,0.35726479928237803,0.09249104557010324,0.17201594109881924,0.2557884089837658,0.3225599570442763,0.08315481311130166,0.039993895329022415,0.061112514448477054,0.06723427381956655,0.04783485597277026,0.02410385883892195,0.03754794652437635,0.055281843443958915,0.056580810020526194,0.01180069223198028,0.10013565509282456,0.07753273422000703,0.08124414546993335,0.05652559293678479,0.05084228030432751,0.08795591501972191,0.05045644687914601,0.014175876030699433,0.046772564464891295,0.007904775993690204,0.04622208964508465,0.01819636125947246,0.01842964732810451,0.05110928576767722,0.030139286221545478,0.22648801803842755,-0.22019540849920644,0.396375708414538,0.11302319770110619,0.09582159813769843,-0.4361927052888007,0.3494601531809235,0.035774332452867916,0.04179799940270695,-0.40846992936519827,0.051580859397502225,0.04432500118345519,-0.021021563648860167,-0.5082278325995898,0.04698213200695231,0.009194921698021028,-0.02755588539866384,-0.48184379120047044,0.07924081591681657,0.03999795236081915,-0.0890466147000171,-0.4865533687979452,0.04247430001117791,-0.01,0.1390467185688787,-0.4455768015666146,0.00016210739629051482,0.06346077995908624,-0.4992322727956258,-0.507047660107551,0.00329262831839283,0.07259139288043587,0.09359337307636134,0.37522016991805673,0.02223863718949102,0.008404582572773375,-0.05689443755150264,-0.01543055914888238,0.044258251757046146,-0.012221448013773109,-0.12893562722887558,-0.02159312539036697,-0.030601295036173554,-0.021078621653607753,-0.05131735000248308,-0.03919859375519244,-0.08586707351392,0.043475395704955885,0.1876574704890623,0.04787633253710219,-0.034841751526452434,-0.00814140320026607,-0.0995003592498275,-0.031720230907053566,-0.02418370871858446,-0.019997678531996424,-0.021262019434298042,-0.009160143608524978,-0.07352200065378393,-0.009976799060467957,-0.07572655382550891,-0.04036955062129092,-0.0566663223945884,-0.02206897144256801,-0.051565122213902775,-0.3685318782522508,0.013594855101822031,-0.0825877975690901,-0.08479534051963225,-0.5133617680356476,-0.006112173544868042,-0.08685851073836691,-0.11742974917421442,-0.4484531593841951,-0.012102642419440028,-0.08056405045770135,-0.09653008516606906,-0.51265275,-0.041549561744032584,-0.08240389317661645,-0.08696038891182857,-0.4746221916391422,-0.031774490550647495,-0.06723389534735233,-0.09484209657407236,-0.5058598606276878,-0.10239452946358404,-0.08680709430597353,-0.10622562871691751,-0.50530372251941,-0.09197868605561799,-0.0589747467653354,-0.1595417846988452,-0.5388362536604424,-0.10895649228071445,-0.08110095709369142,-1.01,0.1892915464861747,0.39279865461661656,-0.008540543874125325,-0.02171092366126003,0.0334719199021535,0.45266070567558675,0,-0.11,-0.01,0.41867036217170694,-0.01,-0.11,-0.01,0.4323807093846976,0,-0.13704738001989453,0.07113630063876614,0.3556115897420628,-0.00971510475943289,-0.11,-0.01,0.28240266574621026,0,-0.11,0.031057698669477767,0.3386747742290358,0,-0.11,-0.01,0.18369912102887379,-0.01,-0.5591256123391156,-0.51,0.42097738601427503,0,-0.5554714340230054,-0.4983833674104269,0.3794536375105258,0,-0.11,-0.480197682848094,0.43479225287988266,0,-0.11,-0.51,0.26352730978995553,0,0,-0.51,0.3425848656707704,0,-0.11,-0.51,0.23618698447660272,0,-0.11,-0.51,0.25043855243850655,0,-0.61,-0.51,0.09,0,-0.970135,0.3637929065452058,-0.0014351040785049105,-0.009173136480793759,-0.19315920940484216,-0.04786733607451889,0.0750960299838103,-0.058968695842217436,-0.11,-0.016318814857201054,-0.039707910063470825,-0.045772695497082516,-0.11,-0.03850796774702189,0.017293081427265784,-0.04621591131921032,-0.0848174788810683,0.08011081552282592,-0.02022910171217952,-0.01,-0.11,-0.029002756133871203,-0.00773924151167852,-0.025918924441117003,-0.11,-0.01,0.030528978478338787,0,-0.11,-0.01,0,0,-0.11,-0.48868836216100003,0.07727647721435288,-0.01,-0.11,-0.51,0.08037058020540125,-0.01,-0.11,-0.5116087500000001,-0.031655744243598155,-0.047998292821366,-0.61,-0.51,0.08635496801967485,0,-0.11,-0.51,0.08868245094624691,0,-0.11,0,0,0,-0.11,-0.51,-0.019494543432427094,-0.037636691683547975,-0.11,-0.5211375,0.09,0,-0.11063575919092147,-0.01,0.3321359195263791,0,-0.11,-0.01,0.27100923527668724,0,-0.61,-0.012875765956043145,0.027731783292394094,-0.01,-0.11,-0.01,0.06920426758585593,0,-0.11,-0.008601828403069322,0.07992198698667052,-0.01,-0.11,-0.01,0.06175661804332288,0,-0.61,-0.01,0.0027837470275904356,0,-0.07891850209519419,-0.01,0.03330101861495167,0,-0.61,-0.51,0.28862109459974294,0,-0.11,-0.51,0.22526175254766967,0,-0.61,-0.51,0.06390652642309125,0,0,0,0,0,-0.11,-0.51,0.08867738760576956,0,-0.11,-0.51,0.08907061527909249,0,-0.61,-0.51,0,0,0,0,0,0,-0.6483038702061698,-0.01,0.04241160289256575,0,-0.10408312845106477,-0.01,-0.0002449565274443219,-0.01,-0.11,-0.031805175781881904,-0.027712603240527163,-0.03123471557643464,0,0,0,0,-0.14333651123415125,0.04062467494697978,-0.025215899976644085,-0.01,-0.61,-0.01,0.07230496722645603,0,-0.11,-0.01,0.08963670643867128,0,-0.11,-0.01,0,0,-1.01,-0.51,0.003587713087304375,-0.0243373675459716,-0.11,0,0.07256120510855506,0,-0.11,-0.51,-0.005303372807748461,-0.022181980235502018,0,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-1.01,0.09,0,0.14557094653572428,0.4179673505494759,-0.07607966968587927,0.246414193034921,0.14479472898368453,0.4345741388850447,-0.2168224790605907,0.17043947552724958,-0.194278830154189,0.43756941346294176,-0.3194981779359485,0.14160894186502554,-0.05354408643770146,0.42687265500727734,-0.30016771369930134,0.043392309515863696,0.16884012124315959,0.31774023653001604,-0.2661613059569363,0.1546726114815396,0.020468433467457258,0.401150406571182,-0.3681361596854999,0.16099954092757485,-0.07016467734695407,0.38582490966531396,-0.3643525952993621,0.015698875019355213,-0.09644752633203975,0.3252468188668347,-0.41,-0.01,-0.1442374994450193,-0.12310276605610188,-0.12604321958450038,-0.0928672598965028,-0.22441700168739398,-0.25433180533311484,-0.2150830745081762,-0.10864220390131611,-0.21184841632008342,-0.41566970203433345,-0.21401441274859223,-0.10695955793355572,-0.4370209256567392,-0.5028833625,-0.37701210402244895,-0.08834836738176945,-0.22184549371998405,-0.3882092687269707,-0.3126747838381238,-0.1031304522157686,-0.15328395038512793,-0.4619320494274835,-0.3469220500162196,-0.07627434123702367,-0.18743268775403785,-0.49338757985785275,-0.3943225035503423,-0.07546653908994942,-0.61,-0.51,-0.40945814980267314,-0.1258296785782655,0.08349885100272808,0.380257558144472,-0.4813508465171067,-0.04594349809691288,-0.16456305640147195,-0.08105790859075425,-0.49071710314173184,-0.08749195858934337,-0.14175781711545424,-0.06544799725249453,-0.5298830456212921,-0.07458016446790319,-0.15900205091040878,-0.09761487513646912,-0.5222347227249471,-0.07592852048052641,-0.053918646838525396,-0.0006824096205702067,-0.526941884698464,-0.060713383891085604,-0.19614735657253585,-0.08767518567679809,-0.4784866286354567,-0.06484034099088129,-0.3230623462398674,-0.03403972823481877,-0.444380307125,-0.08787252143044233,-0.16345732332779936,-0.09397771264747631,-0.4622864755190417,-0.05363879228687856,-0.20990451318913816,-0.42817526907225295,-0.44066594772786516,-0.12897487133508614,-0.23984827606834902,-0.5234982629682284,-0.42188271698179236,-0.1470425870287985,-0.09338306672558178,-0.4697447827619904,-0.44055767078693064,-0.15411019314213562,-0.11319104366212183,-0.5128672882314699,-0.42113749999999994,-0.1445462711694408,-0.11757585903884586,-0.51,-0.44994486798692934,-0.12157575361938341,-0.11264365110774863,-0.51,-0.42032173344741686,-0.13703983324442676,-0.16012375,-0.511999125,-0.41,-0.10667039768376645,-0.13182501663761886,-0.51,-0.41115874999999996,-0.1319643937302617,0.10512103024965244,0.3621694110282397,-0.28933231033826823,0.004172593336636476,-0.4607229235183829,0.3678126831598829,-0.32951919567664223,-0.013256131952966333,-0.1034792721501961,0.13679063063778013,-0.49147731254016996,-0.038247142600832666,-0.05069463899703026,-0.039568560850733195,-0.4742747406201918,-0.044070898846508215,0.07116561753420826,0.06024307147444604,-0.40959693846740075,0.0039436211518690525,0.17281709776795057,0.04267841957745365,-0.4133918220346981,0.011709165481246089,-0.3076857257565318,-0.04728237147020886,-0.43765167092282203,-0.04835214803618475,-0.129602212805212,-0.03663522096946735,-0.42135146667374407,-0.06095408189551112,-0.10739348114771088,-0.23126074981608113,-0.25026185231157266,-0.13743313943186866,-0.07802361466755414,-0.39775979246637166,-0.2922632614506962,-0.14822928357368143,-0.20153606351365802,-0.4268852086270092,-0.45359305185651977,-0.1337401851753298,-0.32758407438233705,-0.4989503146420291,-0.41,-0.15039607970468818,-0.15538420973628284,-0.39850713596656945,-0.41529513328449946,-0.1389035512151909,-0.13347510914048286,-0.51,-0.41289586440694787,-0.13250358614085928,-0.17177813809199197,-0.51,-0.4189195201318274,-0.14070044232898368,-0.61,-0.51,-0.41,-0.09556459541390579,-0.10231023505561399,0.36195210678303025,-0.44071649939339935,-0.023629671337796067,-0.1432639303071121,-0.10755812951176047,-0.5285064951210019,-0.09194232931221659,-0.21472220720528112,-0.06013349875894956,-0.4902777138052756,-0.10751733482614284,-0.16919335437675667,-0.12363111966707142,-0.4166311092527494,-0.10757952481342256,0.014224356990270016,0.1306274222084222,-0.42425526541101155,-0.048513882835727065,-0.18070176805343352,-0.09564564049550169,-0.44528824737864486,-0.09457248734981785,-0.11975248447044719,-0.0445575059603843,-0.43017435778156826,-0.08370375714633695,-0.0972031657236524,-0.057067232395679374,-0.41,-0.056302080944242154,-0.2635684268269656,-0.44571264870283195,-0.43799468701147737,-0.15019743431552318,-0.10195365361459655,-0.5108088749999999,-0.41,-0.06870246751711512,-0.17964874912434275,-0.4890268570834906,-0.42113749999999994,-0.142356227200341,-0.09259997647341421,-0.51,-0.41,-0.10642784713571843,-0.15093333530567832,-0.5114625,-0.4532000148932025,-0.13673981251576606,-0.11,0,0,0,-0.11,-0.5114625,-0.41,-0.018702281901025204,-0.11788155893578142,-0.5328623715002062,-0.4565971619111109,-0.1394314426225898,-0.11,0.4318378156795812,-0.41,-0.01,-1.01,0.3167104248313132,-0.41,-0.01,-0.11,0.259844921008057,-0.41,-0.01,-1.01,0.03338136145204742,-0.41,-0.01,-0.18774660958626105,0.28899069378646436,-0.41,-0.03142229988743173,-0.11,0.14408349034553858,-0.41,-0.01,-0.61,-0.01,-0.41,-0.01,-1.01,-0.01,-0.41,0,-0.21708029417162258,-0.51,-0.375350471187909,-0.14948358331283818,-0.61,-0.51,-0.3833788414661539,-0.10399424926476283,-0.11,-0.51,-0.41,-0.11480140712839265,-1.01,-0.51,0,0,-0.11,-0.51,-0.41,-0.06849097253163564,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.41,0,0,0,0,0,-0.11,0.23589341914792827,-0.41,-0.035859763463362955,-0.11,-0.09313828308511535,-0.41,-0.09807958263709353,-0.11,-0.022780563606061545,-0.41,-0.04641780469769961,-0.11,-0.01,0,0,-0.11,0.03941052559313288,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.01,-0.41,-0.01,-0.11,-0.022958145115898963,-0.41,-0.01,-0.11,-0.5088237052137432,-0.41,-0.10318209972624141,-0.61,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,-0.03935748342584412,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,0.23343934446331077,-0.41,-0.01,0,0,0,0,-0.11,0.03446674486755903,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-1.01,0.08554491391813782,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.12473477513580838,-0.4935280369252331,-0.41,-0.07573870244198375,-0.11,-0.51,-0.41,-0.021671708023577874,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,-0.04234185185146546,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.01,-0.11,-0.048899125,-0.41,-0.053029123377595376,-0.11,0,0,0,-0.11,0,0,0,-0.61,-0.01,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,-1.01,-0.51,0,0,-1.01,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0.3464625128120635,0.4534483215432944,0.5287425694663306,-0.12779315239458086,0.32700659175150043,0.4182490925919935,0.5292137935239898,-0.13013529479842745,0.28842265021182123,0.46221516496021664,0.5177798256897338,-0.12937086554511382,0.17870126628182967,0.26924084213214483,0.5238273177761668,-0.17946080524737928,0.3091686463944886,0.44779284792793267,0.5315504342401948,-0.12707262880963088,0.270320372886704,0.2673833197112106,0.5398205935074915,-0.2514110598205948,0.13526788036795337,0.2907059459501704,0.514838047736745,-0.24051742428572653,-0.36566693473096606,0.11402600281106648,0.4999448178528357,-0.4713752326842833,0.3281807638539078,-0.051275734276391385,0.5373435396335023,-0.14985044318192575,0.15190637437840532,-0.16785412639769604,0.5210706875078652,-0.2584976388617782,0.1962939513709166,-0.09300394027709924,0.5340604282666214,-0.16734262621215046,0.09288100586391573,-0.354606845746351,0.535927396425652,-0.3552212474238447,0.2082845336316929,-0.16408275682304485,0.5477657619160918,-0.26436492838738396,-0.019023184850130832,-0.3839347982627747,0.5190902450715913,-0.4529988096510246,0.09576400148514214,-0.4104759161071791,0.5195002341573716,-0.4059169350648053,-0.06938582813433085,-0.49651237499999995,0.5074512686386478,0,0.28912715762570607,0.3814112357477098,0.47475936029480725,-0.14980054027641648,0.10250728295682726,0.31622847876254045,0.4378567739516234,-0.21511631190837777,0.1565117433379658,0.33497354232427357,0.5349123095840207,-0.18687368156513615,-0.09545942609617511,0.18446001572353712,0.5251502496496743,-0.43927543533414104,0.08328317342080568,0.3569475663257576,0.5438120928622999,-0.16334881518712097,-0.3193762247500963,0.10254634728489874,0.47739610641537056,0,0.006175997080587962,0.24034227118090984,0.5098072625073349,-0.3687517107377186,-0.08403425498655939,0.02301359094737071,0.5306084093178413,-0.40978595407824564,-0.05258375447275152,-0.2953289368514746,0.5177388350009808,-0.43725955889282403,-0.09865136598709623,-0.40204915524464174,0.5243626359440556,-0.43235687220934327,-0.05537064902446506,-0.3989329238938478,0.5306208459125694,-0.4596015942756662,-0.13524755410450448,-0.459772138278428,0.532427166253088,-0.51,-0.04401468168427251,-0.45409351023730554,0.5390883098330435,-0.4531412351200792,-0.042733147087898216,-0.5028414021849003,0.5401338414694844,-0.51,-0.44380529891586695,-0.5114625,0.5297201668264049,-0.51,-0.15228632078124998,-0.5114469611370536,0.4136061565706075,-0.51,0.24069948936979876,0.4003254731660277,0.5269495813635761,-0.1788181753452356,0.1925200128787468,0.31861375456571883,0.5395527200018817,-0.2376953187601712,0.11444021756570388,0.14567464723022028,0.5174413521813488,-0.23050629164210729,-0.0063703491249881734,0.04538369843714142,0.5092143890300921,-0.45959967013842074,0.19730538017578456,0.23970508944854582,0.5257018283032969,-0.253124424581773,0.08763561316008467,0.06547386605341077,0.5199619909585508,-0.4524515053183154,-0.06412809272093978,0.07703688531820245,0.2553796143970181,-0.42992021575962724,-0.10239139069482675,0.025514788972916563,0.4912748979320359,0,0.22777460589554527,-0.1940275899741426,0.5203248533312675,-0.3843642465361864,-0.052399718143356006,-0.34954514928424496,0.5380704900059405,-0.47141866166741664,-0.03127263821946943,-0.42329293833928106,0.5171685019398155,0,-0.07218268634773539,-0.51,0.5356539128185562,-0.48430301533192593,0.008792012116814144,-0.3528053730425157,0.3100228835241912,-0.4970785017815499,-0.0692756158089321,-0.49698636378930844,0.5188141298533562,-0.51,-0.51,-0.4604628591441136,0.5276310379390492,-0.51,-0.11,0,0.4920663485647974,0,0.22370897004215123,0.19472256315195405,0.4905715296766165,-0.512136375,0.01861039133274167,0.09896110280230275,0.5342932207683896,-0.45212628227814045,-0.40370609934835705,0.08713503087142188,0.5039440263626376,-0.4693354750685827,-0.08924684465111742,-0.01,0.49162069937605024,-0.51,0.00798995587554114,0.10978499185726802,0.4986112858676324,-0.510135,-0.0663882286155344,0.02435463318444689,0.5301816605808156,0,-0.09314737853980368,0.023995966923238195,0.4909340096068979,-0.5100888547066013,-0.1106975,-0.01,0.47130247177770784,-0.51,-0.08100566637677148,-0.4957971448261822,0.5420652885053637,-0.51,-0.11,-0.5106975,0.5025310529262841,-0.51,-0.07830542326812423,-0.51,0.50961918784689,-0.51,-0.11,-0.51,0.4133210994544211,0,-0.13096430064129289,-0.51,0.5054870519104665,0,-0.11,-0.51,0.39593217918631674,0,-0.11,-0.5077725584937234,0.396885424761436,-0.51,-0.61,-0.51,0.39487824023944634,0,-0.171746994379302,0.11865950318977853,0.5325471458573955,-0.54791518207133,-0.11,0.03444667905610652,0.533975481572594,-0.51,-0.11,-0.01,0.5367676599973624,-0.526380862785097,-0.07706848212312573,-0.01,0.5010994383330784,0,-0.6102070300052065,0.03669275386560806,0.5284775005895103,0,-0.11,-0.01,0.4678117044917314,0,-0.8833617630173056,-0.01,0.30145861952565417,0,-1.01,-0.01,0,0,-0.16034544463976078,-0.4666927528407427,0.5183303234157544,-0.51,-0.9280371707009194,-0.44899653811039325,0.511049000896764,-0.51,-0.11,-0.46543761986827636,0.5176452915458024,0,-0.11,-0.4724304233585283,0.4087124934866006,0,-0.17693690397955317,-0.51,0.44477572186691605,0,-0.11,-0.51,0.2875907776866374,0,-0.11,-0.51,0.28900192622826015,0,-0.11,-0.51,0,0,-0.20538954762096567,0.029722858403551017,0.5171055673222171,0,-0.11,-0.023836405923556077,0.5285109386214949,-0.51,-0.11,-0.01,0.5017661778406334,-0.51,-1.01,-0.01,0.45726159881971495,-0.51,-0.1749506657965498,-0.01,0.4168530115031949,0,-0.11,-0.01,0.2627259722264758,0,-0.11,-0.01,0.2716859395420471,0,-0.11,-0.01,0.09,0,-0.11,-0.4735038081933625,0.4493580198264236,0,-0.11,-0.51,0.42153597356281575,0,-0.11,-0.51,0.3342382872090872,-0.51,-0.11,-0.51,0.20191434440413647,-0.51,-0.11,-0.51,0.3252489303611346,0,-0.11,-0.51,0.1700604345043666,0,-0.11,-0.51,0.1300237381466151,0,0,0,0,-0.51,-0.16033074418982463,0.03260618464310611,0.5410165508176084,-0.51,-0.07150693950171667,-0.01,0.46272099363033853,-0.51,-1.01,0.02972057463373294,0.4694855712944976,-0.51,-0.11,-0.01,0.17370753052344146,0,-0.11,-0.01,0.437127197244139,0,-1.01,-0.01,0.13738376057349402,0,-0.11,-0.01,0.27119944629595116,0,-0.11,-0.01,0,0,-0.11,-0.51,0.492721533211424,0,-0.5627742812127194,-0.51,0.3120048455238172,0,-0.11,-0.51,0.17684622503236627,0,-0.11,-0.51,0.13331338188531797,0,-0.11,-0.51,0.24882337947275773,0,-0.11,-0.51,0.17722341532014996,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.07713880286389294,0.026524413429699384,0.45044168546378016,-0.51,-1.01,-0.01,0.2701354839164864,0,-0.11,-0.01,0.2757524989842902,0,-0.11,-0.01,0.19245510652372433,0,-0.11,0,0.09,0,-0.11,-0.01,0.20525471030449838,0,-0.11,-0.01,0,0,0,0,0,0,-1.01,-0.51,0.3268317555713984,0,-1.01,-0.51,0.30744377803518297,0,-0.61,-0.51,0.12662959509653127,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,-0.11,-0.51,0.12833784221608616,0,-0.61,-0.51,0.09,0,-0.61,-1.01,0.1860138176371033,-0.51,0.19871604657697203,0.4582791903406619,0.02879638430940161,-0.21042227705851424,0.12937357560720136,0.45244530337623434,-0.10917896267920127,-0.24229556194372845,0.06694469682235321,0.45493622960600305,-0.07561177919496036,-0.2890980438724159,-0.06717558229345431,0.4507583099623273,-0.3679916114514993,-0.47957908284923007,0.13687608490118452,0.45660236678641847,-0.06843057523508347,-0.3100967490594173,-0.07916084263189938,0.44255945853616957,-0.2546340698194865,-0.4274623419287212,-0.08721221257981591,0.4387571950045621,-0.25755641894099673,-0.4501581577843595,-0.07703486147680219,0.4097403213807576,-0.41,-0.51,-0.4118640344494961,-0.4533829236928279,0.021705316598774865,-0.5352044833558436,-0.472043392440256,-0.51,0.013624246825743836,-0.512521416448382,-0.4293659583553886,-0.47682209919975715,0.015432152518754225,-0.5245397707344993,-0.3945062609359917,-0.4292749665627046,-0.09602153834507281,-0.5425012562188785,-0.5578545477263404,-0.4043828817280328,-0.008761423746307154,-0.51,-0.33485290788590927,-0.51,-0.02833584772665194,-0.5206911394527293,-0.3507965100530146,-0.5013230173904598,-0.1831975676539557,-0.5259791474001481,-0.13461312784058913,-0.51,-0.41,-0.5224613175177139,0.12558980276426485,0.3858798350057237,-0.1667008062901247,-0.5083987860609367,-0.1964284789610503,-0.12162370799021902,0.0007271820379979605,-0.5326021557187466,-0.11140145073298155,-0.06074530180271946,-0.08798073151948027,-0.49609656897278176,-0.26203693344259077,-0.09863780830708896,-0.1753413736074916,-0.5216948486726154,-0.09835703551865396,0.026795698127883582,-0.21014114408718387,-0.5154924858517667,-0.38124769525364954,-0.14703282488582667,-0.18383986484487935,-0.5119133446824996,-0.3240552055850795,-0.015017655110425014,-0.23980477908101006,-0.4951109834997455,-0.14231622693459214,-0.12662238516430174,-0.28741355463135443,-0.48595855590836445,-0.3829160481630713,-0.49523460737631814,0.014553893012164367,-0.5141778411966609,-0.37433789958325686,-0.5320155199865572,-0.003778393468439424,-0.510135,-0.1388597245029642,-0.42962503345546704,-0.19188176750781388,-0.5328974970120045,-0.09722194982857678,-0.51,-0.3291793276862878,-0.5202609679292309,-0.33900984557283803,-0.5144659001202828,-0.12562378765074794,-0.5256306459000456,-0.11471649525086977,-0.51070875,-0.37868325050471774,-0.51,-0.19378181758993024,-0.51137046375,-0.38720122936894413,-0.5183973876446756,-0.11,-0.51,-0.41,-0.51,-0.0026244148466305454,0.34917044419019805,-0.09539516436708649,-0.4753608122973006,-0.047898130097853334,0.3774581454752345,-0.2966277958935714,-0.48762689290538086,0.0038698097083028973,0.13084168727714354,-0.2433699618752137,-0.4673479639006392,-0.10459418682342611,-0.009102925167415118,-0.3194537243133885,-0.5032761309531165,0.016798648892905475,0.16166086146150166,-0.09831057511800011,-0.46777665609230856,-0.0726304335344275,0.10377482190702919,-0.41,-0.497371063294915,-0.05079887343545454,0.013745716010287309,-0.3948600389763003,-0.49863819745188964,-0.16012375,-0.07168772424057106,-0.41,-0.5064503448317875,-0.39117357692015714,-0.4732235735065075,0.003405452695892699,-0.51,-0.31608294111092355,-0.44413146019095834,-0.1392454835157665,-0.5261989055587752,-0.3507807070446879,-0.49507131916384506,-0.13486994639607325,-0.51,-0.14745519806363588,-0.51,-0.3296401554616374,-0.5217355975152471,-0.13523418367406556,-0.4532627117796031,-0.4106975,-0.5281035025844095,-0.16028644187402946,-0.4824419095059435,-0.41,-0.51,-0.4539151871611749,-0.5110743925014603,-0.33944040710384993,-0.51,-0.11,-0.51,-0.41,0,-0.04750244985016962,0.3319958151361307,-0.2745509913656703,-0.5188517386637207,-0.23414384327093954,-0.14446629152461102,-0.13089724653129892,-0.5239648788674894,-0.28960487042808747,-0.046970668953888864,-0.2624989901329515,-0.5235930392481865,-0.17012588732443265,-0.1514404787084611,-0.37179837249864545,-0.525730191003107,-0.4662150542284752,0.08891429614194615,-0.2653050454385303,-0.5137873653100514,-0.12878248021558286,-0.1283385743262239,-0.3347499133950924,-0.5204817597477374,-0.11,-0.022871973815128333,-0.41,-0.51,-0.1551427983302791,-0.1231209701015785,-0.3931781347080173,-0.51,-0.4166988953476498,-0.51,-0.0708348017750673,-0.51,-0.1670779293332615,-0.5194177691701944,-0.33417100870537364,-0.5190914318042078,-0.11547335558469654,-0.51,-0.39882703772882455,-0.51,-0.08237350030900559,-0.51,-0.41,-0.5129897859375,-0.1313794241660224,-0.51012375,-0.41,-0.51,-0.14961013075630192,-0.51,-0.41,-0.51,-0.51,-0.51,-0.41,0,-0.17456553582536066,-0.5785339606958319,-0.39459934951462383,-0.51,-0.07403520461506832,0.45201784981607507,-0.41,-0.52123787671875,-0.92059625,0.33639947676040627,-0.41,-0.51,-0.11,0.39245940453764444,-0.41,-0.51,-0.11,0.23680134616629347,-0.41,-0.51,-0.11,0.3408654713826996,-0.41,0,-0.61,0.07606167645195266,-0.41,-0.51,-0.08099251542072468,-0.01,-0.41,0,-0.11,-0.01,0,0,-1.01,-0.51,-0.06231814202488175,-0.5219883109608127,-0.4104735571816785,-0.4995400589373983,-0.16534325865838054,-0.51,-0.41848633988514083,-0.51,-0.2896795338914919,-0.51,-0.11,-0.51,-0.41,0,-1.01,-0.51,-0.326446323939074,-0.51,-0.1156081118186305,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.11,0.32802431984030567,-0.41,-0.5384322643635526,-0.11,-0.09408400197703345,-0.41,-0.5336039446708621,-0.61,0.06942989112593634,-0.41,-0.51,-0.61,-0.05136185217225693,-0.37996827107257186,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.04574834356542076,-0.41,-0.51,-1.01,-0.026666259461358664,-0.41,-0.51,-0.11,-0.040253623018750004,-0.41,-0.51,-0.5065058438394796,-0.51,-0.2309552758091849,-0.51,-0.11,-0.51,-0.41,-0.5106975,-0.11,-0.51,-0.41,0,-0.11,0,0,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,-0.11,0.2266899257996359,-0.41,-0.51,-0.61,0.018936936461102984,-0.41,-0.51,-1.01,0.050313829318306955,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-1.01,-0.51,-0.234881206670168,-0.51,-0.11,-0.51,-0.41,0,-0.11772070127615608,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0.026456041540093504,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-1.01,-0.012025000000000001,-0.41,-0.51,-1.01,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0.30345511814217435,0.32610526021645236,0.4416811824926241,-0.24834711469681692,0.19815578465983574,0.31481298529301727,0.4698186596689417,-0.34063580028488244,0.22339317048779528,0.25557316984215234,0.4524668592779877,-0.2867248229600782,0.03360446460231255,0.06696923547128564,0.4604770708096939,-0.48273568499429187,0.20006731270848194,0.20039787796473982,0.3532582963585019,-0.27048485868413796,0.08115049379110592,0.1367165251084682,0.3624120044524351,-0.4144047817235902,0.0060601672466241985,0.006306081810012439,0.42307156958427417,-0.4664858311097905,-0.06656057093294854,0.02684500365690634,0.34552712948387737,-0.45832429035084377,0.2219587599191241,-0.24845566614940925,0.46451451312141145,-0.42503946065757237,0.08364661313193411,-0.34502336042004156,0.4297823253773771,-0.4695466183686929,-0.027025073077622884,-0.3354839260314964,0.42132756622217615,-0.4897204269121169,-0.10077238405010888,-0.4924114763318646,0.4526982047046645,-0.51,0.04554820152502413,-0.399006312997548,0.3749335588053434,-0.44707210734510333,0.0048029448619444776,-0.50290125,0.36349101394394157,-0.51,0.007681019749256605,-0.50239819640625,0.3409281722556044,-0.493682588330833,-0.11,-0.51,0.3085843872800009,0,0.12792118414564566,0.37864361816602554,0.05592110206948914,-0.4993895717670761,-0.09083745981673508,-0.06100012406749911,0.08573107268525175,-0.48552125047243094,-0.10855945291812179,-0.015598532475331862,0.07980276408294688,-0.5015855312632056,-0.10069935782274228,-0.06422296950374583,0.08234045454400267,-0.5044875132154765,0.030620190078843375,0.1193995329219572,0.010340664838803288,-0.4820070962996531,-0.09798878545512196,-0.07806122522293195,0.03931333222591522,-0.493342992793107,-0.23763416906870402,0.01373304251386736,-0.03214525924752095,-0.5101055165756044,-0.07099838375329959,-0.09556586860249754,-0.006887088070141831,-0.498122146521638,-0.06450971411567935,-0.4418194718829861,0.08243268614979657,-0.51,-0.0760540773172553,-0.5169716144848935,0.10097065745225421,-0.512025,-0.035701566529578434,-0.4934466489594674,0.029936899208527292,-0.5168905874578853,-0.11,-0.51,0.051450187233509026,-0.5128211643140349,-0.11,-0.51,0.0511328243939168,-0.51,-0.11,-0.51,-0.0583829917899496,-0.5102565,-0.08094158781856581,-0.4930223514551336,0.007309885562688408,-0.51,-0.11,-0.51012375,0.04074073603064846,0,0.17391634764927844,0.23750747675738487,0.3692451494315551,-0.48450656785518886,0.07641920508602763,0.09567508083918203,0.3415752137603012,-0.49020785956925217,0.011702676826144186,0.03682786668987594,0.07207063813308133,-0.45716240677777664,-0.06715430171657116,-0.0238761448292604,0.07149078320967528,-0.5035134887773997,0.05245486829562165,0.055142454974378516,0.070377680260649,-0.48628396773536436,-0.01685724245248154,-0.002368313565657559,0.0518032245547473,-0.47658120800252735,0.008532568476367332,0.11510839378855195,-0.0038443526964375453,-0.5064289455714851,-0.07446279085526131,-0.039653360583662985,-0.010344982152049008,-0.51,-0.06480353256745919,-0.46752427886218795,0.3933386790622598,-0.51218152828125,-0.002291651464571637,-0.49139046917397816,0.33612494966979056,-0.5130375,-0.03201228856665861,-0.5048889521317049,0.05565958799921617,-0.5117436606572776,-0.0854834730259208,-0.50290125,0.02469808685057133,-0.51,-0.06800111967211077,-0.48713890848648006,0.07911358183977528,0,-0.11,-0.50290125,0.0801757824662481,0,-0.11,-0.51,0.04226582016625752,-0.5125875,-0.11,-0.51,0.0643226137423612,0,-0.05847699293637691,0.3453131367763669,-0.0022633102760651162,-0.5084601000774356,0.07342329456164633,-0.06171958050465665,0.003974048917423704,-0.5125799941402545,-0.05173562878038767,0.00019705030415018837,-0.057516894485860476,-0.5148030833383568,-0.0817529604607989,-0.017540906629777756,0.017588790543291627,-0.51,-0.36577094973784563,0.08500698382986424,-0.023023338024878683,-0.5124598454902997,-0.18577766524412268,-0.07364317843760095,-0.08015884585997003,-0.5144458841772767,-0.1289197749587686,-0.08912276700498688,-0.0787479738778852,-0.5104289338020084,-0.11,-0.01950463951645378,-0.019254248604741626,-0.51,-0.1041420499472124,-0.44159555223580926,0.05234845219037845,-0.5153067267829008,-0.11,-0.51,0.04257405104542131,-0.51,-0.11,-0.5057770568761848,-0.054675155247933725,-0.51,-0.11,-0.51,-0.030583881306679394,-0.511854950876021,-0.11,-0.51,0.04777126124860225,0,-0.11,-0.51,0.06609743831840048,0,-0.51,-0.5011789394735664,-0.08746123961091243,-0.51059625,-0.10318270266170289,-0.5165830614948967,-0.07471537585889143,-0.511315125,-0.16921276381391118,0.03615795005719846,0.43566675582770537,-0.51,-0.61,-0.01,0.31895070749532717,-0.51,-0.61,0.035456745772819466,0.40189907119156265,0,-0.11,-0.01,0.1971477371411187,0,-0.5213046481936552,-0.01,0.3957249651030882,0,-0.11,-0.01,0.2108593944354087,0,-0.61,-0.01,0.12274105798892782,0,0,0,0,0,-0.11,-0.51,0.3854629614223545,0,-0.61,-0.51,0.28961468242560384,0,-0.11,-0.51,0.12949410746006948,0,-0.11,-0.51,0.16195605711592614,0,-0.61,-0.51,0.23146076562824938,0,-0.11,-0.51,0.09,0,-0.11,0,0.09,0,-1.01,-0.51,0,0,-0.11,-0.01,0.08493422125828881,-0.51,-0.11,-0.01,0.087662473113586,-0.51,-0.11,-0.01,0.07064659102988599,0,-0.11,-0.01,0.04772065531261664,0,-0.11,-0.004678835270089171,0.05509659226161853,0,-0.11,-0.01,0.09,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,-0.51,0.08196878392133373,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,-0.61,0,0,0,-1.01,-0.5072576898567663,0.09,0,-1.01,-0.51,0.09,0,-1.01,-0.51,0,0,0,0,0,0,-0.61,0.008327858057190015,0.2740924292357985,0,-0.11,-0.01,0.1645014520804182,0,-0.07312881047925236,-0.01,0.07762463423478659,0,-0.11,-0.01,0.07714731199308741,0,-0.11,-0.01,0.07939944336640387,0,-0.11,-0.01,0.09523760385672644,-0.51,-0.11,-0.01,0.09,0,-0.11,-0.01,0.0519302238246668,0,-0.11,-0.51,0.1925298708919889,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.61,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.01,0.0902894656239182,0,-0.11,-0.01,0.09,0,-0.11,-0.01953985356996477,-0.01008304107851312,-0.51,0,0,0,0,-0.61,-0.01,0,0,0,-0.01,0,0,-0.11,-0.01,0.09,0,-0.11,0,0,0,-0.11,-0.51,0.07778980112754064,0,-0.11,-0.51,0.09,-0.51,-1.01,-0.51,0.09,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.07458831080026701,0.4432808510127817,-0.27031136539660394,-0.4337278146839687,0.010240807240060646,0.44129573614571616,-0.3306092108445,-0.5090222519741674,-0.08400700396121975,0.4345874319330249,-0.3119748765017702,-0.5111475,-0.5362404428687058,0.3982475706349818,-0.41,-0.510135,-0.003187221487302397,0.420520228820109,-0.3160710490754087,-0.4605364494323778,-0.11,0.3467185302923671,-0.41,-0.51,-0.08060698844611243,0.22295432701493906,-0.3805036315339372,-0.51,-0.11,0.16919497178772974,-0.41,-0.51,-0.3881086821515211,-0.51,-0.09100313653557673,-0.5160207696102844,-0.3278251522470008,-0.477097905061779,-0.2575684777364612,-0.5164761603991622,-0.4539151871611749,-0.51,-0.15154082052466106,-0.5202431424470932,-0.4259611049942401,-0.51,-0.3138066840683203,-0.51,-0.3948828629534943,-0.4852454530591208,-0.18998134095569935,-0.5334601644697301,-0.15749405088743762,-0.51,-0.40612454036321766,-0.5172522149968173,-0.4914331658508908,-0.51,-0.3270227446100644,-0.5240119143937398,-0.09908817742878182,-0.51,-0.3767029556426534,-0.51,0.04903781010351582,0.3747229190365684,-0.4279337593747638,-0.5177413117757768,-0.18951720151700863,-0.14063102970029281,-0.48241110481919613,-0.5118629949290758,-0.1259050564986705,-0.028933252550189373,-0.46130875167000146,-0.5183865285038691,-0.2802554171227746,-0.1644525137393681,-0.41470520808353706,-0.5047779469522375,-0.05485791197406417,0.10529213502356981,-0.41,-0.5027497545354118,-0.1071222521611309,-0.12792106499386177,-0.41,-0.51,-0.0977861202337019,-0.08959258313086982,-0.4408121682215384,-0.5137539750074294,-0.51,-0.07291967454158184,-0.41,-0.51,-0.34700557452772507,-0.4995768961851547,-0.4858042570404789,-0.5329125911084787,-0.14383694219235502,-0.51115875,-0.41,-0.51,-0.18632800748141295,-0.51059625,-0.41,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.316494237504528,-0.51,-0.41,-0.51,-0.10526922176001892,-0.51012375,-0.41,-0.51,0,0,0,0,0.047140598752716645,0.312904926634634,-0.35796376090736626,-0.5080614507478829,-0.0740446470847404,0.3513268785932713,-0.41306287634375,-0.51,-0.09280600301269888,0.021326502993155708,-0.42105427373148163,-0.513502565803125,-0.40390578136734634,0.013991503797571027,-0.43463044565965486,-0.5130375,-0.5195472781160891,0.13853139706785103,-0.4053113526411529,-0.51012375,-0.07376420949521292,0.12380155323913297,-0.41,-0.5109836251632497,-0.09786658472954333,0.07150241957111539,-0.41,-0.51,-0.11,-0.01,0,0,-0.43242305026307865,-0.51,-0.26289660098137835,-0.51,-0.13949735526348897,-0.4995180033797524,-0.3790882101513948,-0.51,-0.61,-0.51,-0.43706848882688093,-0.51,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.11,0.31650151898543205,-0.41,-0.51,-0.14924728883975366,-0.14478498063863446,-0.44067210341322716,-0.525947550236582,-0.10193093571755092,-0.08478366491382422,-0.440201212214273,-0.51059625,-0.61,-0.10719665369342476,-0.43917979197342316,-0.5154535615257012,-0.11,0.12914154172494596,-0.42512803052123965,-0.512025,-0.11,-0.090805495049234,-0.41,-0.510135,-0.11,-0.07633495905754599,-0.41,-0.51,-0.61,-0.01,-0.41012374999999995,0,-0.11,-0.51,-0.41,-0.51,-0.10924960090516878,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0.3034417980870268,-0.41,-0.51,-0.11,0.07103711364182547,-0.41,-0.51,-1.01,0.10323539541584792,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.61,-0.01,0,0,0,0,0,0,-0.4193335121636679,-0.51,-0.37201468251172853,-0.51,-0.61,-0.51,-0.3374494998003391,-0.51,-0.1183825535261438,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.11707635149395247,-0.51,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.06389850512112338,-0.41,-0.51,-0.11115888921875,-0.03875475569933419,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-1.01,-0.01,-0.41,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.1648526346643414,-0.5106975,-0.41,-0.51,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.004374933092371355,-0.41,-0.51,0,0,0,0,-1.01,-0.01,-0.41,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3557820475336334,0.4310520919498537,0.525268993642984,0.4017166516879038,0.285998674764573,0.41798535354886235,0.5350432067192561,0.40274097627986366,0.26113046301555565,0.4113643249160835,0.5275444845222678,0.3980180171443253,0.26365850610154484,0.428107343020968,0.5324369759573868,0.40493895269882346,0.2448467249566101,0.3283977251759577,0.5149700641242417,0.34653767735576374,0.28215429727892694,0.27947474296430547,0.5282593644002627,0.28822855181504575,0.30458108717570553,0.3581395247441185,0.5460224919237696,0.36166643134843474,0.17890356077196296,0.2492182176108099,0.5328812578435255,0.2620350652916922,0.3238869218046426,-0.07316642686983975,0.5520195941148093,0.37194232856023424,0.31010956229165276,-0.062419992170979766,0.5079077384419138,0.40856303468796384,0.2620674516847027,-0.06179888281293982,0.5384610779553982,0.3953465147491966,0.24746551580789847,-0.2717543486320997,0.5117212634730989,0.32012042094752446,0.300222448995346,-0.10928414711961641,0.5450281691775543,0.3092915682494368,0.203210515996506,-0.2585138401900009,0.5421185248701323,0.3424297486144695,0.27002770201899906,-0.3006951116642612,0.5321244311941067,0.29462708038648155,0.0496119493067525,-0.467424282533375,0.5457418845347898,0.06896339559196292,0.26452376679795253,0.3765950586772789,0.515446195563379,0.3809709070474268,0.11879441696934782,0.347186783005163,0.5370931487402307,0.3965181773267816,0.18453625463173048,0.390730811190387,0.525128999060092,0.3991612965010917,0.1956187506970103,0.2890584616162611,0.5327703903033799,0.3376477803674422,0.2865056422214578,0.31313693806273685,0.34180013483989985,0.3988384667154415,0.02532526134040468,0.2555233072074027,0.53011708987353,0.36948588231850454,0.09301072631542347,0.2996541576385966,0.5283810306350231,0.33369077852217055,-0.022779061211716987,0.04568765872030501,0.531668068779808,0.10185511317968773,0.2876501696178789,-0.13523234941218729,0.525918262798344,0.38996472625783024,0.21047073630395957,-0.2364376673726277,0.5244815586120273,0.2501257615757851,0.22799871352762352,-0.2514170452444431,0.5100901736089343,0.2409806027423089,-0.2251651288868019,-0.512025,0.5310665473827072,0.06645822111078967,0.14382029020196396,-0.30988380155072626,0.5459464909952993,0.22451247105294148,0.0954024855616173,-0.4794750209035915,0.5218825535029024,0.17889165343538546,-0.3821947759464265,-0.47926350300943643,0.516894261339186,0,-0.11,-0.507209709084849,0.5435772168868386,-0.01,0.25284811039062155,0.3551306186911807,0.5097744944730392,0.3570988262760853,0.2624966754051548,0.3623623064857534,0.496677653049582,0.3447167210239362,0.1577490288928436,0.20801331328007072,0.5015533207375441,0.2630925085889442,0.2316794030745671,0.24703702948064948,0.22592015955091085,0.2485602271828023,0.15685334207684934,0.2998008385375451,0.491743589846286,0.3056142131849545,0.18646535102010897,0.27759933151849353,0.2375253059937379,0.20197090630456008,0.17323684224423044,0.3122327654334559,0.23806480745673203,0.1970947618714956,-0.32752327013250926,0.07204564581611064,0.5286261174589729,0.130162223801823,0.25719648020532015,-0.1360558168334717,0.5285996230478537,0.28316133801315035,0.23529956332475616,-0.22984084251794284,0.5279756806774698,0.351299093811076,0.2521246644875021,-0.2794416066730906,0.496664627669587,0.26491124301381347,-0.024249940459546843,-0.44418533298149954,0.536270022338433,0.06740542293341353,0.18828613032199767,-0.31732031489275714,0.5179437325201882,0.2627241243841654,0.059301158272615506,-0.4232315227931031,0.5258015054626581,0.14968085655979727,0.017726107605068972,-0.51,0.5097989076476085,0.10169976340332432,-0.11,-0.51,0.5218527515474328,-0.01,0.30545369011440604,0.3040871329270163,0.51718379509481,0.3770329531443989,0.1749488483583142,0.179630327117772,0.5304530072350778,0.2102848943801786,0.10575761428064769,0.24528140062229142,0.49288103103301184,0.3131412615711594,0.007982945369614004,0.04974776184547665,0.5159943816984716,0.19117318779426448,0.22214738956399435,0.2121298028013946,0.27259664990083843,0.3876617738209401,-0.052159231059745216,0.02014590514401244,0.5119980670624366,0.06935358664782058,-0.026257018761395592,0.10736882058139206,0.5142570695957821,0.15811541505542803,-0.61,0.041926315444517824,0.47088355418598327,-0.01,0.1333758907611297,-0.3863400410249915,0.32264612655757235,0.37197896613404857,-0.06323926468545016,-0.51,0.4764863818841179,0.21969973043236002,0.01360153121806914,-0.45705123431790823,0.43901260725767655,0.06734525796198601,-0.07546549086677998,-0.51,0.4934631661073496,0,-0.0497885173468639,-0.43617645554143303,0.46726452819871206,-0.01,-0.02382698192511605,-0.5026797003954586,0.46602125083058055,-0.01,-0.5437030475340471,-0.51,0.4977015413239121,0,-0.062327626810596545,-0.4964402813487925,0.37793429506317544,0.028671953187420947,-0.13301274271328398,0.31544290814082165,0.50017067749275,0.3162336208239378,-0.13800837138139638,0.07624919531192922,0.5378610659693241,0.030209946821972235,-0.16472763389935297,0.14785738264112508,0.5282199939186081,0.1841075000454878,-0.11,0.06940746925729868,0.5422639571020609,0.03160825393685413,-0.11101170465365832,0.1663019580842645,0.4556778153730229,0.10166025329933874,-0.07078877634665204,0.03138606960168829,0.5332375812428445,0.06793150956968758,-0.07108325081576478,-0.01,0.487158400396025,0,-0.09660372370279141,-0.01,0.36842203363017684,0,-0.07903229925891223,-0.4256604316365508,0.5212988654042056,0.02956456313564576,-0.14525085627733048,-0.46425907174510556,0.5217668532245585,0,-0.11,-0.51,0.5412787061251423,-0.01,-1.01,-0.51,0.4581961153215936,0,-0.0709151124568136,-0.51,0.531972677529646,0,-0.11,-0.4816020993991469,0.42152767466127766,0,-0.11,-0.51,0.35196987354670667,0,-0.11,-0.49195354226537963,0.1360499216473618,0,-0.07510571013242602,0.1497592701552953,0.5323939900418282,0.1549902306895738,-0.5370934137745317,-0.01083293887851586,0.5383532603435299,-0.01,-0.1618759007530341,0.03664406215262048,0.5253376302304733,0,-0.09826124624046935,-0.01,0.4835047058345194,0.0302349927150551,-0.1585213657032332,-0.014563935427543397,0.5425384260792245,-0.01,-1.01,-0.01,0.39996509898370103,0,-0.5205413198537354,-0.01,0.5027556900008721,0,-0.11,-0.01,0.21711092423383593,0,-0.11,-0.4376668367284602,0.5160062222200237,0.06588988241585153,-0.11,-0.51,0.48163623757418095,-0.01,-0.11,-0.5042385558638909,0.4151757897155378,0,-0.11,-0.51,0.2764618051654671,0,-0.11540523810111625,-0.51,0.423975095373765,0,-0.11,-0.51,0.1737261673775175,0,-0.11,-0.51,0.1776110788654255,0,0,0,0,0,-0.11,-0.01,0.5105190725430188,0,-1.01,0.03035698245332137,0.504219962584317,-0.01,-0.13164465652639828,0.05136524137655765,0.35602667300092294,0,-0.61,-0.01,0.4506509802448692,-0.01,-0.11,0.013726487788097265,0.34093370772813514,0,-0.11,0.027654791513788336,0.4559591988080785,0,-0.11,-0.01,0.39640407191766375,-0.01,-0.11,-0.01,0.20082041791433342,0,-0.11,-0.51,0.40978676273947695,-0.01,-0.11,-0.4356513222862568,0.43580672011146226,-0.01,-0.23877118314979923,-0.51,0.3935585351577167,0,-0.11,-0.51,0.17754499800919332,0,-0.61,-0.51,0.4647791806464263,0,-0.11,-0.51,0.38398179892856676,0,-1.01,-0.51,0.20863468791708023,0,-0.61,-0.51,0.12732499684214538,0,-1.01,0.026301668723563126,0.5083288467688233,-0.01,-0.11,-0.01,0.4366011154574186,0,0,0,0.42500593632561806,0,-0.11,-0.02623601767723195,0.17725116915970174,0,-0.11,-0.01,0.44877238041019846,0,-0.11,-0.01,0.21549828778490882,0,-0.61,-0.01,0.14469718419018718,0,-0.61,0,0,0,-0.11,-0.4933768460985201,0.39137564834294924,0,-0.11,-0.51,0.21813646669740008,0,-0.61,-0.51,0.09,0,0,0,0,0,-0.11,-0.51,0.17849582777803488,0,-0.61,-0.51,0,0,-1.01,-0.51,0.09,0,-0.11,-1.01,0.14169485467101892,0,0.24818715937848035,0.46307504814021927,0.007670595791621059,0.3284675975362408,0.26902868743634606,0.4552008342342527,0.02533425695359646,0.3384824265748937,0.18276770506166198,0.46153636374717366,0.007124130067817201,0.3334161428015387,0.14934216323171437,0.44914743983948097,-0.157104878199597,0.27824243644629365,0.22276296295948186,0.45114534206965373,-0.007670484619606336,0.3318491596755718,0.17852098008058304,0.42750026874386704,-0.11631685911432736,0.25141264683209685,0.20222405366055715,0.40963893471330953,-0.1056959400367032,0.23357251002576762,-0.07180122810794447,0.42290581526448384,-0.31734701118535985,0.1392734188045418,0.19731877688782365,-0.07800204723963537,-0.035355037972649585,0.33564260976832455,0.13585705488709388,-0.2869902812072677,-0.11443537887038917,0.35453282730864477,0.07914566657547253,-0.1995129652794916,-0.18474479935429794,0.31010266029129346,-0.07900031418102456,-0.46977421811038506,-0.2462689502153869,0.3665995537497367,0.030125582834438835,-0.32158290971518266,-0.25295564743817517,0.32558060391950633,-0.07262201433416329,-0.4278214362497958,-0.2641077781475288,0.36547821633379474,-0.07356402018032032,-0.39435678167638016,-0.2812275326434364,0.3602646178965114,-0.5225092305280342,-0.51,-0.3272824167729561,0.3598957367478818,0.2116723733170521,0.3927469751798896,-0.012235653312441079,0.31990593685836677,0.09509847067139288,0.046346761149883134,-0.07858824415069747,0.3127944634957256,0.12802411004463077,0.12361229651191363,-0.12299392153688048,0.3519211131853505,-0.0990016926198475,0.02021777040285368,-0.22138601743418224,0.34721967686646366,0.01004323645263075,0.1144783910562896,-0.16859497383513508,0.3081450432432458,-0.40375300581247703,0.020718387490175624,-0.281416225644672,0.29841712453012326,-0.04866467630160675,0.015228689345055172,-0.3485427422399412,0.3270456244337413,-0.08331381015801756,0.002772392786944914,-0.3556369853226933,0.33639591699345767,0.09797548311162,-0.3572905681383728,-0.19702245083873884,0.3725774138748641,-0.11551878615709152,-0.4979449687830365,-0.21616246253870006,0.3737782012323778,-0.07882224120902623,-0.508123864884954,-0.38604299697476224,0.37819201367550154,-0.08127788408148304,-0.5144850291152232,-0.3650616277729639,0.37267109078184246,-0.36353674386038815,-0.48945109938068315,-0.3242188111388778,0.343213609377555,-0.07363044860584586,-0.51,-0.41,0.363249444412603,-0.11,-0.51,-0.41,0.3649854586644601,-0.4466258561358331,-0.5095239240950722,-0.41,0.2960749326020305,0.2481125367764327,0.26401806167207026,0.008894512205078435,0.3716858198115441,-0.12058248665225524,0.23556899588251579,-0.12945636253229537,0.36085819402099545,0.10304824781419332,0.09350367701277615,-0.2308446013844076,0.3611588778245172,-0.01689832037982713,0.00210580387957068,-0.31476915078231693,0.33503346012538593,0.22212891360153106,0.14596810145609795,-0.21826142084674555,0.35267632095475304,0.10647086610800824,0.09635657565075324,-0.2715443222690156,0.3363510760236422,-0.05899750755301779,0.024105598462573624,-0.3135447185426328,0.36125247548601397,-0.11,-0.0037060042056036527,-0.41,0.35047719497520163,-0.07059897674781315,-0.4116547508977982,-0.24386637099952493,0.3750216850980327,-0.053090435758127504,-0.43189659053208285,-0.276654613861783,0.3688843766297637,-0.03966203270204223,-0.5041565563277743,-0.3184628877609799,0.36406293153510333,-0.11,-0.5059725460928743,-0.3308095822331557,0.3324340017679084,-0.07230222095497169,-0.47936151296037316,-0.38236231168535084,0.35553641028229854,-0.06987936256638451,-0.49256219438786186,-0.3652180171861,0.34351040257771154,-0.07128141008685977,-0.51,-0.3346049135441915,0.2994960476705229,-0.11,-0.51,-0.41,0.2706979970893608,0.15307479809358243,0.19282021242046557,-0.25924801662058256,0.3483653054734051,-0.0660901013912911,0.01493348450888956,-0.3065421385696088,0.3614244245425396,0.04568648037940168,0.009255725812155155,-0.3358528309915697,0.3613321558579648,-0.61,0.003302892845725698,-0.39941603289185174,0.34660921734987116,-0.008405895839906773,0.04796373706880154,-0.3740518241274466,0.3507444959901824,-0.5299663632920282,-0.00763882647812298,-0.41,0.3684761533599658,-0.5229513116009666,-0.013071046289860576,-0.41,0.3455910443562705,-0.11,-0.010025128223625095,-0.41,0.24043395543212015,-0.07510928163133082,-0.51,-0.3672398750837783,0.3613305715710464,-0.10390098858143952,-0.51012375,-0.367822057751617,0.3596584443337185,-0.09984566722345128,-0.51,-0.41,0.34915006394659287,-0.11,-0.51,-0.41,0.22182637859922824,-0.11,-0.5114626518750001,-0.38084598500970124,0.34294409848101115,-0.07111142123424569,-0.51,-0.41,0.16125695328695394,-0.11,-0.51,-0.41,0.2153672289859032,-0.06483357452788434,-0.51,-0.41,0.23648478496486286,-0.11,0.43045252550425356,-0.3456441722765745,0.09606439194772148,-0.11172098150053056,0.44120725813997264,-0.41,0.027152460296394426,-0.13030402984023834,0.44501108427808,-0.41,-0.01,-0.11,0.3199924123656041,-0.41,-0.01,-0.07310656963924023,0.41879019842260845,-0.41,0.025189212797633864,-0.11,0.31249787570258203,-0.41,-0.01,-0.11,0.2142990562012529,-0.41,0.028286326565074384,-0.61,0.03550820079744814,-0.41,-0.01,-0.1726805670478131,-0.48922103607477757,-0.41,0.3451721882912516,-0.61,-0.51,-0.41,0.27320010423466845,-0.11,-0.51,-0.3659305248970357,0.27163412830534317,-0.11,-0.51,-0.41,0.07365347481702335,-0.11,-0.4782674151684059,-0.41,0.13729347626865532,-0.11,-0.4992012046769935,-0.41,0.027930819192820915,-0.11,-0.51,-0.41,0,-1.01113625,0,-0.41,0,-0.11,0.37064632413412957,-0.3408978458910704,-0.01,-1.01,-0.02689679500909188,-0.3646357768289372,0.26504082886907054,-0.1796004818231106,-0.025047284456943666,-0.41,0.27850579898702965,-0.11,-0.01,-0.41,0,-0.11,0.16099307499873472,-0.41,-0.01,-0.11,-0.022464294357192403,-0.41,0.020567261715700974,-0.61,-0.012587500000000001,-0.41,0.23661906587687032,-0.11,-0.01,0,0,-0.11,-0.51,-0.3864382786986863,0.21547161890807628,-0.11,-0.51,-0.41,0.10639759600721888,-0.11,-0.51,-0.41,0.06328173095293445,-0.11,0,0,0,-0.11,-0.51,-0.41,0.025443083326699333,0,0,0,0,-1.01,-0.51,-0.41,0,-0.11,0,0,0,-0.11,-0.010135,-0.41,0.34774715943091167,-0.07368993745872682,0.2744377892609975,-0.41,-0.01,-0.080668558007041,0.027317775855945255,-0.36446624582793596,0.14118094106956297,-0.11,-0.01129103796851818,-0.41,0.08960380029860901,-0.11,-0.010056721994892333,-0.41,0.22972362977660177,-0.11,-0.006967328350213506,-0.41,-0.01,-0.11,0.0382538677367099,-0.41,-0.01,0,0,0,0,-0.14756145138776933,-0.51,-0.41,0.18809939408430099,-0.11,-0.51,-0.41,0.04816732473551221,-0.11,-0.51,-0.41,0.062243492898125016,0,0,0,0,-0.11,-0.51,-0.41,0.11332381873320335,-0.11,-0.51,0,0,-1.01,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.08324181884523016,0.21175848764960203,-0.3779159602564454,-0.01,-0.11,-0.027481898865111945,-0.41,0.10938165540520747,-0.61,-0.012017254339838312,-0.41,0.06797474031386949,-0.11,-0.01,0,0,-0.11,0.03474373709256385,-0.41,-0.01,-0.61,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0.07555605555878181,-0.11,0,0,0,-1.01,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.011260000000000001,-1.01,-0.51,-0.41,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0.30968642971126015,0.38127469830081917,0.46801346560579565,0.3754910888770501,0.3202840479313015,0.3852998261769443,0.47828972824272875,0.38102123292208423,0.21392456520167105,0.42327474099861095,0.46448545724495494,0.3594698819879238,0.2489414767738264,0.24009343446647768,0.4734595320202964,0.20463247041188182,0.23482594415333252,0.23357062705122428,0.47436832810992674,0.24725266064530238,0.17627113217460794,0.27658742288836513,0.3825206098843391,0.2786372182842614,0.20677926692330728,0.20253089591600054,0.23879277768008253,0.369706347897795,-0.12566430367713005,0.011638567967960029,0.4620913948654717,0.030082063205881353,0.2825213155711889,-0.09177215784683859,0.477815798693046,0.32392902049894967,0.2818589770161398,-0.18810770364439833,0.4793668920549755,0.3183047002804858,0.13243253124338927,-0.13800095769231538,0.4541079923890561,0.17104024784850355,0.03556387371584569,-0.439878585575645,0.46493837417845635,0.06276083020562731,0.18712445414994383,-0.25629369684647046,0.2068700932037471,0.265967934242003,0.0990405796224196,-0.43462340525552035,0.4719654043837977,0.08376772191180715,0.03279646865772302,-0.40071904139590064,0.4526284848956541,0.12981639936361675,-0.4224472917253436,-0.4946486565696202,0.4542721252968299,-0.01,0.32933859424752987,0.37736534587634074,0.3580609391254614,0.3261541587953186,0.18972476151876752,0.092207372801238,0.38792437900974497,0.1909717035634784,0.20269376196779365,0.2116174865342692,0.3487039638822953,0.2023817009760403,0.008981569226720998,0.03665905812760691,0.37617240758127435,0.09962209417075224,0.05913187535228415,0.13969208739858796,0.3823711163745861,0.23778443431600332,-0.2879155171855242,0.008161947549337096,0.35275122676528314,0.05423044268575608,0.03668040215107715,0.05042785986804661,0.320102945935711,0.09809246976567229,-0.48503710929240323,0.030419964116399786,0.35134440110400766,0,0.17554483937992318,-0.24323813019735452,0.28865849089575285,0.23420586622824416,-0.0508532796752365,-0.44637926910185755,0.3201342336587192,0.06145270914051165,-0.28503523004548903,-0.45816228790885527,0.30285653776934074,0.11768329662572173,-0.013789148314329827,-0.509129203453463,0.3297555335440564,0,-0.026519194282603076,-0.4836330495292983,0.3973596527515233,0.09644534380211706,-0.11,-0.5103872055038761,0.37089785282570437,0.013831453932062603,-0.11,-0.504785361445241,0.3839310261521939,-0.01,-0.11,-0.51,0.3409662389559312,-0.01,0.2968796782797956,0.32136390671660825,0.3866219239108128,0.2900518542885129,0.09002757633120274,0.20912620107502805,0.4011677072760977,0.18438687814590507,0.17889873694392916,0.1628266704159992,0.2837828400078188,0.20021381988908896,0.1248694245801114,0.01587414794520153,0.3735579974400962,0.13904342331460376,0.18523587278992093,0.17603955118068434,0.3687463973954112,0.14851322513039092,0.14271245078908232,0.03594801328027569,0.3543745728947014,0.07567490246759051,0.1142441827912215,0.03456779398287382,0.2533237067925934,0.08972596129468746,-0.11,-0.003260895764987758,0.2847595838899224,0,0.17647611552727807,-0.2760746150554453,0.42736964485402174,0.18111829611716151,-0.11,-0.47102236226381583,0.4208034297007236,0.024025266230897846,0.08555054881817264,-0.4997493944419303,0.33944544058471054,0.0830678915623332,0.009836006165133457,-0.4949783022498969,0.3275221607003374,0.06273472499030533,0.07366183993481591,-0.48139358994716314,0.28329008505994363,0.028854970541544886,-0.11,-0.51,0.35194669254840094,0,-0.023407672687885045,-0.51,0.28403548692011693,0.02523118471344981,-0.11,-0.51,0.3482417802473322,0,-0.3505538200444954,0.3214798027194116,0.26116854667478145,0.06285849398495505,-0.11,0.045943667522089775,0.15825911699860518,0.33752892741506385,-0.06345586360824104,0.005122878687048582,0.3702191046161508,0.09225193550557344,-0.025980548082149856,-0.01,0.36720288067634815,-0.01,-0.06779134791215413,0.021270778354981375,0.3645738291154594,0.059909865320040355,-0.5192476723788654,-0.005981543219721989,0.3593172429807846,0.029049328078287695,-0.11,-0.01,0.38288935162918253,0.028592693783923998,-0.06922388944984895,-0.010289108121756471,0.2663300280524483,0,-0.42909685671357545,-0.4645239095523098,0.3148319493527108,0.12307424572055359,-0.06275457668734263,-0.51,0.3284602472003985,0,-0.11,-0.48462095036239566,0.34770985528473436,0,-0.51,-0.51,0.32684388355649974,0,-0.0654200643028895,-0.51,0.3513096112490498,0.029281102096950777,-0.11,-0.51012375,0.22221977217338867,0,-0.06592653696795828,-0.51,0.2843448098097327,0,-0.61,-0.51,0.19355117401333838,0,-0.11813323867580874,0.1299810312088343,0.4504216138730236,0.05472480756027284,-0.06970958298189404,0.03318100156834059,0.4626763303892931,0.025419834260028855,-0.5992507569981325,-0.01,0.4662037933649972,0,-0.11,-0.01,0.38128224098027136,0,-0.12314513944018063,0.0499170687835392,0.4213205320749883,0.026623547379361456,-1.01,-0.01,0.33462786056670657,0,0,0,0.3545792706192913,0,-0.11,-0.01,0,0,-0.6324978916919857,-0.4289205641903921,0.4517862722594408,0.029249843080232242,-0.1781859962166598,-0.51,0.3883384245908124,0,-0.61,-0.51,0.3865257781273279,0,-0.11,-0.51,0.2403195179021974,0,-0.5716623348936289,-0.51,0.29324739661169197,0,-0.11,-0.51,0.12753779006308347,0,-0.11,-0.51,0.12739596804746864,0,0,0,0,0,-0.1044690149283315,0.010137850292115792,0.31943338066799776,-0.01,-0.11,-0.01,0.2523204814775828,0,-0.11,-0.023688146715014333,0.24806422994843852,-0.01,-0.61,-0.01,0.14187804485860997,0,-1.01,-0.01,0.33661536078427584,0,-1.01,-0.01,0.09,0,-0.11,-0.01,0.18343118596281696,0,-0.61,-0.01,0.09,0,-0.11,-0.51,0.2725958550070345,-0.01,-0.11,-0.5372314291989032,0.1874692272231703,0,-0.11,-0.51,0.1484696349368271,0,-1.01,-0.51,0,0,-0.11,-0.51,0.1179087238523496,0,0,0,0,0,-0.11,-0.51,0,0,-1.01,-0.51,0,0,-0.16621832224392377,0.027563035523496877,0.41425452485426817,-0.01,-0.11,-0.01,0.32273166813443055,0,-0.11,-0.01,0.20309475508174643,0,0,0,0.19978427421483094,0,-0.11,-0.01,0.2466813255662885,0,-0.11,-0.01,0.09739796133511992,0,-0.0698655238672496,-0.01,0.11286352823558882,0,-0.11,-0.01,0,0,-1.01,-0.5106975,0.34352878872090925,-0.01,-0.11,-0.51,0.17785906907567925,0,-0.61,-0.51,0.17484905409116902,-0.01,0,0,0,0,-0.11,-0.51,0.17539634887982625,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.01,0.32054064939261806,-0.01,-0.11,-0.01,0.12144879235558087,0,-0.11,-0.01,0.1226708062707481,0,-0.11,0,0,0,-0.11,-0.01,0.22099539045508115,0,-0.11,-0.01,0,-0.01,-1.01,-0.01,0,0,0,0,0,0,-1.01,-0.51,0.12889305538903806,0,-0.61,-0.51,0.1073840069899979,0,0,0,0,0,-0.11,-0.51,0.15097419028747827,0,-0.61,-0.5120994417803064,0.09,0,0,0,0,0,0,0,0,0,-0.11,-1.01,0.087953657765625,0,0.25828816360330054,0.45029463888011834,-0.07577113305848451,0.3223946337675017,-0.016810133204477547,0.43051479407094984,-0.24208339363105608,0.2576968446435874,0.12089205757443107,0.4421779468424664,-0.2800228901085035,0.14750537583500695,0.04886427219786069,0.10412455894957351,-0.3071196789637733,0.3636561390862998,0.08816417188911307,0.18966378322416058,-0.22701066112995366,0.3862649469242289,0.03010087039642751,0.38051558814225445,-0.3387613099173933,0.056857293315753746,-0.06972512186155203,0.06979123130587506,-0.4128881,0.3780414896520176,-0.61,-0.0106975,-0.41,0.37046712651452895,0.01862443545122825,-0.250734182113223,-0.2563808661919556,0.37163797524634484,-0.03470533887262374,-0.36518847242314445,-0.37242380815787335,0.35810009241512886,-0.07407890527960187,-0.3886905809519821,-0.41,0.3606101258932238,-0.3604796187197992,-0.50290125,-0.37232650905536097,0.374452448579558,-0.61,-0.40723970182894154,-0.33756366354378553,0.37621294629075136,-0.11,-0.49925835733850965,-0.37603633593087815,0.3634885387095184,-0.5224232973134129,-0.51,-0.40434441490867995,0.36399285610202864,-0.07821022895442789,-0.51,-0.41051386764129383,0.23086849661564474,0.1359824649565925,0.2510867722641383,-0.343585498938574,0.3698850338300439,-0.05728010137023082,-0.011969814728318453,-0.3796635299391069,0.3664113087834074,-0.08501328613932296,0.04793013949344433,-0.37892022238875867,0.37511115128441236,-0.11,-0.012171846291238282,-0.40780359631382906,0.3643239508461741,-0.06924067019925888,0.029936733111313285,-0.4007765797357688,0.3553370781720911,-0.43489862089964876,-0.012236278375000001,-0.40501825373797945,0.3617413933961965,-0.1419979916150249,0.0027022762812742435,-0.41,0.3686205683025596,-0.11,-0.012627873187696705,-0.41,0.2846450604211123,-0.4418966239061711,-0.48605753074585384,-0.3905826440816672,0.36553844540013786,-0.04934420876986577,-0.51,-0.36658290745742006,0.3582085705178051,-0.0755730770298102,-0.511902375,-0.412025,0.3548457494185019,-0.11,-0.5112401824008783,-0.41,0.22096344537639076,-0.11,-0.51,-0.39870644275192924,0.34919226155353666,-0.08487730468875578,-0.5130375,-0.41,0.29481107271973306,-0.11,-0.51,-0.41,0.205970790665531,-0.11,-0.51,-0.41,0.054702627949050925,-0.08012971270366058,0.18290899645293496,-0.29791112367605616,0.35351056376091405,-0.37299477049476865,0.3509891098544914,-0.3785280637028705,0.028260436455251427,-0.1057527676019975,-0.011140689426501704,-0.3874013295369467,0.36303190463418156,-0.11,-0.01462398327028573,-0.41,0.3542382538114272,-0.11,-0.005128255964378303,-0.3509368135119399,0.3617412748658795,-0.4436322702547907,-0.007155142209881799,-0.41,0.35738169823224336,-0.11,-0.011369184137542223,-0.41,0.357277494736707,-0.11,-0.011652626927201844,-0.41,0.2736271797434494,-0.07181780905680338,-0.47392304075629466,-0.35777070722764526,0.33979880954639385,-0.07293958987067331,-0.51,-0.38251605989427556,0.34466538295237226,-0.11,-0.5110351409403249,-0.41,0.3317975811952657,-0.11,-0.5088620750379588,-0.41,0.24731127413997442,-0.07183351780289919,-0.51,-0.4112892122749858,0.3026641041871342,-0.07685977751945615,-0.51,-0.41,0.15725544649371215,-0.11,-0.51,-0.41,0.24336035531842806,-0.11,-0.51,-0.41,-0.01,-0.0017353456688235722,0.059034050263309094,-0.41,0.34804977130325276,-0.08097065604630103,-0.012587500000000001,-0.3909233868753399,0.3450226528808093,-0.4353581583596277,0.019627990465113935,-0.41148754475,0.3303238716919641,-0.11,-0.0127141890625,-0.41,0.20558441826814125,-0.07101138986788477,0.015656842654303692,-0.41,0.3284194853490356,-0.11,-0.01199338999144468,-0.41,0.13471926175598622,-0.11,-0.010139292926798184,-0.41,0.20806924844343763,-0.11,-0.0106975,-0.41,-0.01,-0.11,-0.5114625,-0.41,0.29316049167987607,-0.11,-0.51,-0.41,0.16580060418665785,-0.11,-0.51,-0.41,0.23439764788372733,-0.11,-0.51,-0.41,0.07179347038124834,-0.07748593695328809,-0.51,-0.41,0.1580057336719024,-0.11,-0.51,-0.41,0.08834225038167798,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0.04077938128631689,-0.11,0.42405894753049705,-0.3408597032275126,-0.01,-0.5588960627581024,0.2706119966859752,-0.4055832350306891,-0.01,-1.01,0.2915170451268499,-0.41,-0.01,-1.01,0.02971023963720191,-0.41,-0.01,-0.11,0.2053546629799754,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0.17920431104289963,-0.11,-0.51,-0.41,0.15040383200396068,-0.11,-0.51,-0.41,0.022075419996228446,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-1.01,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.012025000000000001,-0.41,0.21484999149280237,-0.11,-0.01,-0.41,-0.01,-0.11,0.05650708227000742,-0.41,0.026246679766726497,-0.11,-0.01,-0.41,0,-0.61,0.015475204781408241,-0.41,-0.01,-0.11,0,0,0,-0.11,0,0,0,-0.61,0,0,0,-0.11,-0.51,-0.41,0.06443408519580496,-1.01,-0.51,-0.41,0,-1.01,-0.51,-0.41,0,-0.11,0,0,0,-1.01,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.6626191786197342,0.2395507691880529,-0.41,-0.01,-0.11,0.028030264495809032,-0.41,-0.01,-0.11,-0.008237519314881819,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,-0.01,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.51,-0.41,0.05693379316354366,-0.11,-0.51,0,0,-1.01,-0.51,-0.41,0.027144715184574467,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0.051213900719231695,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0.027051792031060284,-0.41,-0.01,-0.15922756542277405,-0.01,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.11,-0.010970416606586533,-0.41,-0.01,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.61,-0.51,-0.41,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0.3295874804728965,0.42856420342015095,0.5103229477954893,-0.10845959806595232,0.3471923507645017,0.4337442512081668,0.5354728475323706,-0.1097870609866851,0.2872363343926019,0.37274405806270644,0.5326479906718204,-0.12576358614349764,0.21406993993480442,0.3882629517399042,0.4939749926890753,-0.23243394503993067,0.35106849861939293,0.36559131251699367,0.513487811343594,-0.10859293691233911,0.28121604539664036,0.31816635143304073,0.5085123161415953,-0.22120004239009913,0.29530050916498307,0.277040363250566,0.5274984445971476,-0.20115699716125157,0.01621810422165483,0.1540268043092095,0.36696738011647206,-0.4011503022192279,0.2752360411220616,-0.06696324046721543,0.533588376478757,-0.12147134027255713,0.30331033046547606,-0.14142701249606152,0.5201639916986673,-0.23515463156224325,0.20052727950247698,-0.13839264506499746,0.5354040222909671,-0.21156396106505398,0.03951395413431539,-0.4642731751372416,0.5293620599921518,-0.51,0.2639893553738788,-0.19420140140496797,0.49846215593554566,-0.27233217884072436,0.12674532358763513,-0.3652956611942979,0.4239640835970406,-0.340317704968198,0.04868429194144732,-0.40272419344163335,0.5131174744960785,-0.351932278315052,-0.5149023585767305,-0.49220023085060927,0.5504114941151723,-0.4695032149910258,0.3098807167885783,0.39228600527613683,0.5205745256149397,-0.13157074251637615,0.32270061335224054,0.3337892273517501,0.518857010969812,-0.17415906980395204,0.22417354122574631,0.33606447312089704,0.5441611683029978,-0.14783312335059579,-0.01899269356971117,0.21179319265055976,0.5409531958376899,-0.2981147012243601,0.2424722869372442,0.33354740980812836,0.48232569074970794,-0.14110000287895855,0.1014524678446313,0.1733626645543332,0.5173452086399022,-0.34567138779082984,-0.0205325006061631,0.1327397486033629,0.5254025763603837,-0.4046549274033613,-0.61,0.024510072754044647,0.5044154484871256,-0.51,0.30227403796435987,-0.32426082260700617,0.5150843537065712,-0.3012987555931665,0.0959375447644436,-0.3914909289566261,0.5281647102409843,-0.4319226799815014,0.004163701744206161,-0.45213775753974794,0.5356019619705443,-0.4536594281998176,-0.07039582780330439,-0.5128519751792915,0.5170964796815444,0,-0.025053140148015227,-0.4316689527632143,0.533891748437417,-0.4697664292957075,-0.11,-0.511270125,0.525220977091632,-0.4763395159237192,-0.11,-0.5062768535116976,0.5201999663071819,-0.51,-0.11,-0.51,0.45504798019067244,-0.51,0.28983393818534087,0.3489485840996989,0.522064167577465,-0.1562526864108232,0.2149424017137761,0.2673452385216727,0.5046144754213281,-0.23657705000171286,0.2636406789383723,0.243818746002812,0.4862701064522051,-0.2919664101334333,0.05066678382316953,0.09740091262467482,0.49923787527765706,-0.47213346283635005,0.2911433968094068,0.24617634858455026,0.5226098424865072,-0.19689546719071016,0.10102659978014784,0.11616170248321707,0.5206943565052425,-0.40556510284129,0.05320028112660527,0.060490377495711845,0.5015917501711626,-0.4341520852995586,-0.11,0.03093792177582047,0.4005961157310864,-0.51,0.23251406807300198,-0.21447710483186033,0.5098312629013335,-0.2806568465356731,0.12827541911259988,-0.37899733433199767,0.5062963631411663,-0.4373223842048204,-0.059500723939345676,-0.43401619281944637,0.5260835687884828,-0.44232665944030924,-0.11,-0.49564985756573526,0.4867389775853736,-0.51,0.1480374379828808,-0.4280284644186818,0.5214417079595439,-0.4529787112942572,-0.06296284819185,-0.4906893577611101,0.5131382257022027,0,-0.11,-0.4938356461365966,0.5145488166874885,-0.40250642881519494,-0.11,-0.51,0.4803906541162868,0,0.29967246837457306,0.249554681482693,0.513199431737503,-0.282304952021769,0.11057996254970895,0.17246715550634817,0.5206113374605261,-0.4336604903649463,0.013702760326656203,0.07091219807423828,0.5232448687171987,-0.4283331680158741,-0.11,0.016742769203431936,0.5112452315447189,-0.51,-0.06680163192144269,0.07380459083685129,0.49585702669115106,-0.3871410186639982,-0.06420054159769167,0.0049380898633960574,0.5184684129685818,0,-0.06366633913794545,0.06000900579323889,0.5034718484011926,-0.51,-0.11,-0.01,0.46794242373831013,0,0.14052892483481047,-0.4166729241330113,0.5161349376162183,-0.4193331936509229,-0.5238270109873508,-0.5076729890307047,0.5278362237392649,0,-0.06671749879029715,-0.4950464677661241,0.4874018234309112,-0.51,-0.11,-0.5118146275404526,0.4442687913837882,-0.51,-0.038412637049315496,-0.48941698600141753,0.5131530542701821,0,-0.11,-0.51,0.46627552119057136,0,-0.06675958273319728,-0.51,0.4762243290806932,-0.51,-0.11,-0.5025854177292619,0.37956963022413054,0,-0.1076309311616898,-0.01,0.5146293174248118,-0.386916040679459,-1.01,0.07669012733155882,0.497512744836886,0,-0.8818611714241572,-0.01,0.5148420621868287,-0.4687366864631566,-0.11,-0.01,0.4387591102064209,0,-0.07252895414479132,0.05933958413822468,0.5218100172844033,0,-0.11,-0.01,0.40137489744041566,0,-0.11,-0.01,0.3813370879057119,0,-1.01,-0.01,0.13733728759295494,-0.51,-0.6114625,-0.51,0.542750920703785,-0.51,0,0,0.49406964506214385,0,-0.11,-0.51,0.5035076711039275,0,-0.11,-0.47825855667748146,0.29503490154316725,0,-0.11,-0.51,0.45097641164645524,0,-0.11,-0.51,0.2722811806481318,-0.51,-0.11,-0.51,0.09,0,-0.11,-0.51,0.1401787598288008,0,-0.15578979223429243,0.06763114840801734,0.5032961583317503,0,-0.916575605663063,-0.01,0.47661301111576176,0,-0.10422552305956166,-0.01,0.5155308312653577,0,-0.11,-0.01,0.3529057693489187,0,-0.61,-0.01,0.4677708153021872,-0.4703428527482908,-0.11,-0.01,0.39015738920176485,0,-0.11,-0.01,0.36431484677692344,0,-0.11,-0.01,0.09241767875002253,0,-0.11,-0.51,0.4717372049003143,-0.51,-0.11,-0.51,0.3757376111127758,0,-0.11,-0.51,0.29671422150392074,0,-0.11,0,0,0,-1.01,-0.51,0.09824065667455875,0,-0.61,0,0.09,0,-0.11,-0.51,0,0,0,0,0,0,-0.16339105765426368,0.025965764543566132,0.49319551689232255,-0.48068889132712833,-0.06979824361658739,-0.01,0.3643654640401207,0,-0.11,-0.01,0.47761411149922794,0,-0.07474269517517487,-0.01,0.23664069765789855,0,-0.11,0,0.42462578842332793,-0.51,-0.11,0,0,0,-0.11,-0.01,0.12298505134557479,0,-0.61,-0.01,0.09,0,-0.11143406558006441,-0.51,0.5204938253119455,0,-0.11,-0.51,0.38895548158486365,0,-0.11,-0.51,0.24717224721312567,0,0,0,0,0,-0.11,-0.51,0.17658281277746402,-0.51,-0.11,-0.51,0.21716897418913134,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0.369486806329529,0,-0.11,-0.01,0.3648116702435002,0,-1.01,-0.01,0.2738264296344756,0,-1.01,-0.01,0.09,0,-0.61,-0.01,0.17706391578563851,0,-0.61,-0.01,0.1758498021776499,0,-0.11,-0.01,0.09,0,0,0,0,0,-0.11,-0.51,0.1218962194978675,0,-1.01,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0.09,-0.51,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,-1.01,0.11282294999611889,0,0.2698420285750019,0.4604286433503438,0.02359785295126022,-0.17219404694380233,0.10934099516579066,0.4562520152906717,-0.12031679002491179,-0.3235014480670893,0.1252664743541905,0.46023283990563607,-0.11795573672845072,-0.35730945004095555,-0.08514252215435275,0.4477661479221463,-0.33919704207858214,-0.3926918170230743,0.11881945718209405,0.4414050926651448,-0.20011032113521576,-0.31188068623138154,-0.07098133684645397,0.35274362376700735,-0.23753490233668592,-0.4246929605045632,-0.51,0.4098424896154439,-0.3155388368056797,-0.44554774508038264,-0.11,0.3857164343649004,-0.41,-0.51,-0.24450235883002047,-0.42037374997107807,0.020647537653326414,-0.3914083040690252,-0.2935471945427286,-0.3342633475858618,0.006655231341701566,-0.37834700801058235,-0.3142474467940689,-0.45931145791900835,-0.007417832495374472,-0.4810957431665615,-0.17138056434050417,-0.5029125,-0.2529166516362659,-0.34739535845440705,-0.3828231792850589,-0.480357644837584,-0.04949132899581342,-0.3984516582152995,-0.452449120541538,-0.51,-0.060122312724847166,-0.46429240489942963,-0.361518417655428,-0.5023387500000001,-0.257053841744531,-0.51,-0.1355506880568206,-0.48054250344604543,-0.3787084188321922,-0.51,-0.0644379442045531,0.3873397146064032,-0.2039068029354168,-0.42612584698559014,-0.16774924397135646,-0.09547925555509355,0.006161655068720967,-0.450284421868678,-0.3722352313799319,0.10416497786646212,-0.22480761078128791,-0.39236224558915817,-0.39702239161717384,-0.12897602085199147,-0.24995523624096272,-0.39962798252623244,-0.08780182919788461,0.13114262868278462,-0.2213546986347838,-0.3805233936541307,-0.18695491569403996,-0.1283569052673687,-0.22094814290206033,-0.29412594778176704,-0.5043205357221937,-0.04658629722974005,-0.3430287915654624,-0.51,-0.1137036480501416,-0.11225435564040398,-0.41,-0.5023387500000001,-0.3992328929192181,-0.4500918766402112,0.011765658848639457,-0.51,-0.30974123356504185,-0.5211238301351565,-0.05107919940805348,-0.4961552599325368,-0.3968596191380805,-0.5065300014660079,-0.24070119629024625,-0.48305125340507565,-0.18255542405695546,-0.5142609692132469,-0.36937275942410797,-0.51,-0.14996677860848293,-0.5114625,-0.34744184756791835,-0.51,-0.61,-0.51,-0.3078109601246928,-0.51,-0.11041906323164324,-0.512475,-0.41,-0.51,-0.11,0,0,0,0.08315735167912928,0.32794854367124093,-0.12888721479797174,-0.3329459406702752,-0.011668256866907957,0.36847407727171855,-0.3056716570487743,-0.4839203394799645,0.04203602845240534,-0.0024159123185975816,-0.2762200607396607,-0.26837593383165126,-0.11937880993122829,-0.011738717047031916,-0.3947406646263744,-0.46953450324340473,0.011263448723412514,0.044411321003932816,-0.23277074283323965,-0.439332155171717,-0.11,0.13718896705299383,-0.30526827451452715,-0.4633280499620014,-0.11536927236387923,0.020969299542360178,-0.300053994646326,-0.3781591676254623,-0.07817631986622718,-0.03773965049730421,-0.3715256956184279,-0.510135,-0.5286522567411905,-0.51012375,0.00003177040787179664,-0.49030097361536945,-0.10435169826464383,-0.42956418197153956,-0.3013408778047946,-0.5023387500000001,-0.4539151871611749,-0.5108877353848656,-0.16713973555475514,-0.51,-0.16469353064879377,-0.5116444570019673,-0.37753077099111376,-0.51,-0.4480811415568715,-0.4845553283153994,-0.290782821580832,-0.51,-0.13261987961216853,-0.51,-0.39978372545395324,-0.49426096836969896,-0.10981640249047046,-0.51,-0.41,-0.51,0,0,0,0,-0.0528906700813894,0.3294177467194651,-0.41,-0.4404424192781925,-0.2204155205132425,-0.13326978389238495,-0.20784915277672694,-0.4082727852855629,-0.082453991570257,-0.036882557114267335,-0.39322399673103386,-0.40792538146614243,-0.11653370081286149,-0.11562218071286504,-0.41,-0.47838064154645,-0.08757383795272893,0.09863889519958506,-0.3684325198177981,-0.4635053613020394,-0.1193178481269033,-0.12848132045253274,-0.36581255315765226,-0.4775216637404435,-0.11,-0.08080228189478302,-0.41,-0.46532234857128774,-0.11569799103213366,-0.1052061192071018,-0.41,-0.51012375,-0.4202119269733117,-0.5114625,-0.1735142771683486,-0.5111475,-0.16341287150013536,-0.51,-0.3648240984541318,-0.5036022670602097,-0.51,-0.51,-0.3151002883579849,-0.51,0,0,0,0,-0.4299970276100368,-0.51012375,-0.37842379283589667,-0.51,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.41,0,-0.18364317730804,-0.5475590738718934,-0.41012374999999995,-0.51068625,-1.01,0.4333471175917031,-0.41,-0.51,-0.11,0.2768920296717937,-0.41,-0.51,-0.6525875,0.3937380514545256,-0.41,-0.51,-0.11,0.03490677911915997,-0.41,-0.51,-0.11,0.24591180184470884,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.61,0.03415006724991574,-0.41,-0.51,-0.11,-0.01,0,0,-0.42946880648849206,-0.51,-0.10588244201726707,-0.51,-0.17822153417806985,-0.51,-0.41,-0.51,-0.5065058438394796,-0.51,-0.38392921965602567,-0.51,-0.11,-0.51,0,0,-0.12319468141286931,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0.2630132755375175,-0.41,-0.51,-0.11,-0.0323994561267606,-0.41,-0.51,-0.11,0.016974775562376608,-0.3662295066312428,-0.51,-0.11,-0.07650231563990316,-0.41,-0.51,-0.11,0.0469289140296946,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.61,-0.01,-0.41,0,0,0,0,0,-0.43956616438574786,-0.51,-0.23197680686502115,-0.51,-0.11,-0.51,0,0,-0.11854522488453854,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.262411581096581,-0.41,-0.51,-1.01,0.14232851903687496,-0.41,-0.51,-0.11,-0.010015869311376933,-0.41,-0.51,-0.61,-0.01,-0.41,0,-0.61,-0.01,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.47686944903937456,-0.51,-0.36390607118932156,-0.51,-0.41449089137161843,-0.51,-0.3235502331641331,-0.51,-0.61,-0.51,-0.41,0,-0.61,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,0.05905500443378108,-0.41,-0.51,-0.11,-0.02664917702915286,-0.41,-0.51,-1.01,0.04861499454859339,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0.2896797969804719,0.3575318810355533,0.4854565584109129,-0.1409130090698356,0.20171708229433424,0.3720894158990861,0.4528879567812457,-0.26663294256053494,0.24158789634127917,0.3224041686721454,0.4541902927852958,-0.2352102713099391,0.012020997856107982,0.03526833640198253,0.47002084648650294,-0.43786149797212337,0.2757011275038551,0.28101307788033014,0.45360809889132747,-0.30168900587675646,-0.0223941271825875,0.10211078215390354,0.4630429083603412,-0.473129691952321,-0.11,0.06253093685113417,0.4513785412510521,-0.51,-0.024658755791955957,0.024352460682797006,0.4153291111490364,-0.47804243020298626,0.274228052141527,-0.25705196660867125,0.46385048296001613,-0.2738278556003785,0.12747371932943982,-0.35652132389408486,0.472625420338712,-0.47780582632201707,0.0718693378386998,-0.3708194670944074,0.4825140122201912,-0.37497579453867186,-0.06488049028708776,-0.51,0.46519290193131535,0,-0.02373456834257072,-0.4666974910551559,0.44431621605125093,-0.4098446795518537,0.010903302641457509,-0.4931859125892722,0.45072686355170327,0,-0.022120432529876742,-0.4831112064152092,0.4563650970080221,-0.51,-0.11,-0.51,0.39251448670607175,-0.51,0.2597097498770502,0.37918021641005384,0.20440353217723936,-0.3037309103088711,-0.03177428821570021,0.0779334808842921,0.31794698716479813,-0.3610191774866117,0.04870754336921598,0.058752055160168654,0.1706590016670442,-0.4173001745471744,-0.11,-0.0024968814758913136,0.3628951884096911,0,-0.06672579084147535,0.09397869356658875,0.3724029015851043,-0.465006085613641,0.009265844874698774,0.003957438757151634,0.3505889366914674,-0.51,-0.06580431943692786,-0.009095274127657437,0.3464676879511385,0,-0.61,-0.01,0.36123481183491585,0,0.06819413949417719,-0.40585430519464916,0.3081331042483197,-0.43818198268570013,-0.06762846961681596,-0.51,0.3152877253355864,-0.49758079604026656,-0.06407507588316562,-0.5114692322861943,0.30634104542295976,0,-0.11,-0.51,0.29311428642494297,-0.51,-0.1382454335762316,-0.511161228992659,0.3606360435024262,-0.51,-0.11,-0.51,0.35860908940526737,0,-0.11,-0.49890179480283503,0.23747849872122118,-0.51,-0.11,-0.51,0.1985849132212611,0,0.2013772662653393,0.3283856523032209,0.21451508477504463,-0.3062730291402919,-0.06573201021314327,0.08894302675126485,0.42409878277073665,-0.47284385390953226,0.11172676703619265,0.07269023177389372,0.3758204183297625,-0.3808025756605746,-0.11,-0.0029394619594015486,0.3743781309220217,-0.4343218397930894,0.014916362154849226,0.02076052693799004,0.27616140302923986,-0.4826077075896346,-0.06473338710032482,-0.002945834807777688,0.3743873502336666,0,-0.11331786681787522,-0.01,0.3603129542382275,0,-0.06527077411870422,-0.01,0.3007498662522909,-0.51,0.04767430799043311,-0.48428575337312013,0.40910866992102307,-0.42635472741183633,-0.5142164549621162,-0.50341838639134,0.42240169701046126,0,0.01183472125285314,-0.50335125,0.363947048483453,-0.51,-0.0729717570705522,-0.51,0.34038403657572797,0,-0.09376682907847601,-0.51,0.2632636022335049,0,-0.11,-0.51,0.29635538074835394,-0.51,-0.11,-0.51,0.2605534889164061,0,-0.61,-0.51,0.09770458388474904,0,0.07071574855124191,0.10381357264952881,0.3316888330570871,-0.45231471358605335,-0.028932700200700025,0.004596660766541322,0.28479605872077773,-0.51,-0.11,0.02471080661341568,0.37041463460600255,-0.4792768720232314,-0.11,-0.010572962146777524,0.34942865207578727,-0.502415687054619,-0.03425432242634115,0.049663429892336616,0.3481696131616589,-0.4951038059548432,-0.06765534164004977,-0.01,0.3310718813173834,0,-0.11,-0.01,0.2737847007567623,0,-0.61,-0.01,0.12088040606615431,0,-0.51,-0.48279028382242517,0.2434545352685008,-0.51,-0.11,-0.5101697029360833,0.34493550528132944,-0.51070875,-0.11,-0.5034076470121391,0.2991708117966005,0,-0.11,-0.51,0.12283325200646283,0,0,0,0.3012563717341444,-0.51,-0.11,-0.51,0.18539103031621193,0,-0.11,-0.51,0,0,-0.61,-0.51,0.13814842843511174,0,-0.15709350320936616,0.037940780482229854,0.4457350189810424,0,-0.11,0,0.25183313429456855,0,-0.11,-0.01,0.3067321331908477,-0.51,-0.11,-0.01,0.13066379811612025,0,-0.17147387814299886,-0.01,0.3541207799952418,0,0,0,0,-0.51,-0.11,-0.01,0.1649291884984898,-0.51,-0.11,-0.01,0,0,-0.11,-0.51,0.3535597148654763,0,-1.01,-0.51,0.27227380229003467,0,-0.11,-0.51,0.18164853441162876,0,-0.61,-0.51,0.09,0,-0.11,-0.51,0.18563750475437402,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.01,0.2200475438848111,0,-0.10881540541036805,-0.011185765178334462,0.23829348027538197,0,-0.10727997404201857,-0.02060168304108705,0.22225266188679457,0,-0.10772968973923142,-0.01,0.15155817977867625,0,-0.11,-0.01,0.125155558783182,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.11948560116326885,0,0,0,0,0,-0.11,-0.51,0.2311424866958247,0,-0.11,-0.51,0.08978339892003752,0,-1.01,-0.51,0.12413608392575545,0,0,0,0,0,-1.01,-0.51,0.11839451145060478,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.3470177171069062,0,-0.11,-0.01,0.2852575976668121,0,-0.11,-0.01,0.20272441197608093,0,-0.11,0,0,0,-0.11,-0.01,0.12279481969544066,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.51,0.1252027728152591,0,-0.11,-0.51,0.1810837616936863,-0.51,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.1496022726987982,0,-0.61,-0.01,0.12126559700734828,0,-0.11,-0.01,0.11953806734525006,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.61,-0.01,0,0,-0.11,-0.01,0.12290459249534867,0,0,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.13971497479053765,0.444768376001551,-0.09565561313543415,-0.4159331467824683,-0.44494579451882793,0.4461515003654829,-0.37129702073886794,-0.4476713375684197,-0.04029569497984772,0.4452302253330078,-0.3384214674244607,-0.48771744503376124,-0.61,0.39210058763230604,-0.41,-0.47809635396160965,0.009904838456052851,0.3856746075319263,-0.41,-0.435482749294383,-0.11,0.3628489139547268,-0.41,-0.510135,-0.04245872719274723,0.25299999457652567,-0.4106975,-0.51,-0.11,0.16720272441751954,-0.41,-0.51,-0.4539151871611749,-0.51,-0.05268688047770441,-0.4682888413434928,-0.14696639269762202,-0.4434434739934228,-0.3354472624051714,-0.43079944985722934,-0.08923022731653918,-0.48948731843983617,-0.41,-0.41575410457134476,-0.14509522268065547,-0.51,-0.41,-0.48068349060758636,-0.07312496433429912,-0.44951664133355695,-0.28423754543487995,-0.42778362038383705,-0.10142950572560783,-0.51,-0.37130171658211886,-0.47441629720369016,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.04159528807204005,0.3753745747245163,-0.37187216798765527,-0.4776588010888001,-0.19195261219374116,-0.13489203543230716,-0.3193010007286581,-0.45297354227320297,-0.46545018568071483,-0.07696305010903774,-0.3861551852406088,-0.43561628545874365,-0.5151348573735393,-0.11037216329631085,-0.33827338033862364,-0.48825292959715366,-0.08249805294620981,0.03840744872079438,-0.410216534424232,-0.49664281934699295,-0.12044243533898161,-0.13124780673295697,-0.3538089075476389,-0.4303138306114235,-0.11,-0.0652337702325447,-0.41115874999999996,-0.4920011804055457,-0.6034182953581309,-0.01,-0.41,-0.51,-0.13455543597769165,-0.4889484736129864,-0.351235529984463,-0.49617480530311064,-0.13791060328408916,-0.51,-0.41,-0.51,-0.11601234654370042,-0.49691581770544224,-0.41,-0.51,-0.13121780550523915,-0.51,-0.41,-0.510135,-0.34298236314227,-0.51,-0.4106975,-0.51,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.03941479886910907,0.3760837118543247,-0.36954799786221765,-0.4733332519496304,-0.07034274027012095,0.35475154750684085,-0.41,-0.51,-0.05688512998040701,-0.01414681590667759,-0.3284831707393243,-0.45755795075982325,-0.61,-0.041937840558048306,-0.38112054553422503,-0.4918426444087617,-0.07463692506144176,0.18987076278630893,-0.4100213984552959,-0.48785845220273066,-0.11,-0.018825169034058453,-0.41,-0.51,-0.07901825279659215,0.011045721492555699,-0.41013499999999997,-0.51,-0.11,-0.056606225681621644,-0.41012374999999995,-0.51,-0.51,-0.51,-0.1944667419526686,-0.5023387500000001,-0.13747756637483652,-0.5106975,-0.41,-0.5023387500000001,-0.3173392922399912,-0.51,-0.4031296409944506,-0.51,-0.11,-0.51,-0.41,-0.51,-0.09127601334546415,-0.4995107876162621,-0.377752315333829,-0.51,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,-0.11,0.294548913806833,-0.41,-0.510246375,-0.15250659329452637,-0.1357109720827562,-0.40784667320912144,-0.4967354726755235,-0.15510673933228358,-0.04867885362932222,-0.41115874999999996,-0.4998740178851158,-0.11,-0.01,0,0,-0.11,0.03423789377030056,-0.39477141396360593,-0.51,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.4125610249806776,-0.51,-0.41012374999999995,-0.51068625,-0.61,0.3268424085315299,-0.41,-0.51126,-1.01113625,0.1444639910440383,-0.41,-0.51,-0.61,-0.01,-0.41,0,-0.61,0,0,0,-1.01160875,0.06467580743189441,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.47666259862943827,-0.51,-0.3253658097515105,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.15269250601704715,-0.41,-0.51,-0.11,-0.01,0,0,-1.01,-0.02481029676481959,-0.41,-0.51,-0.11,0,0,0,0,0,-0.41,0,-1.01,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-1.01,-0.01,-0.41,0,-1.01,-0.01,-0.41,0,-0.61,-0.010618804489914587,-0.41,-0.51,-0.61,-0.01,0,0,-0.61,-0.01,-0.41,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.61,-0.01,-0.41,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.27892670541128084,0.3653894989804323,0.5026864048100128,0.3393083774596077,0.2232164458923382,0.4452816068281443,0.3318957197509572,0.33214701202415037,0.23878435499397976,0.45295105309438083,0.5131649360915289,0.34871657585123045,-0.022622087339963973,0.33522844452507583,0.5016308456156364,0.28309956052221263,0.24751722337124055,0.3007016762590693,0.4688163035751657,0.300053559700496,0.11130766880960669,0.27305278568630953,0.38799433007860584,0.22377909799255152,0.12264093695797645,0.3585036099000384,0.5335500236937591,0.26994852797674285,-0.03861534062325752,0.10192373391150575,0.5262771866342824,0.028030500955199517,0.34212477647798517,-0.0839094228618838,0.47334970300155355,0.35700763149749043,0.2720127140653156,-0.1400612136087633,0.5168220985702597,0.3203986599082105,0.21735942599230546,-0.0993920633194074,0.5119214647721559,0.31706631099327637,-0.000004425363415556938,-0.42404497654718426,0.5035470342660839,0.13655734031391809,0.17638336222856857,-0.17941181113635185,0.5111468691186326,0.2628066990172769,-0.021919758176820618,-0.29200446906387256,0.49417245525289366,0.1753628513098599,-0.3522272876540402,-0.3751122484823939,0.49879451392303265,0.14167552140372616,-0.0646387434732588,-0.51,0.4898601402896442,-0.01,0.2486081719514296,0.38208617796984745,0.5112801127601952,0.3668107044417723,0.11200827225155757,0.32111989204186037,0.5276595356656393,0.3356246557753189,0.046010729657977215,0.340670248465619,0.5264156031493232,0.34272346600906256,-0.07972425584139993,0.20089685094441997,0.5265560646683937,0.1649375998336831,0.05058887370312637,0.28288968590552244,0.5187910022941673,0.30355552991123713,-0.44880274118118063,0.11577863951479062,0.5374700659164304,0.09024411636834834,-0.058413717583298386,0.19552663624390815,0.4993554499458749,0.1645100884498143,-0.61,0.023928644177819702,0.49071815128153473,0.022169815180388103,0.10653375188657502,-0.2928881597505967,0.4994574109768746,0.2754080606665638,-0.11607148159591446,-0.40493070746736326,0.5349022117489037,0.1779004057783,-0.0702374578282961,-0.43930870338687666,0.5334225351844047,0.12354154564721949,-0.06961791976934453,-0.51,0.5192356863828547,0,-0.011019971764015674,-0.4477545171665851,0.5208395740058704,0.05862814939627466,-0.10975611318989598,-0.51,0.5093719692646955,0.025664467182362177,-0.11140495818431569,-0.5082835438293605,0.49193929773708633,0,-0.11,-0.51,0.48515999306246566,-0.01,0.18538353380887634,0.28456230706220964,0.5393038517237544,0.23092034863947253,0.16854765074382302,0.2967552273307253,0.5186776532519599,0.18776608625527072,0.14036730762378907,0.28539941952974773,0.1903456862402865,0.19107477041458445,0.0010740939795312252,0.08103941300143638,0.1621391784442187,0.12833693066103927,0.16564136446224825,0.2078562403038307,0.38032540049705876,0.19604022084488845,0.08696071392775631,0.13612965010872888,0.19950087857513255,0.11565948393791234,0.10277509373401539,0.30036171586629085,0.03191288571132987,0.00748752937801587,-0.005197723423102742,-0.01,0.3725462342120546,0.021081091725048802,0.23051537178237627,-0.2103046310826291,0.5158300319470854,0.22833713816315326,0.008529068682207978,-0.3613342917158853,0.4790179342162677,0.08721209317143794,-0.07085683034775658,-0.32212457229116,0.1755290126731497,0.04000049895542264,-0.04035195717981932,-0.4728755595998922,0.4080786521910626,-0.01,0.09568407477883335,-0.36833069872425156,0.278658138955208,0.11241189639184324,-0.013949595452812193,-0.47208882789308826,0.22861510744168792,0.049647304661808125,-0.03894452092256427,-0.4646183468924841,0.24552503756939323,0.13291725961960854,-0.11039904898802944,-0.51,0.2947007350637651,-0.01,0.04082094491902717,0.26803572451575175,0.4612416226711952,0.17121558934355124,0.03863722786118425,0.14812683733400875,0.45776578916871546,0.07822206471928506,-0.2365999037377316,0.12038600695166883,0.5075242964691813,0.03501074575904166,-0.15980258715697984,-0.01,0.45447802272188065,0.013906194771370712,-0.008839060649419049,0.15763940235774554,0.3765733909629228,0.14070532123206683,-0.14922350003101786,0.10732255565585164,0.2552364388566937,0.15902311875245553,-0.06252730386884645,0.02433384842750069,0.47610247875438133,0.02629536053750675,-0.07108856300210516,-0.01,0.2000056378509391,-0.01,0.009285036201274646,-0.4052081392057594,0.44942223934950576,0.018246761429459073,-0.06814362837960809,-0.5095660041431663,0.34913346705736464,-0.01,-0.36428766760237374,-0.5099608141695485,0.348620530258652,0.009813873017314187,-0.10027743533332652,-0.51,0.44476402802945947,0.01650658569039864,-0.5289898920811302,-0.51,0.49634459724249635,-0.01,-0.61,-0.51,0.4128518010254497,0,-0.08392307656248553,-0.51,0.3571091655738905,0,-0.11,-0.4965140469321335,0.2885642300713363,0,-0.1575624473620701,0.11615110367299684,0.4927535858327165,0,-0.1139133957620774,0.0790645033387225,0.503059350503234,0,-0.11,-0.01,0.5104315601253021,0,-0.11,-0.01,0.20427468781124708,0,-0.8793362353174309,0.03260083352515721,0.432836937430477,-0.01,-0.11,-0.01,0.39588454594808586,0,-1.01,-0.01,0.3684031324300486,0,-0.11,-0.01,0.20361542604126093,0,-0.19757436357902175,-0.51,0.4127872785709458,-0.015050049384312567,-0.11,-0.51,0.5203477440791614,0,-0.11,-0.51,0.48133236663065604,0,-0.10433017518780546,-0.4873735745704566,0.18843608274081003,0,-0.5257270699236749,-0.49173545630083687,0.3244831191759381,-0.01,-0.11,-0.51,0.32400409214752296,0,-0.11,-0.51,0.30423580676799267,0,-0.11,-0.5016286842285579,0.09,0,-0.4193760480539371,-0.01,0.5192720441101525,-0.047217042144804676,-0.11,-0.026060413700725968,0.5226334121145942,-0.01,-0.11,-0.01,0.5048961190754974,-0.01,-0.11,-0.01,0.34662518902042233,0,-0.11,-0.01,0.4671508126796171,-0.01,-0.11,-0.01,0.3216138417617019,-0.01,-0.11,-0.01,0.3296923366754671,0,-0.11,-0.01,0.23368267285983652,0,-0.11114544673641591,-0.5075544692594545,0.4835270860292694,0,-0.11,-0.51,0.30766378330764205,0,-0.11,-0.51,0.38072623272989914,0,-0.11,0,0,0,-0.61,-0.51,0.24556399181103453,0,-0.11,-0.5406639103862609,0.2293169812222239,0,-0.11,-0.51,0.13184913005511,0,-0.11,-0.51,0.09,-0.01,-0.11,-0.01,0.4649029117751494,-0.01,-0.61,-0.01,0.3246858572928221,0,-1.01,-0.01,0.2228602805657553,0,-0.61,-0.01,0.28225581687405443,0,-0.11,-0.01,0.4076415779455472,-0.01,-0.11,0,0.13332774327341454,0,-0.11,-0.01,0,-0.01,0,0,0,0,-0.61,-0.501635219382017,0.49562375925878194,0,-0.11,-0.51,0.378711047749534,0,-0.11,-0.51,0.16951090353555343,0,-0.11,-0.51,0.09,0,-0.11019305141073715,-0.51,0.16948768026219135,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,-1.01,-0.01,0.4158420314988922,0,-0.11,-0.01,0.2519908082698919,0,-0.11,-0.02270326003009831,0.3063564431228524,-0.01,-1.01,-0.01,0.1733504840379805,0,-0.11,-0.01,0.2768990017230634,0,-0.11,-0.01,0.22589866853284776,0,-0.11,-0.01,0,0,-1.01,-0.01,0,0,-0.11,-0.51,0.23643771798528168,0,0,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,0,0,0,-1.01113625,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0.1372057503235521,0.4648209017530249,-0.015689145247056988,0.3113381214207625,0.14343923625272398,0.4546473371753078,-0.1351995482321016,0.199117228794133,0.09328148170866096,0.4551420350056661,-0.2242619635575401,0.07504331711760083,-0.05425454334677145,0.4429189131978915,-0.27999240845778844,0.11666639682423731,0.041418939104924335,0.4265316731823775,-0.12055642438151609,0.18704443618475505,-0.27610743033689267,0.42703323808973104,-0.33994996689516316,0.08940482198810107,-0.11280443258973585,0.4278677778226287,-0.2842129415903002,0.012723670566642338,-0.13520777914420695,0.3553391061240298,-0.3730805113654435,-0.010973282703178442,-0.1704704537499491,-0.14455083896564652,0.010345370909494177,-0.12673444318370988,-0.24716738377636283,-0.21116791307003743,-0.011574880324131398,-0.13219787534832575,-0.283943215081196,-0.18874346422981678,-0.041279161396100376,-0.12273930481215896,-0.38056967177692824,-0.32400134360109,-0.19841590124695305,-0.11448275073960366,-0.2408480488813754,-0.22053772236676994,-0.005271122708182632,-0.13559323059582767,-0.14592445029869536,-0.41532248022190577,-0.2933227859924553,-0.13995677161006326,-0.17165345584114028,-0.4668917371174663,-0.3626184438434528,-0.133863541578401,-0.5585758454100158,-0.4900762518873456,-0.35816799789775017,-0.14612922012649257,0.05768806884307744,0.38906644145446573,-0.1414213698804006,-0.013957536126854735,-0.18068105914031035,-0.08388018100637855,-0.01743253273913005,-0.1015219949868189,-0.1825365776423252,0.060300468457457616,-0.1319331668970383,-0.0444891053126519,-0.219936037181647,-0.07414706292523492,-0.13488678393812414,-0.09446409662003315,-0.020948773884877155,0.1235057325718149,-0.18850682166407132,-0.025808668314652977,-0.23899204843654995,-0.06747812591968032,-0.2546421706994434,0.015894410781816776,-0.1543694055492728,-0.06989801269091729,-0.2649466206327936,-0.054785984678996175,-0.5084326190084696,-0.1069117718981444,-0.34266939291273746,-0.0940788183108261,-0.35684299949187426,-0.29021731884882984,-0.03457817761732142,-0.1541979896375349,-0.20932266849364642,-0.5414003509312445,-0.21170511726417304,-0.14747074820463996,-0.27701571365420596,-0.44194433150259754,-0.27433337191054696,-0.1451216711018275,-0.20951722634605263,-0.5144625972116674,-0.41,-0.14255238536312617,-0.25942329160874117,-0.4878140550878198,-0.3181764762301231,-0.14270271628547548,-0.11515527162747828,-0.5139623770224753,-0.3729991819047323,-0.15272421848040543,-0.10739021741032725,-0.511573875,-0.40271163196798854,-0.12741092657776304,-0.11,-0.51,-0.3903872795762694,-0.11151902206597494,0.1310525335675979,0.3757238620354527,-0.1901272613072045,0.029394209424472878,-0.08621385590982356,0.377893034081207,-0.22163614813089877,-0.011756185113993046,0.010648592487067378,0.03449949694807858,-0.17174878429471033,0.008864930253979152,0.03898270891711264,-0.0021215620735844766,-0.1364144707893622,0.041801352159583714,0.022444887204280915,0.02358450926652637,-0.23424475684111892,0.01313585553422552,0.006588129161265388,0.10533859381787587,-0.3348814597527518,0.004024913870739237,-0.09341435888018396,-0.016958311366256626,-0.3465326631121388,-0.02561317660357177,-0.058884319935632076,-0.06276271300059029,-0.3270513265206076,-0.029483179706269482,-0.2387038154383816,-0.30269314848249995,-0.021580153849321052,-0.14861347035990138,-0.2338657737057455,-0.4259908713572404,-0.279642477698141,-0.1367548816926727,-0.1863536721659548,-0.4497600490261262,-0.35095629970372894,-0.14785276067621192,-0.2157220838288236,-0.5048100880426734,-0.40292953338524906,-0.13648069340756183,-0.1893045739415796,-0.4813700438344851,-0.33094978031782013,-0.1496327993619223,-0.19046506775922095,-0.51,-0.41,-0.11309795054727856,-0.24222661622714256,-0.5026543399626052,-0.41,-0.14599320036675692,-0.11,0,0,0,-0.37804760516919134,0.33624596030258846,-0.3211393297409582,-0.02326688804584428,-0.35010344814753447,-0.11330478021782353,-0.24198125953877359,-0.11323083999293258,-0.1959356079041656,-0.0933411899809697,-0.2560427764562681,-0.09333410321419519,-0.2392432929438526,-0.10578432292834025,-0.32860861352141957,-0.10147944435071461,-0.11183006442010111,0.01253938678771807,-0.37341257718858256,-0.05498821181285456,-0.14548839726018306,-0.10356794522790477,-0.37216932699270633,-0.10258896507912811,-0.45019292216045126,-0.07137339229412405,-0.3841353447620074,-0.08203247526704531,-0.6017245022994444,-0.05277868903351911,-0.41,-0.05527012418668459,-0.5618264267580135,-0.41199215568436465,-0.34406018348998835,-0.14269083264652838,-0.29490458177273376,-0.5145379796336012,-0.31220889432890414,-0.1368113776331516,-0.60239819640625,-0.51,-0.3960198467231094,-0.09117190936746902,-0.15714438096997077,-0.5127713416352998,-0.3615157370599397,-0.1471929817392659,-0.19122971813862066,-0.51,-0.41,-0.14067318277497537,-0.5090051581983718,-0.51,-0.41,-0.10346970685768718,0,0,0,0,-0.10351647473795514,-0.5480720015260319,-0.41125775,-0.11228008339960742,-0.11,0.4482274225013705,-0.33417153887307466,-0.06426505503130212,-0.5234973708197536,0.3147666257440682,-0.41,-0.01,-0.11,0.3830486918468207,-0.41,-0.01,-0.11,0.11126508817813072,-0.41,-0.01,-0.61,0.27726253058922073,-0.36509151039341636,-0.01,-0.11,0,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.162025,-0.510135,-0.37958926009408017,-0.1465393234516187,-0.5177238924608081,-0.51,-0.41,-0.16492889369868882,-0.11,-0.51,-0.41,-0.05049766726358818,-0.61,0,0,0,-1.01,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0,-0.16019359626941407,0.28736290690287314,-0.41,-0.03230957392054804,-0.11,-0.09869385399989805,-0.41,-0.09164655774847763,-0.11,-0.020200491701067354,-0.41,-0.01,-0.11,0,0,0,-1.01,0.09100735043199559,-0.41,-0.01,-0.61,-0.01,-0.41,0,-0.11,-0.013813742594793382,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.2125856161907294,-0.51,-0.41,-0.13831335881997525,-1.01,-0.51,-0.41,-0.03881906055181317,-0.61,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0.296788855650796,-0.365549562943308,-0.07386266192056548,-0.11,0.06014395979448073,-0.41,-0.01,-0.11,0.02527419749058657,-0.41,-0.046552595543959005,-0.11,-0.01,-0.41,0,-0.61,0.015200352446239145,-0.41,-0.04468493962222665,-0.11,-0.01,0,0,-1.01113625,-0.01,-0.41,0,-0.11,0,0,0,-0.21008020108951553,-0.51,-0.3647140407881645,-0.16411260543613282,-0.61,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.51,-0.41,-0.05284936598948931,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.11986438633381699,-0.41,-0.022090888290500633,-0.5489137810320602,-0.023465194257695752,-0.41,-0.0106975,-0.11,-0.01,-0.41,0,-0.11,0,0,0,-0.11,-0.01,0,-0.01,-0.61,-0.01,0,0,-1.01,-0.01,0,0,0,0,0,0,-1.01,-0.51,-0.41,-0.0106975,-0.61,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0.15800572633761178,0.3022815937901303,0.47090328287577177,0.2853061509313949,0.08499121228439703,0.2608157161607144,0.47481259058442327,0.24977134610086302,0.13616373047811406,0.23710712611833923,0.472158602832655,0.2395748243473644,-0.0673037992592847,0.10830938088023116,0.4370912888251898,-0.01,0.08371076667931415,0.21019199316495582,0.16078377672925614,0.1617893191783051,-0.19342464640323564,0.36571706807892146,0.18744783549029675,0.14390759131869024,0.01247305322358631,0.09992200109745064,0.3218061141223034,0.0922336474363957,-0.11,0.008787277056644114,0.38504904907387316,0.04208354374092096,0.19637092354080132,-0.17590659593884475,0.2808101780709734,0.21224724743423015,0.16569284988210417,-0.46163715947333045,0.3299842738585951,0.12400882138609645,0.060902719327367835,-0.39603641645089177,0.46145527835592326,0.11158220061993766,-0.06564076654028034,-0.51,0.3997660500257153,0.04362888531790809,-0.14331053625294154,-0.3724623349327203,0.4472682141943648,0.13690159943548855,-0.06324005452921222,-0.4985479620932401,0.411773404506559,-0.01,-0.06631154197813571,-0.4985338610167915,0.3179608503942132,-0.01,0.003916017003715445,-0.51,0.08248535215345248,0.01760369961336452,0.19095583846384942,0.3816968282023783,0.025611938348324995,0.029041068846715874,-0.029343012675773782,-0.0242629159738295,0.06996843475635421,-0.03712327284269225,0.003467240385603948,0.06000978095160858,-0.013008541151431258,0.0017747145567892763,-0.2271792706575113,-0.048104454942378735,0.0020305891326763683,-0.030945073309604554,-0.07649166943371839,0.0996369346824489,-0.061920465650201255,-0.015423487496828009,-0.19727721359895542,-0.050914875427622075,-0.01563913052322086,-0.04780274471837227,0.10109077926827259,0.014220361289314417,-0.013114907839445814,-0.025697870212922115,-0.0702902596487238,-0.05669262722971672,-0.06720572462918306,0.017927467016842464,-0.12864500396917491,-0.3001840457850712,-0.02627881519189495,-0.05375226925557976,0.02082943018538437,-0.5095582000267718,0.04931091636492764,-0.07841512472526412,-0.042365342972240996,-0.4258074278474103,0.015151775312049448,-0.03803326001468414,-0.11,-0.51057375,-0.04322842895737085,-0.09224363800068393,0.20246612606877257,-0.4683393502216411,-0.058788701288501055,-0.06081691006634729,-0.5223134153111336,-0.51001125,-0.022909698094917576,-0.05059913695500128,-0.35139537702389834,-0.4997267271653333,-0.08784004301675673,-0.04416874825386854,-0.09065914642244742,-0.51,-0.05773625610439432,-0.05868614033675701,0.226550621133954,0.2608765088845631,0.20059635590480768,0.07342146416146578,0.06515573653755258,0.03549780692908083,0.34643606962719853,-0.01,-0.003357874470596954,0.028195899248057998,0.008428574033265648,0.013349697465433127,-0.06404716327098518,-0.0039022146944502813,0.002352584798489335,0.019939357668916892,-0.19096099953979684,0.15300579805792128,0.05438367296496875,0.013653222469900434,-0.08870270710715068,0.014859234309865906,0.06484919193058922,-0.002192724037144043,0.04797229525033202,0.03947782533615346,-0.016282188331332288,0.03554403149460847,-0.06081128486156249,-0.021591862755617388,-0.02537119656542048,0.0666664715644068,-0.03912164530960164,-0.3728964210312737,0.30317479357331195,0.02654354394500924,-0.025784607810605285,-0.46055744589747705,0.2818394323733805,-0.0022439386865517,-0.012400827360725862,-0.5060194054525893,0.006706369504654086,-0.021116535939184233,-0.11,-0.5144700473523383,-0.013598645173814605,-0.023786308991656374,-0.03097358466380637,-0.5053684825056579,0.07419253276790003,-0.002265104717326682,-0.51,-0.50391375,0.08203266245264265,-0.01,-0.06271028488091786,-0.5057786930187275,0.0009920700020248129,-0.03045967120944541,-0.06938608268873173,-0.51,-0.013755962144305432,0.1734401868392152,-0.45055886714402177,0.34353463865458006,-0.017746779016928196,-0.019107694025639988,-0.11170906483294267,0.016663053870650504,-0.09055047023384204,-0.05640514956931394,-0.14100775944163327,-0.022901726998555277,-0.08034201708794485,-0.05865902697667332,-0.06026101435695588,-0.0640292926490845,-0.0671813670370235,-0.005300787090219564,-0.1902052687130892,0.17065295637377184,-0.06442498210192647,-0.059459669556731265,-0.16997663896927961,-0.07047285543114652,-0.04975197498536328,-0.06955643629752166,-0.1550261851426186,-0.0501169092441645,-0.0672776252850332,-0.03155996240389793,-0.06671533257434356,-0.033852067094970344,-0.03757861113110847,-0.03404380208866703,-0.17947158954980302,-0.46508769302833164,-0.13109137513322905,-0.08775570063117535,-0.0917176789540683,-0.5101215,0.004776901185541643,-0.07097473031528449,-0.11,-0.51,-0.05900043985910306,-0.08946203976637623,-0.11,-0.51,0.020540511555142922,0,-0.15225186649439446,-0.5022660898141991,-0.11282217683285306,-0.10625742156606834,-0.11,-0.5121967959375,-0.06812888475245166,-0.052228311144610316,-0.61,-0.51,-0.07158742325233607,-0.07116634575017744,-0.5297827918692581,-0.5124164435057381,-0.03804561075927469,-0.06626501803171733,-0.12678244444077502,-0.01,0.47148570508911825,-0.01,-0.61,-0.01,0.34878610622274353,0,-0.9922864164910002,-0.01,0.38366338561730756,0,-1.01,-0.01,0.25888093682036767,0,-0.11,-0.01,0.301444890384593,0,-0.11,-0.01,0.12503932014703806,0,-0.11,-0.01,0.14759473779896792,0,-0.61,0,0,0,-1.01,-0.51,0.3589405825885368,-0.01115875,-0.18142942489701064,-0.51,0.2720382806566262,0,-0.11,-0.51,0.21905923790401777,0,-0.11,-0.51,0,0,-0.11,-0.51,0.1503281780444695,-0.01,-0.11,-0.51,0.1332480803867419,0,-0.11,-0.51,0.12255669607826244,0,-0.61,-0.51,0.09,0,-0.11,-0.01,0.03725655738370247,0,-0.5626041430109908,-0.01,0.03990634276282378,0,-0.11,-0.03174839434174867,-0.024595797438881684,-0.03526571405080426,-0.11,-0.01,-0.007224298108648875,-0.01,-0.11,-0.01,0.07895377796273559,0,-0.11,-0.03116125,-0.023568390275655254,-0.029725433845421326,-1.01,-0.01,0,0,-0.11,-0.01,0.01172248744969211,0,-0.11,-0.51,0.00275927517581848,-0.021137500000000004,-0.11,-0.51,0.09,0,-1.01,-0.51,-0.010083450364312966,-0.01,0,0,0,0,-0.5288999050855241,-0.51,0.09,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.02861761974896177,0.323897815138451,-0.01,-0.18784443704462767,-0.01,0.19530749648266812,0,-0.11,-0.01,-0.0005561724089084832,0,-0.61,-0.01,0.06350926772093951,0,-0.11,-0.01,0.06061659543643098,0,-0.11,-0.01,0.09,0,-0.61,-0.01,0.09,0,0,0,0,0,-0.11,-0.51,0.16354723639171984,0,-0.11,-0.51,0.09,-0.01,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0.08663691537268561,0,-0.11,-0.51,0,-0.01,0,0,0,0,0,0,0,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.08113768099760398,0,-1.01,-0.01,0.07018878126708453,0,-0.61,-0.01,0,0,-0.11,-0.012025000000000001,-0.015752544241391046,-0.012725087500000001,0,0,0,0,-0.11,-0.01059625,-0.012862042671998825,-0.044491318171006725,-0.11,-0.02305854001137145,-0.030403312427784122,-0.01,-0.11,-0.51,0.09,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0.15512225274486816,0.44662554088072404,-0.26772125210573555,0.11899824808381615,-0.04119832268055798,0.4426786410037546,-0.33258251565792835,0.06744798803960236,-0.12272276883062301,0.4375251969443345,-0.37605814678646143,0.012990135035908327,-0.09104077959902178,0.41273113222144747,-0.32244047169810386,0.017707928282563755,-0.022254177041824225,0.3553403523520373,-0.3825266759653865,0.09383442790349107,-0.07837232196844057,0.3860277789204977,-0.36804741353489406,0.03463902283956017,-0.11,0.3118957821705606,-0.41,-0.01,-0.16068625,0.19955085810139117,-0.41,0.016365077120732666,-0.13631799796956384,-0.17574940771777947,-0.1815453634854034,-0.1392260754812742,-0.19476312011209815,-0.33673217504264685,-0.24159823675077516,-0.1543781764685215,-0.3254367953522246,-0.41364117326529515,-0.33320220642992776,-0.1493988511323645,-0.10480128455797127,-0.50346375,-0.3774141844752039,-0.14054358738660525,-0.18650958529984757,-0.4021469751154467,-0.31116066658588476,-0.13188147850483736,-0.2428768635328864,-0.5106975,-0.34082753594610166,-0.13705582302801259,-0.2448239107111649,-0.4778220198652067,-0.39171042532327854,-0.14434137934492228,-0.11,-0.51,-0.41205250033375607,-0.0967159047197319,-0.4551160046212736,0.3778125389198977,-0.4342575959789347,-0.024652216356435157,-0.2964985714586507,-0.09850330426307424,-0.5302341402139528,-0.10532038245561058,-0.10477099548151075,-0.049882947246867926,-0.45766144120394037,-0.08445678768655158,-0.08363570300320942,-0.09803977187798243,-0.44299318321134673,-0.10144791773762886,-0.18942426937007703,0.06193070615595571,-0.45343839704827305,-0.030835957368618862,-0.09497847802177661,-0.04986726137405145,-0.4526176536168943,-0.08591660620715669,-0.09235670025195555,-0.014237656592122182,-0.41022398749999994,-0.06534310383397031,-0.09984938955673377,-0.0866798173454334,-0.42113749999999994,-0.0734511933328644,-0.38559289971663413,-0.4841075254559003,-0.4829142626995008,-0.10154751262257307,-0.1647337618301031,-0.5173629346724343,-0.5032792678926187,-0.15678839205410325,-0.11,-0.51,-0.41217125,-0.06835392023780902,-0.1453132259313638,-0.51,-0.41,-0.14541031677130845,-0.20138982134832667,-0.51,-0.41,-0.15871969334402514,-0.09676834979741741,-0.51,-0.41,-0.12165313492880547,-0.11,-0.51,-0.41,0,0,0,0,0,-0.049009521330535225,0.3305928649964163,-0.31618168574199607,-0.014421545669231019,-0.08018314582725329,0.32376325731919514,-0.412025,-0.013592076373498501,-0.295082667802843,0.03311039580989601,-0.44176970022642637,-0.03798282902689565,-0.0799831476871743,-0.058541444892379293,-0.4323372067096239,-0.0367177205612917,-0.03304221580071781,0.048401793021285534,-0.41366151719665345,-0.05887570154209575,0.12842913125908875,-0.004586522663439056,-0.42106204964634897,0.0027452731967866958,-0.2150645912067684,0.02188926516757648,-0.43196401359799996,-0.020286346885618308,-0.1986039683475152,-0.11236602501339601,-0.4377872175280291,-0.04982439877637405,-0.4347332363322716,-0.41859505371867933,-0.384330672296599,-0.11141257663502266,-0.10624979887902658,-0.51,-0.36469070368740064,-0.08965940077384221,-0.5383649356796257,-0.5055644361111432,-0.4196454065326563,-0.07754864397469023,-0.1055438192476319,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.01874584512799592,-0.6081467741382046,-0.51,-0.4122491421875,-0.06375805224437764,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.07810001622123434,0.3249924277015847,-0.41115874999999996,-0.021254010275136792,-0.4292071742267416,-0.06078541037311182,-0.4615139541429091,-0.09920471453321858,-0.10389699438100047,0.05362582403422528,-0.41080887499999996,-0.07312139559314842,-0.44779069055649223,-0.11085435055971658,-0.438247650567638,-0.11129661082558528,-0.11,0.11803272274234083,-0.4106975,-0.021126587233181365,-0.61,-0.0468717602808343,-0.41011137499999994,-0.058266310772942864,-0.15465936523727503,-0.01578587339421105,-0.41,-0.019038171776655566,0,0,0,0,-0.09771639659298723,-0.510135,-0.42226450728111886,-0.1103744596961453,-0.11,-0.5106975,-0.41,-0.06324497341764089,-0.61,-0.51,-0.41,-0.010585,-0.11,-0.51,-0.41,-0.010135,-0.11,-0.51,-0.41,-0.096494448101837,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.61,0.3690745801449873,-0.41,-0.01,-0.11,0.10893795761908945,-0.41,-0.01,-0.20146250000000002,0.07757046270708706,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.01,-0.41,-0.01,-1.01,-0.01,0,0,-1.01,-0.01,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,-0.04576834721378294,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.08533436367325717,-0.41,-0.01,-0.11,-0.10794566248926704,-0.41,-0.09449923633481028,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.01,-0.11,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.022850012081758367,-0.41,-0.01,-0.61,-0.01,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.61,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,-0.51,0,0,0,0,0,0,-0.11,-0.012025000000000001,-0.41,-0.01,-0.11,0,-0.41,0,-0.11,-0.01764311292754385,-0.41,-0.01,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0.18932492516767976,0.4404407035280197,0.319280819913509,-0.18275641188692063,0.2478539026775543,0.3712604210425098,0.5002299897431286,-0.2681101471555514,0.21872524948100625,0.3085214479656428,0.5281277228628637,-0.2773989644212743,-0.05267486920891045,0.07670960314504882,0.5046369434571499,-0.3902168142608071,0.23640965012991058,0.2740451887266154,0.5207154371210062,-0.25664747588190295,-0.1227762034496521,0.0915855523893103,0.4924949224824409,-0.4676683178346284,0.11908078831544508,0.11000525393442022,0.5069808206129969,-0.4780518265392767,-0.61,0.01603311461352675,0.5339520359866298,-0.48554846732284307,0.21148417442533243,-0.2399628856335381,0.4990927530641226,-0.32021111456234397,0.021642466074342375,-0.33918368465150206,0.5027391244109884,-0.40098180917707227,0.024934867341259426,-0.4724926426204091,0.5209471940359728,-0.4957310742887297,-0.07270291151555378,-0.50290125,0.5140125371517952,0,0.008563004085467,-0.435922280553478,0.49778168161390735,-0.4372241785168726,-0.027370630346854476,-0.5106887250000001,0.532441483762168,-0.45439122980954394,-0.11,-0.51,0.503058303057368,0,-0.11,-0.502204463929395,0.4122143492767083,-0.51,0.02239838585555555,0.2513699468067829,0.531905149760982,-0.36045093911945975,0.012151555966696717,0.17300650262331801,0.5126943904516217,-0.48827861468529066,-0.0830547272795534,0.11301710941773861,0.5048163275157262,-0.4237492648914394,-0.10824246228143405,-0.01,0.5273113833793359,-0.51,0.05162777059143158,0.10534966861555523,0.5237961529626005,-0.40010114239072014,-0.4317846242726524,0.042378948043448134,0.4420903828597545,0,-0.11,-0.01,0.5109505478882465,0,-0.08275110023832512,0,0.4628343618701319,0,-0.04597860805635711,-0.4423760232836178,0.520943906623384,-0.51,-0.07961428496986259,-0.5085423905293045,0.5128167615716963,-0.5037649911284462,-0.09068989962325176,-0.5052104856005579,0.49493586523611416,-0.51,-0.11,-0.51,0.4608638463115384,-0.51,-0.07796403905142694,-0.51,0.49199282217847023,0,-0.06805576725483134,-0.51,0.467131452443915,0,-0.11,-0.51,0.4657537386835424,0,-0.11,-0.51,0.18951664497340945,0,0.17405828110390958,0.3546075319790096,0.5305120764780299,-0.3519049362559775,0.04881019190967135,0.025135217129468083,0.49180367295620264,-0.4610600756494308,0.1882469985989342,0.1324029792662005,0.5265502483395135,-0.4046343629287399,-0.03251704041688446,-0.01,0.3545043454788144,-0.51,0.0830516993266805,0.14971825744360223,0.3898828468725612,-0.3719786903768916,-0.11,-0.01,0.4693715749725861,0,-0.10007146714479405,-0.01,0.438396527130078,-0.51,-0.11,-0.01,0.3030736277137725,0,0.01166864741402937,-0.45548683436669607,0.45797118195974035,-0.49840787121357044,-0.061967512051039855,-0.44433333419835663,0.45127933635061723,0,-0.05169086433566426,-0.5040887035738773,0.47513508849067426,-0.51,-0.11,-0.51,0.37550148471712186,0,0.015721322532724742,-0.493763320871549,0.5030197645510559,-0.5054259696517,-0.5163164872360223,-0.51,0.422816444241298,0,-0.0689230843148569,-0.50230699539875,0.18123909134928184,-0.51,-0.11,-0.51,0.09,0,0.10405856730873711,0.08291850877469256,0.4331997845709178,-0.47799845778944355,-0.01614580515710682,0.04993697092356027,0.4045863718676008,-0.4818227388713711,-0.17143739308432882,0.03979293512436495,0.43036313308429164,-0.49100892739128554,-0.08909782755199298,-0.01,0.3128364043991506,0,-0.06643397043600201,-0.01,0.29834717519133536,-0.4979518916012872,-0.0429987560047412,0.0030348111806234278,0.12679001632134118,-0.51,-0.11,-0.01,0.280852588918898,-0.51,-0.11,-0.007545477170897949,0.31270683891322865,0,-0.08247195269538596,-0.5046528460385763,0.4149410955364563,0,-0.11,-0.51,0.39804427898332584,0,-0.11,-0.51,0.33259359307185965,-0.51,-0.11,-0.51,0.1345485366750404,0,-0.11,-0.51,0.34999966062409266,-0.51,-0.11,-0.51012375,0.05817235676708406,0,-0.11,-0.51,0.1971133524631832,0,-0.11,-0.51,0.09,0,-0.11,-0.01,0.533103177283569,-0.51,-0.934691001262064,-0.01,0.47693038887861505,0,-0.11,-0.01,0.4812354416160834,-0.51,-0.11,-0.01,0.2074482227869029,0,-0.11,-0.01,0.35425399731840734,0,-0.11,-0.01,0.1759844029873478,0,-1.01,-0.01,0.13541418521680754,0,0,0,0,0,-0.11,-0.45417669175836706,0.3101071083099647,0,-0.11,-0.51,0.3461809844043093,0,-0.11,-0.51,0.39151062864194475,0,-0.11,-0.51,0,0,-0.11,-0.51,0.25071808610110063,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0.028712384878154425,0.4415441846043381,0,-0.11,-0.025941105542460964,0.32581768507099,0,-0.11,-0.01,0.2772942440053975,0,-0.1114444019966116,-0.01,0.09,0,-0.11,-0.01,0.09,0,-0.11,0,0,0,-0.11,-0.01,0.13678999712350123,0,-0.11,0,0,0,-0.11,-0.51,0.28986938568400294,0,-0.11,-0.51,0.16361867402239696,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.13450597610260834,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.01,0.460464861396943,0,-0.61,-0.01,0.17829639735171376,0,-0.11,-0.01,0.23923990912398113,-0.51,-1.01,-0.01,0.1349890111481916,0,-1.01,-0.01,0.15187600777185503,0,-0.11,-0.01,0.13418722966042712,0,-0.11,-0.01,0,0,0,0,0,0,-0.61,-0.51,0.17604146894378842,0,-1.01,-0.51,0.24046340691335238,0,0,0,0,0,-0.11,-0.51,0,0,-0.61,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.02487220331553433,0.17404961782353334,-0.51,-0.61,-0.04306749821702313,0.20568225470546161,0,-0.11,-0.01,0.13551992360415804,0,-0.11,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-1.01,-0.51,0.1771594260563993,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.09325203937055818,0.46616591002011004,-0.16178558314484393,-0.3988981097979294,0.004848796195555933,0.4472017413846788,-0.2958143329553313,-0.4847987876195858,-0.058952557798099686,0.4471978367180776,-0.28512559300894547,-0.481991464188017,-0.09039345907136877,0.427158139234928,-0.41,-0.51,0.041546419085609555,0.43176577907410096,-0.3672668704794954,-0.4790333157358597,-0.0586501714751255,0.42005630881519684,-0.3838749507371427,-0.51,-0.11,0.38619261710179487,-0.41,-0.5106971102236523,-0.11,0.21041281350700755,-0.41,-0.51,-0.33350098603008377,-0.4492446438919333,0.011941228096023597,-0.5266720505041008,-0.39282202097403374,-0.51,-0.03777086563956432,-0.51,-0.40871247286509993,-0.48221489215616614,-0.3212180668271781,-0.51,-0.34177712431134794,-0.485881735380416,-0.37471714478922813,-0.5198874662039665,-0.3982687786073182,-0.482953974486019,-0.2164075811932873,-0.510135,-0.19208393472584698,-0.4829016647794272,-0.41,-0.51,-0.4539151871611749,-0.51,-0.26432981509622744,-0.51,-0.14603967558805273,-0.51,-0.41012374999999995,-0.5163846630347091,-0.03151904783320575,0.38383342803799947,-0.35060357695065,-0.517325226205926,-0.16481346901534716,-0.1305388535554581,-0.2699872780911159,-0.5225710627890183,-0.07719041567415691,0.02499986160837569,-0.3584849452215911,-0.5257470140739388,-0.10500750805886709,-0.135692153779653,-0.3213408473100433,-0.5212091189947636,-0.1803366497489475,0.09035356703018729,-0.41,-0.51,-0.4439419605120402,-0.15576031389768413,-0.3520993305351857,-0.5170055462895184,-0.09962621964733558,-0.013484779537775656,-0.3695827106453848,-0.5115888345808665,-0.51,-0.01,-0.41,-0.51,-0.43239461138262575,-0.51,-0.07624803099346952,-0.51,-0.61,-0.51,-0.30251924608588754,-0.51,-0.18973708173579235,-0.51,-0.39999109028435237,-0.51,-0.11,-0.51,-0.41,-0.51,-0.14068563148423965,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.3577941049586302,-0.26042083338618643,-0.5055660676915444,-0.11,0.35150630027540847,-0.36738770736059945,-0.51,-0.01968690336935538,0.08811834112889792,-0.30366295280824634,-0.5116925368444775,-0.11,-0.046044543160856245,-0.32768245063773693,-0.5038365614873089,-0.11,0.13724346480729693,-0.34810329212292146,-0.51,-0.07570737103850589,0.08062534959987935,-0.39836334597329315,-0.5038804381229908,-0.08031695195248016,0.03572859119953362,-0.41,-0.509332715113709,-0.11,-0.014467544978229888,-0.41,-0.51,-0.11596598839488904,-0.4792965318446859,-0.36581595400658545,-0.51,-0.16349918916765643,-0.5019225184201859,-0.39940192252018086,-0.51,-0.10688493799656974,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,0.31901327455393963,-0.41,-0.51,-0.603529,-0.15700527231243305,-0.36733755013886743,-0.513212915625,-0.09546100783669459,-0.11147669657035034,-0.37659841802313465,-0.5172378599586821,-0.11,-0.01,-0.41,-0.51,-0.07817140678746115,0.12751438681968968,-0.40125623213148665,-0.51,0,0,0,0,-0.11,0.015557395452688912,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.41950969324952525,-0.5114625,-0.3774135253608959,-0.51,-0.11626523106661818,-0.51,-0.36768964652752806,-0.51,-0.11,-0.51,0,0,-0.11209193347615355,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,0.3213934606668803,-0.41,-0.51,-0.11,0.03619104737531263,-0.41,-0.51,-0.11,0.07642220963580847,-0.41,-0.5393847518662747,-0.11,-0.01,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,-0.11,0,-0.41,0,-0.5065058438394796,-0.51,-0.3154933381798718,-0.51,-0.13102329717689545,-0.51,-0.41,-0.51,-0.5065058438394796,-0.51,-0.3818124619457584,-0.51,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0.07113397985535977,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,0.05961571099200827,-0.41,-0.51,0,0,0,0,-0.61,0,0,-0.51,-0.11,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.01,-0.41,0,-0.11,-0.01,0,0,-1.01,-0.01,-0.41,0,0,0,0,0,-1.01,-0.002782543413216889,-0.41,-0.51,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0.21388926534981043,0.43150038709810723,0.27715969289902587,-0.34089837704851533,0.04078206137327708,0.2110217396856221,0.4039634611665367,-0.44211928080191226,-0.027277384001967178,0.12429854250209736,0.44249473919092686,-0.51,-0.07017315214095891,-0.01,0.4658427359082057,-0.4708781578034532,0.13584356518810675,0.39808426811110464,0.1785111640210235,-0.47131429318166784,-0.11,0.10398666628137074,0.38195423641782345,-0.51,-0.5184203131529562,0.09330196478048194,0.35236049535684805,-0.4882663707774972,-0.11,0.15948531340024294,0.032823412466651596,-0.51,-0.038286163537907855,-0.414501848524805,0.42881399642764395,-0.5109649710032189,-0.3546952698881863,-0.4784607248255917,0.3981166720347835,-0.49993458440417693,-0.11,-0.4495750672921894,0.4359440905075927,0,-0.61,-0.51,0.36548689580467203,-0.51,-0.11,-0.50290125,0.38594458655656044,-0.51,-0.06894802561783292,-0.51,0.39013805203544755,0,-0.11,-0.51,0.33401231050726743,0,-0.11,-0.51,0.20922324746973364,0,-0.048453583388880124,0.3747346853464177,-0.01884274941759847,-0.5143333825723988,-0.12962222644014437,-0.08107100768775555,0.020723007533464084,-0.5096319076774585,-0.06490400149214912,0.003266528948333283,-0.05458627710410816,-0.5177610809342085,-0.08888624966428817,-0.08571338982616383,-0.08555666681647124,-0.510246375,0.17907628855696217,0.0590253382006461,-0.02914812357955541,-0.5053263684095383,0.11695670883443987,-0.06701232157673301,-0.06175720805169301,-0.5165112254200154,-0.15635928362685875,0.020051716644262786,-0.03790954707091715,-0.51,-0.14426198547855495,-0.07139052611089283,-0.06547513734159269,-0.51,0.06674758223618286,-0.31315787555916036,-0.012141682969489571,-0.5188935152232439,-0.07919706808515163,-0.510111375,0.05358822483717449,-0.51,0.026471970956337944,-0.5140932204708203,-0.06175760339575019,-0.5147180293346826,-0.11,-0.51,-0.016412746319113082,-0.51,-0.47380307106879094,-0.5021684245816502,0.014634794965274098,-0.51,-0.11,-0.51,0.08834823503488223,0,-0.11402030844864004,-0.5123716197050966,-0.0929650930021314,-0.514485375,-0.11,-0.51,0,0,0.038840974013055314,0.34544842288338196,0.15291182997551533,-0.4996958843350455,-0.13751082514880525,-0.01,0.3595921552645744,0,-0.014924184880091375,0.09110586967426963,-0.02402822860974977,-0.5118220231752655,-0.06786371859619302,-0.02305022272211887,-0.026012856605059916,-0.51,-0.06763564155287016,-0.01,0.1013685505504506,-0.51,-0.11,-0.01069903604875666,0.06737398574157645,-0.51,-0.61,0.0742344056045142,-0.012910247650154248,-0.51,-0.61,-0.021917616664208796,-0.020532727564640207,-0.51,-0.11,-0.51,0.3897633682200425,-0.51,-0.11,-0.51,0.2802522602780699,0,-0.11,-0.5050238203079902,0.025293715547322602,0,-0.11,-0.51,0.08110742821121535,0,-0.11,-0.51,0.04026441919470396,-0.51,-0.11,-0.51,0.05505246630067996,0,-0.11,-0.51,0.02708239812892772,0,-0.11,-0.51,0.07078262717539135,0,-0.519223927112265,0.3253661399746926,-0.012751376067266154,-0.510135,-0.1320882101780781,-0.11956892355001165,-0.12552825861268554,-0.5142555911261653,-0.11,0.07705354855981218,-0.012191352426163607,-0.5155465643349993,-0.15528703822821455,-0.09444137460743342,-0.08987021334836051,-0.51012375,-0.07413089256846223,0.11231241790106813,-0.01077073661622269,-0.51,-0.51,-0.01,0.04333639800441261,0,-0.08590493128856018,-0.009482387890806392,-0.029857457351803,-0.51,-0.11,-0.0710688325348458,-0.0703331972620973,-0.5128562532904029,-0.08210238997008867,-0.51012375,-0.001618386327326153,-0.51012375,-0.0987041741644875,-0.51,0.05621769205942284,0,-0.11,-0.51,0.06341557423233174,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.00812047839203741,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.1463170558367783,-0.5258667225686551,-0.1283063366030921,-0.51059625,-0.11,-0.01,0.3604743469261891,0,-1.01,-0.01,0.21927871511254657,0,-0.11,-0.01,0.1923525757073452,0,-0.11,-0.01,0.21928417716827023,0,-0.11,-0.01,0.19846853634328057,0,-1.01,-0.01,0.12893855016343517,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.51,0.16646797532640442,0,0,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.61,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0.06770787113258947,0,-0.11,-0.01,0.08781405915846291,0,-0.11,-0.01,0.08054222986876329,0,-0.11,-0.01,0.09,0,-0.11,0,0,0,-0.11,-0.01,0.09076584866089715,0,-0.61,-0.01,0.09,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.06979198190932458,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0.09,0,-1.01,-0.01,0,0,-0.07181935643692967,-0.01,0.030804494374904436,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-1.01,-0.01,0,0,-1.01,-0.51,0,0,-0.11,-0.51,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.09,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.009452335899923437,0.43600989967847326,-0.340516417372408,-0.5123855443002682,-0.07482007342664743,0.4230248750687476,-0.41,-0.51,-0.11,0.40991590751909635,-0.41,-0.51,-0.11,0.2650296407646424,-0.41,-0.51,-0.11,0.38595596465174237,-0.41,-0.51,-0.11,0.240427847783645,-0.41,-0.51,-0.11,0.1986575178065315,-0.410671625,-0.51,-0.11,-0.011260000000000001,-0.41,-0.51,-0.11497154667042084,-0.4790551730699519,-0.36576144102926605,-0.523123487941507,-0.17606307056343046,-0.49878166031424065,-0.41,-0.51012375,-0.15365540645716347,-0.51,-0.41,-0.511629,-0.11,-0.51,-0.41,0,-0.4473724449163864,-0.4913228693024875,-0.37291984165165504,-0.51,-0.14586225662860242,-0.51012375,-0.41012374999999995,-0.51,0,0,0,0,0,0,0,0,-0.11,0.37669745434205404,-0.412456107075877,-0.51,-0.23419995904024013,-0.11818187110475023,-0.41,-0.5140769823960452,-0.10564501851441849,0.02684668045483861,-0.41,-0.5106975,0,0,0,0,-0.11,0.05126973618349203,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,0.03929957635135367,-0.41,-0.51,0,0,0,0,-0.1547058382944816,-0.5106603749999999,-0.43843366197772676,-0.51012375,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.3400100203389765,-0.412937476600119,-0.51,-0.07484732000374889,0.24363879428844645,-0.41,-0.51,-0.11,0.08231668585197076,-0.41172012499999994,-0.5166217480471623,-0.37966540717896513,-0.07404022697853974,-0.41,-0.51,-0.11,0.1379867996745328,-0.41,-0.51,-0.11,0.014064546169939258,-0.41,-0.51,-0.11,-0.04718926905294195,-0.41,-0.51,-0.11,-0.01,0,0,-0.1448981946181911,-0.5111475,-0.4063698450597677,-0.51,-0.11,-0.51,0,-0.51,-0.10220987541969839,-0.51,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0.16144394640550677,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.61,-0.0754055364674953,-0.41,-0.51059625,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.13344797537965797,-0.51068625,-0.41,-0.51,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01113625,0.06881640346814558,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.01,-0.41,0,-0.11,0,0,0,-1.01,-0.01,-0.41,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.01,-0.41,-0.51,-1.01,-0.01,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,-0.41,0,-0.11,0,0,0,-0.11,-0.01,0,0,-1.01,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3545463298050429,0.440847196031356,0.5088082070723159,0.44661525604135344,0.3393748726454104,0.43097688568278875,0.5108741366660946,0.4271245804178695,0.22906864409168798,0.42874425918873776,0.550691476852748,0.43661054627162166,0.25677400905465075,0.43240113145665116,0.5467188170160512,0.4231458663382234,0.29822221677167765,0.3893659213329679,0.36936931880148083,0.4628116653632971,0.2733017727209843,0.34538768850105717,0.5372671898906975,0.37164140445515426,0.3184550683005558,0.3785633824175939,0.5025211603405654,0.3915583532156807,0.25001546608382724,0.40236764899838867,0.5392858638069145,0.40966444650068606,0.31803274071784055,-0.05325114884607158,0.524854338222875,0.4478764960276357,0.3378908905648965,-0.057029780549875585,0.5273391051158574,0.43579170153471297,0.3405593504682327,-0.04978280139613445,0.5263755265041209,0.4468245033296537,0.34668559945984123,-0.06192689649353915,0.5368441384961098,0.4317153254652413,0.25035458445275044,-0.06040972591071256,0.5545372066105876,0.39177059584174634,0.3384585881070293,-0.06932578516156791,0.4103276008857037,0.44445317270957074,0.29389793241157147,-0.0704611592645891,0.5249999635005447,0.40662498791222773,0.20483281474598683,-0.19224814095236006,0.5039691662449474,0.31609421757675804,0.2676323613193902,0.3816648589354299,0.4160433861668848,0.45188812615037766,0.18762319969203797,0.37765993852687607,0.5360576116121144,0.4414665342851082,0.13553884980820874,0.3935210729863303,0.5310217133818639,0.46119231467803706,0.20511836235143474,0.38773078510222453,0.5232196478281056,0.45992862484516045,0.22953010685838404,0.3856215995942075,0.5322416430626918,0.45922016450524245,0.08636189069075353,0.3739378370042559,0.5343420876177831,0.43895336960933495,0.16116043584709183,0.39111027966176365,0.5464603569718246,0.46063668084204684,0.0993735396446299,0.31511809624281545,0.5419638312376395,0.4255290222173099,0.2857265727375849,-0.12430496119380754,0.46091943235898186,0.4631558445066044,0.30340497498426505,-0.137917738319435,0.5454555229782055,0.4404910873378681,0.31154126747506206,-0.1621351982847991,0.5294220043838013,0.45674692593234506,0.09913398332303164,-0.26406715107426415,0.524701631703827,0.41166522071923,0.24958914144223082,-0.20549650288217014,0.5509757303132581,0.41557589953624907,0.22115103938207623,-0.3344608621867562,0.3904605665806368,0.45674327938577397,0.19928909388178453,-0.2843316860627628,0.5373498270722665,0.25766659114283075,0.03234612358537196,-0.4494994574884392,0.5281604165529651,0.2330259805409604,0.3303842910539986,0.412404373010409,0.48798386720866316,0.44556260667996095,0.3035182381612604,0.39909016380562995,0.49347880533043276,0.4323641821981283,0.2649817213519824,0.32474862791725895,0.4119561360485592,0.46176125512976085,0.2727764959015141,0.34206517688542215,0.5372336650864836,0.4249685991403838,0.2906995231176662,0.3764464164072885,0.390143039495343,0.46095354033789276,0.3090744205148738,0.31740821364105004,0.5269860216400076,0.32066547620177016,0.2617131889994193,0.3297179365197707,0.5362573945070855,0.41466991399403286,0.05386187146444607,0.1526928153383277,0.5411499202075405,0.2628243754353363,0.348512296108907,-0.10346143757279837,0.49423663347950525,0.4544705521538981,0.34546807896091336,-0.10734367394106614,0.4856452035409063,0.4462302526447749,0.32534594417070256,-0.15823903519382918,0.5379563304526572,0.43395757468074253,0.1076498024123684,-0.2694224665501449,0.5309288880095092,0.3183270422659874,0.3442983267022211,-0.14308574670669655,0.44735523799008464,0.4614912117078578,0.1744158280180767,-0.30844859761856447,0.3810632992956778,0.4558502291085201,0.24145235688559238,-0.23206901242127834,0.30201731117338965,0.46005629842564666,0.08686441859296544,-0.39277523865627256,0.5435164331306409,0.19894228453925303,0.24862113317436121,0.3697837580980494,0.5012402677023832,0.4020003576348087,0.24456987594339988,0.3320132369521487,0.523644085452021,0.3643436783697741,0.18677853780755138,0.3591915422281269,0.5379622097518793,0.40986397057650964,0.13495476163203765,0.25252080244900416,0.518878474415777,0.404802956216851,0.1766335430786879,0.3576049616191683,0.5420160781852394,0.38495068078807926,0.16013134346868696,0.2669952110978501,0.5255401501653101,0.3118325369691237,0.1694220519573155,0.2860784030827601,0.4938170582326904,0.35363682937445695,-0.11246855224812223,0.16015624611470833,0.5198549231621745,0.06350340153731907,0.3114491409649097,-0.16557081093473125,0.5105107302333282,0.38433263017214964,0.10216042584441976,-0.26835792160981625,0.5129015152300532,0.30493426992472156,0.09828006371223075,-0.22726165467759366,0.5334369903754059,0.2975386144543258,-0.36655628376035193,-0.43099278512456635,0.5202327979029371,0.035569085924256595,0.21183028407207266,-0.3232705721282961,0.515255623195352,0.17851224469280413,0.07417737532287824,-0.43559321331976447,0.5277110871406201,0.0364322728843488,-0.028417215529417367,-0.48161389122240367,0.5057290190509679,0.036816996243059334,-0.07319043142817737,-0.495889718810525,0.4906814540902589,-0.01,-0.25794168425895586,0.43435922734876653,0.5148241611298005,0.43914040854154046,-0.08654887950129564,0.3126720963140321,0.5120791086113659,0.275229385687886,0.04916206939532122,0.33538636376074704,0.5144078381036207,0.2946864197057933,-0.5336661341793151,0.1651367437939694,0.5167935806066903,0.07562048608792436,-0.09760160002444085,0.36195274576162606,0.5257105553892348,0.37901600426192,-0.11,0.14259440826463202,0.5136898035294284,0.14817142116909277,-0.0629386401263122,-0.01,0.49163217417869637,0.1152403217092419,-0.11,-0.01,0.5361265307172023,-0.01,-0.11387475526639931,-0.13306960822737146,0.5293963000651087,0.24834751659407625,-0.17939365736887258,-0.4527714215904666,0.5158721287118481,0.036163554152702275,-0.16093627843008018,-0.43767304290333225,0.5322886672964179,-0.01,-0.11,-0.51,0.5200167880929449,0.07924291460265076,-0.11059625000000001,-0.36981827718055765,0.48184634322574876,0.07508365115932493,-0.15418599947494832,-0.43702975855483017,0.48755613870683967,0,-0.5203035175483701,-0.46563402626462225,0.5170330115807363,0.037067200784221516,-0.11,-0.4962313329877197,0.43875536063833626,0,-0.1105271588170998,0.23268178533500258,0.5150496081977001,0.28625713008824416,-0.1665253508654696,-0.0022920934081864155,0.5319326748323002,0.1809631916822995,-0.09007471226287742,-0.009007561928781292,0.5386520577409897,0.07629189484462143,-0.11,-0.011187571651862169,0.5349750082790445,-0.01,0.005011066788369108,0.016187944039025,0.5357690326047915,0.07791041174858954,-0.035969486684522184,-0.01059392519509767,0.48770973480085755,0,-0.11,-0.01,0.5454898729299053,0.03720753540417902,-0.11,-0.01,0.47141580841386593,0,-0.057912507212672895,-0.4384403540718449,0.5220111480292102,-0.01,-0.15475820083731384,-0.51,0.5296768343220418,-0.01,-0.15524385762111312,-0.51,0.5269309516377834,0,-1.01,-0.5472222311938212,0.478511603228519,0,-0.11,-0.48657595254631036,0.5393826662294737,-0.01,-0.11,-0.51,0.40155632390099977,0,-0.11,-0.51,0,0.326983290791772,-0.61,-0.51,0.09,0,-0.06503104520567998,0.2580997670089795,0.502593334106452,0.262664346485599,-0.5263956128773464,0.10371185874986684,0.5119856467980396,0.11358481364003087,-0.764375934701868,0.08664280776706079,0.4793762006025045,0.08017089546323217,-0.015500520427551456,0.028379899134257064,0.48070879320791987,-0.01,-0.16977394064002635,0.0578327178078267,0.5313286388549847,-0.01,-0.19079063449488565,0.059230511351305,0.529957902147433,0,-0.6584068296697307,0.02612891704719178,0.5379259022266183,-0.01,-0.11,-0.01,0.4083796294463838,0.07897710564057364,-0.486862950324238,-0.51,0.5321370510676636,0.03506058776101224,-0.11,-0.4941108005792563,0.5059374005434278,-0.01,-0.5955451275484936,-0.51,0.5157936906348396,-0.01,-0.11,-0.51,0.4432280458799959,0.0336104137161702,-0.1586261499114287,-0.51,0.5076178219669627,-0.01,-0.07011584699259955,-0.51,0.45987560217473317,0,-0.11,-0.51,0.34203631914214755,0,-0.11,-0.51,0,0,-0.09755572922741935,0.11827352739848539,0.5166501726699086,0.14752010863914328,-0.08547961819898027,-0.024566962047429194,0.5067538567934459,0,-0.11,-0.03321866390631101,0.5123237282159512,0.0762778556181229,-0.11,-0.042213743921236654,0.45736537045252607,0,-0.11,-0.01,0.5275807043587623,0,-0.11,-0.01,0.4464086774569976,0,-0.07211068444013286,-0.01,0.47428946542965533,-0.01,0,0,0.17672368235703576,0,-0.11484791698239763,-0.4748103815806038,0.4849186153513694,0.03552086290712014,-0.12053238809983025,-0.51,0.44440104776783046,0,-0.11,-0.51,0.4161154758522108,0,-0.11,-0.51,0.24847827758603608,0,-1.01,-0.51,0.3637200043077701,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,-0.11,-1.01,0.2045926608420687,0,0.22129709790728488,0.45264417731675033,0.019770702210172124,0.42492182115064425,0.21101702151775842,0.45564095270706695,0.035393104722992175,0.4231900653201274,0.25679267604929457,0.38535593553089487,0.03378477877266053,0.45058669057339445,0.20308248593387243,0.41354106005053587,0.018761983821444395,0.40026420398889706,0.29766365609240875,0.41262320197876856,0.03453275929030836,0.45860315533673235,0.29385239382691775,0.42975540939696677,-0.05687002342512931,0.4147702769647207,0.16094173241879078,0.3968956776802816,-0.06342011792183042,0.4469535613726343,-0.01858184912599138,0.42968049096022976,-0.23354506570218592,0.2684028818768228,0.16683481250391666,-0.04520352791736038,0.03939729654879178,0.44756270534112913,0.22443203731974642,-0.07091042770161386,0.01718040794474267,0.43133267070070086,0.18086872587188965,-0.06355639932316434,0.03440518509226853,0.4479651409710882,0.050184802743648345,-0.29692714770923667,-0.08173966282947136,0.4556957125701108,0.1874166089644261,-0.1192887802779328,-0.07368107093893166,0.4449610286275941,0.06819082218011341,-0.2549524307491536,-0.13776524751017674,0.4380294965130726,0.06525850339703175,-0.3575809922422069,-0.16687653699001118,0.4550501618874248,-0.04633639850166551,-0.46510886024797765,-0.29167927850236247,0.4469677000138313,0.21374387563691669,0.3928537303361631,0.028549008728322646,0.46040803363882726,0.08579272904409793,0.32290179544667685,-0.015522993615768449,0.45907246472184615,0.1183829494886466,0.3305094367206135,-0.01982573696611562,0.4614602884143892,0.08846849875198678,0.24905332589828105,-0.13316328163170185,0.4607445147342477,0.22404424811260354,0.3294474424765362,0.0011997451724028675,0.4603105320149168,0.03252017007784107,0.26767054909686633,-0.15965385096674814,0.46071989195785984,0.08314906004360043,0.15345750855003615,-0.1962279939257302,0.4602045722904219,0.008472390018779821,0.04915792138924317,-0.36716519345285503,0.4596179559432827,0.2216484245471278,-0.13565792514255015,0.014047559888276388,0.45743338757052965,0.05939688590737875,-0.31416900323650016,-0.06987369141824049,0.4585500315662651,-0.14622276021786526,-0.30535389564663085,-0.10220534985265278,0.4533792541343613,-0.4112036379725759,-0.47980631724487127,-0.28791556173693666,0.4546335078840905,0.01309096669956369,-0.3532910160935446,-0.18403685775027503,0.4577226627836338,-0.07582862416586308,-0.44791386634432667,-0.4107515,0.4548135553334209,-0.11,-0.46909864222765535,-0.25627102669612123,0.4555492368192749,-0.06825430728178417,-0.51,-0.41,0.4568492253942876,0.25839984186418435,0.3443662453276266,0.007492209345359219,0.4650449438122198,0.2814037383357835,0.3397934754240229,0.006120326900995283,0.46158492614290475,0.20309867333571366,0.3067098201713666,0.009148072668252814,0.4579552465484679,-0.049340892609290816,0.28194421843660433,-0.06454738439834413,0.46387278487726974,0.20196632688129285,0.31012957814607367,-0.013276765608488504,0.4604461260674219,0.13457251285407978,0.16821499157969214,-0.095858219783867,0.4633084287125747,0.16791644392446,0.22400856490927035,-0.260443319846875,0.46032832852460775,-0.09074593453778816,0.06029354327279579,-0.2373599791929902,0.4613500206982449,0.11796031248350984,-0.268557731212525,-0.07843165123894542,0.4593485366991356,0.1013362431761065,-0.2630985754885803,-0.1561720467989942,0.4567499459984002,-0.002838986384801262,-0.41481785268547505,-0.20490029713385166,0.4564328818881803,0.004142811660228406,-0.45737058616046405,-0.26230335911970903,0.4536047433941477,-0.023681071212100436,-0.4460764220420724,-0.2749180044218649,0.4581926279810517,-0.46304248757750055,-0.5106975,-0.37954712090966714,0.4588993680187932,0.05473232071992046,-0.5090197836867009,-0.3442527862463563,0.4560981920187644,-0.11,-0.51,-0.41,0.45561065355641156,0.21268289860842773,0.3148740894082965,-0.09162334940737982,0.45840838291893177,-0.0029153795882453336,0.24777333180637867,-0.12131867402725328,0.45520252029115327,0.07755794298950736,0.11611179700149382,-0.20808051116523635,0.45299605890886485,-0.08725576662105039,0.12378753881179543,-0.3582684410789696,0.4559756710119126,0.005982799795995912,0.21913359092727477,-0.17883257071838055,0.4538266029681811,-0.4669543340892738,0.039373428929335375,-0.40391374999999996,0.45437756912042365,0.03147768422150446,0.016661879910773558,-0.35592401282198055,0.45135550101124705,-0.11,0.015302367969673896,-0.39373840244221286,0.451718947829425,0.02972989683035704,-0.35449328732659174,-0.2207301939428868,0.45101789288578775,-0.3676947690818166,-0.45354415868621445,-0.3179887415517365,0.4544890384026574,-0.27407032105844004,-0.51,-0.34339894724469855,0.4476654566793636,-0.61,-0.49325728779488837,-0.40040908858593477,0.4551767099514553,-0.04832322614827781,-0.44996687592539525,-0.41,0.44913565850805803,-0.11,-0.4998098883994724,-0.41170999999999996,0.4466473179808094,-0.11,-0.51,-0.41,0.44427477740847265,-0.10334794002540748,-0.51,-0.41,0.40119384887997545,-0.39573672347270383,0.439103660902194,-0.09269168400360556,0.3400794173352507,-0.16397706881650242,0.4481270075110919,-0.321792663220137,0.18087110390235847,-0.16558900346109479,0.44341247433215125,-0.2730825860664545,0.14824955321462158,-0.11,0.44363302195918514,-0.3883585936181721,-0.01,-0.08334624000838661,0.4439224811101608,-0.2994546653180194,-0.01,-0.0734593725960393,0.433128108151097,-0.3474604374091852,0.14805730365037142,-0.8905578354324839,0.44335756750660543,-0.3631185447555858,0.0773267667328407,-0.11,0.3372866337346161,-0.41,-0.01,-0.6131983114589465,-0.3774427836358201,-0.41,0.43964445749111325,-0.11,-0.4269179271335928,-0.41,0.44879175326562304,-0.14484102389879883,-0.423575376873357,-0.41,0.4451821427393118,-0.16339223387873797,-0.51,-0.3670042926872106,0.3986278836357256,-0.11,-0.4800638508983933,-0.3702985527596703,0.43859536361838475,-0.11,-0.51,-0.41,0.2903586744680973,-0.11,-0.51,-0.3648962201124857,0.2690993308581874,-0.11,-0.51,-0.41,0.07721503945311292,-0.13605544426812438,0.12309754740218554,-0.28926886418673103,0.45170787599869067,-0.16316514159569523,-0.02141500541362555,-0.39270887120016573,0.4467459271625438,-0.9185713526804086,-0.004278795805292434,-0.3886464300525542,0.4484848885847322,-0.11160875,-0.04155687865136999,-0.41,0.3743524115776018,-0.11,0.043160356865325954,-0.41,0.4510988246498445,-0.61,-0.0381552598941307,-0.41,0.32256215487267015,-0.11,-0.011357034958710318,-0.41,0.40396800453103837,-0.61,-0.01,-0.41,0,-0.11,-0.51,-0.3767622961087075,0.4436386242276804,-0.11,-0.51,-0.41,0.3485887364321828,-0.112505375,-0.51,-0.3645239419527345,0.3196164795389057,-0.11,-1.01,-0.41,0.2664527746833356,-1.01,-0.51,-0.41,0.30199275305780626,-0.11,-0.51,-0.3645054426089347,0.11458286065656964,-0.61,-0.51,-0.41,0.07448303890635566,-0.11,-0.51,-0.41,0,-0.007370774030068267,0.3732924063877373,-0.3239293393345707,0.07449611596972427,-0.19644661808308833,0.3506060258532632,-0.3642199644723474,-0.01,-0.11,0.009449034990248333,-0.34890358843975844,0.45640871880737716,-0.11,-0.01418492785300587,-0.41,0.36735445482462764,-0.17081423688769848,0.1668290453329885,-0.41,-0.01,-0.11,0.1347225704980164,-0.41,-0.01,-0.14382703324921456,-0.012888971008343086,-0.3906432466193003,0.38683574325020215,-0.11,-0.02129261471814602,-0.41,0.24201975787656016,-1.01,-0.51,-0.4000796705324071,0.44093082694567226,-1.01,-0.51,-0.41,0.3587209474628472,-0.61,-0.51,-0.41,0.30562493914445205,-0.11,-0.51,-0.41,-0.01,-0.2020164467491869,-0.51,-0.40239711038834713,0.3633549945925194,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.36509292939432436,0.033187501901236476,0,0,0,0,-0.11,0.3412118889001519,-0.41,-0.012394,-0.11,-0.047338522187499996,-0.3645683851397178,0.3333934176008178,-0.11,-0.012025000000000001,-0.41,0.3671557360909196,-0.11,-0.07814148302878546,-0.41,0.07528010558299135,-0.07856950910612442,0.08180104101443263,-0.41,-0.01,-0.11,-0.028894090602883366,-0.41,-0.01,-0.11,-0.012183808022953393,-0.41,0.09308532882056433,-0.11,-0.01,-0.41,0,-0.11,-0.51,-0.41,0.12933017607835845,-0.11,-0.51,-0.41,0.07556107414299036,-0.11115875,-0.51,-0.41,0.03424205675016907,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11,-1.01,-0.41,-0.0064848028234375,0.31967412799747236,0.43359334466221894,0.4870727580030798,0.4153745713118386,0.33593473056482454,0.4148910437967597,0.4884269617774455,0.4112374029285984,0.33282304627424886,0.41446873528948747,0.47604702121823683,0.42096017133548924,0.2576016969899847,0.37786498657335615,0.48094170920778495,0.37911554942816555,0.2831335543332498,0.3576867929734328,0.48054435181715094,0.403682283166136,0.33336798995258965,0.35431507961812925,0.482999976984741,0.3674029566716476,0.2932994672878139,0.35157118589247993,0.32905145138539127,0.41821444218464326,0.11038607258365866,0.24245353423006014,0.18139044184062444,0.43874473638994316,0.3215211342554319,-0.06023173957564819,0.4899285947013171,0.41741844069833034,0.21606278910131727,-0.0608375393390518,0.47284154009643853,0.2667031912703137,0.30482575204023,-0.07247000417080186,0.480251516593379,0.42585392114746295,0.06830659988011197,-0.2187916001741392,0.47655451703903295,0.25985221802989117,0.2820567152430818,-0.09113592953016547,0.47768720272621784,0.416369991887694,0.2822845758293315,-0.16727979389649153,0.4732238793163994,0.31888546962573355,0.30081595497696423,-0.16520800314506368,0.4620459026039358,0.29779669457636676,0.0017293691962915886,-0.38687283997690003,0.470145769125951,0.18501317630523653,0.3060966611983834,0.3847425580157245,0.4147378805545143,0.4546495138379739,0.13230373711612836,0.29501661494271386,0.3836281644712801,0.4532931238505226,0.2422507772491261,0.25598070966501757,0.45443992485320694,0.3617575267274411,0.1673506870879649,0.12154828467169584,0.43768459764051765,0.33612079358483626,0.26214040997992877,0.2797363965035982,0.38380327132785474,0.45398857550120425,0.10381596697294959,0.2404235465166555,0.46716169184737344,0.362313769772183,0.06097706104752061,0.21007630256857135,0.4502326934720863,0.2758999919866848,-0.01317387765938325,0.07699322133472823,0.4577206416785191,0.20347540598424899,0.28346521393824525,-0.13739958421447168,0.387783005936868,0.445661345139305,0.24420467170958188,-0.3185897422283711,0.44859773088653443,0.3601434118115311,0.17702888941574746,-0.35155556878907157,0.4457072804426516,0.2612254816373713,-0.06572871374893599,-0.5035562695781994,0.4556481682311198,0.07807017077084988,0.024457135193555253,-0.3933670205327756,0.417362582215332,0.2539580539552691,0.029634445522875086,-0.40717417377887066,0.4753446571561777,0,-0.010694679964430118,-0.46663643282598116,0.44613986645437864,0.07908389621096465,-0.07073538817727502,-0.51,0.3867887764125943,0.033421690559708866,0.25071979312673,0.35274685995770844,0.46856731472077007,0.377468879578327,0.31742468460708134,0.3767645961267305,0.4668204461301267,0.4111773762021406,0.21670546507995533,0.2629237754324146,0.2807164694387413,0.4236148101216051,0.14735094295886142,0.17550567502511683,0.43534269612370335,0.1889978218379242,0.3024901731591652,0.2866079000231482,0.29981417901572266,0.2981987103475596,0.20747659658929302,0.19979745334395171,0.4242737798513104,0.2551489654901187,0.19790827397533708,0.19892001926438704,0.4488841053310774,0.2592931952570168,0.007111497155537862,0.05083069850762617,0.4367832032775761,0.02109934572641698,0.2903742549493284,-0.1360977650616415,0.46964136148794905,0.3944327264989311,0.10939175199783427,-0.25695404640159103,0.4778700501244302,0.3554877482903029,0.2639593156885155,-0.33541996012941117,0.465395357319993,0.29591118747777856,0.09770565503892205,-0.4773449919333605,0.42883810010161544,0.10242689759540538,0.0794741316034245,-0.31726238366128867,0.46966501046008285,0.33145097020346137,0.033160896260650254,-0.37321934124047856,0.2676368520399272,0.1838282327363968,0.07711503508917686,-0.4769849712778548,0.44992647785497136,0.15021752086677065,-0.06345181203637279,-0.51,0.43625701063389544,0,0.2971066175155688,0.32772148428614173,0.3926364150288346,0.4274116384027835,0.12000659718250575,0.2168784857614861,0.28975442746674535,0.44976583215828625,0.10483506717437359,0.17091149992765836,0.4326093510465364,0.2819770130212797,0.06153908189038031,0.10436081082182379,0.43377117548458116,0.11185186501081545,0.08466593176481871,0.2142000971502047,0.18301290869444367,0.42562185539841824,-0.12793058334480803,0.1010776598578294,0.44148018151534363,0.11249270225604585,-0.02118387862456842,0.03062089798732851,0.4096364521843872,-0.01,-0.04183601887164016,-0.01,0.42027635422179477,0,-0.22151806807363933,-0.3498036721724051,0.42748222786409845,0.19865354535491864,0.01025802887912445,-0.43681671713963055,0.45399171833714763,0.10850548805785767,-0.4378256133699843,-0.4498309730170842,0.43341075517705896,0.028960775932751488,-0.06635800037108161,-0.5106975,0.42592175849835645,-0.01,-0.0910104722610955,-0.46981311518068075,0.41732993906149046,0.11878674568370343,-0.11,-0.51115875,0.3919479103928886,-0.01,-0.14828158498457764,-0.51,0.4018809673665129,0,-0.11,-0.51,0.27851396180669613,0,-0.19078989719545267,0.3407966010325496,0.48119846918332176,0.34066165679419985,-0.07041563944471416,0.14445009879638948,0.4660936648302003,0.07161738561683295,-0.0905547748915358,0.11281117660418802,0.4845683720283745,0.11408490141745917,-0.11,0.016351865374733196,0.47877478029981696,0,-0.05387080382075498,0.07564692545193413,0.4556742479786118,0.11373956202331802,-0.61,-0.01,0.39697139232153533,0,-0.11,0.037562500176824394,0.3231509705446037,0.03493908736451261,-0.61,-0.01,0.426974249699906,0,-0.45960002012438467,-0.412240662564837,0.4821787636171815,0.03663968291765594,-0.11,-0.51,0.4603620579313184,0.036888945892738494,-0.06994894973404651,-0.4647254126178919,0.466458346328983,0,-0.11,-0.51,0.4064441291395739,-0.01,-0.6109118934979605,-0.51,0.465067393387093,-0.01,-0.11,-0.51,0.4131767725789399,0,-1.01,-0.51,0.4038963136140404,0,-0.11,-0.51,0.15663198325729039,0,-0.1396023311193696,0.0926192450226174,0.45051316823432436,0.1774914210166472,-0.61,-0.01,0.3755688528979399,-0.01,-0.0724067490752457,0.022374369906910427,0.42063074822986635,-0.01,-0.08059236794686463,-0.01,0.320287195046098,0,-0.09209960254402294,0.024512517617859688,0.45508204883281606,0.03639172191573085,-0.11,-0.01,0.3898128436606556,0,-0.10307610221381507,-0.01,0.4000540539038502,0,-0.11,-0.01,0.15812474745948263,0,-0.11,-0.42719330658471133,0.44639650740545755,-0.01,-0.11,-0.51,0.3351817561987639,0,-0.1711560498017597,-0.51,0.35276076247400917,-0.01,-0.11,-0.51,0.28476582945913204,0,-0.11,-0.51,0.40265141176111524,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.17435860349736604,0,-0.11,-0.51,0.09,-0.01,-0.1706943379344613,0.17061311180933691,0.48069941242569697,-0.01,-0.0996570659740462,0.06350400011248813,0.44600209606071717,-0.01,-0.36625562517530075,0.03849657538556965,0.3757272617821637,0.03625445908747269,-0.11,-0.01,0.25098874795346704,0,-0.520338610224651,0.06288663509823006,0.40818546539997186,0,-1.01,0.022147567254290346,0.3760726222896589,0,-0.11,0.013483167208254878,0.3740730504600834,0,-0.11,-0.01,0.09,0,-0.10979598835562927,-0.48384279852878526,0.4720519481773221,0,-0.61,-0.50346375,0.35815094660009456,0,-1.01,-0.51,0.4064411588049812,0,-0.2006975,-0.4953315192708931,0.21700902770865266,0,-0.11,-0.47458955441316747,0.257444728079639,0,-1.01,-0.51,0.23187994319491248,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,0,0.44108010018587945,0.03312868531767893,-0.11,-0.01,0.394276424518261,0,-0.11,0.02156023293416985,0.37811539811290995,0,-0.11,-0.01,0.16561379355334666,0,-1.01,-0.01,0.3195324339812866,0,-0.11,-0.01,0.12292296439806108,0,-0.11,-0.01,0.306220386858882,0,-0.11,-0.01,0,0,-0.11,-0.51,0.2838893542898324,0,-0.11,-0.51,0.12692529088697904,0,-1.01,-0.51,0.1411298636431621,0,-0.11,-0.51,0.12844175779334233,0,-0.11,-0.51,0.1255120128837142,0,-0.61,-0.51,0,0,-0.11,0,0,0,-0.11,-1.01,0.14934569030167952,0,0.2713293783076985,0.3398213865699537,-0.059707113862840604,0.43756702703259887,0.20506351472081816,0.4337730832027952,-0.07685408760357594,0.34262228557247987,0.22076038832765882,0.4427138935252026,-0.16548868494073635,0.3563924326326334,0.017628418769807037,0.4416560690169842,-0.3131908502137844,0.2630744837948756,0.22415650325549175,0.32671231287051616,-0.10962670721883569,0.40663672050055055,0.1020160147614036,0.3053813187027486,-0.2811111270742145,0.3357468474744594,0.1792452928558491,0.21172691033221946,-0.32806216051068204,0.44769189512679597,-0.04420195679447413,0.23227417890302457,-0.37320066641722505,0.11210516609537471,0.09198189312333223,-0.13706837672660102,-0.1242147015215742,0.4170177525258082,-0.029390258823661756,-0.2548854698094187,-0.23051724784114502,0.3791148364942379,0.11122734264902953,-0.24873940926642107,-0.2807796340307844,0.4406988230173608,-0.25374787981183433,-0.4506277739362325,-0.41059625,0.4443858746136504,-0.134862727103598,-0.37827854889826057,-0.27794028557440237,0.44082231897082663,-0.11,-0.478462810842174,-0.3807099748163534,0.43888873615829155,-0.061402372777427064,-0.46133906467919567,-0.38826467735349107,0.41878409215042967,-0.06239385090697438,-0.504871125,-0.41012374999999995,0.41633349015646465,0.16679140144213714,0.30392518651981515,-0.18306330315435498,0.4374904836679527,0.015954397058632767,0.1532182096236474,-0.20665876360660812,0.4422919427140669,0.06052193383102379,0.14282406523011051,-0.2785798046293633,0.4405515448354079,-0.44709907752132355,0.06343770630242007,-0.3635554557080791,0.4391204637834775,0.08238525249259104,0.11513071079193404,-0.294559925674421,0.4454558721305504,-0.08598956912327335,0.09674111676400468,-0.3743828180771407,0.44001850130604725,-0.3190977999353396,0.04170403948606989,-0.41,0.4465572470587247,-0.049790162557536,-0.0127141890625,-0.41170999999999996,0.4387995317422234,0.013806031592390449,-0.37806933385599745,-0.2763567483019675,0.4313146772842634,-0.06792271153829385,-0.4735680567890084,-0.32061087556259654,0.43449454035112184,-0.08555050135431384,-0.51,-0.37750578022432263,0.4314003077773839,-0.09624640547175847,-0.51,-0.3878945097944713,0.4264487723916968,-0.041472023444675044,-0.48313632772961096,-0.36752118866333555,0.42878571563263057,-0.07799986812303111,-0.51,-0.41269887499999997,0.44074694744459286,-0.04976911494631284,-0.4891316787394325,-0.3975091947921478,0.4284279420668456,-0.11,-0.51,-0.41,0.3789495170934598,0.28480636290246547,0.33878253251813345,-0.1824233933512605,0.422925139821818,0.17522164276562294,0.21016570830500725,-0.23810946623160403,0.4399489200307589,0.04082904762679308,0.2072595845137778,-0.22942661277294665,0.435552864133777,0.018456361049201193,0.05108446782904223,-0.3749471065759864,0.4423250429408631,-0.050371560771620055,0.16918551690966385,-0.27864509867022247,0.4376653825697601,-0.03161758479711103,0.03179463400473906,-0.3368055864150232,0.4415616117669943,-0.001003618188594544,0.060669890856698785,-0.3782537315025317,0.4380521835332305,-0.13041359341224956,0.016868301134705083,-0.41206754787756056,0.4455436914772871,-0.0943267850711201,-0.44144537806562356,-0.3185853551140448,0.4319073048385942,-0.07912253796388158,-0.39155115826769216,-0.36487322182545184,0.43556376799686936,-0.05055392752982908,-0.493756575542186,-0.32162910765067054,0.43204847364776916,-0.11,-0.5065076085519049,-0.41,0.4292331946026638,-0.11,-0.4956742852455823,-0.3439559612955042,0.43658630138606147,-0.11,-0.51,-0.41,0.42583370093939704,-0.11,-0.51,-0.41,0.4276598384884582,-0.11,-0.51,-0.41,0.31222262324856176,0.0056951234321408195,0.16606746933599956,-0.33770862047142247,0.4267152746418233,-0.44858612784172863,0.07254410743115694,-0.33500050591108405,0.4260036206201664,-0.06928780474558532,0.06451943917169585,-0.4056313657888506,0.41084609145571466,-0.0826785191567182,0.02360358031549408,-0.41303749999999995,0.4269483247570826,-0.07446604619387107,-0.010135,-0.41,0.4262783771378727,-0.11,-0.01115875,-0.3963672356047339,0.42560859358204445,-0.08871146228223291,-0.010413677207712092,-0.41,0.40933012705232746,-0.5308016104478959,-0.01012375,-0.41,0.30078971969288926,-0.0885420818311078,-0.47997915266345226,-0.37695126348264096,0.41991263457768774,-0.11,-0.5094827543004745,-0.41,0.42488152046540617,-0.11,-0.5034769082738517,-0.41,0.4238944163497105,-0.07872222000860069,-0.51,-0.3763672300114365,0.35210467679848867,-0.11,-0.51,-0.41,0.3745615500807758,-0.08193196074709197,-0.512795094646875,-0.41,0.2699912554305463,-0.11,-0.51,-0.41,0.33937313049290085,-0.11,-0.51,-0.41,0.16602402511959033,-0.17714536011444207,0.4076330593899807,-0.2946688916581264,0.16049068690211388,-0.11,0.4236240093647832,-0.38228047560474687,-0.01,-0.1073206051236585,0.4269902828348191,-0.3716089756521266,0.028926072653057223,-0.11,0.2605145032985711,-0.41,-0.01,-0.12138017655378165,0.3673151586246029,-0.40324238338210205,-0.01,-0.11,0.29708554965542233,-0.38425422394587655,0.03586934438404291,-0.11,0.2747875502403733,-0.41,-0.01,-0.61,0.10624110558430572,-0.41,-0.01,-0.5276132193860764,-0.46612992502771866,-0.41,0.42889796200370545,-0.61,-0.51,-0.37575785382106675,0.3452489531993305,-0.11,-0.49623906147507485,-0.41,0.3335628106187951,-0.11,-0.51,-0.41,0.031184599989643964,-0.8850048949638212,-0.51,-0.37127002175972285,0.29685952054335724,-0.11,-0.51,-0.41,0.17329119057516906,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0,-0.11,0.35788867241486677,-0.41,0.11184216982986199,-0.11,-0.043317201827817425,-0.41,0.3227361196032784,-0.11,-0.008496041229996963,-0.41,0.3840925733089141,-0.9151329049810818,-0.021137500000000004,-0.41,0.13785850239529404,-0.11,0.13708003708728156,-0.41068625,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,0.01659057141237509,-0.41,0.07183736809368294,-1.01,-0.01127125,-0.41,-0.01,-0.20012375,-0.51,-0.41,0.31397454434016225,-0.11,-0.51,-0.41,0.010223707852683813,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0.10087455515754892,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.13682891300990516,0.3488219320802735,-0.41065323587336455,-0.01,-0.6376195908778403,0.18031903961078016,-0.41,-0.01,-0.61,-0.015783216848875615,-0.41,0.29152755649882167,-0.61,-0.01288710141573641,-0.41,0.11165485890054139,-0.11,0.12391376270827444,-0.41,-0.01,-1.0111475,0.010748643903698852,-0.41,-0.01,-0.11,0.005660356633015931,-0.41,-0.01,-0.61,-0.014173152281510924,-0.41,0.03332652717463779,-0.11,-0.51,-0.41,0.31261604568951634,-0.11,-0.51,-0.41,0.2282136406334476,-0.11,-0.51,-0.41,0.03484328657450981,-0.61,0,0,0,-0.11,-0.51,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.51,-0.41,0.033361096288172125,0,0,0,0,-0.11,0.18649455111726967,-0.41,-0.01,-0.61,-0.03531693402977467,-0.41,-0.01,-0.11,0.012465381358837659,-0.41,0.09464158272901718,-0.11,-0.01,-0.41,0,-0.11,0.018040011485933684,-0.41,0.03438272099424803,-1.01,-0.01,0,0,-0.11,-0.016191716032187373,-0.41,0.03226512047991306,0,0,0,0,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0.3158442574047716,0.4363387694441379,0.5047725337086412,-0.049981273211983424,0.36126045664544854,0.4416174852011428,0.5295353763158519,-0.050323260131158454,0.35049558028716904,0.42862221203963197,0.5570195878735246,-0.04656947929693096,0.3361928379840948,0.43206047016002813,0.5437404420911488,-0.048071555833000115,0.33903094059807287,0.36556323253542283,0.5478722437108493,-0.04460348837147585,0.3552761217368923,0.41800994626349286,0.5173675550233616,-0.04658716834295377,0.30455103661877936,0.4042574220354904,0.5289571153139925,-0.04897279510053624,0.25133297449996317,0.44532911401572434,0.3099775390427156,-0.22799471769619212,0.3526689569523749,-0.05784253507547257,0.5310686415709088,-0.05960367536066985,0.35258229969160415,-0.06316350600240274,0.5152413922282439,-0.06030234351848968,0.32938860645905876,-0.059375538253719884,0.5533973091456431,-0.056960009623244566,0.29008679213374916,-0.14324334286561857,0.5306262149112126,-0.1730967153345921,0.3564744243890866,-0.05852978221395116,0.5413148444139526,-0.05047442284282636,0.24540016863441177,-0.16028626961029088,0.5344917787841624,-0.11288972814296955,0.28377520268905737,-0.1828400256501177,0.553982069625875,-0.13706754989627642,0.070752184600818,-0.43444720170828366,0.5337180075489371,-0.35922299007519404,0.3188819233259188,0.3825998266627269,0.5472473065821966,-0.05095831912339243,0.28299901344710604,0.35222390345222787,0.5410196703251976,-0.050754324573093756,0.2445551114867393,0.3556272014507382,0.48151980042268866,-0.05080688507320132,0.02755303937244702,0.32932970292507324,0.5316683050921895,-0.11089868053231239,0.21658251188805225,0.38865567005369295,0.5501186316512452,-0.0470470025608486,0.20216390363911818,0.3033285561663558,0.5303038086998904,-0.07549400705020945,0.172590386715471,0.3311336117025352,0.5421187087372107,-0.07629755878993064,-0.029340168086806943,0.14177688615648457,0.5415354183904744,-0.3252320803030844,0.3145581705143884,-0.1304778074441184,0.5455812380907817,-0.08152994670568822,0.1990234767949808,-0.20954191233731878,0.5371990302656815,-0.15342660052163953,0.25544317241495096,-0.24482220651982003,0.5412943693470904,-0.16510657705729476,0.05443265014163577,-0.38176611446392983,0.5390595056527407,-0.3654572891802669,0.19930017442436004,-0.2884109399217248,0.5394422941787621,-0.16959631763445185,-0.19454569129076293,-0.435057573366718,0.5398458072905432,-0.3931846884802371,0.027697075773011573,-0.4139132779301486,0.5401741554909687,-0.4643680696985238,-0.029386250922287936,-0.51,0.5420598556584233,-0.51,0.2633970561439014,0.4086064714456952,0.4969491159173232,-0.05442202900146135,0.35104485762350873,0.39588562015293743,0.508460765813198,-0.061188668724488963,0.31160338690520606,0.3552660538164759,0.512713783928931,-0.05500704310610648,0.19962386469991336,0.2924353022104283,0.5171672100166339,-0.20191490188717445,0.3433994477662124,0.3505910402333985,0.5409665166627908,-0.07696296494370729,0.23606064334269244,0.23356401722439538,0.534834878399632,-0.13032314536705206,0.22910538953652698,0.27146299670928004,0.5463570453983029,-0.20367034104703505,-0.020949407260256785,0.16995963042873086,0.5266029741482751,-0.46795588800249766,0.3454065209004841,-0.10298577520230766,0.5102847389836784,-0.08090826138835218,0.30860092523172367,-0.2008935802975245,0.5055593648699361,-0.1697740836466054,0.2787584202020134,-0.20127956083036186,0.5292489656940952,-0.09745532095597696,0.07538003234978545,-0.4321713362890227,0.5227364840196347,-0.4407232801806985,0.08228372954714004,-0.3246803216569628,0.5365876901847194,-0.18723886129064965,0.1215841103473708,-0.41890582377983543,0.5269541948431034,-0.4228132271513314,-0.0513861734240261,-0.42222965932940604,0.5266400551942703,-0.39186069776820504,-0.61,-0.51,0.5460307358104635,0,0.290030624837628,0.35093296783978545,0.502981571341173,-0.09145832469399809,0.24106936545827817,0.33677241056858903,0.5039516643390873,-0.15968089818708645,0.1657903440228918,0.2960579666098609,0.5518875274103116,-0.19009343080506244,0.029312292184473225,-0.01,0.5358101158083994,-0.36852295632892945,0.25619465229381366,0.3245560567776421,0.530327898647772,-0.1533576466113909,0.046466514079018924,0.026725809041686165,0.5238825184303209,-0.4265672304504108,0.02761221897990463,0.10866773647814482,0.5258826581301628,-0.3146780273014942,-0.049154282614485637,0.02106716536153754,0.5101332563578236,-0.462150438279934,0.13451883430644068,-0.3140044927015979,0.5170407282567993,-0.28681548350849007,0.047714081083960885,-0.46139350029486537,0.5245753605735908,-0.40340056073422165,-0.016975567041415535,-0.4055271704311849,0.5453757702362152,-0.39806315754521515,-0.09179567219021366,-0.510748354123298,0.4963033172014108,-0.4765349409554272,0.004482745792811476,-0.43783030026268255,0.5299231373128106,-0.359550803156888,-0.03058590146748396,-0.51,0.5088605102325853,0,-0.11,-0.5119261585057755,0.5395403149272935,-0.4726250652906257,-0.5363064038467765,-0.48277288172855,0.4725224340159961,-0.51,-0.17241319349902892,0.3791411026137897,0.5061470581127158,-0.23673482539619428,-0.13059677666157654,0.11069341233169744,0.5226578030270448,-0.3265606518233389,-0.20300383886338538,0.13393948003994877,0.529391887421358,-0.51,-0.11,0.03467830429856456,0.5114691718628844,-0.51,-0.37921730277599125,0.08030073582462155,0.5443160462236106,-0.25013164634257096,-0.8415120953405364,-0.01,0.5322331443370955,0,-0.07043892789300635,0.035473828694955835,0.5284823112380876,-0.51,-0.11,-0.01,0.39100853660567675,0,-0.20941779643410915,-0.47220280195315056,0.5384264240272685,-0.51,-0.19517339568336828,-0.4678148356485892,0.5375828712965944,0,-0.10376990905974247,-0.4232109941866911,0.5303831427564771,-0.51,-0.11,-0.4668673215732583,0.47009259361770156,0,-0.1574457546863043,-0.4240072240879808,0.49667525262986495,0,-0.11,-0.4797932709867652,0.5174182011194783,-0.51,-0.11,-0.51,0.4127280546093287,0,-0.11,-0.51,0.292731735642771,-0.51,-0.06374900718755207,0.3843885927494373,0.17288198306983885,-0.46601826055734513,-0.110825666532068,-0.041650954440742585,0.5206833374625846,-0.4652974864112839,-1.01,-0.01,0.5379444338468065,-0.51,-0.11059625000000001,-0.01,0.5117131689440221,-0.51,-0.1391822193244176,-0.006101986101709287,0.5153157678662379,-0.51,-0.11,-0.01,0.4924178284228028,-0.51,-0.10408475519594533,0.009986516285864716,0.49274246754052214,0,-0.11,-0.01,0.4106352546264561,0,-0.8906585235092476,-0.51012375,0.5355401915649226,0,-0.11,-0.5099505674156974,0.5090217885394366,-0.51,-0.11,-0.51,0.4557150265739525,0,-0.61,-1.01,0.3123058146035181,0,-0.11,-0.51,0.2974724365203242,0,-0.11,-0.51,0.21188523789188723,-0.51,-0.11,-0.51,0.2780661967723426,0,-0.11,-0.51,0,0,-0.12416986379731174,0.06931341901200047,0.5056049455013123,-0.3977753209489139,-0.11,0.0656091669634877,0.5182159009982614,0,-0.11986171416616158,-0.01,0.4864232431979641,-0.4644579888781214,-0.11,0.0010719206578897727,0.4191972169452767,0,-0.11,0.030995286111967495,0.5100553284337612,-0.46685452456998855,-0.11,-0.01,0.3734052075495731,-0.51,-0.11,-0.01,0.4794067887651434,-0.51,-0.61,-0.01,0,0,-1.01,-0.51,0.5035572591719195,-0.51,-1.01,-0.51,0.40704353754025346,0,-0.12161896647733277,-0.4810871575737305,0.462859047239936,0,-0.11,-0.51,0.2916020146381352,0,-0.1653208728876957,-0.51,0.5013058483954334,0,-0.11,-0.51,0.14170216613552117,0,-0.61,-0.51,0.21649700637680297,0,-0.11,0,0,0,-0.1622127155028582,-0.01,0.512628534067763,0,-0.11,-0.014806870592553176,0.5044322797527195,0,-0.11,-0.01,0.43491612531450313,0,-0.11,-0.0363861370453817,0.24108933419230802,-0.51,-0.11,-0.01,0.4887472090035476,0,-0.11,-0.01,0.2766115745220256,0,-0.61,-0.01,0.40820131091945894,-0.51,-0.11,0,0,0,-0.11,-0.51,0.34634755998669153,0,-1.01,-0.51,0.3544536877324199,0,-0.11,0,0.24440116139252174,0,-0.11,-0.51,0.09,0,-1.01,-0.51,0.27547052272852224,-0.51,-0.11,-0.51,0.138146332337724,0,-0.11,-0.51,0.09,0,-0.61,-1.01,0.1408346152210114,0,0.25443677771827816,0.45576475227977004,0.025615720510216402,-0.05663310582213192,0.27345404858210015,0.4227948711955394,0.02698383480559838,-0.05720873083146644,0.20083895184429945,0.4530228422235151,0.017178393063162163,-0.06604441399113965,0.03926090536428231,0.44639315380427036,-0.06630373349459241,-0.21061572057389777,0.2039459606589162,0.42619352983318376,-0.002065402203327956,-0.06416133227181356,0.019519671281257464,0.4478802630659119,-0.2004143893864573,-0.1694547719783631,0.06943287057427806,0.4515768696192192,-0.1371291813226722,-0.16713797866814323,-0.04587636780793422,0.43168996026282447,-0.3269127944521688,-0.4652914049116352,-0.22574535867412937,-0.2469942039115377,0.02426341052985627,-0.20208126998039894,-0.3091114691385882,-0.36739794693619265,0.0459744516981839,-0.3105500031928259,-0.31342209553001826,-0.30076261597564996,0.0239965334268826,-0.417417248788099,-0.2579065498652781,-0.4016172313713001,0.02540949322513382,-0.3479971008426947,-0.342617585666651,-0.46359210352114255,0.02444517757168193,-0.42172001032094764,-0.27603049847392935,-0.46983495862058205,0.017081160040432843,-0.3941218027962065,-0.4111920810650751,-0.46468974277729347,-0.047206036040202036,-0.46571872242238727,-0.61,-0.51,-0.05116825795438096,-0.51,0.1423087171602919,0.3923879974053135,0.009722736736210772,-0.09716689459268181,-0.25653852687862,-0.09815900565344314,-0.014496259438796722,-0.18468042973600216,-0.12903898489427185,-0.04765570030673184,-0.010201448395319307,-0.0717283461612339,-0.27433164894742484,-0.10930063102975107,-0.12554222027748707,-0.13654863882209015,-0.03698473094227883,0.049933280133872,-0.04925523136256781,-0.06535838156421117,-0.3668594576095611,-0.0754310459784165,-0.1871548383356257,-0.22585588020592193,-0.2598882740002763,0.006421946892448377,-0.29033194795835,-0.15799030483247858,-0.3921969392691449,-0.15784626717502284,-0.29117841339550576,-0.29716064003486503,-0.36777257196719365,-0.4787494489914284,0.0234736590482201,-0.3280131476698632,-0.2878765471388307,-0.531219110510288,0.015192962304694461,-0.362054260205083,-0.3520134359770229,-0.5005515959636502,-0.022688220321862795,-0.44914222330317455,-0.43576192606471464,-0.5354229006417266,-0.05865906252800326,-0.42539540582468116,-0.42978793824451966,-0.51012375,-0.021258560928945097,-0.41302183020287214,-0.4275355910375789,-0.51,-0.23028859938626922,-0.51012375,-0.45327225193907733,-0.510135,-0.2153820589169808,-0.45575687775047774,-0.3478281259125565,-0.51,-0.40290125,-0.4252774972279589,0.17109456445241097,0.3174879516851652,0.0025445738584656697,-0.07478730319038554,0.12793796144061342,0.3663160361285319,-0.16850195023709547,-0.2192088592963272,0.0020628296395578047,0.0844996694156589,-0.03790274856800886,-0.14033563971779534,-0.08438557915924588,0.057706743906739716,-0.2077949414727224,-0.42587455844030153,0.06100302594223598,0.1675368801771868,-0.013500346168067336,-0.07941771803366875,-0.043719840278779565,0.18516333918017192,-0.17497337577838287,-0.24056699597768694,-0.12641158713003,0.04270681460796383,-0.20911468936438452,-0.20718855818018808,0.07985414737842236,-0.07100832194036669,-0.16827916224341677,-0.2410702690407795,-0.32634746405271214,-0.4805911089486986,-0.001059958674199237,-0.5002667632183856,-0.4176166534634892,-0.4776495973028263,0.018075958622278517,-0.4217539631626587,-0.33514421523985194,-0.48451228437071325,-0.044106129312332265,-0.51,-0.374891563702234,-0.5044568248490777,-0.30989423344639916,-0.4646889828288425,-0.4277820736791895,-0.4694399610011418,-0.026140026082627322,-0.48299307478179854,-0.10929286398480605,-0.47374038752769543,-0.3834048711139396,-0.4464312057143044,-0.14316740120258387,-0.510135,-0.41,-0.46530826769559336,-0.3702111597083569,-0.5121495330127821,-0.41,-0.51,0.04423441993079189,0.35086950272472145,-0.17651883317203923,-0.3280208509842297,-0.27889402706495586,-0.12909140890677082,-0.015369411346015188,-0.31587227614529845,-0.1532135888378138,-0.013585554527431522,-0.15791726867080083,-0.3330184385214075,-0.312117237989132,-0.1267534457569349,-0.3122598134497468,-0.51,0.0070347034978497005,0.11902226564286233,-0.254105829394182,-0.4049484922382247,-0.15182099649233755,-0.14511765823022577,-0.23321060674996075,-0.41564588823093507,-0.13222956456375523,-0.03181517545819602,-0.40426691745312493,-0.35719593940457356,-0.182460297509692,-0.15232843355211637,-0.41012374999999995,-0.42891803635239917,-0.367763028377756,-0.51,-0.045986057969705986,-0.49665473914440517,-0.4111785046017493,-0.5237948385999626,-0.19878506078054206,-0.4851779639941159,-0.117650709186898,-0.5078692094533566,-0.40290125,-0.51,-0.11857786339609783,-0.51,-0.3942704781663473,-0.4984688025331147,-0.4125401895620311,-0.51,-0.2359162294644059,-0.51,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,-0.24614707187262394,-0.51,-0.41012374999999995,-0.51,-0.11557562941467081,0.442569848616413,-0.25311355898805254,-0.357759513724739,-0.07391420611284845,0.4453771864987372,-0.36239621065447297,-0.51,-0.5260587493512343,0.44623946617773247,-0.41,-0.46697576821341386,-0.11,0.3582501999226617,-0.36646705010423614,-0.51,-0.098762817097491,0.44043940570751283,-0.41,-0.46845292009189793,-0.1933356218404652,0.2875675169693437,-0.41,-0.51,-0.11,0.33918068510981403,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.4335296238680203,-0.4258829258049052,0.028105097042445355,-0.51,-0.4129931575433411,-0.51,-0.04136397287990688,-0.51,-0.4632870107153694,-0.51,-0.26343613772123636,-0.51,-0.61,-0.51,-0.25854859786795314,-0.51,-0.5065058438394796,-0.51,-0.17548286555237835,-0.4738437753184672,-0.5611587499999999,-0.51,-0.1371983344998996,-0.51,-0.11,0,0,0,-0.61,-0.51,-0.3222500260625616,-0.51,-0.61,0.37450920160013546,-0.3654160469883664,-0.51,-0.61,-0.01773545650587172,-0.41,-0.51,-0.10643927368376258,0.0330568854277456,-0.41,-0.51,-0.11,-0.04479083759523167,-0.41,-0.51,-0.61,0.1305673085521487,-0.41,-0.51,-0.11,-0.08528698164797309,-0.41,-0.51,-0.11,-0.06461742271710616,-0.41,-0.51,-0.11,-0.027300014679006612,-0.41,0,-0.4104853246153739,-0.51,-0.07691549276915423,-0.51,-0.11396657076158757,-0.51,-0.41,-0.51,-0.15047451136133075,-0.51,-0.41,-0.51,-0.61,-0.51,0,0,-0.5065058438394796,-0.51,-0.2891812501463884,-0.51,-1.01,-0.51,0,0,-1.01,-0.51,-0.41,0,0,0,0,0,-0.218993931744434,0.3708120151742627,-0.3786533881127697,-0.51068625,-1.01,0.1917535100790384,-0.41,-0.51,-0.16160875000000002,0.008737901480079191,-0.41,-0.51,-0.11,-0.002477503254162971,-0.41,-0.51,-0.11,0.10894037265066842,-0.41,-0.51,-1.01,0.019932851764310856,-0.41,-0.51,-0.11,0.014321287877829023,-0.41,-0.51,-0.61,-0.01,-0.41,-0.51,-0.5065058438394796,-0.51,-0.22729848406014289,-0.4838880781703796,-0.10499485630491351,-0.51,-0.41,-0.51,-0.14461198440413486,-0.51,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,-1.01,0.15722539733658414,-0.41,-0.51,-0.11,-0.09290901719159023,-0.41,-0.51,-0.9208112950374601,-0.00890097817691625,-0.41,-0.51,-0.11,-0.01,-0.36468513513883927,0,-0.11,-0.01,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.4296163307940414,-0.51,-0.37670341701358434,-0.51,-0.61,-0.51,-0.41,0,-0.61,-0.51,0,0,-0.11,-0.51,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,-0.41,0,0.3508066903365133,0.44872233160333624,0.46313934210077307,-0.053440602917100635,0.3489527182051082,0.4446206435179057,0.4822870945833755,-0.0681992077200327,0.3449898418825004,0.3917323583546079,0.4626241353179348,-0.05395381124065122,0.22368933907831287,0.2730589113315309,0.4682773572730192,-0.184898420578041,0.3330771405523997,0.3158021551587555,0.47648307274053203,-0.07090752765592877,0.2524479309840797,0.2676948906984934,0.46131856609159194,-0.22423351762213134,0.1645053481594048,0.2532582037781577,0.46821276146177543,-0.22264878855289588,-0.0033024893392799015,0.18964330557599005,0.33662491574915837,-0.385539746404436,0.23994565507044852,-0.07647938151672226,0.48415845182681916,-0.07564011482506833,0.2579686677488691,-0.1557497319246031,0.4814698167637748,-0.11413566505459115,0.3114381809355203,-0.11489333960583444,0.47264290461512026,-0.1825798034315025,0.21055580555619532,-0.4577656183703013,0.4664428097313524,-0.35875576697039957,0.20978957138540652,-0.1886110590695066,0.46938349353223086,-0.15696981392270065,0.015742408137684183,-0.34059654832518,0.4810390558734159,-0.4650522168102193,0.06600164531997144,-0.4074087765843866,0.4596344460301928,-0.41616978743812655,-0.07352747614891832,-0.51,0.4767457180513829,-0.4254326314907474,0.2801552092180519,0.3892385369903224,0.36955053279656797,-0.08736131264211994,0.2016806525219249,0.25250217450784745,0.4423677986855866,-0.13972530630732352,0.2376771062347334,0.2702393494092079,0.45249040806397156,-0.15064943777520476,0.009531533448472615,0.11397362096087614,0.46495334125585247,-0.2529838627875214,0.1232259560319603,0.24560903837794054,0.4201691556200069,-0.1841671454172619,0.005461730675657278,0.08843301736906034,0.41520821735789804,-0.2552104941106964,-0.2839819128668436,0.1571951684988683,0.41010775982178,-0.2384666908795334,-0.024818655976541856,0.019998767038248155,0.447890608812735,-0.464423626967839,0.16008380092603547,-0.22655587331894106,0.33708354901550047,-0.22276230153993354,0.035259539825685644,-0.3890331520248389,0.4492656316035326,-0.4232898528387142,-0.11472325024104235,-0.4684967655560699,0.4547003554412214,-0.46981960902530173,-0.07638189961759276,-0.5044181952223317,0.4319387502491482,-0.4995613956892158,-0.06262950847652729,-0.4729526463916109,0.44612995229030566,-0.49059744965367497,-0.02911336927543557,-0.49754638513173755,0.4515434298025525,0,-0.45400778397874897,-0.51,0.2413798458857548,-0.47178628808839745,-0.11,-0.51,0.3425071175821884,0,0.26624632166182344,0.38254905348936313,0.45572815945724315,-0.08545903839810372,0.26235208301308305,0.27514473861323774,0.47220711279923067,-0.197732850887844,0.22280623107363975,0.24314632862918018,0.4562087444204477,-0.19523439152699398,0.009951190836997963,0.044987583223878885,0.4447387140030371,-0.51,0.20704012034177943,0.20659346788824398,0.42658517303885757,-0.13956520278364898,0.15302741646031995,0.15644792675958807,0.4696095989971734,-0.3781420658225023,0.048144267818321054,0.018660500435691042,0.44195875854410177,-0.51,-0.11,0.06785446470034956,0.4432086678089686,-0.4784939884977313,0.30051756314368466,-0.19735630261623693,0.469033095205183,-0.21760014309121997,0.11948661275782287,-0.32283009987416617,0.47705884959494743,-0.4641506363636154,0.072590157516363,-0.429003818190308,0.4442593704052626,-0.36312558367610503,-0.06739724867230043,-0.48620138833090976,0.4698904955890902,-0.51,-0.021621195871151598,-0.4566034897376449,0.47853859622035505,-0.44207480175956254,-0.11,-0.4971095284617292,0.47274962833884293,0,-0.11,-0.51,0.44813305457353036,0,-0.11,-0.51,0.4121706550413971,0,0.19590121225630586,0.23851147817533302,0.45458257264096946,-0.27333403019747715,-0.08869728675742436,0.05608775354732817,0.4526999637476397,-0.3745525296976036,-0.2852860707715649,0.021876794790960663,0.46069129023286437,-0.36316294333345817,0.004932279828669381,0.014793444755213915,0.44553349309233503,-0.51,0.013816521102803653,0.041517522419684136,0.383701130069778,-0.4038219048361626,-0.5136650326373018,0.012916903781345556,0.41665886667749835,0,-0.05223920661952082,-0.01,0.43371462747819056,-0.4836155481878483,-0.61,-0.01,0.35295315242904773,0,0.009532022299079568,-0.4043611989454372,0.4590314001716118,-0.46874308184173796,-0.11,-0.51,0.4208197175606599,0,-0.11,-0.512025,0.4445868320640531,-0.51,-0.07034330912568565,-0.51,0.42226315796243835,0,-0.030103211180495082,-0.51,0.40219617188882034,0,-0.11,-0.5085621276196013,0.38619058161167263,0,-0.06675139032023364,-0.51,0.34512025407249763,-0.51,-0.11,-0.51,0.23427861500717365,0,-0.12153120882984626,0.034441842784753186,0.4872035950809664,-0.442629451594329,-0.11,0.07666578245217252,0.3674165467424594,-0.51,-0.6046310727800512,0.07534213731708786,0.46494877830920417,0,-0.11,-0.01,0.3631369352764081,0,-0.6106704925174699,0.07561636944145808,0.4209504129977959,0,-0.11,-0.01,0.3290246078721678,0,-0.11,-0.01,0.3448767070254647,0,-0.11,-0.01,0.1951076815776874,0,-0.11,-0.51,0.4779699952506186,-0.51,-0.11,-0.51,0.42217648507609734,0,-1.01,-0.4655564481073361,0.3921603228777365,0,-0.11,-0.51,0.25059808816694806,0,-0.11,-0.51,0.3186277452504141,0,-0.11,-0.4855861796180473,0.20515855902645558,0,-0.11,-0.51,0.1931463343491922,-0.51,-0.11,-0.51,0.09,0,-0.61,-0.01,0.3817394061915677,-0.51,-0.10350338410361865,-0.01,0.45193575066969693,-0.51,-0.11,-0.01,0.40413988364412173,0,-0.92059625,-0.01,0.21966366894597952,0,-0.18797163480882212,-0.01,0.4142748870941361,0,-0.11,-0.01,0.14906187335586013,0,-0.11,-0.01,0.33969285825153106,0,-0.11,-0.01,0.15812671999123684,0,-0.11,-0.51,0.295473469274672,-0.500484740778821,-0.11,-0.51,0.2602692283999177,0,-0.11,-0.51,0.21475176020045075,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,-0.51,-0.11,-0.51,0.09,0,-0.11,0,0,0,0,0,0,0,-1.01,0.09753905160763454,0.466512122573353,-0.466833721976612,-0.11,-0.01,0.3463012495191358,0,-0.07030629758175982,-0.01,0.3403523583987431,0,-1.01,0.02111638536683836,0.17198178606303952,0,-0.61,-0.01,0.418208795147827,0,-1.01,-0.01,0,0,-0.11,-0.01,0.22640465508148117,0,-0.11,-0.01,0,0,-0.11,0,0.33498350949652206,0,-0.11,-0.51,0.16049443366747537,0,-0.11,-0.51,0.1286363437167659,0,0,0,0,0,-0.11,-0.51,0.12898159013962623,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0.028660940614062845,0.3175786173879695,0,-0.61,-0.01,0.3095796066355022,0,-0.11,-0.01,0.310248933553698,0,-0.11,-0.01,0.19146190737712027,0,-0.11,-0.01,0.10589510944794149,0,-0.11,-0.01,0.16106818951947852,0,-0.11,-0.01,0,0,-1.01,-0.01,0,0,-0.11,-0.51,0.12945010901335374,0,-0.61,-0.51,0.12078158499063155,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0.2502521328554222,0.43226491165465597,-0.09883918935262237,-0.0927525187729098,0.168424180640575,0.42633862615711593,-0.16686917303221943,-0.23209726249947038,0.07494248694229505,0.45035633295958905,-0.29055476878032654,-0.24802798817426014,-0.022127456274870675,0.4349370331661341,-0.3376358431970205,-0.3744916389781233,0.18015524689132933,0.14741215082956277,-0.19400273616238284,-0.16190165661782918,0.10062530594972774,0.18239503541140092,-0.3752763253532661,-0.51,-0.3362592348276019,0.1808761210255502,-0.3520559952339116,-0.3845739490970059,-0.11,0.3404207704610746,-0.41,-0.51,-0.38761755983733404,-0.4666147589933905,-0.06752726615351765,-0.4740260920914125,-0.3929567224079639,-0.4883791602635686,-0.04918692084261674,-0.44224550440443267,-0.4064118052475845,-0.51,-0.14081168902200197,-0.46180351851100504,-0.4126695307789568,-0.47295736787941617,-0.19362011665569256,-0.51012375,-0.4491699231166008,-0.51,-0.08445217119496662,-0.44002534011761685,-0.19346950229019982,-0.51,-0.3999162217542261,-0.4662209349505462,-0.4279471453553083,-0.4994798419198979,-0.2733227459185539,-0.51,-0.11,-0.51,-0.41,-0.51,0.10593729280340673,0.37947998065382693,-0.29230330843628627,-0.35762483367509346,-0.288557809555007,-0.07178852020722443,-0.1887152724772998,-0.2571173538293461,-0.11996314244571912,0.08459429469663593,-0.2847326467871233,-0.3117476840577049,-0.3110492219060825,-0.13870786350882666,-0.2664654614373144,-0.3093138470200231,-0.025193968098698914,0.15404973828801433,-0.2634337692773122,-0.27730564964405824,-0.21748880513008892,-0.14120022437067,-0.29619950214412816,-0.347411356200902,-0.1026633323008176,-0.04508641049273395,-0.3658300847856238,-0.35311670565654496,-0.15766328214604192,-0.13898612661949275,-0.41,-0.4664750650385596,-0.61,-0.475774180829841,-0.14659361049303818,-0.51,-0.4018632534627939,-0.5129899378125,-0.2245770087513967,-0.510135,-0.4438198576805416,-0.51,-0.28385525984677623,-0.51,-0.4529373468983041,-0.51,-0.393681257563953,-0.51,-0.61,-0.51,-0.31455772228259316,-0.4983987862055697,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.1566566377923155,0.3689821506489497,-0.2444256380400868,-0.31816255523959697,-0.11,0.3679024125620603,-0.34565765018577155,-0.3750473979272652,-0.031155584474834692,0.12589960493197827,-0.27551355122666327,-0.258925341086778,-0.111858510346341,-0.051963571530507686,-0.32423807042246855,-0.3493016870316479,0.008611383694984917,0.1886298624899973,-0.17958910374267717,-0.2781939247855085,-0.05086277963702865,0.1329235448223035,-0.3753546589677713,-0.4592316415266249,0.11294625930457047,-0.05229928222919141,-0.3929666453603117,-0.3589804071937404,-0.5515219213424011,-0.0985352785351559,-0.4038239168254135,-0.51,-0.43531225554375436,-0.510741375,-0.12528253669076955,-0.51,-0.1432843443361705,-0.51012375,-0.3926254618294894,-0.503349225,-0.1633009900129143,-0.5118195985221478,-0.37793391152541017,-0.42990073477532365,-0.11636939573216835,-0.51,-0.41,-0.496899467470491,-0.42051008991485506,-0.48656905092798114,-0.31442166087739715,-0.51,-0.4539151871611749,-0.51,-0.3794760347523549,-0.51,-0.61,-0.51,-0.41,-0.51,-0.111081177037923,-0.51,-0.3985135634646535,-0.51,-0.10446222153566495,0.36165230466213844,-0.37388708883594896,-0.430992841239364,-0.34918460281549324,-0.14000926611418577,-0.3001928507646205,-0.39387318316464887,-0.10137458403973054,-0.05780969913521675,-0.3662320057022197,-0.4706617468083516,-0.15600185143838452,-0.1425104837895047,-0.38203707806291853,-0.46202981588108755,-0.11,0.1032865529433581,-0.412025151875,-0.51,-0.11014117615788277,-0.1111329927598761,-0.41,-0.42666112902070497,-0.11187496841473665,-0.06511392475346028,-0.41012374999999995,-0.51,-0.11,0,0,0,-0.4539151871611749,-0.51,-0.2999998779021285,-0.51,-0.4539151871611749,-0.51,-0.39942262662132344,-0.51,-0.10361651377503073,-0.51,-0.3853062052786797,-0.51,0,0,0,0,-0.11,-0.51,-0.41,-0.510135,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.18947014705636617,0.40993178595892515,-0.41,-0.51,-0.07263689964634656,0.27444106136633656,-0.41,-0.51,-1.01,0.34770582565984187,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,0.19415524787700628,-0.40213446235040673,-0.51,-0.11,-0.01,0,0,-0.11,0.062074325867986446,-0.41,-0.51,-0.11,0,0,0,-0.4104853246153739,-0.51,-0.22065875935804738,-0.51,-0.10480476039592652,-0.51,-0.41,-0.51,-0.4572363060817492,-0.51,-0.35338279081172946,-0.4900147303928122,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.2585236438716157,-0.41,-0.51,-0.61,-0.01,-0.41,-0.51,-0.11,-0.021374423848729153,-0.41,-0.51,-0.11,0,0,0,-0.11,0.06709734056139739,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.5065058438394796,-0.51,-0.3403264842621516,-0.51,-0.11,0,0,0,-0.61,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,-0.61,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0.2396832093576452,-0.3782273221574478,-0.51,-0.11,0.02753381186607482,-0.41,-0.51,-1.01,0.05300486028232669,-0.41,-0.51,-1.01,-0.01,-0.41,0,-0.11,0.03983377753988452,-0.41,-0.51,0,0,0,0,-0.11,-0.002153551364432626,-0.41,-0.51,0,0,0,0,-0.61,-0.504151125,-0.3533850897835056,-0.51,-0.61,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.1959388613873539,0.08542984521809345,-0.41,-0.51,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0.016974767493387832,-0.41,-0.51,0,0,0,0,-1.01,-0.01,0,0,-0.61,0,0,0,0,0,0,0,-1.01,0,0,-0.51,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.30532540203343295,0.445692748947789,0.48923360983938563,0.39510108951034983,0.2592792126773698,0.45635914483371376,0.5247474020815329,0.3957414404643461,0.20912015040283177,0.4059786589627572,0.5323163091603377,0.3967903168228046,0.1208070058621333,0.412637694415675,0.5388851819186774,0.39604205162620726,0.31044718926235076,0.39901727471074777,0.534440331108271,0.3881398021258451,0.18991338797472174,0.3999278192236212,0.5305989852247055,0.37758471683303435,0.07960272611802542,0.44121841768924114,0.5200132105390353,0.39332377004206515,0.10242685970374024,0.34896273005515444,0.5410033894747409,0.20142229145526575,0.2631045629407876,-0.05011360654807437,0.5099561015088987,0.3902873437753805,0.19696967561910136,-0.0556997053305955,0.5306560139069146,0.39177937240119953,0.2525701507328764,-0.057964712120991316,0.5361068577886883,0.39190242608692283,0.014924269417549624,-0.11040003733898315,0.5292919520657241,0.36519642886557985,0.25619141926752514,-0.055984485848578285,0.5334074623021344,0.30982455592688113,0.2844890610673575,-0.1334924038193147,0.5391598401115513,0.358427428822529,0.02631537980224745,-0.18213125950898507,0.5327412663665617,0.3028106413541418,0.03831967631601059,-0.3948980595901444,0.5113902279617986,0.21546575966688788,0.18433732364483027,0.3868357285854281,0.5199357518134501,0.3893402935796113,0.10190022106113203,0.38488406188346935,0.5198626288595487,0.39082428032828265,0.0008170556282401445,0.3927584118080404,0.5303955028448101,0.39097042584896885,0.0011852635949137751,0.36580475124808653,0.5172256860291118,0.36332537930536046,0.14365803721910184,0.3953646120984926,0.5254195631447446,0.39060625618705336,0.13915375475340735,0.24455429936975162,0.5272039089873488,0.34436923592219215,0.028005988959219696,0.3345455860894688,0.5284742107610496,0.35536686093100345,-0.004520746033714294,0.18520392775271888,0.5258126041090392,0.2311829697869382,0.1754736630875331,-0.13128932467505255,0.5277996558690478,0.36815843129143233,0.07111238787897903,-0.21467782198005878,0.534875359171822,0.31895502375573725,0.09639698699002403,-0.25518941168602727,0.5259122369570037,0.2880006840322612,-0.11632184596748485,-0.4679182770912243,0.5236955455138828,0.18989155754735054,0.07634956747839618,-0.2630729334838649,0.5415306186613212,0.3206122467231805,-0.0317421460122005,-0.38271130739627907,0.5332541588285189,0.12339800127838027,-0.18042572513599375,-0.4455936177660406,0.5335042980045208,0.02867612654679058,-0.07437207844461081,-0.5108088749999999,0.5278055320132704,0,0.3025962842646823,0.40495231695525813,0.5236741118659627,0.3902796179163653,0.34140295487339656,0.40574512918365524,0.5273965428283702,0.3856238969764549,0.18331204845369833,0.3888951522742625,0.5351473277688321,0.3865465008010678,0.19821722050368135,0.34209590918414123,0.4982360092545049,0.31381979672278554,0.2204553144775823,0.3819444952799157,0.5086557941198749,0.3803613099714356,0.12226046361144735,0.3403829392898014,0.5053087860495767,0.31421636622523136,0.16065812118554934,0.28817415476607156,0.5292746025124418,0.33281265784195047,-0.01589579693033358,-0.01,0.5247567340087121,0.12511953954816096,0.3117566180322469,-0.10962876081570556,0.5329989287353671,0.37964828277797563,0.2622935106874178,-0.13876250007653027,0.5346988357773701,0.34403329526552107,0.15686078669776765,-0.19972290682434174,0.5322491215864352,0.30626473444598773,-0.04019256865883268,-0.35087867915773274,0.5148691732494443,0.16959681705007504,0.28495933023947173,-0.2434277268097292,0.5034172767242474,0.28500254554277393,0.20528739600900403,-0.35832499771216836,0.5468454553784152,0.30623729827717255,-0.4147200322375397,-0.32112335475021153,0.5252569730122526,0.12428683143313464,-0.04109195094165138,-0.5035025603468549,0.5065444957272,0.02862596636377341,0.20972343205244393,0.3557165612628964,0.5171902512742029,0.37256194981845286,0.15370923918050183,0.3098241935479141,0.505365718610088,0.32125111909791926,-0.013061895786733294,0.3333441219663645,0.5110903402270077,0.3662451088781117,0.033599105638130775,0.18054481638398304,0.5139717408591223,0.1687149595048486,0.13059353488398817,0.3453560420902695,0.5162253934800256,0.3422125851275714,-0.39230791952627464,0.15805946715931724,0.5145060811050107,0.17620580253011842,-0.07700990669529165,0.1549513651464583,0.49844320775453255,0.05891047983445556,-0.047248145840149386,0.07414466868870863,0.5227059882335471,-0.01,-0.0054846026809026345,-0.2572032092488344,0.5129190598566193,0.3165495359077249,0.04820847492321588,-0.460874148704399,0.5406825688394883,0.05973945139056831,-0.020555308170170566,-0.47535968511542087,0.5303125296821601,0.07407750247848355,-0.08287824668393726,-0.51,0.5150568800974517,0.05463116244055284,-0.02711331975529291,-0.4822860519461373,0.5218316599555427,0.05699955010487392,-0.11,-0.51,0.4997063953937145,-0.01,-0.07698423675299301,-0.51012375,0.4697694747829183,-0.01,-0.11712333433218497,-0.51,0.4959010796600095,-0.01,-0.2936665391535766,0.33943817333351767,0.528543076228317,0.06012448905836129,-0.1461199974604719,0.08534420493406783,0.5312659704676483,-0.007959622997661448,-0.19115231323348306,0.11713779819030608,0.5336579948703801,0.08120732076155188,-0.07390788781196747,-0.01,0.5342155498361483,-0.013351746707492597,-0.1333807062362606,0.22178844561396965,0.5447331234921686,0.023652112167640495,-0.11,0.03528929717600454,0.5485026713418714,0.054713602999126254,-0.11,-0.01,0.5245592443734687,0,-0.11,0.03260780690685265,0.46451166808923655,0,-0.12179753896146417,-0.4676977215132485,0.5305564293619904,0.04466231249929635,-0.09425028020385057,-0.46822161150276764,0.5347971371656284,0,-0.10400314656024248,-0.51,0.5322412576564592,-0.00987760610920073,-0.10344851531287949,-0.51,0.4691755716568004,-0.015007570091386415,-0.11,-0.4331253855714193,0.5373252195614492,0,-1.01,-0.45015184991231444,0.5221899608703329,0,-1.01,-0.51,0.48239364226767917,0,-0.11,-0.51,0.34656376552615986,0,-0.10242426191137925,0.05399196028537184,0.5353739042425787,-0.000913449117761608,-0.1155913133701053,-0.01,0.5320419766125863,0.02255372698417802,-0.0982970594609149,0.027047587751335277,0.5252777773488262,0.01671154079365996,-0.11,-0.01,0.5157140706615903,0,-0.9319427366463411,0.02245644431269351,0.5128549089165257,-0.01,-0.11,-0.043783142912641765,0.5252203317712816,0,-0.11,-0.01,0.4840370133218459,0,-0.11,-0.01,0.382743811752327,0,-0.05450811250550375,-0.4722916045180243,0.5363474719636823,-0.01,-0.11,-0.5658228414395118,0.5058897878815746,0,-0.11,-0.51,0.49293103575746144,-0.01,-0.61,-0.51,0.26880389939386645,0,-0.61,-0.51,0.42062348236307523,0,-0.11,-0.5211375,0.2689085835796339,0,-0.11,-0.51,0.130068088233666,0,-0.11,-0.51,0.09,0,-0.03726713802382151,0.19999656703681606,0.5262000949663984,0.05390865906691869,-0.11,-0.01,0.5325005738124406,-0.01,-0.11,0.02815443908004322,0.5228441774628243,-0.01,-0.11,-0.01,0.474098531426724,0,-0.11176680923172073,-0.01,0.49566624219844363,0.023637983180710344,-0.11,-0.01,0.43381423470915187,0,-0.072207623729729,-0.01,0.44912924921757724,0,-0.61,-0.01,0.20520472258955483,0,-0.11,-0.4966970283870353,0.5459797912723222,0,-0.11,-0.51,0.46027270194709397,-0.019054291184473902,-0.0972534202127984,-0.51,0.4566067213750158,0,-0.11,0,0.248382970774008,0,-0.61,-0.4810070247740566,0.4209750088863758,0,-0.61,-0.51,0.4200893608559184,0,-0.11,-0.51,0.157671037836399,0,-0.11,0,0,0,-0.12530348229577695,0.02604470430514158,0.5168827386839615,-0.01,-1.01,-0.020674322121335423,0.5030430019186685,0,-0.10534750041183076,-0.024275829267653107,0.4842098584017063,-0.01,-0.11,-0.01,0.09,0,-0.11,-0.01,0.44644918659546906,0,-0.10226353477650776,-0.01,0.262401116593211,-0.01,-0.1020870504005468,-0.01,0.3320891923894643,0,-0.11,-0.01,0.09,0,-1.01113625,-0.51,0.4299203626719193,-0.01,-0.11,-0.51,0.31443030690916923,0,-1.01,-0.51,0.3528494844204708,0,-0.11,-0.51,0.17610510707602509,0,-0.11,-0.51,0,0,0,-0.51,0.21252614673643944,0,0,0,0,0,-0.11,-1.01,0.09,0,0.15445007036018746,0.4595777883347682,-0.009801086964770849,0.332053159029406,0.24387946060869203,0.45372607148074484,-0.00556249861354046,0.33203955772672267,0.08729647042224287,0.453332046678467,-0.04065245539695785,0.32970900009021453,0.05094881031310751,0.4536312489129504,-0.09530582084651865,0.23871894680446665,0.2505611320955834,0.45570375097310506,-0.009053769058220081,0.3286603574441197,0.1406559371546371,0.4535253628866541,-0.11948469738628048,0.2407461410896152,-0.012157625656494149,0.44530825848806965,-0.24160693313127438,0.21494231827269253,-0.04872897246256336,0.43510438205533564,-0.3272139212522148,0.052056821829541966,-0.11493606633366943,-0.06157880573141457,-0.01874307904172732,0.07864986580723393,-0.1284029333230844,-0.14843325841262936,-0.02547623111196123,-0.04665770684120858,-0.09416234542843478,-0.06824011519596472,-0.005102464895827441,-0.04949482767597347,-0.10485354759431073,-0.27877580028419124,-0.1981841010564759,0.2120165105563598,-0.1492209358417797,-0.11530204366141666,-0.09204140910694525,-0.03574586914982507,-0.09272116658386013,-0.3820760217619457,-0.24049411618081468,0.006394654429073773,-0.11935848725581785,-0.32011638753056193,-0.26253599629240415,0.14844365436842794,-0.0818547129597039,-0.4378306023791462,-0.36241289676882676,-0.07246142620359178,0.08222084064346685,0.39255804358781643,-0.03235155130306806,0.12986055412388728,-0.17273296904252583,-0.027627664888665082,-0.017646163878461844,-0.016922520349801875,-0.11770996046688025,0.03749387222700202,-0.046873688206271705,0.023954111681025163,-0.2306337838216968,-0.032841401528133175,-0.10076382846865932,0.0800707089445739,0.018236295126081114,0.19197080222888294,-0.05326082633823968,0.004160138884463003,-0.15111198614889165,-0.037150156823430175,-0.06063860698925914,-0.012446850614206988,-0.12860896778612138,-0.003935541906523933,-0.19526073976427774,0.031195284396568577,-0.13049467274328289,-0.054459370971502274,-0.2739982032544457,-0.017795194294327372,-0.25296047892250295,-0.203491495463055,0.0005129500158109967,-0.07626158600418208,-0.15409003261312668,-0.5308329125785515,-0.1596922611269435,-0.04202922327308817,-0.3738857009864274,-0.4321457608208331,-0.1761639328038035,0.0709625862273253,-0.10499821091513127,-0.5159915533440311,-0.24593975823879016,-0.008171524847533876,-0.10748111887213792,-0.4372836885662541,-0.18733644172586322,-0.05531189162194221,-0.4587412233459047,-0.5148664911807789,-0.3527732940185187,0.04505123624464299,-0.47245150960645477,-0.5027258881162497,-0.41,0.06521760276349632,-0.11,-0.51,-0.41,-0.04853932399875072,0.14267439223517697,0.3552604870132545,-0.05236450015297871,0.13655561010788447,0.004636957836801021,0.3733176432396287,-0.19205327392654478,0.09372336832433927,-0.030336900831796795,0.1427808244733751,-0.02036840659534081,0.03189619891529195,-0.011424548549466517,0.014230535496690571,-0.07789564032203983,0.14983426233101127,0.0907401818401523,0.2285561085118021,-0.053527840819540075,0.08932180372672528,0.08066827585343761,0.16943361474056232,-0.18380650471615417,0.0938602855303073,-0.0009762824196499625,0.032371910677553704,-0.1143454548339666,0.14377479958031752,-0.05619655142680938,0.02838526193083163,-0.21167312340164587,0.08604062218101946,-0.15554585856362746,-0.19324261868880713,-0.11340525189115278,-0.033063760493128536,-0.06959215216676637,-0.29925019240595846,-0.19238762016661867,0.049296832254719626,-0.15314546098932663,-0.42260377338702443,-0.20253719104508183,0.03879285332041544,-0.11,-0.4968097715507151,-0.3493781130660618,-0.04454841251306831,-0.13735957285301753,-0.45182858338780985,-0.2516668866533672,-0.03267382400992819,-0.22525631939879298,-0.47452081489844766,-0.31918496614153197,0.04735613035950136,-0.09645407809014026,-0.5060787992245815,-0.39423202406429975,0.00012079840172653797,-0.5903284814419388,-0.510000660559286,-0.3838367745135636,0.04215714476738911,0.08012486099498539,0.338731626540839,-0.23281189995772267,0.04177853065803699,-0.1526324423610915,-0.03971936658719338,-0.15361049544701,0.027734845899727766,-0.15627220442766937,-0.01919546556124782,-0.24280000385038644,0.07279244631401045,-0.08335160456894725,-0.07575407157585724,-0.346705027209851,-0.02798454577478305,-0.0516147337118905,0.03982014803983734,-0.31011921674463194,-0.017742929845476173,-0.19836490783950572,-0.0895056751586724,-0.3523456574349688,0.044291470229984725,-0.10300723433794484,-0.009324149428678322,-0.33524644207265347,0.03138689844502959,-0.552568111515455,-0.07323661848415251,-0.41,-0.002143908006936859,-0.13834284569677835,-0.3830929505077562,-0.20592279453607854,0.04511652294223618,-0.09149620106894535,-0.5219698167948058,-0.3060917185903594,0.08914841063720338,-0.09556034726932197,-0.44953286554891647,-0.41,0.06833146298547776,-0.11,-0.51,-0.41,-0.05244063911675541,-0.61,-0.5142525,-0.41,0.08559235604086404,-0.09573065133331146,-0.51,-0.41,0.10034132644880432,-0.11,-0.51,-0.41,0.03766464489836636,-0.11,-0.51,-0.41,-0.0416861041255419,-0.10498276429277144,0.45733375218255734,-0.23621561032320057,-0.007171066559509928,-0.13990560044129757,0.4467701937922559,-0.37339145133583745,0.03937640533932247,-0.15807488289406818,0.4487463670032416,-0.3664305369093942,0.023063470113000382,-0.11,0.34132025597238863,-0.41,0.023410244736040857,-0.5219754196638278,0.448637389776146,-0.41,0.02304767393445359,-0.11,0.2973102424370441,-0.41,-0.01,-0.17561874404173303,0.3532361708819737,-0.41,-0.01,-0.11,0.07245265502604975,-0.41,-0.01,-0.5441766810771161,-0.47821198421821853,-0.3692343780613749,0.08066418969389731,-0.5528446538337511,-0.4793223116726718,-0.41,0.01835522047832302,-0.11,-0.51,-0.41,0.06692123354805475,-0.11,-0.51,-0.41,0.005473740749062619,-0.11,-0.51,-0.3639342729542812,0.014753242580096956,-0.1075606598187297,-0.51,-0.41,0.002622330639711047,-0.11,-0.51,-0.41,-0.005536403009606658,-0.11,0,0,0,-0.1520393755645731,0.3725571212217762,-0.3054234396690705,-0.02230813714215053,-0.20083731422635523,-0.05792535651497848,-0.35938762223970344,0.0680005755135536,-0.11115875,-0.02877097410779604,-0.36592852804867415,0.14021293121850187,-0.11,-0.04735421382123716,-0.41,0.014246270855966454,-0.9153601147158433,0.0960823073085992,-0.41,-0.01,-0.24856853689351682,-0.051841505306391096,-0.41,-0.049605638452321736,-0.11,-0.014568950876737157,-0.41,0.07690430770739175,-0.11,-0.01,-0.41,-0.01,-0.11,-0.51,-0.41,-0.02871452667618425,-0.11,-0.51,-0.41,0.010752112613237427,-0.11,-0.51,-0.36767138639425423,0.036000568445525884,-0.11,-1.01,-0.36540253886064267,0.0018889991643436695,-0.11,-0.51,-0.41,0.02033790647761284,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0.015453977833729697,-0.61,0,0,0,-0.17171144204918248,0.32797807728871375,-0.3538294546265811,-0.0038417932078411397,-0.11,0.23786982499863474,-0.3636810631772435,-0.01,-0.16012375,0.08392263162631969,-0.41,-0.020525428922771184,-0.11,-0.015123374441298196,-0.371112151450634,-0.028183229717132073,-0.11,0.15408436056861083,-0.41,-0.018914658831440598,-0.11,0.00115673186504941,-0.41,-0.014902577281164842,-0.61,-0.022754380208427863,-0.41,-0.024339284307001482,-0.11,-0.011416456385138668,-0.41,0.01833880952398949,-0.11,-0.51,-0.41,0.05640794097665133,-0.11,-0.51,-0.41,0.06784567944337014,-0.11,-0.51,-0.41,0.06043873829455118,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.41,-0.011370964991694878,-0.11,-0.51,-0.41,-0.04197453105842411,-1.01,-0.51,-0.41,0,0,0,0,0,-0.11059625000000001,0.25412052296205356,-0.41,-0.01,-0.10571607067402247,-0.021137500000000004,-0.41,-0.029305315260568843,-0.11,-0.03399091949460381,-0.41068625,0.04312838060001711,-0.11,-0.022657651250933886,-0.41,-0.020695193415890156,-0.20059625000000003,0.046857750908861004,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,0,0,0,-0.61,-0.01,-0.41,0,-0.11,-0.51,-0.3787108559516489,0.015745815062407333,-1.01,-0.51,-0.41,-0.0035375070148471414,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.61,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0.2395387184812429,0.30047172706160985,0.4275456664673697,0.2477949306367825,0.1964927516596748,0.2335660570780414,0.4447505934529169,0.25219240700064405,0.15864547639277907,0.3743657028319197,0.41213734580773487,0.2751016476376579,0.061389233847273274,0.29462171755609673,0.42374809323000595,0.21987119187955195,0.1995248082223808,0.34508788444020666,0.22089269651410362,0.19100709863268903,0.1617866699385729,0.21490121243206886,0.27801361228271204,0.20403159946058635,0.12429139091465875,0.20402374008604957,0.36881252683670085,0.17643433017665855,0.058421789968757035,0.16838038386926,0.3491486993261018,0.1760788174157887,0.15167086973979288,-0.08977466065556249,0.44512208823663774,0.2618030642853937,0.2611611518619804,-0.18226216465962117,0.4287572821689777,0.2662385554005685,0.1614227559901965,-0.1447921324849868,0.4039305390522782,0.2452674094709763,0.005621373323218257,-0.35727363680794083,0.45474895790704534,0.053129836037085654,0.1673960167535996,-0.2438378541335872,0.4623833979802592,0.21737310405138321,0.13103810941730384,-0.3949115943170633,0.2456827242204092,0.11907468257118198,-0.08574798858493188,-0.3932635806699595,0.3863810829384492,0.10368668007731535,-0.11181106721274732,-0.51,0.2821698908856009,-0.01,0.15434689670585147,0.3860307553415183,0.051175327169716955,0.1450155669882619,-0.05292743882858043,0.04224548702192379,0.06499767401620733,0.05988318337106277,0.03644301947684854,0.1558782353246679,0.03056543815680842,0.03580565561175207,-0.12445914081256276,0.012768443696788964,0.007936575783511046,0.07318436441225941,0.0017895692414736965,0.15420329888506945,0.03193413562457077,0.08526791581897379,-0.037397326427653456,0.021542820575473326,0.01885278996260268,0.09299125567578836,-0.01546601320665075,0.08898964930568697,-0.000872621077609893,0.0394943752112986,0.13001335486827048,0.005109918036876749,-0.005134528518783958,0.0662764524068455,0.024472035783423975,-0.16259462955212636,0.08912980388842896,0.04353654111135356,-0.02715216715420738,-0.4838685448903681,0.0795404189672144,-0.022700785707379472,-0.019497228337477194,-0.3403197278289475,0.06243242190837094,-0.018985351897249442,-0.32080249255725873,-0.518239185821147,-0.04566717348267571,0.12106469947145065,-0.010851459679510282,-0.386907974167653,-0.08099024875948307,0.12468474751273619,-0.11,-0.51,-0.01788051961708429,0.10691591917105767,-0.04302005299056318,-0.48130429427568616,-0.04257493300902522,-0.00478330421796988,-0.43289027269666713,-0.51,0.005840122166153899,-0.05986750158587929,0.2290509300373847,0.21634753468089438,0.3849520377522759,0.14943720096464086,0.14159509372261986,0.16696780591247737,0.39428928967779514,0.13753451316411425,0.21127949478897345,0.04087938386116539,0.05189739162235765,0.07629648120241284,0.09770697177616336,0.055037561047503306,0.041851523396301854,0.14679463475736282,0.06156370613493761,0.17261300178731767,0.06734079546431851,0.059330716986806274,0.036537077376879654,0.08387089841584085,0.07515682040737662,0.15370301359441885,0.034537167626787116,0.055041485486524044,-0.029396537240313655,0.06510190499054694,-0.005722189054871506,0.007527149345040653,0.010474637013483418,0.05000794893773053,-0.010948061170517415,-0.281264758721608,0.3670089874483777,0.11202460269334702,-0.049112003276870445,-0.51,0.3073520146772168,0.08292574913501163,0.008240328983352987,-0.40339165776493247,0.04345526291212546,0.017905031658621978,-0.04710152183781561,-0.503817042699237,0.039132352745585255,-0.00416903803768004,0.00909066796199675,-0.43461155380524363,0.08084532922913738,0.005952203169304827,-0.11,-0.51,0.0682820134319057,-0.01,0.21732660159282247,-0.4688082247881038,-0.007097363558494968,0.01412726349646582,-0.037114256023689514,-0.5034264895114827,-0.008938649978869362,0.0701990755072623,0.1554241831620069,0.3586341486865193,0.02039388915248378,0.15173995458764836,-0.03216892364793733,-0.002365305797682301,0.0005766169294358671,0.040715256086533654,-0.025542243744371945,0.09844803788976127,-0.05762147671275548,0.006907790109327889,-0.024135488045682635,-0.038834599399066215,-0.024546669379027566,-0.03832968808603976,0.18094733793030582,0.06531062802012363,-0.03308692627733965,0.07159192354031522,-0.13604310524079444,-0.02041232135901543,-0.026345541382183535,0.035264480413671924,-0.11217579854704657,-0.011021082344546202,-0.03022088103805737,0.05991554286500834,-0.041463785850321,-0.004218967971739941,-0.020382748673111725,0.10474496849972124,-0.1065666266840911,-0.3634637789456591,-0.05331942533424275,0.2057769353937317,0.10098865064651334,-0.5028059867749356,-0.04675687255871113,-0.01333652277587073,-0.07785224743430447,-0.48542670325791476,-0.03110842004491467,0.01008202625487268,-0.05209572430040719,-0.51,-0.010127289870116372,0.14397085150522781,-0.05235678418311281,-0.5006251202145692,-0.03744426821890241,0.061449833970953584,-0.07699365059255611,-0.51,-0.044648891717787874,0.06411826457994561,-0.11,-0.51,-0.033765083299606514,0.09065357307962556,-0.09895575777856555,-0.531020121010453,-0.08255478850742481,-0.05986841178042356,-0.5382231344618746,0.07720832236045103,0.41869356591955137,-0.022993698200010505,-0.11,0.029524940453563582,0.429141397119488,-0.01,-0.4671109731271901,0.07184008556991778,0.3752683948734026,0.022911521060568527,0,0,0.41463455267408833,0,-1.01,0.03437746594936156,0.33560407767191236,-0.02392933778761689,-0.18366447241167586,0.016228608369433274,0.3034561751022064,0,-0.11,-0.01,0.2543007311162209,0,-0.11,-0.01,0.18469692849230246,0,-0.61,-0.51,0.4372810318097999,-0.01,-0.11,-0.51,0.4173131608754365,0,-1.01,-0.51,0.3971888526450613,0,-0.11,-0.5106975,0.21333744801825263,0,-0.11,-0.51,0.2997465130846768,-0.01,-1.01,-0.51,0.16528700192504,0,-0.11,-0.51,0.19958026477129143,0,-0.11,0,0,0,-0.1555969782449132,0.36656752918360824,-0.010039170494006282,0.022568445751089253,-0.11,-0.044735984143837504,0.057928081462808347,-0.01831860161372656,-0.11,-0.011176127387435286,-0.04788560942398657,0.06049682288538132,-0.10895816927268355,-0.03531939423333634,-0.014404645133262874,0.04396562510601379,-0.11,0.12351931363330505,-0.017344750616385084,-0.01,-0.11,-0.01,0.06517680779178897,-0.01,-0.5607755201569407,-0.016532811630383903,-0.010522141605506831,0.047234911640287244,-0.11,-0.01,0,0,-0.27151368881116,-0.51,-0.053432447430785415,-0.015587990436825077,-0.11,-0.51,0.08480186576972233,0,-0.11,-0.51,0.00454083315118764,-0.01,-0.11,0,0,0,-0.11,-0.51,0.014507494615663858,-0.01,-0.11,-0.51,0.08936595885062362,0,-1.01,-0.51,0,0,-0.11,0,0,0,-0.612475,0.05843178615372299,0.35450818043921817,-0.01,-0.11,0.0267502926135961,0.21720114349699032,0,-0.03840902499287923,0.08280087489305894,-0.010065661826121671,-0.005540514882424961,-0.07947213395645615,-0.01,0.014018438955446194,-0.01,-0.14193696260070676,0.0236905367924658,0.07162203740002407,-0.01,-0.8812505842356464,-0.01,0.08283639868398474,0,-0.11,-0.01,0.018597912800428544,0,-0.11,-0.01,0.024393208164477348,0,-0.11,-0.4952263032767087,0.3018129792595525,0,-0.11,-0.51,0.1602201038858513,0,-0.11,-0.51,0.09661558418289096,0,-0.11,-0.51,0.08886354857113812,0,-0.11,-0.51,0.08339138680381461,-0.01,-0.11,-0.51,0.08819700951431503,0,-0.11,-0.51,0.0681777494993035,0,-1.01,-0.51,0,0,-0.12331495586951356,0.2763321984267934,-0.01418466511912745,-0.01,-0.11,-0.031493770966574706,-0.039429010985056565,-0.02200128049640697,-0.11,-0.01835384521739023,-0.018877008026361008,-0.01707681338915279,-0.11,0,0,0,-0.11,0.09974515968823547,-0.027179224346609576,-0.01,-0.11,-0.01,0,-0.01,-0.11,-0.01,0,0,0,0,0,0,-0.61,-0.51,0.015130957758091389,-0.01,-0.11,-0.51,0.06952000905388864,0,0,0,0,0,0,0,0,0,-0.2746310346875,-0.51,-0.015004141285445454,-0.013176100000000001,0,0,0,0,-0.11,-0.51,0.06097798657502709,0,0,0,0,0,0.22670993551201546,0.43177868231194666,-0.07671074261523442,0.24481392872186877,0.132689881766038,0.4426299203764613,-0.1395926659780805,0.21623030245008307,0.03413607213509178,0.4335410768551797,-0.29561891023030856,0.23470892304906282,0.02534227104991481,0.42397510852794545,-0.3328419556998483,0.08934872055344847,0.07766526478958741,0.3498558475844487,-0.29778727684938167,0.12645429461343932,0.03819297531896366,0.3995379489742276,-0.37210127758368977,0.158944075796945,-0.031646032530803885,0.3584572192461972,-0.3930194429686925,0.04902723520817517,-0.11,0.299127273175982,-0.399287350286474,-0.01,-0.1069200796355946,-0.10704484751237328,-0.115055553655317,-0.07182728179028051,-0.2726540319753079,-0.18682205321335726,-0.18485379331005863,-0.015561897189242856,-0.12502352733096225,-0.33939713326452714,-0.36108142471447563,0.044285959547664164,-0.10797651516740646,-0.44897111573254384,-0.36512782419124085,-0.025236751426708014,-0.11905810673315532,-0.360808362240186,-0.3412157500272575,-0.03550428465022836,-0.12217757271814458,-0.4413140345973371,-0.41,-0.022877433722721524,-0.11,-0.3952297352574804,-0.41261933749999996,0.0016276081487340021,-0.15338386957692635,-0.51,-0.3834963485438597,-0.052594364495543305,0.05586080198633351,0.38031723241400095,-0.5033189653213422,-0.009298744415288726,-0.1103625792142891,-0.06683743444338819,-0.4991415350265349,-0.036352096681765055,-0.127029834866779,-0.055468303440945534,-0.49438101007182855,0.05471085457692795,-0.258233356789773,-0.07339238897432104,-0.4788595990946696,-0.0065589717110673,-0.07849366957897155,0.15591219027664976,-0.5343653391758674,-0.015837387981684697,-0.4599030257581049,-0.09166869970748641,-0.4671171577368583,-0.011323806627664742,-0.07347938751072028,-0.0393120665718618,-0.45717380492103393,0.05097778303664237,-0.2094164558629157,-0.07772204585573872,-0.4721992764179406,-0.04137454963769565,-0.11324722058813359,-0.37886590827540073,-0.4419067641305446,-0.010218980037722744,-0.08904282289217987,-0.5225892778453461,-0.4585627987957651,-0.038625476975624545,-0.09821568214543883,-0.49638353100509697,-0.4716239359676127,-0.03454007444699253,-0.11,-0.51,-0.4434606391152198,0.0038725134513926188,-0.5564438457392442,-0.4887055865470098,-0.44112645578643617,-0.0683479626155423,-0.11,-0.5110461456638838,-0.43494488825632427,-0.0791121130344492,-0.1036955430535342,-0.51,-0.41012374999999995,0.08611917582892986,-0.1041642352055607,-0.51,-0.41,-0.008141724343073885,-0.002727059310891615,0.36200023412571736,-0.27110628271975135,0.061023920946713196,-0.0966058011385463,0.35555274501202294,-0.3375165787328319,0.02339055413626727,-0.011202324351386996,-0.002456826588378631,-0.4483663666153835,0.08648540355397286,-0.10759075246846567,-0.0599005286167971,-0.4268444717551105,-0.010657046014785187,0.04126183907230248,0.14720998912919517,-0.42257517869980643,0.07638756300671605,0.14459503667227072,0.035610391280264775,-0.41952429687117704,0.03764897879236064,-0.09342853813496184,0.024940423765063294,-0.41855290905083975,0.01796971318045767,-0.05963799758583005,-0.02699672735634508,-0.4247820686163251,-0.046800673821685096,-0.24236438144823808,-0.3216034911299445,-0.31237284978300334,-0.03887480623473027,-0.21056456026119347,-0.4750636883044392,-0.4074569581580576,-0.07344448507794207,-0.126481952122213,-0.4804980026050907,-0.41738286443520034,0.004216911481528331,-0.11,-0.51,-0.41127012499999993,0.05565872282758416,-0.1334241874209117,-0.47773198145647183,-0.4152265758770004,-0.07983821350319772,-0.11,-0.51,-0.41290811209645767,-0.0645423669788523,-0.09326069739589445,-0.51,-0.41412205542412583,-0.08531948446664772,-0.61,-0.51,-0.41,0.05561962560810885,-0.03528823305175877,0.3544484909694015,-0.45331650199889006,0.02016174064660679,-0.12393179544935087,-0.08698439095539175,-0.540898642935349,-0.007349568172126675,-0.12642082426706305,-0.06430295386747079,-0.44566362347626565,-0.06520944691963565,-0.13397736014402484,-0.09073608960284302,-0.5183235521851558,-0.045817531811137395,-0.4581087045438332,0.132194669256704,-0.427930392085053,-0.010837292219786585,-0.08455841406112324,-0.07515705151687647,-0.41089006737499995,-0.08263169936416753,-0.2537114072561182,-0.06394806473153661,-0.41923533874999996,-0.08785681236543298,-0.5998870148032278,-0.021002115491076487,-0.41,-0.022534163317310524,-0.11,-0.5054793449896127,-0.41,0.001180125277556063,-0.11,-0.51068625,-0.41,-0.04371973820005565,-0.19255506063711897,-0.5019805675083475,-0.42227149999999997,-0.08509538120237738,-0.11,-0.51,-0.41,-0.01,-0.46471737057746004,-0.51,-0.42228061249999993,-0.015188291447187752,-0.11,-0.51,-0.41,-0.03816844706020669,-0.11,-0.51,-0.41,0.01922640719675084,-0.11,-0.51,-0.41,-0.012600020937749219,-0.12401408432216648,0.4334529250201207,-0.3861497055122102,-0.01,-0.11,0.35692088375848374,-0.39023264423981113,-0.01,-0.1401566746458688,0.34234712843710624,-0.41,-0.01,-0.11,0.15567044303724367,-0.41,-0.01,-0.07237297306423157,0.25255042171474507,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,0.0660718363877884,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.4779127866726959,-0.37521283902080077,-0.004944769992940284,-0.11,-0.51,-0.41,0.021808477677659588,-0.61,-0.51,-0.41,-0.013807760232248608,-0.11,-0.51,-0.41,0.02848133414676266,-0.11,-0.51,-0.41,-0.0072239187758309405,-0.11,-0.51,-0.41,-0.018328451156976164,-1.01,-0.51,0,0,0,0,0,0,-0.08170973997312342,0.33613419129195304,-0.41,-0.00019236967584430713,-0.11,-0.04306829251932584,-0.41,0.029441896407714992,-0.11,0.04672351290235457,-0.41,-0.01,-0.61,-0.01,-0.41,-0.01,-0.61,-0.01175777287693914,-0.41,-0.02151085413466198,-0.11,-0.011147500000000001,-0.41,0.02355075969843314,-0.61,0.040176289921853785,-0.41,-0.01,-0.61,-0.0106975,-0.41,-0.01,-0.61,-0.51,-0.41,0.017822054998018973,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0.012667206513391744,0,0,0,0,-1.01,-0.51,-0.41,-0.0106975,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.2727719433380937,-0.41,-0.01,-0.61,0.12157119999795511,-0.41,-0.01,-0.11,-0.011585616698534088,-0.41,-0.010795191462467648,-0.11,-0.01,-0.41,-0.01,-0.11,0.09211769676006455,-0.41,-0.01,-0.11,-0.01,0,0,-1.01,-0.01,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,-0.013633086137390435,-0.11,-0.51,-0.41,-0.01,-0.61,-0.51,-0.41,-0.01915806445007911,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.09958138306013359,-0.41,0,-0.11,-0.01,-0.41,0,-0.10782686194781546,-0.010113526048746518,-0.41,-0.026351693477394036,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-1.01,-0.01,-0.41,-0.01,-0.11,-0.01,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0.3446666949687709,0.44604361725789826,0.5128609626773462,-0.11745080505402875,0.22229069462755238,0.43471115333697624,0.5267608180532849,-0.13009271708461936,0.2704651274751555,0.4539155676637153,0.5336269762513627,-0.12112619779853916,-0.07784873254358068,0.30166086340463594,0.5269772231738376,-0.2197068269872013,0.33745958059249037,0.43472428321053896,0.5420996707548615,-0.1208957392881017,0.2895881603187953,0.2886213268308242,0.5337370886592845,-0.2479984681105386,0.16489461084972137,0.2850599608434523,0.5395334312522625,-0.24836752344441856,0.07153955400231327,0.13909538446270472,0.5301255102501807,-0.43605093354195856,0.3148508011820028,-0.056701582041069676,0.5040003580837666,-0.16893331171348802,0.15354708260166167,-0.20605058789722958,0.5260642015051026,-0.20641385300731646,0.28429451071782763,-0.21020985218457786,0.5173977241989857,-0.23642591026553966,0.035946834794773924,-0.4664764044326705,0.53584164075907,-0.3369945887039634,0.22327781945528524,-0.14279006875278658,0.5394716367151943,-0.2634401222966978,-0.024663995669054833,-0.4826097983695699,0.5446280040853322,-0.3550929130994765,-0.046393297934006705,-0.3635757181794125,0.5353986287918193,-0.4731502071188943,-0.05193277009569375,-0.48810293895670803,0.5342335476869231,-0.4720823823452183,0.27397346770302333,0.3850325719028118,0.5140969114354531,-0.1624106482311991,0.014845589811538603,0.3399722661968175,0.5354410202325985,-0.2313492365162143,0.0472131335062365,0.31991896444015,0.5198426895572146,-0.1841799645500436,-0.027757123730137757,0.173787521575898,0.5312287342210645,-0.37961739645799764,0.18021739458353545,0.27159866480273637,0.5354312561029944,-0.2745779804376855,-0.04096992730097773,0.1122336941727818,0.5271159049947739,-0.40628974825599234,-0.030837177148690907,0.04657643430957206,0.5389890655960141,-0.2741424225832205,-0.0374026444581081,0.026926095204344747,0.5248407565978626,-0.51,0.10957848604923733,-0.30061269414813147,0.5263361289375166,-0.37625324636345203,-0.062131233678318465,-0.4697940461506711,0.537448787112485,-0.45347606814717945,-0.026039571262363684,-0.4792883838011896,0.526781938685228,-0.4806755417735664,-0.07873127960049182,-0.4904622295627262,0.5284371447762675,-0.51,-0.01673667049601487,-0.510135,0.5329127503487002,-0.45596511007196744,-0.11,-0.5028171317123863,0.5329508761278475,0,-0.08703292657349217,-0.51,0.5284659615690297,-0.51,-0.11,-0.51,0.44051588440661654,0,0.3399447076315835,0.4002393853926474,0.5368743318899767,-0.16734756229254974,0.2102930174561865,0.2889154863859302,0.5289959566029354,-0.27734974801622425,0.14312838523587273,0.27021988476257935,0.5148101571213547,-0.3015974743399297,0.07192792008692772,0.027895356346643398,0.5428665009131036,-0.4791668510519886,0.2424440902060801,0.22318054999129472,0.5050182233657646,-0.2782090003715793,-0.320055373237132,0.13699617288751553,0.5362683184564256,-0.4733246645577831,-0.024687708588607082,0.14208617216390082,0.529053541828632,-0.35988660129441696,-0.07337002100092718,-0.01,0.5209372289896964,0,0.26238731204593135,-0.2149824733418671,0.5154167234710509,-0.426741445224887,0.02771388423170318,-0.4553810979516886,0.541068411479576,-0.4575243695911936,0.06849395327289137,-0.46337609507864924,0.5275538005799638,0,-0.03515407328698059,-0.51057375,0.4836220220050536,0,0.06772819000449111,-0.4564412705486493,0.5198068396516431,-0.4674587448199559,-0.11,-0.51,0.48912457998769565,0,-0.11,-0.49960488923122376,0.5342860539153387,-0.51,-0.11,-0.51,0.47533849994905186,0,0.15000111668990554,0.2223157923869794,0.5175601482405926,-0.32914725890168933,-0.06643192490031273,0.15840473870281704,0.5074808864155064,-0.48154331973468223,-0.003952986191821339,0.027635573729489382,0.4828062337840434,-0.499766085077626,-0.14899860901882453,-0.009398767510713548,0.4884507950766821,-0.4551141170336344,0.09912274448827796,0.06539965848449582,0.495393375915198,-0.3886982241519927,-0.4518499616618184,0.013688421509940076,0.4701079939734532,-0.51,-0.05620710907996859,0.020615792110919663,0.4784054595860249,0,-0.61,-0.01,0.4537543323471695,0,0.025618402123553773,-0.43816041264174854,0.5094506460780635,-0.5043830131904278,-0.058854987031776156,-0.50473951712719,0.49537533335632195,-0.51,-0.11,-0.49593950178952617,0.5155444069920809,0,-0.61,-0.51,0.3987851314150125,-0.51,-0.11,-0.5055928982299788,0.4860633841652764,0,-0.11,-0.51,0.4547968747732522,0,-0.11,-0.5114999079231427,0.35772589045189274,0,-0.10223900114591239,-0.51,0.32713486638780054,0,-0.8850945792888886,0.07748749766695548,0.5394359351401916,-0.48567197368315956,-0.11,0,0.5263043317996444,-0.51,-1.01,0.033329275835533016,0.536894674134815,-0.51,-0.11,-0.01,0.36448434663579143,-0.51,-0.07077372250062172,0,0.5333319944852939,0,-0.11,-0.01,0.47121839682836936,0,-0.11,0.03502996150043635,0.43399282504895176,-0.51,-0.11,0,0,0,-0.12043932256631915,-0.51,0.5215431480760705,0,-1.01,0,0.49432269101734994,0,-0.11,-0.51,0.49408163838527625,0,-0.11,-0.51,0.4113534712171019,0,-0.5675117005790128,-0.51,0.32332383238815504,0,-0.11,-0.51,0.1712535572971106,-0.51,-0.11,-0.51,0.16409661141979937,0,-0.11,0,0,0,-0.11,0.06437156976585087,0.5266206082784021,-0.51,-0.11,-0.01,0.5272426377044968,0,0,0,0.49021265770339245,0,-0.11,-0.01,0.3514120738089914,-0.51,-0.11,-0.01,0.4067402031851135,0,-0.11,0,0.3493427582528914,0,-0.11,-0.01,0.3591143598451152,-0.51,-0.11,-0.01,0.18293369866748105,0,-0.11,-0.51,0.4438803899028976,0,-0.11,-0.51,0.3409911796902704,0,-0.11,-0.5143193678685261,0.23933024955673918,0,-0.11,-0.51,0.24434031357556676,0,-0.11,-0.51,0.13368027687924594,0,-1.01,-0.5211375,0.16842188164469818,0,0,0,0,0,-0.61,-0.51,0,0,-0.18602681122343556,0.030188772430577118,0.5055200486257768,0,-0.11,-0.01,0.4264344925194257,0,-0.11,0.02753961008592349,0.3553091992083094,0,-0.1105852538943853,-0.01,0.2320482725056926,0,-1.01,-0.01,0.49200579789514554,0,-0.61,-0.01,0.2508423132299024,0,-0.61,0.021912486336423627,0.25744150900053314,0,0,0,0,0,-0.61,-0.51,0.46641555610892843,0,-0.11,-0.51,0.2492832646414876,0,-0.11,-0.51,0.20809086318204953,0,-0.11,-0.51,0,0,-1.01,-0.51,0.21293265478970133,0,-0.11,-0.51,0.1365522112273887,0,-1.01,-0.51,0.09,0,0,0,0,0,-0.11,-0.01,0.4494342070632621,-0.5169199862408642,-0.61,-0.01,0.3368632370384021,0,-0.11,-0.01,0.3045938256440182,0,-0.11,-0.01,0.2121609316987579,0,-0.11,-0.01,0.23864597211147495,0,0,0,0.1315401854128407,-0.51,-0.11,0,0,0,0,0,0,-0.51,-0.11,0,0.2362653203464315,0,-0.11,-0.51,0.13645777833659867,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.10563513332817215,0,0,0,0,0,0,0,0,0,-0.11,-1.01,0.08931375,0,0.2353810494584916,0.45407867555981796,-0.018546967547409116,-0.20296313295195031,0.07484984259809907,0.45338579709156296,-0.09682399185563158,-0.3023808319645378,0.033338707626828036,0.45527254670699613,-0.10142734657771516,-0.40399415370133995,-0.02346672697577749,0.44659123408870083,-0.31112990548807473,-0.38813426024727604,0.19619868521248035,0.4547354795226249,-0.14399842604682028,-0.3049516999202527,-0.05307131816240639,0.4428632246844971,-0.25293381115235486,-0.43020519472778906,-0.04806846650390337,0.4392209936314014,-0.35090470923912187,-0.4486438719861009,-0.11,0.42333020809990013,-0.41,-0.49461201508885755,-0.52341889592133,-0.4930634250913891,-0.01210025001448927,-0.4808568460860985,-0.3827291645689993,-0.45828096757119235,-0.07710153946540776,-0.48645391832114965,-0.37663490152469886,-0.49207592836031855,-0.011166974269894676,-0.5114740369067161,-0.29622616457664674,-0.4125092542281613,-0.17316537202162094,-0.4800966400441146,-0.4151475343092924,-0.5106975,-0.05955287307870907,-0.51,-0.35769624947292844,-0.5106975,-0.20284316798711627,-0.5151162716600909,-0.24563165129425205,-0.51,-0.39344855601039874,-0.5181450537828232,-0.10425057685090566,-0.51171,-0.41,-0.51,-0.0011758482873030808,0.3895735582202866,-0.18630879335590422,-0.39038368603664736,-0.15158698676027924,-0.09160782919962455,-0.2067245901130429,-0.4039064418251404,-0.1757078393800484,0.1605743029627953,-0.19770074067517648,-0.4375889806325762,-0.20734015812792714,-0.11800670500691378,-0.1559573227458615,-0.40470884384444683,-0.14557164074509368,0.14982310108254743,-0.3396896227901453,-0.3944424695014479,-0.24414092210035196,-0.13976873358652778,-0.2962932251393571,-0.4791747659319269,-0.09053393141105782,-0.03653437130535539,-0.40391374999999996,-0.4332921948457411,-0.13172280647182355,-0.14143368278570365,-0.4030014875,-0.42924081975095646,-0.3862687740020472,-0.51069692625,-0.10214710460235032,-0.5020864180956238,-0.39807481991946864,-0.5213325633882997,-0.03723260909059281,-0.5123834144976406,-0.36970639249408693,-0.5045234980024935,-0.2678541797177805,-0.4825666694694689,-0.10378766196801553,-0.5234662531108567,-0.3658377148146774,-0.4948456215999217,-0.4215698301666493,-0.4956257464121988,-0.34707421164106106,-0.4879102971755499,-0.4564370588541241,-0.5146576183011597,-0.309886509466112,-0.4889960243778463,-0.12763505268784997,-0.5121182527124274,-0.403475,-0.5172955424474145,-0.11072638484326472,-0.51,-0.41,-0.51,0.034456002404478214,0.35556142451422923,-0.26403053627234346,-0.3727523360654379,-0.37457696885025726,0.35464062290989223,-0.33506374211184253,-0.5072956229395411,-0.051604642102875124,0.0735009994362766,-0.20308844817800134,-0.3803205324638347,-0.059748235247260625,0.007219644671099295,-0.325202159615522,-0.4801997848608282,0.02492188141890297,0.09526715080269957,-0.1319401410367004,-0.4410198808750264,-0.06485178362004006,0.14741279250528794,-0.41,-0.5099282314998741,-0.08310089895153731,0.07822988455013481,-0.41,-0.4384450806867894,-0.10610822882835111,-0.07734482668363331,-0.34975561489801454,-0.4885355885556709,-0.41351901239490585,-0.51,-0.03066496689809742,-0.51,-0.41279306061847654,-0.5000904638154814,-0.12207326017120565,-0.506633696425396,-0.15951844998004094,-0.4926973228472869,-0.3655408464456208,-0.46920035697964224,-0.13309110206281602,-0.5087272517856035,-0.3736699123330273,-0.4936353081098745,-0.4398561411511475,-0.51,-0.1499198380329934,-0.51,-0.18730992486878448,-0.4988079109998747,-0.41,-0.51,-0.45177837385948866,-0.51,-0.3502583905239035,-0.51,-0.11,-0.51,-0.41,0,-0.0014576061295577813,0.35387972342117413,-0.3652113316822399,-0.5109561004554763,-0.3013368943497323,-0.131358049416148,-0.3003418767026731,-0.48894572575632383,-0.1602431771891794,-0.05607765142068385,-0.35562863271565176,-0.4698395750139701,-0.15420850975615796,-0.12400178474152612,-0.31526882560747804,-0.4835051469833888,-0.5028719427485778,0.08840368145342276,-0.36294359921410685,-0.51,-0.14938210204438976,-0.1348688612307788,-0.4107515,-0.4900394181318194,-0.11,-0.05386362222129746,-0.41,-0.51059625,0,0,0,0,-0.44770964330715407,-0.51012375,-0.21711108818430022,-0.51,-0.11,-0.51,-0.41,-0.51,-0.42591480135601145,-0.51,-0.3568800623469418,-0.5106975,-0.12234521587137015,-0.51115875,-0.41,-0.51,-0.09621590015152723,-0.51,-0.41,-0.5062255314339652,-0.1346670151715695,-0.51068625,-0.41,-0.51,0,0,0,0,-0.09145559603153451,-0.5204739436730462,-0.41,-0.51258996375,-0.11047880185538136,0.44772638015421595,-0.3722281807454111,-0.51,-0.1754769239009989,0.3349532612510014,-0.41,-0.51,-0.08297464381617257,0.380233905987936,-0.41,-0.51,-0.11059625000000001,0.07858087040011376,-0.41,-0.51,-0.5133500539950705,0.2468876428246963,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,-0.51,-0.6628441126566584,-0.51,-0.09206333073345892,-0.51,-0.10620931034991324,-0.51,-0.41,-0.4899974937740661,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.47680212787427245,-0.51,-0.3652436524412858,-0.51,-0.10619109621725162,-0.51,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,-0.11,0.2400431470895388,-0.3685852108202369,-0.51,-0.11,-0.09718827863021244,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,0.03708688079426062,-0.41,-0.51,-0.11,-0.04076804922993457,-0.41,-0.51,-0.11,-0.009042870677469396,-0.41,-0.49860537800778076,-0.112036694375,-0.01,0,0,-0.17698338048695983,-0.51,-0.41,-0.51,-0.4116190051180625,-0.51,-0.36561973170598644,-0.51,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0.2676132345227409,-0.41,-0.5113667547563976,-0.11115875,0.12990646182229024,-0.41,-0.51,-0.11,0.06771850002470031,-0.41,-0.51,-0.11,-0.01,0,0,-1.01,0.02495381572763744,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.01,-0.41,-0.51,-0.11,-0.008937844915085012,-0.41,-0.51,-0.61,-0.51,0,0,-0.41412046945021014,-0.51,-0.2918023552052197,-0.51,-0.11528000661460941,-0.51,-0.41,-0.51,0,0,-0.41,0,-1.01,-0.51,-0.3663060110006504,-0.512025,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.09951952185968345,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.05384532849679309,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,-1.01,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3001799166093623,0.30035139113951154,0.39189735149740823,-0.2330537165977094,0.20733141768753147,0.13292744032223391,0.4676806761501469,-0.2657512810044551,0.07109333362806643,0.24646803363995673,0.4435822831424453,-0.37790588484126564,-0.06836914371009635,0.23795345564635548,0.4537481947630772,-0.4556610954678245,0.20549452470621501,0.24677819822404481,0.452686048177696,-0.26246768279030525,0.0901859164520763,0.08552184627941953,0.33186230371839076,-0.37914595386138017,-0.06366456831969275,0.06064429698077825,0.39935755536795914,-0.51,-0.1445731769933099,-0.008670738216996206,0.3662363089574821,-0.51,0.221320253080837,-0.24722958445336135,0.43792430450629966,-0.3921531577984162,0.09115607712830338,-0.442785394553008,0.45577676732268946,0,-0.2710892372336342,-0.4172058244841328,0.4394274495995615,-0.43206036673623216,-0.11,-0.51,0.4494023217787951,0,-0.028112983901311152,-0.4875409089634473,0.39545531519271837,-0.4449491946979433,-0.11,-0.510235125,0.4069688876812288,-0.51059625,-0.0063826002930432515,-0.4822532877053616,0.418565766244402,-0.48986037986083025,-0.11,-0.51,0.36418983664406507,0,0.09557314079331782,0.3823264036923149,0.05631699308718317,-0.41464423604041123,0.015761655298357456,-0.03210989265736661,0.04664058573297733,-0.42186482279789334,-0.03848884982258447,0.013837835660239304,0.007469585235791105,-0.3544957131298835,-0.13942495979107264,-0.06052282448760804,0.018955232775213944,-0.44594575557989014,0.035155954147485166,0.11122230485662837,-0.011761818038932297,-0.40809300421844086,-0.07445540714691483,-0.08858387784997858,0.04677798537970821,-0.4658860143476019,-0.04517811780688817,-0.028827925472934605,-0.014623742835812357,-0.3934978134888495,-0.13408612507871598,-0.08143240764171511,-0.06730692879235278,-0.4262508965769132,0.06312276026276793,-0.34354453719571065,0.08913465293800796,-0.4672203140624098,-0.11,-0.5138429466103956,0.05913822730472524,-0.51,-0.09921646099060369,-0.51012375,0.022996683774257273,-0.5033001014905274,-0.06912171016638324,-0.5143432574064423,-0.08328637894035407,-0.511114116145778,0.10220770496016271,-0.5071390247668204,-0.047028482042982,-0.5129887587628015,-0.15021830085817478,-0.5107245711158604,0.0229621678359879,-0.51,-0.11120816672643075,-0.51,-0.006841295046196766,-0.5137297117901465,-0.11,-0.51,-0.0008540244073039875,-0.51,0.08913051526067106,0.31662877421313607,0.15659573198713406,-0.3800251064353719,-0.2769696807668317,0.1406344415404018,0.32922567497890187,-0.4738138854132147,-0.012856717940075736,0.01936997303407355,0.05783766141489643,-0.37031746983797653,-0.02193977504988244,-0.021016135071137833,0.050277928221154816,-0.5067650809267089,0.05773548556024516,0.13694613215393117,0.03465649094446983,-0.4321714309324044,-0.11,-0.008986942972722243,0.10785144723555892,-0.51,-0.11,0.10915887030521518,-0.025256414563798447,-0.51,-0.06439427304090242,0.017899982117839348,-0.03310362986027397,-0.4550102268387724,0.031233756833851954,-0.46453555821100717,0.2933124916579231,-0.4891334147907094,-0.031172354149587203,-0.5025490287060184,0.3659944690755371,-0.51,-0.008230412704048437,-0.51,0.043802474000767616,-0.49322374851183065,-0.11,-0.51,0.05090720384755984,0,-0.10290125,-0.4938109542754239,0.08457557231793547,-0.5114625,-0.11,-0.51,0.07157764743202756,0,-0.11,-0.5082139903582172,0.012583589892711949,-0.5009889158019164,-0.07671364309325754,-0.51,-0.010149544767244782,-0.51,-0.04346125708201975,0.3446080443268057,0.015437145726171168,-0.488982919318092,-0.02536987475995206,-0.05217945220744129,0.007736210771677273,-0.45542695223459384,-0.07518279386285387,0.19118414367720882,-0.03941273388343917,-0.51,-0.61012375,-0.09104097125833534,-0.07163483413027898,-0.51,0.1876134833863538,0.05426276947734078,-0.003712513806877274,-0.44816216126027425,-0.08480006981232865,-0.09259814290117098,-0.08619148619522297,-0.502095943275739,0.10683507984859161,-0.08080586200656548,-0.07398843741026084,-0.5126181059135733,-0.61,-0.01,0.053217276984348354,0,-0.08832410536496087,-0.4888818710581393,0.0015150449198215003,-0.5033443573952854,-0.11,-0.511315125,-0.005783464906013031,-0.511224,-0.08012006013124856,-0.51,0.03881008249276827,-0.5081220223726842,-0.11,-0.51,0.08287816236613675,0,0.14795990544798818,-0.5075479345009425,-0.05787176420953745,-0.49973972316140447,-0.11,-0.51,0.08825446211915519,0,-0.11,-0.51012375,-0.011910522697723044,-0.5114640935134332,-0.0786494772657685,-0.5162800749474215,-0.061344852980605505,-0.51071775,-0.11,0.05215984106047106,0.3775879557379641,0,-0.11,-0.01,0.3127602165108083,0,-0.14262445611887956,-0.01,0.3417086488530235,0,-0.11,-0.01,0.1626688948407125,0,-0.11520963492109007,0.037133332114519635,0.28251891527105466,-0.51,-0.11,-0.01,0.13549485644850126,0,-0.11,-0.01,0.0876632115416819,0,-0.11,0,0,0,-0.11,-0.51,0.24418684509497512,0,-0.11,-0.51,0.10178286180578149,0,-0.11,-0.51,0.2904911608654523,0,-0.61,-0.51,0.12917191304085157,0,-0.61,-0.51,0.16323767951040916,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.61,-0.51,0,0,-1.01,0.23328383665132857,-0.012249106098903104,-0.51,-0.11,-0.02004913568298862,-0.0023198525801380173,-0.51,-0.11,0.07537678140013805,-0.016560689666538588,-0.51,-0.11,-0.02483039258226792,-0.016619547280377664,-0.51,-0.61,-0.01,0.04545671174794621,0,0,0,0,0,-0.11,0.008700641270811176,-0.02174364183972466,-0.51,-0.10471979381705372,-0.01,0,0,-0.11,-0.51,0.07292888472924194,0,-0.11,-0.5478,0.0727400851183583,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.279736962911083,-0.51,-0.11,-0.01,0.1658834723008357,0,-0.11,0.023029428826318893,0.052681282483486316,0,-1.01,-0.01,0.05403845768589713,0,-1.01,-0.01,0.050060532480523376,0,-0.11,0,0,0,-0.11,-0.01,0.021757315296989252,0,-0.11,-0.01,0.09,0,-0.11,-0.51,0.25404813528583353,0,-1.01,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0.0658555194735553,0,0,0,0,0,-0.11,-0.51,0,0,-1.01,-0.51,0,-0.51,-1.01,-0.01,-0.003446524091344095,0,-0.11,0,0,0,-0.61,0.001305115813796119,-0.021404704517195727,-0.51,-1.01,-0.01,-0.02013973488204395,0,-0.201579108450139,-0.016933341047098628,-0.013651955679113623,-0.51,-0.11,-0.01,0.09,0,-1.01,-0.0274571109370368,-0.04572668198393969,-0.51,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,-0.0697526764085881,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,-0.006373286938859999,-0.51,0.16455078581681273,0.43638962830449,-0.24430288063715122,-0.400574181258414,0.010388093181270455,0.421995593154489,-0.38487732355063753,-0.4717017134584287,-0.07497538248390076,0.43207448319464375,-0.4028659179717091,-0.51,-0.08011593681245541,0.41795729217902833,-0.41,-0.51,0.028109684179105296,0.3617441580632489,-0.3103419437510736,-0.4795661217650702,-0.11,0.3198436772761319,-0.37912890608081706,-0.51,-0.11,0.2685709138193578,-0.41,-0.51,-0.11,0.2561075919457532,-0.41,-0.51,-0.38975733481375646,-0.4245941762619188,-0.1332186885922895,-0.48308401219863606,-0.4229851559586795,-0.51,-0.26116150125653087,-0.5133162239504467,-0.4420396346040714,-0.48704184554662655,-0.30488055561057625,-0.5139893981244974,-0.10129497118657425,-0.51012375,-0.41,-0.49220368410193266,-0.45391546373662406,-0.51,-0.37995806195628545,-0.51,-0.11,-0.51,-0.41,0,-0.1603945021450202,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.06032917447650304,0.3711547424064268,-0.46495912043351034,-0.5020970055712064,-0.21706649165842112,-0.15201507477390405,-0.5251697147725165,-0.510635650493094,-0.09106686875312853,0.07745204529687578,-0.46987346908665034,-0.4928299514006858,-0.16011014257041112,-0.13112689015638368,-0.41115874999999996,-0.5005223889951425,-0.08334890304440816,0.16449905653308358,-0.4288365369653109,-0.4850844678133761,-0.20227258477628168,-0.13690671621756578,-0.44411753940207827,-0.5103384388498295,-0.61,0.0008983975118502796,-0.41,-0.5120261038399008,-0.11,-0.03734020536905329,-0.41,-0.51,-0.4697756662248419,-0.4456981839236047,-0.4807245311384764,-0.5132883729347592,-0.14057384125319855,-0.51115875,-0.42113749999999994,-0.510131625,-0.1134839803908391,-0.51,-0.41115874999999996,-0.51,0,0,0,0,-0.11,-0.51,-0.41,0,-0.13757011421979123,-0.511042875,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,-0.51,-0.0757511940754729,0.3494060342776265,-0.41059625,-0.5088676592989865,-0.11,0.3586746281577984,-0.3785123693155225,-0.51024525,-0.01073982797414031,0.15000411539616315,-0.4140540611660285,-0.49060471599324856,-0.46233875,-0.042832823670585995,-0.41361386616825946,-0.51,-0.07273083304489253,0.05857952139063077,-0.4129354534350158,-0.4961437778071019,-0.07916264839993771,0.044882967711446536,-0.4200799416228882,-0.49243939995200264,-0.08558563698364424,0.032064515232416144,-0.41059625,-0.5111475,-0.61,-0.006538027818512788,-0.41298978593749996,-0.51,-0.61,-0.51,-0.2231518397942579,-0.51,-0.09442058257688067,-0.51,-0.41,-0.510135,-0.13931649056187212,-0.51,-0.41,-0.51,-0.12094015575462497,-0.51,-0.41,-0.510135,-0.11957261381603176,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.3420700774454134,-0.41,-0.51,-0.14229187080038558,-0.13394905419994868,-0.41,-0.5111475,-0.09796200835829555,-0.007830682143115894,-0.41012374999999995,-0.510246375,-0.15233875000000002,-0.07756416932953371,-0.41,-0.510135,-0.08563596420138218,0.10204939572408367,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,0.021719044154539256,-0.41,-0.51,-0.11,-0.01001125,0,0,-0.4539151871611749,-0.51,-0.42958354549530037,-0.51,-0.11,-0.51,-0.41,-0.51,-0.4194184069965478,-0.51,-0.44352581544254277,-0.51,0,0,0,0,-0.14722367070772374,-0.51,-0.41012374999999995,-0.51,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.1066394850936802,0.2511916879555246,-0.41,-0.5138143432633939,-0.11,0.06745088381576085,-0.41,-0.51,-0.61,0.10609748738260416,-0.41,-0.51,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,-0.20427637063733334,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.51,-0.11,0,0,0,-0.1635229619436128,-0.51,-0.41,-0.51,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.04742304199589395,-0.41,-0.51,-0.11,-0.01,0,0,-0.161557076564606,0.02556566654756872,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,-0.019040852286151138,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,-0.41,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,0.060977694461635985,-0.41,-0.51,-0.11,0.016774282397034587,-0.41,-0.51,-0.11,0,0,0,-0.11,0,0,0,-0.61,-0.01,-0.41,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11172125,-0.51,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.014664348593301728,-0.41,-0.51,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2788838580610124,0.34428803127223984,0.5170251433225701,0.3312314129540812,0.3057757646332523,0.4533245806861456,0.36431684241084433,0.3640084764812772,0.27690655728392016,0.45185667541339947,0.35447631934213847,0.360532786355837,0.2062198546207744,0.44596930122753153,0.4113062010422464,0.34077312166524015,0.22824552234288187,0.25316223630438994,0.537835115152072,0.2463227767728852,0.17654625528028428,0.23929806729615255,0.21619443132985044,0.291235805448612,0.19845602523312028,0.40457445973967643,0.24716386452886546,0.22540561880509674,0.16372505728225809,0.26071407405406416,0.29066470351758217,0.3008703536390305,0.28093066178203985,-0.07898550621871281,0.28769024891997025,0.34471308913181303,0.33816454624226266,-0.06578510184540046,0.51934187689162,0.343494053592834,0.2736135861296192,-0.06257165806244291,0.5183185749116167,0.32018662416059784,0.24579934771834414,-0.26555170806943873,0.5020372561623135,0.33573282896073264,0.2354238243196995,-0.11749865046434094,0.2220087732645279,0.3549332754526257,0.20355923785577598,-0.17617368307426434,0.2181015218972653,0.36606109675345544,0.20239946914074608,-0.18918588833437378,0.1921983170122289,0.3290657196476039,-0.1295118575898885,-0.35116767078422356,0.4767402068902529,0.27158910342094245,0.19739860097023898,0.3315686565919235,0.37856115169509164,0.2769378399205626,0.19788277729250384,0.36890769432454334,0.49530416852285947,0.3379825207128302,0.18618719225747246,0.3915420583334692,0.5226572208126593,0.3753179877965932,0.07818409766906753,0.30606624325436066,0.5238868142312465,0.29901477499445267,0.2869170586298408,0.3310426444913584,0.4721923194749895,0.3337451494885798,0.1396970009661111,0.2734365072586403,0.4777920735069391,0.268830050002455,0.13411716282450428,0.28240664483655464,0.5317735090321738,0.3195888053720143,0.01214113542900263,0.17670399165482187,0.5014493660817521,0.11957140697099508,0.2264162435601893,-0.13636140556348464,0.5306994209467103,0.3467347665025359,0.17427813036848683,-0.25034443367824816,0.47721820548688965,0.30514296835424454,0.25752917705797146,-0.2592453644621278,0.5196675930545755,0.17932748234125526,-0.5186016114886175,-0.3984824134844765,0.5398091470923655,0.057457970361061345,0.22792387031620276,-0.2816117282794028,0.3118231280015558,0.37524689310893833,-0.003677974239993151,-0.4783695026121642,0.4148542157386588,0.02932858544599236,0.05795952141701665,-0.42241488573720354,0.5063972804931265,0.05883800124619914,-0.07311574704536214,-0.51,0.5063725261651455,0.028521265430940475,0.2622402160814645,0.34657173378339007,0.5277567877411199,0.29781213444524207,0.2463003815623383,0.23276088769257114,0.4774729170645784,0.24094593134885392,0.16347458124232486,0.19849048365373506,0.4132384831769239,0.22688107062502733,0.20730108168727027,0.20027297630434424,0.476538539193973,0.22795473550119522,0.17255268504221233,0.23472805544478217,0.16793890142371878,0.21060059428267286,0.1523470776331835,0.20905008543618173,0.2085369503221946,0.28194269432270586,0.15592334653565834,0.19108886919373583,0.1889325726647672,0.1974390620145381,0.09211118291248789,0.3226398257530566,0.17854012969344352,0.18692254809962483,0.29699848612634455,-0.15127294437881095,0.51797257715144,0.27338328542283213,0.2748404294591726,-0.20412439328848417,0.46197252911240544,0.2452293659120111,0.18179465649001197,-0.2290170888119761,0.47710679010356555,0.2193894105064331,0.1318477127209697,-0.3966772894766037,0.4809396914373328,0.1383071279244161,0.17014047628418472,-0.2682283684929944,0.3989160780344311,0.17262869836591171,-0.032705263778364094,-0.33690972298517446,0.12192116776469698,0.2743361766110607,0.00902263312031672,-0.390391049003024,0.15863194279605283,0.3103252024858399,0.0387469673995785,-0.4986571752720049,0.4770621234716713,0,0.21330973575372741,0.22182786729197768,0.4435232122220824,0.25021753181916717,0.17381157958665952,0.1880257755520953,0.441136069348198,0.18817204346980126,0.18153877958235295,0.2199032972207903,0.4809178337684391,0.24243704205732272,0.10421006054164861,0.12881314699840987,0.3891064966224853,0.11136314644673459,0.23862709524912526,0.22494834742847714,0.4771605950791348,0.22147783052474598,0.053544872979418956,0.13594593340119823,0.41292466723100424,0.03320857998651532,0.09950938212723423,0.13194557429805465,0.08838947440265338,0.2334036201905769,-0.4291143726952501,0.08609696792115626,0.10044258077687827,0.25254099871792507,0.1202688995684034,-0.19900298030425265,0.4392788561180529,0.22209789018309498,0.11329041738084421,-0.34899350330922296,0.2666557629083581,0.16067768131966848,0.017615329690012036,-0.3883418940432282,0.3755021051932147,0.10933258122178934,-0.35579274680611533,-0.49787651655275017,0.05657885985819708,0.25810154871837127,-0.13294964497800046,-0.3966153871273609,0.28857530555123606,0.022427734904759737,-0.043575271738257725,-0.51,0.3738707719355811,-0.01,-0.04905878636918713,-0.51,0.4048627552114786,-0.01,-0.06211588937817599,-0.4990168734910857,0.04321713515576927,0.18739516543748808,-0.2290182416722349,0.36443325834218704,0.468320345202251,0.19631806090415013,0.042931942260755515,0.07672679824440243,0.5267668354289177,0.029326733329787615,-0.07621626862971502,0.14362769167803777,0.49439248386448836,0.12612281731113154,-0.11,0.4300597069737835,0.16842102473587045,0,0.02192892111397103,0.15868056249398094,0.34284160092275623,0.12169783827453182,-0.05466078917249182,0.029173158924360364,0.44660893713072647,-0.01,-0.2543429476028697,-0.01,0.49087227531171646,-0.01,-1.01,-0.01,0.3024800530586791,0,-0.07819695199426441,-0.4228517173475816,0.5141104559227607,0.14749591436100706,-0.9469993662936596,-0.4643639710357025,0.5002963430463162,0,-0.11,-0.51,0.4984823990199454,0,-0.11,-0.51,0.35016464821094917,-0.01,-0.3832776988868415,-0.47408938915370236,0.3724840670128534,-0.01,-0.11,-0.51,0.3755063368530849,0,-0.11,-0.4740572852325277,0.36392528489840564,0,-0.2006975,-0.51,0.2191511333888973,0,-0.7536451197569931,0.09242148880195458,0.5145516690687713,0.156720152963585,-0.11,-0.04132729154045797,0.4997993287029518,-0.01,-0.07241144840900664,0.02335571372486106,0.5432291402725459,-0.01,-0.97059625,-0.01,0.4112555992124669,0,-0.13704659934245328,0.048217659731247656,0.5184722699954816,-0.01,-0.11,-0.01,0.3968244171813965,0,-0.07875074794681963,-0.02104939895547915,0.4087271014325967,0,-0.11,-0.01,0.23258834948996013,0,-0.15987008221078125,-0.4769844737233476,0.503717509587964,-0.01,-0.07391253660639724,-0.51,0.4258010613006119,0,-0.11,-0.51,0.47274227201698166,0,-0.11,-0.51,0.17197871323342945,0,-0.11,-0.51,0.3309027335262803,0,-0.61,-0.51,0.28186285887658113,0,-0.11,-0.51,0.22564236576749797,0,-0.11,0,0,0,-0.015348565830702328,0.1715793463182818,0.39743047375961743,0.05228398485092771,-0.11,0.031248815824008937,0.36595588372756466,0,-0.61,0.021613546888006298,0.20616583592399473,0.0440004412210974,-0.11,-0.01,0.3044933808660726,0,-0.002481036205411555,0.048117109265225104,0.33148679037215817,0,-0.07046177449939914,-0.01,0.3154208451659445,0,-0.11,0.022484012566451148,0.3270668700162607,0,-0.11,-0.01,0.15550422941496223,0,-0.4897837064716168,-0.5004117110972515,0.4423040749342996,-0.01,-0.5278872706730793,-0.4995167592187864,0.3316162197851571,-0.01,-0.11,-0.51,0.2936199588994836,0,-0.11,-0.51,0.17045001052245587,0,-0.11,-0.51,0.2655359066318318,0,-0.11,-0.51,0.08616763409399203,0,-0.17970726368493078,-0.51,0.21557432733762782,0,-0.11,0,0,0,-0.8142378532634025,0.02495080540543932,0.4415646165353166,0.06709004562453812,-0.9927888004968957,-0.026195911154440622,0.2433090712321158,0,-0.11,-0.004954472959673028,0.4220760444799181,0,-0.11,-0.01,0.15077817619992198,0,-0.11,-0.01,0.2534182618961902,0,-0.11,-0.01,0.11105566048609249,0,-0.61,-0.01,0.18903811687268468,0,-0.11,-0.01,0.173847384638154,0,-0.18756654353774393,-0.512025,0.26090952169664716,0,-0.11,-0.51,0.16477341747251956,0,-0.11,-0.51059625,0.1553000928499918,0,-0.61,0,0,0,-0.11,-0.51,0.08992348635660571,0,-0.11,0,0,0,0,0,0,0,-0.11,-1.01,0.08781725565712073,0,0.2327781069592537,0.4571915783210923,-0.03744790956609822,0.3216062000677356,0.21664118645766306,0.45759426562307065,-0.0066102670972469765,0.3070072763165082,0.16328340900363075,0.46445347828675176,-0.003201086560422565,0.3175943393768653,0.07700971223483752,0.444458521405755,-0.15483795273575424,0.24856549263818067,0.17374792647341636,0.43929781169938303,-0.12808451525527992,0.2861623333414031,-0.0725403213189153,0.39463266158771354,-0.10058135171204408,0.2748922633247565,0.08547182174862304,0.3746122463588268,-0.12668157995845386,0.29908723205920384,-0.09718087901284295,0.41892608050161206,-0.2984026870668943,0.21198197720371903,-0.057583469029936725,-0.06338830007581538,-0.026954274057912144,0.061415139274894816,0.05942649380871456,-0.10319159417280115,-0.041464493029576215,0.048325988758605096,-0.0005096240242502721,-0.07877071115402151,-0.055272820822178034,0.0820882379796927,-0.019357520760238205,-0.3107025716663238,-0.21018038330674807,0.10382341759430375,-0.0099280548717482,-0.1475368410011986,-0.04892147576722526,0.03664600367226976,-0.010344346356166514,-0.320781228565345,-0.23247654584769709,0.08914997708234798,-0.001092682140170686,-0.4115647134098068,-0.23237331660591432,0.1824024964017742,-0.03564808448039422,-0.4829168622705557,-0.3109435850169335,0.004792681180170594,0.06437858875244813,0.39284052776337286,-0.06716132559998225,0.11654906991225945,-0.008034797492927088,0.025858478649597057,-0.032470299777443014,0.03481864814687844,0.004365541009607473,0.07655359977952142,-0.12365799700488439,0.03182568345374009,-0.0280478864936845,0.009073932610696948,-0.06947750250769516,0.11723284493488392,0.1144101561827296,0.05399653492340786,-0.056709644621791754,0.04270133446034744,-0.01816890250067406,0.024492721796973718,-0.1004008107098415,0.02713451503775501,-0.14721871610543452,0.09075697642583336,-0.2654998344460375,0.04965413338985242,-0.09760170625054077,-0.003972142888465402,-0.3017711956082761,0.08052473862045864,0.0001925430414435117,-0.17187731451376634,-0.04049258975597184,0.17448067755454583,-0.017605289309604297,-0.46435227432529635,-0.13518717566275423,0.08203845695334847,-0.0689042145273926,-0.43589716231752274,-0.13070143695654324,0.05388723474366284,-0.05616204533266052,-0.4939716065879616,-0.25711671002927844,0.006350789234843505,-0.06495865865509876,-0.3964418538081554,-0.243133316418711,0.02063740801640796,-0.032982552707148484,-0.5046944810786252,-0.34550273476801013,0.06677153023810768,-0.10329311153253529,-0.47596075402857196,-0.41,0.08488230682330365,-0.602568501578125,-0.51,-0.41,-0.03183853219046286,0.1347800890249202,0.3383307096050653,-0.02889938348782418,0.15492354366811315,0.05744811332760518,0.3691165596231397,-0.11535157844785168,0.1538832273610292,0.06045298224953982,0.06479096056409861,-0.08198182029584997,0.09103713354958066,0.013756839701662193,0.04180098412160082,-0.06934060711078424,0.12294901585763687,0.044200557458661964,0.06057939320824787,-0.1000349803000796,0.12811393560092307,-0.05184254876430816,0.1413199280439265,-0.06770543377778503,0.06957410850458781,0.047285965483696464,0.08533173210129122,-0.17997104173837947,0.050369981405394476,-0.014432195586865967,0.011065301377442332,-0.2948418012571605,0.13683976706108286,-0.004877550085831142,-0.19778959214893743,-0.006346501288798081,0.09214592405667028,-0.08975838284699998,-0.3094254360658394,-0.20240167716007074,0.10442292870663189,-0.04284084623129209,-0.40845781123988806,-0.17694699362798577,0.057558139435831907,-0.015043366546183382,-0.4924088829010456,-0.3707892090314889,0.07626995968373348,-0.16197639862237803,-0.4382416482577103,-0.2940282577668358,0.027447937355292037,-0.11060035442059049,-0.4683429000812623,-0.3939322666215665,0.1333115374651587,-0.08209989657354565,-0.5043663923152948,-0.3426580316122608,0.12795471734802727,-0.61,-0.51,-0.41,0.08617590613090535,0.02711035682897659,0.2185405101506286,-0.2843784427872138,0.05542968341929748,-0.0170413596207352,-0.00024167339960172777,-0.08099960523142449,0.11691377083850904,0.037222280576473546,0.024880215114338505,-0.17064478518486653,0.11459436062691264,-0.1281515166637848,-0.0028261898917245915,-0.2839229113492921,-0.0026414003663891698,-0.03066370951851172,0.018643577666407007,-0.29250220720512526,0.017885891980824468,-0.018106041162615882,-0.004598297199323106,-0.3658608693617346,0.008135286528156637,-0.050129116807471126,-0.011390811940863037,-0.37503845822755105,-0.008932674576820235,-0.11,-0.012599194375,-0.3562840693926803,0.14485731041222,0.012244618933901961,-0.3345315693146057,-0.18948260536491252,0.12728262939049315,-0.05058441430451033,-0.5059836971138413,-0.27657180224399047,0.0772948601115753,-0.026692065606971273,-0.49970641880969685,-0.3976758328748682,0.1218754267509087,-0.07580152551630412,-0.5130924672631609,-0.3676621527532278,0.0323035924417597,0.14070111317464515,-0.501197758284724,-0.3811207896488516,0.0010184727337422454,-0.11,-0.51,-0.36400857110910567,0.09684010743053949,-0.07147056294528376,-0.51350775,-0.39997963072618936,0.08586058831538158,-0.11,-0.51,-0.41,0.09960595045968992,-0.7709679756535164,0.45168593941629137,-0.3295696787062599,0.047458666367461017,-0.07306525620882401,0.4471747315341811,-0.41,-0.007508675557235807,-0.11,0.4479694441346488,-0.3737975867030014,-0.00442736992064124,-0.11,0.3673581538054038,-0.41,-0.0033230977260497374,-0.11,0.41326924781134994,-0.41,0.008963154409879055,-0.61,0.3447052634375062,-0.41,-0.01,-0.11,0.29374604419528355,-0.41,0.008898243093729144,-0.11,0.13449795158039407,-0.41,-0.01,-0.11,-0.51,-0.3685787713144546,0.19545831981588113,-0.12608486901556085,-0.51,-0.41,0.10468296296484209,-0.11,-0.4877885467832069,-0.41,0.1529491997607284,-0.11,-0.51,-0.41,-0.005432787693392376,-0.11,-0.51,-0.41,0.11431361123479025,-1.01,-0.51,-0.41,0.01262469073346013,-0.11,-0.51,-0.41,0.07022037297035466,-0.11,-0.51,-0.41,-0.01,-0.8880951510536115,0.3758021049861688,-0.41,-0.008990553000398731,-0.61,-0.04090351983055033,-0.41,0.06284392702941978,-0.11,-0.025000506230314523,-0.41,0.0688234264351656,-0.11,-0.04662257078125,-0.41,0.036055649421695674,-0.61,0.12937546655126805,-0.38596828145857476,-0.01,-0.11,-0.01115875,-0.41068625,0.01584234139844902,-0.11,-0.019517578217345705,-0.35153399337809643,-0.0047606546495186286,-0.11,-0.021137500000000004,-0.41,-0.01,-0.11,-0.51,-0.41,0.07796580172265727,-0.11,-0.51,-0.41,0.09230366508968828,-0.11,-0.51,-0.41,-0.01,0,0,-0.41,0,-0.11,-0.51,-0.41,-0.0015413118660766063,-0.11,-0.51,-0.41,0,0,0,0,0,-0.61,0,0,0,-0.10755888599093359,0.31394192032298635,-0.4106360495302917,0.028135826889474407,-0.100268555508232,0.254807144384843,-0.37305833971975844,-0.01,-0.11,-0.025147368785007736,-0.41,0.08301636485884081,-0.61,-0.017853639927973005,-0.41,0.029887321007303787,-0.09136134641431351,0.11459915275149879,-0.41,-0.01,-1.01,-0.01,-0.41,-0.01,-0.16,0.06479203590921337,-0.41,-0.01,-0.61,-0.01,-0.41,-0.01,-0.61,-0.51,-0.41,0.08971512407938735,-0.11,-0.51,-0.41,0.03957144444837948,-0.61,-0.51,-0.41,0.0019527122293178274,-0.112025,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,-0.1030660137749874,-0.51,-0.41,-0.006851064130113764,-0.61,-0.51,0,0,0,0,0,0,-0.11,0.30814686962590976,-0.41,-0.01,-0.5318832126672132,-0.062199847655082276,-0.4068895143401165,-0.030971470661419857,-0.11,-0.02129311987543167,-0.41,0.0700390591541862,0,0,0,0,-0.11,-0.01534245792806338,-0.3992979962732873,-0.017271802387102214,-0.11,-0.01,-0.41,-0.01,-0.11,-0.021938494199179398,-0.41,0.023226790163656648,-1.01,-0.01,-0.41,-0.01,-0.1494866870807428,-0.51,-0.349121618352169,0.038807496618693246,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.61,0,0,0,-0.11,-0.51,-0.41,-0.007637119078671231,0,0,0,0,0,0,0,0,0,0,0,0,0.2930417439325428,0.318485195977577,0.4583691955712406,0.2920002961125492,0.24905580007022016,0.3231974170638362,0.4511980139990161,0.2983278581447216,0.17663724440836504,0.29961802368613594,0.46288329600408745,0.2571583510433695,0.2085430805104477,0.22994539172835354,0.4644203610615948,0.2219356317092937,0.14486531088493323,0.2047443141526917,0.38008600742820814,0.18457586977044654,0.18229816488443415,0.20837645888538625,0.43824124146066384,0.23306117004015986,0.13392715905429547,0.17499713745305,0.14861923355389797,0.2639906344552576,0.10864753108831203,0.24181864577349255,0.1571406771623748,0.11627127949768308,0.21302766936734316,-0.10066187161831308,0.21362638398824504,0.3086639335821665,0.24213690916360017,-0.19524941786145358,0.44469197821058526,0.2510710761224708,0.18212043576796366,-0.136785733720789,0.47885293435856224,0.20044720502548857,0.1199140733194471,-0.42969717735252755,0.47512574529941204,0.016475731950109422,0.23139791812608218,-0.22109700716581224,0.4319880249919641,0.19381224173407333,0.0770790134720625,-0.34281721828189105,0.4302672227238223,0.1287705203751258,0.012305201606520322,-0.4029941020366537,0.11837528729274467,0.2563390449391296,-0.026987161083893034,-0.51,0.2770068633496542,0.018994110492921275,0.2564920605272436,0.34386973287171385,0.03543528830531159,0.1705144435790365,0.002179452396829585,0.04934554704133781,0.04202741989336444,0.1442173349156794,0.06524430082234853,0.07266598096586417,0.05007512272410029,0.1373557999727456,-0.04249346672235909,0.03784071247963559,0.04265989074809949,0.06410144324379914,0.006472705528251382,0.07265759067855561,0.02032673679937705,0.09924618312574691,0.016688489633163904,0.04907124033869546,0.0047206746742768195,0.07742889699436459,0.05953113664659343,0.06266410781960007,-0.002874620160157333,0.1649335868031471,-0.24691056017565455,0.015465832267026101,-0.007968903009212526,0.06075726717478717,-0.030659497255026445,-0.17924399925282364,0.012687818618958426,0.09528491978487905,-0.01640337890730418,-0.43585854202628493,0.043505407678016646,0.11895203451370114,0.013211007332667342,-0.44023304018460613,0.005699387489192796,0.1698516723901408,-0.0057020678041043785,-0.5109230765374927,0.0576646931360434,-0.01787326546333767,0.013200351543565483,-0.4322546278438869,-0.013400919590668985,0.10801315718154643,-0.11,-0.49996087967411973,-0.001334319702993858,0.11679831228615553,-0.0008278190351239598,-0.5113781988080912,-0.013240908531158932,-0.0018842455883825674,-0.04094834112544384,-0.5101909264565871,-0.012489266263383115,0.14937416033948675,0.17838964888518088,0.219320845375822,0.36297643376728705,0.1615845190055603,0.11252341641017247,0.3399823698658716,0.16656840295450967,0.1518583443234147,0.09887813064602541,0.10076454886508214,0.04046490532800941,0.12487419740912183,0.18606197519920428,0.07474911105209565,0.041615184698112095,0.10982681700542465,0.08064146398014937,0.10030811808005259,0.06810403599583559,0.100391688678636,-0.06180933208065063,0.25097258305779674,0.05130325137691198,-0.01,0.0814215763887054,0.11000427551657938,0.0363566176063109,0.08841227320021253,-0.1278926262590467,0.010246555361860407,-0.0031240715989661874,0.09600673333633813,0.061076087199791754,-0.30470798153571316,0.3638797297769995,0.09714144419192028,-0.11169175122011232,-0.3871533328519908,0.3382908315327598,0.012649947589872187,0.0765922085005651,-0.4694263644041216,0.02706303616469188,0.13667200119400277,-0.61,-0.51,0.04863090038677543,-0.01,0.28785496317752357,-0.39027420390195416,0.058130623651122475,0.10034768119986202,-0.0047139357985033215,-0.51,0.07100676176153331,-0.0024248749637856733,-0.61,-0.4968647692000048,0.01386074391599378,-0.01,-0.11,-0.51,0.04580483587422237,0,0.19831894493911867,0.3598106898664605,-0.008672246235602485,0.10675818471758028,0.04063467781847761,0.041093071368872004,-0.0036757078998572836,0.11169413604763026,-0.03163678896153104,0.013106587906853607,-0.011297244581594153,0.18690293796145074,-0.14076607689783316,0.049966297448716446,-0.03696891139358547,0.1665310931041831,0.01931763991686445,0.07098593608969414,-0.011903652247842868,0.17720941384080846,-0.08165099154857519,0.010518071997026113,-0.011227544477741026,0.09035290188878219,-0.048668369943574076,0.05457668828370981,-0.0049972944716470714,0.12390710537731481,-0.07127564830927759,-0.011116289177922966,-0.010465119497015894,0.10363806070658213,-0.014997087246018434,-0.3748016243981733,0.004525263901581072,0.08275609868765663,-0.03194654832762054,-0.4926393095206874,-0.013256016225494584,0.140682724746667,-0.06769467666025503,-0.43952463728594976,-0.018189256276953114,-0.01138849964081028,-0.011434460155328799,-0.5023704392138515,-0.017077795227805295,0.05570267900026232,0.018632201777198175,-0.49786943581275317,-0.006373547954274993,0.11627922250065195,-0.11,-0.515051843485661,-0.004048444053986227,0.018105434608336576,-0.11,-0.513067875,-0.021250797072539726,0.03409907239252517,-0.3687672266778556,-0.51,-0.003119816290411618,0.04144532988427306,-0.12850518181541395,0.22062198682484394,0.4092540090263261,0.053444762717501385,-0.4945941752936761,0.03610819406875996,0.4669838324754214,0.015522967280312964,-0.11,0.01777500945643698,0.45820859611001175,0.01793726216558581,-0.11,-0.01,0.32805795389066406,-0.01,-0.03270205976893715,0.03532184716042564,0.3402462735358086,-0.01,-0.11,0.022974455252813816,0.21824071333573142,0,-0.11,0.022945418017704666,0.22922908438922496,0,-0.61,-0.01,0.13920462536388972,0,-0.6120854209375,-0.51,0.402817458976636,-0.01,-0.11,-0.51,0.36978403244693236,-0.01,-0.11,-0.51,0.28014316697916075,0,-1.01,-0.51,0.09641231406284037,0,-0.11,-0.51,0.2536397675282227,0,-0.11,-0.51,0.16203397171231163,0,-1.01,-0.51,0.13671564467710798,0,-0.61,-0.51,0.08712979470726209,0,-0.11,0.3660154470301584,0.020328995970396748,0.0054600496762060285,-0.8714740567028787,-0.01,0.053528356313544245,0,-0.61,-0.02222653501131015,-0.011937537470279508,0.12143277001136701,-0.11,-0.02150690404466913,0.03348292577330365,0,-0.0030703686750054443,-0.01,0.003824825919341215,0.07577271806029509,-0.12854968318943127,-0.01,0.0017600566280863072,0,-0.11,-0.01,0.02020752864227213,0,-0.11,-0.01,0.07334514155612817,0,-0.11,-0.51,0.020447094841965423,-0.01,-0.61,-0.51,0.055241031300866134,0,-0.11,-0.51,0.024218099332851892,0,-0.11,-0.51,0.09084650296807946,0,-0.61,-0.51,0.03479332115117219,-0.01,-0.11,-0.51,0.06345928303429924,0,-0.11,-0.51,0.08030679250817858,0,-0.11,0,0,0,-0.07405906632414,0.07995562602984899,0.2937273072942709,0.04954685339207815,-0.06954441354643147,-0.01,0.22612205731812046,-0.01,-0.15363978868106465,-0.01,0.03260245182841058,-0.01,-0.61,-0.01,0.04093703642248519,0,-0.11,-0.01,0.05355366354359679,-0.01,-0.1263619245051728,-0.01,0.08131353337556262,0,-0.11,-0.01,0.03049594828483925,-0.01,-0.61,-0.01,0.056927982684896586,0,-0.11,-0.51,0.19194803792978413,0,-0.11,0,0.12509740259916374,0,-0.11,-0.51,0.03251570629306135,0,-0.11,-0.51,0.06698564890953129,0,-0.11,-0.51,0.06506965278632082,0,-0.11,-0.51,0.09114116914752067,0,-0.61,-0.51,0.07123399107225614,0,-0.11,-0.51,0,0,-0.11,0.3221110432534287,0.0021022577981754022,-0.01,-0.11,-0.01,0.016281677379308114,0,-0.11,-0.01608449556259387,0.016186558261213287,0,-0.11,-0.029208427095849768,0.024523970018836612,0,-0.11,-0.01,0.018144077279960303,0,-0.11,-0.01,0.05416486543832237,0,-0.11,-0.01,0.06541247852813237,0,0,0,0,0,-0.037603284416838446,-0.51,0.019956012846200896,0,-0.11,-0.51,0.06967258898422604,0,-0.11,0,0,0,-0.11,-0.51,0.033545971002346554,0,-0.11,-0.51,0.047604784958545775,0,-0.11,-0.51,0.06506471320281906,0,-0.11,-0.51,0,0,-0.11,-1.01,0.07862834547586693,0,0.18802550167850035,0.45486981870730303,-0.09946217256312896,0.23927945354539898,0.0914854745201022,0.4477320973253496,-0.18119472626681743,0.1955136465682359,0.00949655744465907,0.45072376235446515,-0.296396010022182,0.2134207938137413,-0.5288333702753603,0.4408553463139198,-0.4041880452437258,0.05352780347428185,0.1737593990507307,0.34417794991917156,-0.1817256301676363,0.19915225299938996,-0.3407141768601324,0.34566305012466164,-0.30003549669403495,0.07568051338183109,-0.017447686344760068,0.16520184778908886,-0.39690843034470097,0.16192976681279592,0.010768350384061275,0.17636048143072483,-0.3888002808414071,0.1551674535446926,-0.04480330737796744,-0.13761047428839412,-0.10604693724557317,0.06594309701598501,-0.034756952573434946,-0.27924583255552266,-0.1695987907884296,0.05124923191259872,-0.05457357975188049,-0.19642493984908968,-0.2865110512599351,0.08045973123282307,0.12340974743043952,-0.431782460382121,-0.38699838385101076,0.011184322391450221,-0.06451090457276856,-0.4061516425538277,-0.28818081652716776,0.08179253929579425,0.04375734827726441,-0.4599113077349222,-0.3018481145221549,0.03927427822224421,0.14425032201802768,-0.4917159875892555,-0.39199276267292893,0.07794809596034274,-0.08045045533457566,-0.49917312051469465,-0.41,0.10253326169458318,-0.10065619571950962,0.38380826753105574,-0.4300357958687481,0.1326506851354228,-0.06877495199151688,-0.02894292538382209,-0.49422633262357146,-0.0056643650117686895,0.07260693730748967,-0.017814541373138405,-0.4790503535345368,-0.01854272474934983,-0.08615136413068902,-0.028330064843528797,-0.4559916003708845,0.08915203976422231,0.24836662503340126,0.09593462944682421,-0.4612609010083552,0.059031942988558316,-0.0493032524093871,-0.025445829521321666,-0.43785187911984436,0.012784080643928209,-0.1871335228572881,-0.008164825180574977,-0.4185223193877775,0.042062657558445245,-0.031180237374960694,-0.03047488671533763,-0.4106975,0.054762397419900494,-0.013948750857452629,-0.48296467838182294,-0.46016855153593267,0.14567893332066287,-0.04998427251171371,-0.5120216652396837,-0.4328834679319232,0.1506249542044485,-0.0919195928907117,-0.51,-0.4254235351449972,0.061791031738018816,-0.11,-0.51,-0.41012374999999995,0.09987244973315682,-0.197309525864711,-0.4949987423593146,-0.4201940664130672,0.1600777207251704,-0.15357109133539087,-0.51,-0.4125875,0.05279037743101006,-0.11,-0.5106502500000001,-0.41,0.07771891362350013,-0.11,-0.51,-0.41,-0.01,0.1489049236521596,0.3472185822087487,-0.27056284676383013,0.07729047582889312,0.05631012824763117,0.3012659554900948,-0.3553698458820961,0.030898659345797084,0.04478522365256821,0.10535163966759147,-0.4727933282453749,0.07373760994666206,-0.008083379570493522,0.01822338204008291,-0.46899414395424527,0.050071236260686935,0.04136155630488585,0.16065600318070483,-0.40758210266695555,0.04024037264278038,0.21040585260602013,0.016528381064439462,-0.40825785733446385,0.03916651746606195,-0.08609279206741506,0.046656332628206704,-0.4217744000316956,0.11874001249646117,-0.18883310079550358,-0.022824204758055806,-0.412025,0.01848593211254425,-0.07640697364031651,-0.36513829053535946,-0.31475815977832045,0.019683801047719083,-0.11295732570907055,-0.48972306373059166,-0.3962746012769455,-0.0434129455369687,-0.0636473655714726,-0.5108529038834686,-0.4249296837089953,0.06646204838876339,-0.61,-0.51,-0.4181300208916833,0.028085118448278282,-0.07897910154762915,-0.4797175998836233,-0.4034419974301362,-0.018635078976159444,-0.05554480270596262,-0.51,-0.397201003134228,0.031833149916224594,-0.08031835565248742,-0.5100034985974964,-0.41,0.007747102840222307,-0.11,-0.51,-0.41012374999999995,-0.007729526303872313,-0.3637751174614428,0.3384529055023275,-0.41865155883358535,0.030273183446290524,-0.32950721703226676,-0.0011168376066664491,-0.429099220670229,0.042078000851914155,-0.008116486634764664,0.033992403353512654,-0.4118902077875,-0.004474382741869242,-0.48392295685437886,-0.08242395930018939,-0.42260461717168823,0.018896063218836134,-0.039735478506050866,0.021571040589374535,-0.4217790843431341,-0.014169553239614,-0.07049998076685535,-0.03834125960826764,-0.42784006904555344,-0.037629242900722365,-0.11,-0.017624831209618566,-0.411042875,0.041213524331042806,-0.61,-0.0106975,-0.41,-0.004683078461814613,-0.15141411207148503,-0.4571516305318032,-0.41127012499999993,0.012747169698459689,-0.11,-0.51,-0.4197888467530719,0.06675044231199825,-0.11624630136315964,-0.51,-0.4219773102760533,0.0624320697591402,-0.11,-0.51,-0.41,0.024245512553196395,-0.11,-0.51,-0.41,0.12839142625479644,-0.06981156729455666,-0.51,-0.41354375,-0.015042346629379377,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.41,-0.010135,-0.08779020235573737,0.42523354697498666,-0.35381107934142325,-0.01,-0.12676330428211074,0.34750537323275565,-0.41,-0.01,-1.01,0.3915761995127922,-0.41,-0.01,-0.19109262733170698,0.20535242033435097,-0.41,-0.01,-0.11,0.23702618471911913,-0.41,-0.01,-0.5241924880830268,0.0201390188485224,-0.41,-0.01,-0.11,0.060738962959362576,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.51,-0.3818469282415937,0.027423625273733078,-0.11,-0.4818010721615865,-0.41,0.10452095257979777,-0.11,-0.47844458333325257,-0.41,0.0146450814524904,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.510135,-0.3880576987122878,0,-1.01,-0.51,0,0,-0.0813448707909268,0.3242086556820685,-0.41,-0.01,-0.11,-0.04735,-0.41,0.020100308704279243,-0.11,-0.026560212814034437,-0.41,-0.006064286839877011,-0.11,-0.01,-0.41,-0.01,-0.11,0.05178275267731487,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.61,-0.01,-0.41,0,-1.01,-0.01,0,0,-1.01,-0.51,-0.41,0.039810644882335176,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,-0.01943637397380482,-0.08416242933155826,-0.51,-0.41,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,-0.16208557281250002,0.28893957501723383,-0.41,-0.01,-0.18830440242518084,0.182240043187037,-0.41,-0.01,-1.01,0.035369837853562874,-0.41,0.01976861631839904,-1.01,-0.013835696153983505,-0.41,-0.01,-0.11,0.036371272704377164,-0.41,-0.01,0,0,0,0,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.61,-0.51,-0.41,0.08718713585761209,-0.11,-0.51,-0.41,0.011149636492059052,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.41,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.1405637789008346,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-1.01,-0.012025000000000001,-0.41,0.012965298128190098,-0.11,-0.01,0,0,-0.11,0.013681620831427006,-0.41,-0.01,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29008199540080903,0.3478440809138138,0.517976109577975,-0.13751214508254123,0.27005210361360965,0.4110307774746632,0.2829277206018121,-0.13970935914498162,0.16825307193485728,0.446475297482841,0.38271919986324093,-0.1354498799438147,0.24230606612901298,0.2990087688181786,0.5367954401448064,-0.2912503939844106,0.19695596050900374,0.30516149049744407,0.5117329694116669,-0.13797723631540051,0.21272333919957778,0.31030066660179223,0.5078165868102241,-0.19878638863165146,0.22237814361826777,0.18498484373219135,0.49802086006532104,-0.20310658680185475,0.14158383067895247,0.15830493281272282,0.5136433894900359,-0.4110980943740296,0.35425703304703543,-0.0695550139026361,0.5046869336195712,-0.1471351130956208,0.23450355690291902,-0.1498159143718062,0.5234900996434784,-0.23874788299177388,0.24375446314545793,-0.1133886992816751,0.5037294932431267,-0.2610101868442677,-0.035082730624675075,-0.4468553123004697,0.5260620692376882,-0.38320657453180523,0.19837210501730845,-0.181945408199831,0.50299132696211,-0.1920896243664725,0.07433782278526299,-0.3874310637203999,0.46805717696538673,-0.2697294310002276,0.12322353524438599,-0.3859852828769087,0.5228296403328274,-0.3489878137483794,0.008181465446550212,-0.49656596186509105,0.52427940214324,-0.47278401388552066,0.32982369176592885,0.3717006234817547,0.5244094071920519,-0.15028405133444744,0.20516908974701625,0.28586661580270384,0.49303414924673616,-0.2138279328550048,0.21049877640811826,0.2743711920178648,0.5170242445263409,-0.20465758559611405,0.08226866522464296,0.21180536646915482,0.5249128162588872,-0.409970491549226,0.1357102059801194,0.2557773642182536,0.2591010980981293,-0.1826510402279383,-0.017791159351928723,0.11352057445431107,0.5316856829732864,-0.35621721318171684,0.012727118613750373,0.11937847692876227,0.531960430932067,-0.47399369978347855,-0.07934040607100547,-0.01,0.5144816535873925,0,0.23150259477545354,-0.24501775628775588,0.503226204660053,-0.2623171081823376,-0.027628979197444864,-0.49671509693468074,0.5271227479746696,-0.32260834526087956,-0.2343683205631212,-0.38479184930940036,0.5227130541347078,-0.4748013778728888,-0.11,-0.51,0.5363456590001617,0,0.031077398947507745,-0.4262603600575352,0.3848285016894618,0,-0.08397417822978089,-0.49335860456765884,0.4950583021658375,-0.42230547701766513,-0.07553639866649,-0.495269249096524,0.5310808046724533,0,-0.07646158604166825,-0.51,0.45981957322942907,0,0.2578459930788264,0.2573169233722485,0.5106081937749345,-0.2563651774331458,0.24835340296977257,0.2717418256022334,0.5217761886412468,-0.30391631954406473,0.13942770203535493,0.20509109695430047,0.19769206325976724,-0.2558672763849722,0.06002934269260007,0.2907857500653387,0.20523764655533805,-0.35961996305015453,0.19526808336105902,0.20147226887979053,0.44467205969668994,-0.2853467830705558,-0.02545513732236787,0.10097649039994798,0.48962377583287486,-0.4276991945986474,0.06613051697062089,0.31612439727010727,0.1557483280727987,-0.4238934740779624,-0.06503185423858604,0.018476532412652076,0.35811211132754756,-0.48400146465799215,0.23605904589422463,-0.2687257518398979,0.515357672312521,-0.3611888515344668,-0.51,-0.37861741398864773,0.5109202970986,-0.42285378913015026,0.13383107588447105,-0.4981325323359548,0.43683010894233343,-0.39244909133633527,0.03683371948813245,-0.4526585954947601,0.44208143668382227,-0.4922718721492922,0.1281099372947329,-0.40683454715273604,0.49262317646852277,-0.4175261963972002,0.01544137011848875,-0.4813174552479978,0.49438759288920664,-0.51,-0.023955954482777583,-0.4858267541488771,0.42387355120306247,0,-0.5282717537129037,-0.51,0.397364957922017,0,0.20962062755759991,0.2358100740269589,0.4736375821937362,-0.35075445403401917,0.10588273548542942,0.1783058182054914,0.4749496129718163,-0.4655189398245632,0.15836517826241364,0.18119856423175065,0.4992507907551672,-0.44477800940859546,-0.15114712106877565,0.011747391702879419,0.48960768907358787,0,0.22573537617514405,0.11641276019792945,0.4712518654338895,-0.3739085033345364,-0.015212601115844417,0.0652297783570555,0.37771034599248515,-0.4390491035202314,-0.2409251988224413,0.10449706072682023,0.341759772211667,-0.4822812825666671,-0.5169893834068153,-0.01,0.3266358088786341,0,0.09681137205218171,-0.49945220055372913,0.43630351486175223,-0.4784377449939895,0.026000201455851368,-0.4818367547789291,0.36783722920614403,-0.4949066366108632,-0.04845312916711672,-0.51,0.461504307271835,-0.51,-0.11,-0.51,0.45808791719137343,0,-0.03431222085877433,-0.4727926634041479,0.27048645797108445,-0.51,-0.07194205660222179,-0.51,0.46420029812249924,0,-0.0746682354524297,-0.5086109925191,0.30661413853322944,0,-0.0850747441867148,-0.5030684985277216,0.33993800273321606,-0.51,-0.46744189556319676,0.22541061287891445,0.49916989545243506,-0.4402150118756487,-0.1192725883274825,-0.01,0.5222005483481617,-0.51,-0.11,-0.01,0.46863381741535687,-0.51,-0.11,-0.01,0.3744298181741045,0,-0.06498746705745494,0.1686657776734885,0.33719759198640686,-0.44052474115060697,-0.61,0.03240744422056531,0.390305983465735,0,-0.11,0.03189633106277706,0.38219447459111644,-0.51,-0.11,-0.01,0.09,0,-0.11,-0.51,0.5014955534464127,-0.51,-0.61,-0.51,0.47090068049661254,0,-0.11,-0.51,0.4028873421715745,0,0,0,0.2683815038716525,0,-0.11,-0.4283231791762542,0.2718026338012019,0,-0.9203518953969224,-0.51,0.19878188816042253,0,-0.20012375,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0.02922098833733011,0.5245544278854188,-0.51,-0.15559855651601903,-0.01,0.5095358408011429,0,-0.10010660892046515,-0.01,0.45798442456059807,0,-1.01,-0.01,0.4044762492563404,0,-0.08889804858200372,-0.01,0.4503380133699007,0,-0.11,-0.01,0.19981844728038178,0,-0.11,-0.01,0.387353918339541,0,-0.11,-0.01,0.09,0,-0.11,-0.51,0.3987583288939898,0,-0.11,-0.51,0.3233387798999078,0,-0.11,-0.51,0.3100958972066918,0,-0.11,-0.51,0.13808818480644336,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.1649525732735821,0.0679705921882135,0.4851064636816561,-0.51,-0.11,-0.01,0.5114238594904448,0,-0.11124653471880754,0.02772832975459008,0.3199348087346895,0,-0.11,-0.01,0.19601225818419787,-0.51,-0.61,-0.01,0.30121897244869245,-0.51,-0.11,-0.01,0.2101503905761024,0,-0.11,-0.01,0.22518399507815617,0,-0.07613631055476106,-0.01,0.06800199781375238,0,-0.18522348965769475,-0.51,0.37976949899530843,0,-0.11,-0.51,0.14073039557892036,0,-0.11,-0.51,0.3089324938654376,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.16195075985024646,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,-0.1753551059097772,-0.01,0.41052993810472826,-0.49171907043483387,-0.11,-0.01,0.17626621866572487,0,-0.11,-0.01,0.1372310067518589,0,-0.11,-0.01,0.17798060140023217,0,-0.11,-0.01,0.24683254457683276,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0.20938300896368117,-0.51,-0.11,-0.51,0.13588255106451616,0,-1.01,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,0.09581545432267138,-0.51,0.2482904964923303,0.4616499394406834,-0.019839220337150833,-0.22247886179856788,0.07943496349820758,0.4551258598658592,-0.12329728297229699,-0.3356954140106389,-0.06382667142311885,0.4474109706108992,-0.13772907204655274,-0.32181608964948893,-0.07720208604535987,0.44926608089978887,-0.3959015152044541,-0.4640011494013135,0.1172603240190953,0.4259626975454465,-0.20141147497413867,-0.34801620730631444,0.0479023446225572,0.26111497609174095,-0.3390178008863296,-0.44345710796725146,-0.015547058799194512,0.3753204941083438,-0.41012374999999995,-0.4675363466062409,-0.11,0.3882094202875536,-0.41,-0.4578541312501516,-0.3889110432309396,-0.40868967579521576,0.025897742399276724,-0.5011474068527046,-0.31944532743772885,-0.47599066841622667,0.021265134262556336,-0.5067918858643481,-0.61,-0.48433769865048076,-0.0020841211778993966,-0.5067061606408306,-0.43966933497320826,-0.51,-0.10493051142899305,-0.5107605705314536,-0.07350187666083012,-0.403692067983577,-0.2867828771707594,-0.5051715862925423,-0.48937571283294123,-0.42079947951190405,-0.26911198688827404,-0.51,-0.41500768881219785,-0.51012375,-0.2903429582163619,-0.510135,-0.61,-0.51,0,0,0.011951965268690658,0.38833758918418326,-0.17909890624970543,-0.4278987703901234,-0.19375537084961275,-0.11884033289679076,-0.15313294044843737,-0.3742729339398399,-0.25218581628572573,0.03684361934919189,-0.19340298125263905,-0.4269307109482176,-0.33599529122274435,-0.1462601469027891,-0.25117582695119756,-0.40758873440193377,-0.0064374185578123695,0.1917947346085753,-0.27631484265123935,-0.4692345280952622,-0.2572632814097573,-0.14418197795080828,-0.09220758017881354,-0.46127644198050455,-0.12967706773929566,-0.062443336026855464,-0.39381350115153524,-0.43386089405319994,-0.1501353535936396,-0.1151397941765146,-0.37492195401035433,-0.5059761877864534,-0.3942886534126354,-0.5092336208518102,-0.015424973257004435,-0.51,-0.446722719121174,-0.51126,-0.11440016581625254,-0.510104883253949,-0.4539151871611749,-0.51,-0.1846472519496175,-0.51,-0.14320300492692217,-0.51,-0.3906546052300397,-0.51,-0.1519454051839882,-0.49754785694596393,-0.3464724068383608,-0.51,-0.14030790394197828,-0.51012375,-0.41,-0.510135,-0.2556309546913472,-0.51,-0.40290125,-0.5101261202970051,-0.16644187433154553,-0.51,-0.37373401544851037,-0.51,0.13736773060505109,0.3497263760209923,-0.16373831228835026,-0.45751197860602877,-0.008648469305510144,0.35361653212005856,-0.3798824984010104,-0.4971851336523093,-0.3524468477902015,0.08135552298050464,-0.21764182911888494,-0.5002624129208866,-0.09940768656121798,-0.0238188475661489,-0.39249921132097265,-0.47150718064890973,-0.059240574640196546,0.08057753854852277,-0.25329439087356737,-0.4776493511886196,-0.11,0.11924144084055258,-0.2902023938186027,-0.5108178530995439,-0.07644280722787557,-0.0007105232682380451,-0.32434942904798186,-0.46345843167712,-0.1271645865905204,-0.07170257126007379,-0.367844575323082,-0.5066718109180832,-0.3869621226659642,-0.47986810967585736,-0.09230019426112322,-0.510246375,-0.4031688640645306,-0.4644051852959641,-0.16238410599824304,-0.5023387500000001,-0.4539151871611749,-0.51,-0.16176778889731214,-0.51,-0.13375629367400224,-0.51012375,-0.41,-0.48876252997029535,-0.61,-0.51,-0.2634909451982513,-0.51,-0.10849187522777806,-0.4959385996531793,-0.41,-0.51,-0.4597299018449902,-0.51,0,0,-0.09009936790166773,-0.51,-0.3927957686439119,-0.51,-0.0853037527907115,0.319427015866816,-0.3641322886838313,-0.5084121368442026,-0.3215530271513991,-0.1490765505426177,-0.27941509142233556,-0.5030234009648246,-0.21971312715244012,-0.0539815432651648,-0.38981409161102903,-0.5082784169468774,-0.11,-0.07240671331039011,-0.41,-0.51,-0.05673332062881845,0.019845563445556852,-0.41068872500000003,-0.5098337239630354,-0.42013286159963265,-0.14431383020655905,-0.32704118956705,-0.5098645625759168,-0.10496416227438911,-0.011747195967376623,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.15345194895667075,-0.4867393016193387,-0.41,-0.51,-0.43769587056759773,-0.51,-0.37378661286413395,-0.5102930639807601,-0.11,-0.51,-0.41,-0.51,-0.4539151871611749,-0.51,-0.3694531218343746,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,-0.15184282994845832,-0.5442708696440941,-0.41,-0.51,-0.11,0.4338140830942926,-0.39160262174651767,-0.5113189226934963,-1.01,0.2814168853101987,-0.41,-0.51,-1.01,0.3012089219238104,-0.41,-0.48060225513330923,-0.11,0,0,-0.51,-0.11,0.29115454463454676,-0.41,-0.51,-0.61,0.16163112939383711,-0.41,-0.51,-0.11,0.14251175527640422,0,0,0,0,0,0,-0.61,-0.51,-0.18128107345823263,-0.51,-0.14897015315851936,-0.51,-0.41,-0.51,-0.1283691048796942,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.24604556792209106,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0.3168496533123984,-0.41,-0.51,-0.11,-0.08489468257757948,-0.41,-0.5088533023258772,-0.11,0.012535339927416844,-0.41,-0.51,-0.11,-0.043397257944741925,-0.41,-0.51,-1.01,0.046885664155072046,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.5065058438394796,-0.51,-0.3933063423912323,-0.5037198148556035,-1.01,-0.51,-0.36418051830503023,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.5229691322004547,0.25619793611029273,-0.41,-0.51,-0.11,0.06247558963862069,-0.41,-0.51,-0.11,0.028601440421896447,-0.41,-0.51,-0.11,-0.014255061037005277,-0.41,-0.51,-0.61,-0.005620465026225013,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.61,0.07693088500799698,-0.41,-0.51,-0.11,-0.08763553480137809,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.11,-0.005059839257937781,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.10100883398796826,-0.51,-0.41,-0.51,0,0,0,0,0,-0.51,0,0,-0.11,-1.01,-0.41,0,0.28972156913180847,0.29832151508845145,0.44215402490162853,-0.24112705370590412,0.28226066600281524,0.3217508373903473,0.4611634624102017,-0.28398035506010066,0.143484163334964,0.4460308638478806,0.16128100941699727,-0.34708292234926685,0.07426562569902048,0.17341667510956105,0.4582562752537377,-0.3847795188845312,0.18688182285804766,0.23280321993086672,0.37826392314237284,-0.29376683685615085,-0.022803946977049572,0.17643594917897587,0.4209102573243265,-0.40635526238459296,0.10325812472480847,0.18079137199969064,0.3297132436780851,-0.37505518975830826,-0.11,0.0005084772155282326,0.4101012833908108,0,0.2594173583087346,-0.1905616851593856,0.4360816205338897,-0.3676940581563321,0.04725580479650624,-0.4480700511129745,0.45775384655350043,-0.41619142714841567,0.055514467688538335,-0.40199422740113616,0.4617575436642667,-0.43721305123851156,-0.07244668379174846,-0.48977468119451584,0.44760996723260116,-0.49720494456372283,-0.267233965295406,-0.4121598265636447,0.43577334127414624,-0.41076228818430516,-0.02338332319492885,-0.4860109841620555,0.16635294729540082,-0.48669533969293527,0.009648405494856911,-0.51,0.29214450797250985,-0.4820990886055604,-0.06399912716490527,-0.51,0.13029037174092362,0,0.14660176856243512,0.39036608131566974,0.03617270298820478,-0.41051737100030605,0.023504198732599343,0.011348684983227652,0.035424895021002385,-0.4652384103120869,0.023073198086381544,0.02704823411946876,0.013609685818580446,-0.2739287846095769,-0.06884032136551352,-0.035575292436262035,0.026844705562666923,-0.42024988602679225,0.15557041938305327,0.044332051058062365,0.006317420866147493,-0.40237616196205117,0.004192189931832339,0.004105234409436558,0.02491767212543969,-0.4809592148969541,0.14057513394696414,0.05446344607234039,0.0010889985243033213,-0.39822657723666605,-0.04158366112431125,0.002864387730876105,-0.026078208997890574,-0.46297841455884736,0.19197655053293405,-0.2746122580722329,0.026788370715007774,-0.4926911731774013,-0.4481675951243548,-0.512025,0.07953955595069909,-0.51,-0.11,-0.51012375,0.01976310699346534,-0.5022015364315519,-0.1017868826984375,-0.51,0.012720265873291142,-0.510135,-0.11,-0.509051979897919,0.009948485517003685,-0.5101121925012718,-0.11,-0.51,0.0038088609697702475,0,-0.11,-0.5114568657743005,-0.0102786149899022,-0.5104635620308632,-0.11,-0.51,0.07510787099071514,0,0.1337236669069975,0.32848056544671095,0.13741698088766569,-0.46046483338079264,0.11444208986715335,-0.01,0.3278995636377447,-0.4845189327230927,0.0029635172629847786,0.005241281174609973,0.06862815390090089,-0.48356585542409236,0.14402746266156652,0.055138096328269506,0.04925244288220713,-0.47842468125925325,0.0667355073633995,0.04915198563365414,0.07670388555569735,-0.49393109930220686,-0.02860854492641727,0.02093915348504076,0.06813660153112641,-0.5037030308489401,0.037828227863221486,0.20520105659835966,0.003974525081173148,-0.5033054407398119,-0.11,-0.01,0.038935523075449285,0,0.13494321151475827,-0.42644771203656334,0.34971769338693437,-0.4840583757990307,-0.023747574883505984,-0.46353954345007675,0.3896235352629109,-0.49965542455673856,0.013371099603649165,-0.4948255243700213,0.06440036549824717,-0.504019539318012,-0.07388735014949574,-0.51,0.045150279204800116,-0.51,-0.11,-0.51,0.07607321500666461,-0.4910600015130426,-0.06817803999816749,-0.51012375,0.09119962788955757,0,-0.04027045367676364,-0.51,0.04283584289499063,0,-0.11,-0.51,0.06427170133782546,0,-0.5172130377347455,0.356050437399519,-0.0050936530161106355,-0.461298280683246,-0.04297895385336879,-0.006231358383623075,0.00792928190044883,-0.49628616692549765,0.1833654269925342,0.053315545331433976,-0.029013178404708746,-0.43749527454886333,-0.051928086444935295,-0.03458021302646721,-0.02539696075013902,-0.5092636846412788,-0.030567669683877655,0.18107453572379645,-0.02196475156437553,-0.4851826428370153,-0.11,-0.03913560060912875,-0.01294807063738248,-0.51,-0.020015562797038852,-0.011128033952815305,-0.0013786370439745985,-0.4886208447345998,-0.61,-0.01,0.09,0,0.19462833137212068,-0.4439761652572746,0.009488453732769254,-0.4961387213065034,-0.11,-0.5098071991329216,0.008790814339616967,-0.51,-0.5256229612597387,-0.51,-0.0012587677841579045,-0.5023037833148571,-0.4455004347530962,-0.51,-0.05850518622031838,-0.51,-0.07088254838507077,-0.51,-0.0264742246087066,-0.5023387500000001,-0.11,-0.51,0.04076507039139502,0,-0.11,-0.51,0.07556112343149743,-0.51,-0.11,-0.5014320568490597,-0.021042554912177703,-0.51,-0.06934406926113769,0.03419154018697871,0.4697317852068978,-0.51,-0.9861596270903542,-0.01,0.3539428510521051,0,-0.61,-0.01,0.33773530989045103,0,-0.11,-0.01,0.13014114695435858,0,-0.61,0.07087436416705448,0.20188792401318295,0,-0.11,-0.01,0.19109350555745666,0,-0.11,0.015330657520945206,0.10476429875430456,0,-0.11,0,0,0,-0.11,-0.51,0.4259272200959428,-0.51,-0.61,-0.51,0.250632010797741,0,-0.11,-0.51,0.22361005954316182,-0.51,-0.11,-0.51,0.09,0,-1.01,-0.51,0.14526885247301982,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0.0527635885145053,-0.51,-0.61,-0.01,0.06139134277749153,0,-1.01,-0.01,0.008958898175237612,-0.51,-1.01,-0.01,0.09163434197811032,0,-0.11,-0.01,0.031517030366689874,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.07584188077235676,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-1.01,-0.51,0.09001241971153896,0,-0.61,-0.51,0.08079876348411974,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.9209668217059915,-0.01,0.22763384870180808,0,-0.11,0,0,0,-0.11,-0.0056771648382369574,0.022393136477381146,0,-1.01,-0.01,0.06106070497975552,0,-0.12284159562953748,-0.01,0.06421379952493028,-0.51,-0.11,-0.01,0,0,-0.11,0,0.07322341833066368,0,-1.01,-0.01,0,0,0,0,0.17800957516654178,-0.51,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,-0.01,0.06658542873295697,0,-0.11,0,0,0,-0.61,-0.01,0.09,0,-0.11,-0.01,0.07817694893021038,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1441792385856645,0.448247877824955,-0.24712965574928394,-0.4581631249293707,0.0047215995493368815,0.4342283726502984,-0.37349118224717787,-0.4753690378729632,-0.010861898561153969,0.44164768165590157,-0.39075443723038417,-0.46505709732868267,-0.02253615784385691,0.3970773679180263,-0.41,-0.51,-0.37831196911750814,0.34991005076599196,-0.3723592490141724,-0.5103728938361136,-0.07013668892796708,0.37127674326154597,-0.3954048463131338,-0.51,-0.02705384930290272,0.27016871641334234,-0.41,-0.5126475998159606,-0.11,0.12366878140387938,-0.41,-0.51,-0.4450759732111642,-0.4770749936847234,-0.06990086968038649,-0.51,-0.12717247311435498,-0.42253019910192896,-0.37110035332501556,-0.4931744985133901,-0.11463314283804393,-0.51,-0.363049334496522,-0.51,-0.14259109651428864,-0.4939220732287776,-0.41,-0.5142039462718213,-0.4155081055481512,-0.4481502206016323,-0.30529043528683775,-0.49994697108915687,-0.11961247160025841,-0.51,-0.3938376380971388,-0.51,-0.0988898551796889,-0.51,-0.41,-0.51,-0.12556833902249498,-0.51,-0.41,-0.51,-0.08903146359179578,0.3766709050810909,-0.4262755565869909,-0.51,-0.200117973326337,-0.1578975715061201,-0.4246501710482689,-0.49310337953229033,-0.51,0.10442878006327663,-0.41,-0.5111812479763918,-0.158732757825924,-0.09848197374166137,-0.41,-0.5044469787298572,-0.4007631248447451,0.0421500454984176,-0.41399812624053967,-0.5094827394605936,-0.14334670508009714,-0.08742651084956203,-0.41068625,-0.51,-0.15237775237736417,0.022660322869963858,-0.41,-0.50243912671875,-0.11045826798483378,-0.08557797173516678,-0.41,-0.5091168848989217,-0.51,-0.51,-0.4642560701560969,-0.51,-0.11,0,0,0,-0.1126802868506003,-0.51,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,-0.416655998060961,-0.51,-0.414539423973719,-0.51,-0.11,-0.51,0,0,0,0,0,0,0.048128115601645885,0.35807400426871827,-0.36095747736762857,-0.5057040451979513,-0.07225959970077576,0.338429246265585,-0.41,-0.51,-0.0555895984473973,0.00888951532276999,-0.4219182662640553,-0.5018005948113183,-0.09484535522264874,-0.08519274615113903,-0.41409174665682175,-0.510715812369383,-0.08943717035744743,0.11779616692424584,-0.40187784097882495,-0.51012375,-0.11,0.11266382776973546,-0.41,-0.51,-0.15227737862033702,-0.018201769812531854,-0.41,-0.5099686949562519,-0.61,0.013352063889668433,-0.41,-0.51,-0.51,-0.51,-0.3423591775535451,-0.51,-0.42845378210203217,-0.51,-0.34601911219652726,-0.50235,-0.11,0,0,0,-0.12497844570900143,-0.51068625,-0.41,-0.510135,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,-0.14466021424353215,0.31302402498277354,-0.41,-0.5099896913899555,-0.61,-0.09812234356540213,-0.4201573614834787,-0.51,-0.11,-0.0843920392231824,-0.41,-0.51012375,-0.61,-0.01,-0.41,0,-0.08072401399364316,0.009108012712812601,-0.41,-0.51,0,0,0,0,-0.11,0.006807689051590541,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.26735533807709216,-0.51,-0.41538019220545075,-0.51,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.16250515128804563,-0.5370636204982829,-0.41,-0.51012375,-1.01,0.3185763261758136,-0.41,-0.51,-0.11,0.07273126833132129,-0.41,-0.51,-1.01,0.09157716332316601,0,0,0,0,0,0,-0.61,-0.01,-0.41,0,-1.01,0.03258151234052414,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,-0.10462232741378498,-0.51,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.11,0.02103828325641703,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.025440196026807853,-0.41,-0.51,-0.11,0,0,0,-1.01,-0.03907734257072838,-0.41,-0.51,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01093530182565489,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.012025000000000001,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.30743195526508527,0.41489949708146,0.5006213733914321,0.36533131757310466,0.27093503586434725,0.44169438721157506,0.5300071149010669,0.3733288635171947,0.12800024701299043,0.45363638707697224,0.5348513011604469,0.37102069623594736,0.09237244325603289,0.38073662619800497,0.527494829312829,0.29769811982642536,0.24776866781569631,0.33508320838712513,0.26664739065814214,0.3123369662145661,0.12450849889796867,0.2386340460970375,0.4733980571868134,0.21727269551951006,0.10818808047431387,0.3228724943124338,0.520342303160576,0.34081934426485105,0.08595661000852155,0.17107429552894327,0.489840107018368,0.02713988140935717,0.27861424606553176,-0.06285103732604785,0.5044580630488805,0.3059528893202607,0.1929463662280073,-0.14364651386592114,0.5291355405708961,0.3266314149871723,0.17810495060290038,-0.08972629389342908,0.5376283795101229,0.31766780548321194,0.12025291060221571,-0.31590316754174,0.508102563191278,0.14447779013104295,0.17980110261348778,-0.1813031367907913,0.4898086867547489,0.3315876516990069,-0.20383607996348932,-0.3601169975410783,0.5070842062822769,0.10709010881678847,0.05539062579955118,-0.40169617476498215,0.4723482680427643,0.1399084645853854,-0.11,-0.49416869681323833,0.4925389008808476,0,0.159663307842683,0.34847718336252625,0.5237982439204285,0.3260688558336486,0.12771619134314074,0.3346484696172106,0.5192658288709809,0.28642951164873026,0.07866941765842089,0.28318030214758816,0.5209870039833899,0.3243066283909136,-0.019930857133960152,0.14762364891393873,0.47217157761102163,0.20147518031467515,0.1832102564419505,0.3523224006025686,0.5071459566800652,0.33242999403668827,-0.290882725203523,0.14547254754636954,0.4868533604915406,0.11235713756708604,-0.036936157668332185,0.16454241423235927,0.47882693004225835,0.09393120948045137,-0.1301518445830393,0.05361949705775328,0.48057341566469575,0,0.06898744507345753,-0.28509769574256544,0.5336934465630393,0.2892409722463828,0.01946579725021411,-0.4447633168965176,0.5012324767049476,0.08766633788354933,-0.09174041096023174,-0.39836985582053674,0.5027393640611082,0.13788784396860548,-0.018349517487362695,-0.49579814419617285,0.5173663044020941,0.026223952009889757,0.056692773790901776,-0.47503607680097004,0.47961192329231195,0.13326558471636885,-0.08215509471646469,-0.5062131400653725,0.506844834959973,0.022981785581257012,-0.4619426331797786,-0.51,0.5055345106242003,0,-0.11,-0.5057912098026124,0.3838374398139618,-0.01,0.23532993094672391,0.33086617380938804,0.2920304079781407,0.24868128847927032,0.12772041952614127,0.39733137376860117,0.23203645723796576,0.24162520796712011,0.17062243497678015,0.20313178728051268,0.3726033916465269,0.2096160473770839,0.06972305098561303,0.15158486696402798,0.32733266360133184,0.20550973654609364,0.04884580615451022,0.23449694341782273,0.10545928267786284,0.14871399902705473,0.1491947939289795,0.05147413477967741,0.44695882101351186,0.13133520264073398,-0.04034280335231493,0.29788810962037604,0.0860304325589056,0.08860438420370993,-0.007419352811104417,0.02302401375762745,0.4655048695063825,0.06270445650136718,0.2732713052217921,-0.2598736095234639,0.5320715285040527,0.2336028690604642,0.01186455335287915,-0.4022950540381214,0.47236078065696757,0.10326677059798059,0.1762859460351053,-0.3536876961998713,0.478138955242963,0.04902576765663523,-0.0913414300704932,-0.51,0.48145868216677346,0,0.04278503258328878,-0.44185991461082674,0.4814007298668806,0.03863381001674914,-0.11,-0.51070875,0.49888164794199796,-0.01,-0.1845198622996996,-0.4561055979721269,0.4207506476432692,0.08917328443057422,-0.45243193265213516,-0.49364354357435736,0.3277690826991095,0,0.1408844686128123,0.2845135981680796,0.4008605724047819,0.19271130961027907,-0.4605755651651551,0.0897129851437108,0.4445882572839651,0.13443103546005974,-0.4576427085261073,0.0704738305348594,0.43481101280133855,0.107705783402493,-0.0861267541230373,0.03620153229184599,0.4980202269982681,0.05590151117044836,0.0048283632932113185,0.07513096330992272,0.37358956582291813,0.03336123978744857,-0.61,0.024888698827120415,0.44911933000635584,-0.01,-0.08210434967858837,-0.01,0.3246423977941875,0.03157838083794682,-0.07083582942327621,-0.012025000000000001,0.2274824959193143,0,-0.03596895844377879,-0.4268658810085669,0.46895288597494283,0.10769545980468302,-0.43086350939848034,-0.49673183921026076,0.48752012159693314,0.04564774527384601,-0.3006414203196548,-0.51,0.44661082336715974,0.012885192630828454,-0.11,-0.51,0.26267569045554356,-0.01,-0.0813427352919891,-0.4919188931090939,0.3929372178309891,0.025586338761268094,-0.11,-0.51,0.42217503044338245,-0.01,-0.11,-0.51,0.33659250581202615,0,-0.5479007339738952,0,0.29309752868411165,0,-0.19181035185267167,0.07459282463782235,0.5119009148496482,0.06097089482438264,-0.8439737605862233,-0.01,0.49538052565324786,-0.01,-0.09315747244161303,-0.01,0.5307064851965313,0,-0.11,-0.01,0.41943651414753697,0,-0.5724764180453349,-0.01,0.49655062866666383,-0.01,-0.11,-0.01,0.37451147598159995,-0.022473663426457124,-0.07680856684140941,0.03296179550911586,0.4358265798606449,0,-0.11,-0.01,0.2997035381405227,0,-0.61,-0.51,0.514606094449111,0,-0.11,0,0.527664607658831,-0.01,-0.11,-0.51,0.5131415302728842,0,-0.11,-0.51,0.21388018440391124,0,-0.11,-0.51,0.49523844665793787,0,-0.11,-0.51,0.34954488944796375,0,-0.11,-0.51,0.20030610490475848,0,-0.61,-0.51,0.08931375,0,-0.11,-0.01,0.5222641345000578,0,-0.10792429751334838,-0.01,0.470581127593041,-0.01,-0.5603506013121736,-0.01,0.4998819627370452,-0.01,-0.11,-0.01,0.2910788685411946,0,-0.11,-0.01,0.41613288527192865,-0.01,-0.11,-0.01,0.2523074301052897,0,-0.11,-0.01,0.24129923233120537,0,-0.11,-0.01,0.09,0,-0.11,-0.51,0.4231730903597456,0,-0.11,-0.51,0.33282707925909594,0,-0.11,0,0.1361274438282084,0,-0.11,-0.51,0,0,-0.61,-0.51,0.19859098038371045,0,-0.61,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.11,0.029600782350984893,0.45313091296185537,-0.012126981739448445,-0.11,0.021567363711062458,0.4772460988015904,0,-0.0720014514876289,-0.01,0.1469317086167656,0,-0.61,-0.01,0.1478737756359483,0,-0.0704870723621193,0.02932108560213787,0.39712405506882203,0,-0.11,-0.01,0.19900992017918956,0,-0.11,-0.01,0.15815989612480116,0,-0.11,-0.01,0.09,0,-0.11,-0.51,0.4721549706004567,0,-0.11,-0.51,0.24598683174210487,0,-0.11,-0.51,0.16724559167618966,0,-0.61,0,0.09,0,-0.11,-0.51,0.25630715384861924,-0.01,-0.1614625,-0.51,0.1347584051584439,0,-0.61,-0.51,0.08870341140404296,0,0,0,0,0,-0.11,0.021137260676538407,0.43439383426377487,0,-0.11,-0.01,0.31944302330966157,-0.01,-0.11,-0.01059625,0.26445273130030955,0,-0.11,-0.01,0.0969250535756042,0,-0.11,0.0213720141522798,0.15416748272224745,0,-0.11,-0.01,0,0,-0.11,-0.01,0.11507702595612218,0,0,0,0,0,-0.11,-0.51,0.2080041702889929,0,-0.11,0,0,0,-0.61,-0.51,0.09,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0.1042268113326944,0,0.1900637942349995,0.4648255198805219,0.007248376601289406,0.3136291202252664,0.010978862396280813,0.45818685778329804,-0.23822089223868562,0.2683973925987816,0.03943483552037696,0.4497451924236421,-0.1635680342400052,0.2516377713566549,-0.0010379257323285367,0.4374243404149951,-0.33848943014932353,0.04812015247905156,0.1524700707124859,0.43457053894664943,-0.11042846379962074,0.22543414142621443,0.03335069210720065,0.4279771511499723,-0.2527604869964631,0.04669990284007116,-0.016246650149994966,0.43042820218646943,-0.3394507252237712,0.09618359175142024,-0.38604803952063554,0.3828320199334673,-0.3712787783505601,-0.011533052034964126,-0.10426973699043839,-0.12210855386352887,-0.022172482652682433,-0.06765498007029974,-0.243549189461748,-0.1786878395530792,-0.10406648633134426,-0.07149370488283716,-0.08937018753951805,-0.3574808964487435,-0.22077561529721432,0.0785395001619196,-0.5509866182966952,-0.37980591621191073,-0.269142707420486,0.02115635609433146,-0.13042293050450815,-0.2782992955894903,-0.19141996165733477,-0.05424734549221047,-0.10238607938531451,-0.49465040999078175,-0.26761531872427524,-0.021753157505949035,-0.13236023988828782,-0.3684086067373352,-0.3293270809187274,-0.07926488472418985,-0.1037954383426652,-0.51,-0.3764758093176359,0.061728875956551826,0.03648484349474449,0.38686728877440496,-0.3489397886555576,0.04122948695848989,-0.10646719630094248,-0.0581479160722502,-0.09787566458067427,-0.06317005648630666,-0.14218890559451708,0.05697565566163818,-0.15492926572386742,-0.016954442662711365,-0.21877673165080494,-0.08238700262312891,-0.266490185373072,0.037040903864500964,-0.044781161425999784,0.04232252929262585,-0.2089657347850547,-0.02965682561325364,-0.08960951628068248,-0.07624691733715099,-0.29206887878348875,-0.0010019180759842997,-0.08806549622125878,-0.011163552541694766,-0.3170527137827926,0.08099055919544804,-0.18145367164132148,-0.07192843931840755,-0.3570576407294166,0.025729194550884592,-0.22546515938008396,-0.29549370995113855,-0.19774989256634073,0.01924092023060945,-0.18583262477212148,-0.5189941862957196,-0.2944826077394685,0.042987185721463005,-0.1257415403839494,-0.48393143593313237,-0.3267838151696067,-0.10010732802073319,-0.11,-0.5125875,-0.3339136384805147,-0.04863893608772123,-0.11032146227660822,-0.5086282113442424,-0.36902803268972334,-0.040345504413280955,-0.11,-0.5183353060819231,-0.4107515,-0.08297606956723193,-0.512113482032991,-0.5103750266166404,-0.41,-0.07884306624147973,-0.11,-0.51,-0.41,-0.01,0.13533660230084293,0.3611242695064499,-0.2699504052166827,0.02708599108914549,-0.09625854074059682,0.36182688090578596,-0.3382776611571235,0.006735992029195259,-0.026604949617667125,0.006877612081700646,-0.1891193559065743,-0.002277306260243009,-0.13582196232005805,-0.026308812207180943,-0.18211663055279978,-0.0025265620225965913,-0.025181680798349287,0.08453587089997013,-0.32692991020830453,0.08921736952203604,-0.053754442846542495,0.09949094471891544,-0.28525326197961115,0.013695202442436518,-0.058359293696428824,-0.024304121095691376,-0.2562019792522725,0.014247455751812603,-0.20787267735435003,-0.03324452411838519,-0.37925237331181844,-0.008196008220724832,-0.20616743397493853,-0.39077256618583656,-0.275770046818632,-0.041931788217919465,-0.13490024576737072,-0.4316261563274031,-0.2921796549690775,-0.09197287909163088,-0.07966140572316072,-0.46026148433122255,-0.332998131693469,-0.039002914616399806,-0.11,-0.5111340000000001,-0.35838359883794507,0.002377573502125793,-0.16974207580358913,-0.47299035195730255,-0.36542186150393335,-0.08693377906124657,-0.10563435269386756,-0.51068625,-0.41013499999999997,-0.059575374499055075,-0.10348064926301173,-0.51,-0.40245012499999994,0.008145130243665474,-0.11,-0.503341889958941,-0.4049213174614896,-0.03198407190944848,-0.5313643835365438,0.34008769311347825,-0.40391374999999996,-0.012753148513198878,-0.0797003529162702,-0.0791841036475298,-0.235815120769166,-0.003046945629742455,-0.2233034501977857,-0.03327596191304368,-0.37392905854431513,0.03728015482878058,-0.08988437010891623,-0.09200043630816043,-0.352154930801595,-0.01209307282999904,-0.03054552379998452,0.12719201667920454,-0.380012208452636,0.0042055544065525,-0.11952474770685731,-0.09915959149538277,-0.3799571217463752,-0.07625954621100142,-0.10223737592701078,0.025361301194408718,-0.41,-0.003849388477837866,-0.11,-0.02079606399252785,-0.41012374999999995,0.013145931569204239,-0.16041544521219428,-0.51,-0.364150010449911,-0.05073694218349239,-0.11380560768064071,-0.5102922121180206,-0.3671272078603151,-0.11746743125775773,-0.14920714493364406,-0.51,-0.3816762636854374,-0.028535777094317462,-0.61,-0.51115875,-0.41127125,-0.00549036398939573,-0.51,-0.51,-0.41012374999999995,-0.05222213504170399,-0.11,-0.51,-0.41,0.04908812620886895,-0.11,-0.51,-0.41,0,-0.11,-0.5118225,-0.4002336592466347,-0.03751107339147248,-0.11,0.4488484820983395,-0.334345649130003,-0.01,-0.11,0.371853328560992,-0.41,-0.01,-0.61,0.365229527146588,-0.41,-0.01,-0.11,0.03436750210306339,-0.41,-0.01,-0.922691045200002,0.3087248614838052,-0.41,-0.01,-0.11,0.1667648686954527,-0.41,-0.01,-1.01,0.1396986580985056,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.07797683982093606,-0.20534082403448786,-0.51,-0.41,-0.0006775846721723822,-0.11,-0.51,-0.41,0.0029516997058213227,-1.01,0,0,-0.01,-0.61,-0.51,-0.41,-0.01,-0.61,-0.51,0,0,-0.112036694375,0,0,0,0,0,0,0,-0.23569052458613513,0.3392550839234129,-0.41,-0.01,-0.11,-0.03535429682543162,-0.41,-0.02960726886771501,-0.11,-0.007454343529303794,-0.41,-0.016412122086243406,-0.11,-0.01,-0.41,-0.01,-0.11,0.015664825603977917,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,-0.0256522721333019,-0.41,-0.02031739741156874,0,0,0,0,-0.61,-0.51059625,-0.41,-0.0013182039930637029,-0.61,-0.51,0,0,-1.01,-0.51,-0.40391374999999996,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.06983319718228331,0.28359517318692695,-0.41,-0.01,-0.11,0.05313203240542137,-0.41,-0.01,-0.61,0.04605667701890789,-0.41,-0.01,-0.11,-0.01,0,-0.01,-0.11,0.01184204584255088,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,0,0,-1.01,-0.01,0,0,-0.11,-0.51,-0.3732724880182979,0.012829557006951544,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.026496891236251062,-0.11,-0.51,-0.41,-0.014596117967481587,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.03774310699226727,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,0.02127507807881382,-0.41,-0.01,-0.61,0,0,0,-0.11,0.018193816902247847,-0.41,-0.020742005673207296,0,0,0,0,-1.01,-0.01,-0.41,-0.01,0,0,0,0,-1.01,-0.51,-0.41,-0.012018434764606256,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,-0.11,-1.01,-0.41,-0.01,0.1946724859927058,0.2660097839120942,0.4453611728556703,0.25246649902994994,0.1477771859808671,0.32833118605385203,0.45991389551863965,0.21875453568337477,0.12656150714404044,0.2729604038027742,0.42184802425415513,0.2316552182754717,-0.24404879941944793,0.14638539723577448,0.45214505301204594,0.14731402814849576,0.11338038858379135,0.2060502259790059,0.3748709832219017,0.1988736805064894,-0.022502190021249827,0.08048361633246798,0.336603007593017,0.09502605687840245,0.016126935113624896,0.008770790996710407,0.35463340828862855,0.04861645618511374,-0.11,0.1017247606327581,0.3573991975446245,0,0.16276029587535887,-0.20337985103849016,0.469261721663067,0.19273924697728353,0.1231393586084728,-0.3600343669901545,0.4469272290616754,0.09038635649026722,-0.22712006694530384,-0.3682952823503424,0.425483702475358,-0.01,-0.11,-0.4790748073914056,0.3898564039760646,-0.01,0.12512978265065283,-0.32988755321909835,0.42757291539561193,0.037072765808810554,0.012377919785228342,-0.51012375,0.4253036718184915,0,-0.062319995187499935,-0.51,0.44825031332313403,-0.01,-0.038467194685832415,-0.51,0.36043055600100044,0,0.09182270877912585,0.38472952447099396,0.013182869559114472,0.09787228854960357,-0.09814637121362804,-0.004171721026378685,-0.005429175477637681,0.012784584457795541,-0.038103378656255335,0.0543183762809522,-0.013407306362900686,0.006929738230707497,-0.04526721948041648,-0.05152376684678163,-0.030329431316106055,0.06260692952527938,-0.28855541492665937,0.08704741406849449,-0.041490482435563435,0.06282259111007926,-0.06784856125643118,-0.05247084570642047,-0.07979051028014,0.0726007003238241,-0.04337798840911869,0.05398700753521486,-0.07295635615569618,-0.004843328924533545,-0.08016711500589763,-0.030485737691750052,-0.062282880114699166,-0.04392855392179646,-0.014028876602049392,-0.2687570695951428,0.02599202194663098,-0.051433437738251264,-0.08549776752337572,-0.49403327959356835,0.01922783675526364,-0.05231709524143295,-0.08017388726965814,-0.4588369352395998,0.019028034247632542,-0.03599881903794561,-0.11,-0.51012375,0.0363760855714441,-0.01378059155187613,-0.07588653700528869,-0.4716236987625973,-0.08558366503285236,-0.01205474940743418,-0.11,-0.51,-0.06029581544879009,0.06395966606644546,-0.0838815285577134,-0.51,-0.04562633075369997,-0.046151241661689074,-0.11,-0.51,-0.027585145104786248,-0.01,0.11144943702686831,0.23793871494990337,0.31882945154059134,0.09138288099356844,-0.030706240806528978,0.14274186903890432,0.3224252004607668,-0.01,-0.11388313034384928,0.030385826190015754,0.014953353532090477,0.01769975084986041,0.05674369159877158,-0.010777756396299278,-0.015366676635891122,0.13963787955783982,-0.21301075875596504,0.010051485445796336,0.009217071967876968,0.0990100601809592,-0.4269337164818554,-0.01,0.11074652307462676,0.01888359431804646,0.10694054000538146,0.012769427888498636,-0.015244970443815328,0.012709247083364994,-0.5439878476945268,0.00820579997923316,-0.033040498062030486,-0.03235048070105268,-0.06692050005337001,-0.47976075711851207,0.35718943981239715,0.078944646705571,-0.5148916259890248,-0.51,0.3237883626913952,0.021554070835884925,-0.00458476597108453,-0.5031577209840636,-0.015889241096734785,0.02088029148792429,-0.5028766285216788,-0.5100094977224132,-0.00013030278699236418,-0.037614084647781584,-0.14455052046696065,-0.48057556521074307,0.06476001117567576,0,-0.11,-0.4963541107753675,0.07301829347058222,0,-0.11,-0.510741375,-0.008981473641453816,0.07118197817062326,-0.11,-0.51,0.030518861811527798,0,-0.005271734502801835,0.35693584130049283,-0.03492549651002302,-0.012038749387714844,-0.08893421138186439,-0.06418900760374859,-0.060516201864497264,0.017961689713644508,-0.033655060138188024,0.16844306208911605,-0.034433364461409106,-0.031612298490853105,-0.4664292073527552,-0.06007907267768772,-0.08646322370146266,0.014566058217137114,-0.44249949957659196,0.11889994685798567,-0.02542353474547548,-0.004255266936015889,0.10577622408033004,-0.0442888647290702,-0.04224919375938433,-0.007638117321029416,-0.11,-0.031231835571086695,-0.02695071590964032,0.06310600210023096,0,0,0,0,0.08590571017433407,-0.4855086861745415,-0.03341653565528224,-0.03863188455993132,-0.61,-0.51,-0.06791164289964323,-0.028841601024772838,-0.07340915666542461,-0.4974141407288088,-0.03361446851512292,-0.03271751928646867,-0.11,-0.51,0,0,-0.07908855539816091,-0.4914392900948506,-0.060126301747441865,0.04211315432791769,-0.205246375,-0.5126190539289889,-0.025086428678790386,-0.025973451666993518,-0.08514071230388036,-0.51,0.011567567206483841,-0.01,-0.10230531712049062,-0.51,-0.02392800002192081,-0.015426247503687547,-0.15638339599564716,0.029968926370363712,0.4455923575161594,-0.0036939247520923982,-0.11,-0.01,0.34111997479656236,0,-0.11,-0.01,0.3017691422772916,0,-0.11,-0.01,0.22683440523455137,0,-0.11,-0.01,0.32724156544832367,0,0,0,0.22005431129960623,0,-0.11,-0.01,0.12476390516962518,0,-0.11,-0.01,0.09,0,-0.11,-0.51,0.43892472166936636,0,-0.11,-0.51,0.2647615065195462,0,-0.11,-0.51,0.23051103462287972,0,-0.11,-0.51,0,0,-0.11,-0.51,0.198148506033986,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,-0.11,-0.51,0.1248154047214519,0,-0.61,0.33333839505546425,-0.017276535095899694,0.017327761854737833,-0.11,-0.024068142735467007,-0.002632908982448971,-0.022122277731452478,-0.11,-0.03545490170009542,-0.031113279451016225,0.006589099067732265,-0.11,0,0,0,-0.11,-0.01,-0.0007097324377167251,-0.01,-0.11,-0.01,0.09,0,-0.10444957142530648,0.008203337162910886,0.03290185220423074,0,0,0,0,0,-0.61,0,0.072827370665033,0,-0.11,-0.51,0.07433675609389176,0,-1.01,-0.51,0.012475125569089945,0,0,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.0605131353506703,0,-0.11,-0.01,0.3012289458526955,0,-0.11,-0.01,0.19598784112925804,0,-1.01,0.06422398631680896,-0.0037492936095294,-0.01,-1.01,-0.01,0.026081486837450398,0,-0.61,-0.01,0.0742753371013164,-0.01,-0.61,-0.01,0,0,-0.11,-0.01,0.03768483797839792,0,-0.11,0,0,0,-0.11,-0.51,0.1718479368928054,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.06471956941142139,0,-0.11,-0.51,0,0,-0.61,-0.51,0.07198367529765384,0,0,0,0,0,0,0,0.0787406689023206,0,0,0,0,0,-0.10676950088423776,0.11361339405750702,-0.020634440040572483,-0.01,-0.11,-0.01,0.04780171293808614,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-1.01,-0.01,-0.008389898212397287,-0.01,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.51,0.06999948315311821,0,-0.11,-0.51,0.07183703212468245,0,-0.11,-0.51,-0.02011248057977508,-0.013721500000000001,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0.1366625396044846,0.44392790675544636,-0.3311425307808038,0.15471834493257478,-0.07021618069612237,0.4384433470325453,-0.33416660780166546,0.09072047246477742,-0.5241532087216733,0.43441072250426466,-0.411365909182139,0.06151144972459689,-0.05475961501481824,0.39941197656269817,-0.41,0.04688025449444195,-0.013774396233989116,0.37041545530424086,-0.37206386717292034,0.1302965296367836,-0.05718763677240693,0.37575740125438023,-0.41012374999999995,0.028895409936106918,-0.07768065730874499,0.3499422749263771,-0.41012374999999995,0.04618896729339261,-0.11,0.2194753335161826,-0.41,0.009933632901506437,-0.31143698123631397,-0.31134971088389873,-0.2745970748536263,0.018060992968569403,-0.0772091007135796,-0.43693210694209117,-0.3573221908472186,-0.092879259164423,-0.1364876944284305,-0.49278415247801977,-0.3670238707952004,-0.024603421980456265,-0.10456095329111167,-0.51012375,-0.41013499999999997,0.09564577089401771,-0.5256841982296252,-0.43963091374608015,-0.39120206913180294,-0.10463611105078546,-0.11,-0.51,-0.39142447933025826,-0.0840033688435263,-0.09706972719623704,-0.51,-0.410235125,-0.10576119260185597,-0.0984753110767621,-0.5116627499999999,-0.410235125,-0.1032463411415563,-0.05526526261688892,0.3764463342810067,-0.4648745271701678,0.027124277905749207,-0.13802897063927633,-0.09981548411512439,-0.5691034530466642,-0.05322003015993004,-0.1798285292529021,-0.0586552016152863,-0.4346705672694516,-0.06048241584781526,-0.19359919517179355,-0.06997919556198613,-0.4307497017910398,-0.04976839492255231,-0.05376707934375768,0.06848342084993497,-0.41,-0.012661767996748315,-0.15329301739185422,-0.07985420241357129,-0.42014555514218743,-0.09507261420325708,-0.11,0.011441006113722566,-0.41022398749999994,-0.027612837589925686,-0.11,-0.0329476876990287,-0.41012374999999995,-0.027327373053294003,-0.1192221474054464,-0.51157275,-0.41,0.07737040237148306,-0.10439502279240065,-0.5106975,-0.42105352337036595,0.03199834548953547,-0.1358270236805877,-0.510235125,-0.42206420987169724,-0.10340231435109677,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.43144339997870457,-0.014405215359992028,-0.10380245975013398,-0.5131530718125,-0.41,0.06101182725970942,-0.11,-0.51012375,-0.4106975,-0.059421874008940126,0,0,0,0,-0.3556608091508992,0.3437172867118078,-0.40191771559149847,0.009605002756214261,-0.4414838427254897,0.3398325261158038,-0.3942679451967014,-0.01,-0.39443006818006954,0.08424247511039708,-0.4216976392600338,-0.014306585007134408,0.1292970740751501,-0.02682484502736502,-0.4183508283977459,-0.014288161151243213,-0.11,0.1277626094503307,-0.41013499999999997,0.008569544374475027,-0.07396302861504148,0.049158405462479696,-0.41,-0.011336506832265253,-0.39821876188708055,-0.044407372075664,-0.4111475,0.047902772779802205,-0.61,-0.013711654603529501,-0.41,0.04849751862945242,-0.45227076699351104,-0.51,-0.41,-0.049489913552238356,-0.11,-0.5106975,-0.406128947040767,-0.07909672172965712,-0.10460639397736667,-0.5079491327262825,-0.41070762499999997,-0.05556444968224049,-0.10077813512992789,-0.51,-0.410585,-0.06864775070436446,-0.11,-0.5053485156728489,-0.41012374999999995,-0.0587522600776006,-0.11,-0.51,-0.41,0.01816790390246535,-0.11,-0.51,-0.41,-0.06911348231072714,-0.11,-0.51,-0.41,0,-0.0640322065964336,0.32465069338868024,-0.41,-0.012840624860919497,-0.18657953185333404,-0.07804602861235152,-0.48775414189347754,-0.01378793212761744,-0.10301323056228476,-0.012998354005866526,-0.41012374999999995,-0.04167172820597777,-0.5502999056858532,-0.08740535565425636,-0.41,-0.08707949291551571,-0.11,0.040935893426479145,-0.41132525,-0.0169667698025822,-0.61,-0.059633398250568924,-0.41,-0.05899983426974352,-0.1387743837385067,-0.07790492359050336,-0.41011137499999994,-0.08416486104996801,-0.11,-0.01,-0.41,-0.01,-0.15440161496034754,-0.51,-0.42275783637291375,-0.045087557424264166,-0.11,-0.51,-0.41,0.011578020516098887,-0.11,-0.51,-0.41,-0.09006460924393632,-0.51,-0.51,-0.41,-0.02114240707241774,-0.11,-0.51,-0.41,-0.051350636226472526,0,0,0,0,0,0,0,0,-0.10529961484497248,-0.512025,-0.41,-0.10552775605670739,-0.61,0.3174211840189677,-0.41,-0.01,-0.11,0.20730664565906928,-0.41,-0.01,-0.11,0.15290801449781882,-0.41,-0.01,0,0,0,0,-0.5046159289535443,0.0036115432754078615,-0.41,-0.01,-0.11,-0.01,-0.41,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.00003263908865783205,-0.61,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.61,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0.15453233285554652,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.61,-0.01,-0.41,0,0,0,0,0,-1.01,-0.0014465113962108984,-0.41,-0.01,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.61,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.053011558093109395,-0.41,-0.01,-0.11,0,0,0,-0.11,0.016253977903500146,-0.41,-0.0207282853958089,-1.01,-0.01,-0.41,-0.01,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,-0.01,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.03927841265275753,-0.41,-0.01,-0.61,-0.01,-0.41,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.27209152244825674,0.41430914037255406,0.520275413016294,-0.1772584696711037,0.22269941847448266,0.349702981402791,0.5049862323672514,-0.24876569112411956,0.2238094862297154,0.3297558679518125,0.530493486320699,-0.2568377646479838,0.06750337979735879,0.1150692815511464,0.5257711116586196,-0.39360716715469213,0.23455412371945028,0.2379880162361248,0.5178791100707341,-0.31116114252356836,-0.02697112740394121,0.07651853465814792,0.5350565775611146,-0.44987476412603367,-0.017848907392616388,0.16469779197404036,0.49462443462418376,-0.43967392716667647,-0.06369718847029376,0.03044836802235091,0.5305456095239377,0,0.21753678490898115,-0.2317876173801913,0.5004953833162393,-0.3378575337643364,-0.03159828001246751,-0.3986705975234776,0.4997205907868442,-0.455823912753924,-0.06714453664936526,-0.40120156681037,0.5200565033347191,-0.46928457561754494,-0.51,-0.51,0.5205703418515953,-0.46186022640006885,0.012314521475493619,-0.35097118642295155,0.5262666827474562,-0.4524213374949673,-0.11,-0.51,0.5245571555355343,-0.48881735509280205,-0.05955122469063112,-0.47146934592868905,0.4709592120168381,-0.51,-0.61,-0.51,0.47874143431081995,0,0.23112546013757682,0.18879267485141366,0.5255489939044925,-0.35606804536364867,0.043786436081931904,0.08763934738715541,0.533819745742581,-0.4177484661201603,-0.05999174853252151,0.08651512768106365,0.5037473845447215,-0.5076616900339022,-0.11,0.03950628605233847,0.5038564036806444,-0.47446480791358825,0.018774684599334013,0.02696185362027707,0.5156366564442095,-0.4199480824920026,-0.51,0.04535323934991112,0.5069965730896061,-0.4863305728557057,-0.07379930799212925,0.021159847167618186,0.5113911211164495,-0.4540580944434949,-0.11,-0.01,0.4081082724229565,-0.51,-0.35790319523596026,-0.4628829458023282,0.5232155134768142,0,-0.06429411263952654,-0.49017836279673477,0.5233252819528561,0,-0.077997090678637,-0.51,0.48872016283579756,-0.51,-0.09349442879043812,-0.51012375,0.37712776406937865,-0.51,-0.11,-0.51,0.5045280114497636,-0.5013484177951525,-0.11,-0.51115875,0.3743644131183763,0,-0.08428370330475239,-0.5120657254236947,0.29518057979108064,0,-0.51,-0.5106975,0.22002103972617248,0,0.03770762237543946,0.37523721920950975,0.18748780773337784,-0.3279780702360001,-0.020941967380914583,0.02533992140136778,0.5133287922859225,-0.48634794999686026,-0.035145851706872296,0.17170780572080618,0.48925126489002424,-0.4042926189364148,-0.08813412452301997,-0.01,0.4740578639894527,-0.51,-0.02442716665826889,0.019465207149373026,0.43426935203882594,-0.4177326862418663,-0.11,0.015245528612444414,0.3667128731844715,-0.48910867047694495,-0.07570106843934603,0.01682913522375116,0.3093146543064704,-0.51,-0.10291196984375,-0.01,0.3205993949272857,0,-0.030975959551547416,-0.44475179330672554,0.5106739233343173,-0.51,-0.11,-0.46929386755334573,0.4746868638737152,-0.5094618746415412,-0.004340374918268695,-0.4957893206017903,0.4125937938437385,-0.51,-0.11,-0.51,0.3841112482200715,0,-0.4244535018168948,-0.4890188712789147,0.40997593270373794,-0.51,-0.11,-0.51,0.4157027957744318,0,-0.11,-0.51,0.41662808375838595,-0.51,-0.07096730649888278,-0.51,0.2715803204932302,0,0.06414809469504894,0.1021005677169625,0.42900576570432747,-0.4792093882778372,-0.08551548629182458,0.0012396731299111705,0.4377298905673829,-0.51,-0.11,-0.01,0.3996948827237572,0,-0.11,-0.007663400483832572,0.3233000192818072,0,-0.11,0.03064112759619387,0.41642703218816995,-0.51,-0.11,-0.01,0.29516999704265195,0,-0.11,-0.01,0.3426070685387417,0,-0.11,-0.01,0.12000723705632887,0,-0.0849601876411891,-0.4986775648757879,0.3735884143074684,-0.51,-0.08300536657435763,-0.51,0.32878913668824716,0,-0.11,-0.51,0.3974124610684563,0,-0.11,-0.51,0.23076507826009396,0,-0.11,-0.51,0.26927889643038255,-0.51,-0.11,-0.51,0.1362553655874431,0,-0.11,-0.51,0.08594967306977086,0,-0.11,-0.51,0.17103042870404284,0,-0.61,0.03674903034400362,0.5230541277277445,0,-0.9803255050674753,0.03502340539315401,0.44377577735448537,0,-1.01,-0.01,0.4810526003513384,-0.51,-0.11,-0.01,0.12980049261074839,0,-0.200135,-0.01,0.42714919850244826,0,-0.11,-0.01,0.17727400624508427,0,-0.11,-0.01,0.19853054460998643,0,0,0,0,0,-0.11,-0.51,0.38955465562338587,0,-0.1021133956395937,-0.51,0.3038054806237636,0,-0.5695500057971725,-0.51,0.3416887891680327,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,-0.51,0,0,-0.5690666107361787,-0.000311571022168956,0.4276519322140481,0,-0.11,-0.01,0.29788123706288,0,-0.11,-0.01,0.301722915376346,0,-0.11,-0.01,0.1325971720522729,0,-0.11,-0.01,0.13156229515818643,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.08931375,0,-0.11,0,0,0,-0.11,-0.51,0.21485503877507672,0,-0.11,-0.51,0.20477930512995615,-0.51,-0.11,-0.51,0.09595050420566202,0,0,0,0.09,0,-0.11,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.19233875,-0.01,0.4312252235524253,0,-0.11,-0.01,0.18912242501417378,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.09,0,-0.11,0.02902658887488091,0.1345974805520027,0,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.51,0.17902445698352665,0,-0.11,-0.51,0.13539428310879498,0,-1.01,-0.51,0.24273882733990837,0,0,0,0,0,0,0,0,-0.51,-1.01,0,0,-0.51,-1.01,-0.51,0,0,0,0,0,0,-0.11,-0.01,0.13333477214185946,-0.51,0,0,0,0,-0.10022551087944297,-0.01,0.17001253820283715,0,-0.11,0,0,0,-0.11,-0.01,0.09,0,-1.01,-0.01,0.09,0,-0.11,-0.01,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,0.09,0,0.15368207624808058,0.4630884525129625,-0.1716868865623626,-0.3521451229547768,-0.0415788735296428,0.44853931778806566,-0.2909762275349205,-0.4248839763633816,0.0009187803263808192,0.44846492249479114,-0.2769673183932649,-0.44773566961366895,-0.5368524806573203,0.4277821750009116,-0.41,-0.51,-0.03448263926103027,0.41965657979069165,-0.41,-0.4787022473098514,-0.11,0.42072310158681175,-0.41,-0.51,-0.09411260450666137,0.3960085987167383,-0.3678614084189051,-0.51,-0.06736668620447835,0.2314594663764,-0.41,-0.51,-0.4152681731481221,-0.4532126094443702,-0.06011799351896276,-0.5114750296875,-0.36951437724141617,-0.4898468791113572,-0.2420203975147112,-0.5147390436708952,-0.3588011247217769,-0.47859632186548384,-0.329807967255113,-0.5017363787226872,-0.20071680833448277,-0.51,-0.3698476556476827,-0.51,-0.4448250291059001,-0.4985781780367191,-0.28582521807151645,-0.51,-0.11,-0.51,-0.41,0,-0.09614391771471524,-0.51,-0.41,-0.48617909732499603,-0.11,-0.51,-0.41,0,-0.03377366831028611,0.377249814638223,-0.3671414706343106,-0.4901683503199035,-0.1701631789278604,-0.12144975669209458,-0.2572777450478759,-0.4500160040717144,-0.4968195238465387,-0.05976181237787284,-0.41012374999999995,-0.45945647331470335,-0.18694160394812298,-0.1470626409475035,-0.34951595008293773,-0.4986246690179984,-0.4623209358179856,0.1244679768486639,-0.3724896110589756,-0.51,-0.11033894757767643,-0.13465874986326087,-0.41,-0.48723342959197613,-0.105104471638055,-0.03777817335656089,-0.41,-0.4846994484809989,0,0,0,-0.51,-0.4358402288399796,-0.51,-0.2630556098638852,-0.51,-0.0936393330771855,-0.5106975,-0.41,-0.51,-0.15841409896734823,-0.4957431957181592,-0.41,-0.51,-0.09762349258191004,-0.51,-0.41012374999999995,-0.51,-0.09128525423829643,-0.51,-0.41,-0.51,0,0,0,0,-0.10686984450537988,-0.51,-0.41,-0.510819,0,0,0,0,-0.10758161452276556,0.3592005353158307,-0.332540237378832,-0.5011197106149166,-0.0709716710491397,0.32850599876518977,-0.41,-0.49296564018363215,-0.09037329988452382,0.11406911288990815,-0.3628982932547119,-0.47002310047521445,-0.11,-0.050916809429104565,-0.39240035359735487,-0.51,-0.11,0.12925235046312963,-0.4040113846546538,-0.4906023371119579,-0.08322044405875381,0.10076479703156571,-0.41,-0.51,-0.11,-0.03963663559676468,-0.34973726929296856,-0.51012375,-0.11,-0.020125138375091917,-0.41,-0.51,-0.39770518123433857,-0.51,-0.21726238549543583,-0.51,-0.51,-0.51,-0.41,-0.51,-0.45683750570521175,-0.51,-0.40332749497978665,-0.51,-0.11,-0.51,-0.41,0,-0.10901892490234005,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.08222210858897408,0.3230939875525209,-0.41,-0.511594058561323,-0.14937468340748938,-0.12855463099141995,-0.411451445090853,-0.511765125,-0.0972592744337116,-0.05378083251101009,-0.40290125,-0.51,-0.09666821770873504,-0.07255118255218189,-0.4106975,-0.51,-0.09318085402474197,0.07562778236099116,-0.41,-0.51,-0.11,-0.016541727662160347,-0.41012374999999995,-0.51,-0.61,-0.08075806207988057,-0.403475,-0.51,0,0,0,0,-0.10258926509636655,-0.5111475,-0.41,-0.5106975,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.1097175354690525,-0.51012375,-0.41,-0.51,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.10246335464541005,-0.51,-0.41,0,-0.61,0.21757386282512314,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,0.10467580453821712,-0.41,-0.51,0,0,0,0,-0.11,0.11158228390908241,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.4956193173365213,-0.41,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0.09040671869954658,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.61,-0.01046125,-0.41,-0.51,-0.11,-0.01,0,0,-0.11059625000000001,0.0152225038337002,-0.41,-0.51,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,0.12764533790312127,-0.41,-0.51,-0.11,0,0,0,-1.01,0.0015338399153444144,-0.41,-0.51,0,0,0,0,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,-0.41,0,0.2223323557217901,0.4391147956617897,0.20887578090501432,-0.31928472471165603,0.039470508206850295,0.11301058265241073,0.44629264367027327,-0.45762132087775775,-0.06344135422440414,0.24335039847657527,0.46474649022535947,-0.51,-0.06641599829069127,0.03410043728374079,0.4493072699940295,-0.51,0.001322278628335491,0.12677052547922488,0.4118209397231824,-0.44154039635649855,-0.11,0.032274446491274845,0.4216445362393549,-0.51,-0.11,-0.01,0.34199104951094644,0,-0.06684635136719357,-0.01,0.2795748889239272,-0.51012375,-0.28381886159584746,-0.3347406060641756,0.46705939544431385,-0.5080982614699056,-0.11,-0.49315629201789835,0.44456670679237953,0,-0.11,-0.4746018539770001,0.44563894697592876,-0.51,-0.11,-0.51,0.3823276810751845,0,-0.06777673653876241,-0.51,0.36176579949751814,0,-0.11,-0.51,0.31143723851073274,0,-0.11,-0.51,0.3049271432197072,0,-0.11,-0.51,0.21617413261452298,0,-0.026839681266242803,0.3690612317045153,-0.009964657739489034,-0.4830393302646564,-0.13992829720619138,-0.06266505909573539,0.0025061341683759765,-0.4987042619693014,-0.010200732401179483,0.12268786351003508,-0.030686094895248133,-0.5119297255193996,-0.12353221465322728,-0.08719872705520236,-0.0803816570004943,-0.4848299877209464,0.006165268368835276,0.1919532279148973,-0.05121127045858426,-0.470215008315243,-0.11,-0.04032597624949844,-0.017041558831368882,-0.4995326199700284,-0.10078645507116532,0.04208084443563313,-0.024275834591383372,-0.5114625,-0.2107803927743629,-0.10211723915915036,-0.09195075221553717,-0.5132309974984662,-0.0946914450591409,-0.498797630686174,0.017667689805131455,-0.5124187499999999,-0.051411933401732834,-0.5173645103887278,-0.04937783231823153,-0.5120461188542447,-0.10616365363615647,-0.51059625,-0.02002747613261487,-0.5120267492311582,-0.11,-0.51,0,0,-0.11,-0.51,-0.0832282786103487,-0.510135,-0.12108051477386139,-0.51,-0.09106411306292278,-0.51,-0.06402656272198243,-0.51,-0.0034213900778691637,-0.51,-0.11,-0.51,0.05282184975834556,-0.51,0.03753454979623703,0.061184352415026594,0.34890800040146286,-0.4807081793139186,-0.11,0.025945088430174977,0.2940893447382503,-0.51,-0.2967080373321349,0.2343055824400148,-0.015117722796780472,-0.51,-0.10071125605141762,-0.023258832849908737,-0.03975629426852446,-0.5001683322121587,-0.11,-0.01,0.09467931825164944,-0.51,-0.06789364209323523,-0.01,0.08299497222248417,0,-0.11535810298358333,0.008960245139570047,-0.04340872582816687,-0.5115412755053528,-0.13761480893961098,-0.03233337565143389,-0.038822896028789564,-0.51,-0.11,-0.51,0.33008859697415854,-0.51,-0.11,-0.51,0.2945551992055068,-0.51,-0.15069749999999998,-0.51,-0.0072005676647063045,-0.51,-0.102971318796875,-0.51,-0.006701161418778191,-0.51,-0.11,-0.51,0.08154913584594381,0,-0.06785818860518186,-0.51,0.09313171179956736,0,-0.11,-0.51,0.06873797582228192,0,-0.11,-0.51,0.08987624999999999,0,-0.11,0.3342027756891814,-0.04617247784746326,-0.506669930440099,-0.18843183773897038,-0.0890925482287157,-0.023693122342803317,-0.5136517994706354,-0.030633136840643546,0.02303016575942481,-0.035877773194206264,-0.51,-0.61,-0.01,0.019612951135028846,0,-0.08113419437181832,0.009429175350928026,-0.011912614613267812,-0.51,-0.11911739610274744,-0.05102020425628739,-0.033851339446747584,-0.510135,-0.11,-0.01,0,-0.51,-0.11,-0.01,0.089191125,0,-0.11,-0.51,-0.024933843279214125,-0.51,-0.11,-0.51,0.06854312775320447,-0.5059158488134733,-0.11,-0.51,0,0,0,0,0,0,-0.17018770134662597,-0.511776375,-0.09823451350640929,-0.5100552883976563,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.035264996036919606,0.35133175754082746,0,-0.11,-0.01,0.12925151930653192,0,-0.11,-0.01,0.14041337645558052,0,-0.11,-0.01,0.12719669368703565,0,-0.11,-0.01,0.1998220432521158,0,0,0,0,0,-0.11,-0.01,0.12653186187985566,0,-0.61,0,0,0,-0.11,-0.51,0.21944594643842896,0,-0.11,-0.51,0.09,-0.51,-0.11,-0.51,0,0,-0.61,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0.10571402599107503,0,0,0,0,0,-0.11,0.05207347809704744,-0.012097503713509063,-0.51,-0.11,-0.01,0.08820403751539006,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,-0.005763903968031829,0,-1.01,-0.01,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.17394935448983623,0,0,0,0,0,-0.11,-0.01,0.09,-0.51,0,0,0,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0,0,-1.01,-0.01,0.07911062248558165,0,0,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0.09,0,0,0,0,0,-1.01,0,0.08931375,0,0,0,0,0,-0.11,0.07646876791932711,-0.012420293145597571,-0.51,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.07907544752283685,0.4312220579349356,-0.3621868766968982,-0.506836010525047,-0.07018422229989982,0.4202079407019268,-0.41012374999999995,-0.51,-0.11,0.4043585560811326,-0.41059625,-0.51,-0.11,0.21128664089364582,-0.41,-0.51,-0.51,0.36295820197118145,-0.38017917990965133,-0.5124621527161076,-0.11,0.22331341123966902,-0.41,-0.51,-0.51,0.1445773669095512,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.61,-0.51,-0.378320817076004,-0.51,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,-0.11184830689558478,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.61,0.34859433957059993,-0.41,-0.51,-0.1376422650101783,-0.11027465383898194,-0.41072798749999995,-0.5103450511665392,-0.41696681017137854,0.035713784282538685,-0.412246625,-0.51,-0.10488566619120362,-0.017026906595489503,-0.41,-0.51,-0.08002886920309252,0.11606567681633234,-0.41,-0.51,-0.1120428355858157,-0.06440696415374941,-0.41,-0.51,-0.61,-0.07412409993198064,-0.41,-0.5109794749825722,-0.11,-0.07747446967387031,-0.41,-0.5116883083698971,-0.11348923216063804,-0.49772726989455635,-0.41,-0.51,-0.547239889952461,-0.5121244021875,-0.5222574800967695,-0.5101215,-0.11,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.10825061233804426,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.07091936813908575,0.35694625393988255,-0.41,-0.51068625,-0.51,0.1551018458030406,-0.41,-0.51,-0.11,0.150980839338804,-0.412025,-0.51012375,-0.12286056981759544,-0.029408422789287788,-0.41,-0.5061687219485573,-0.43770834152181665,0.07684569086066911,-0.41,-0.51,-0.11,-0.01,0,-0.5039537864519268,-0.11,0.01381423659435487,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,-0.09868616722887825,-0.51,-0.41,-0.51,0,0,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,-0.11562080490765961,-0.51,-0.41,-0.51,-0.11,0.16488863589163633,-0.41,-0.51,-0.11,-0.016036566974630115,-0.41,-0.5111475,-0.11,-0.06517460254460722,-0.41,-0.51012375,-0.11,-0.01,0,0,-0.08243366617237599,0.004291590934783719,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.61,-0.51,-0.41,-0.51,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11339409148922472,-0.51,-0.41,-0.510135,-0.9529013466510854,0.06848427731853389,-0.41,-0.51,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-1.01,-0.51,-0.41068625,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.01,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.31476874143551364,0.4468145506275221,0.4948556453025458,0.43936815422957926,0.35041571261508764,0.4161650228881818,0.5212870205170768,0.4037455790740601,0.16587631173230996,0.4509055143127244,0.5453870445600152,0.43817027622262006,0.24424737984137734,0.43724448592922444,0.5286396358766706,0.4352686831046109,0.2583122646457251,0.4010210515108946,0.5466873803237033,0.38232755264879625,0.30905286615237754,0.4118153493756969,0.54618319039837,0.409521948259078,0.2158680031219266,0.4474749946994908,0.36420308270943313,0.34549524846943225,0.2227128725503952,0.27519693211150753,0.535464836758235,0.2873018746386763,0.35273142108939576,-0.05197872764839918,0.5118959375818543,0.4469665577402961,0.3551588999628234,-0.055565891567968366,0.5221568853133731,0.4338506443668376,0.34740239075377966,-0.057074923270218174,0.50398400137828,0.44590082181045904,0.20042901669167232,-0.22838809795522172,0.5234328412144225,0.24283051695931895,0.31592549700423345,-0.0716392086287016,0.3021461652335633,0.4451300838907676,0.28686756361092375,-0.17131524788057645,0.5187256015270528,0.3670608605939899,0.22270939365147865,-0.16158157701199793,0.5247934854811617,0.37037147186071423,0.0035715079104254727,-0.39359531546309373,0.5090942533685758,0.178921929277779,0.32588906602903356,0.3906241553638726,0.5427847314861164,0.4375344624909602,0.18386191920840428,0.3843222618119755,0.5373283153202392,0.44075618721421916,0.1873249698155249,0.3656313658377371,0.5130676337287062,0.36383029278888473,0.011031379503908006,0.3527470836941636,0.5344202919758292,0.3557642887136337,0.22313529936399268,0.38815185354224274,0.5472331698825996,0.4392176538069326,0.04974538065744898,0.3457482557062483,0.5200576791456195,0.33856232352388893,0.19025615298479123,0.3127155900106319,0.5460588941133013,0.36983840226124204,-0.07910960429325357,0.02861945064683972,0.5329366379561303,0.10331367848052829,0.2839610648076294,-0.12615723173623333,0.43393149686779153,0.4532768556050038,0.22423286004337215,-0.2084217229443902,0.5207697529893335,0.3059416956870558,0.23018128982131253,-0.22211825477595248,0.515758624920471,0.34622033403573116,0.05724642550430468,-0.4148722738374366,0.534756630459149,0.03617641102685248,0.21674661752681404,-0.3402487073368449,0.549380154640607,0.32665102587850114,-0.05990703386594859,-0.4792665966345966,0.5220728826716227,0.03488267410071658,-0.0638731348711259,-0.34150417402435895,0.5374252846251695,0.14741071802008734,-0.518472363701107,-0.51,0.5437723376745395,0.03589937938776345,0.30756863988132466,0.3988657664368036,0.5006308392217488,0.43376126889872,0.23007334687220934,0.3946991535187995,0.4786494238817362,0.43886588733701487,0.27040016210186,0.3636707392864172,0.5163282833383303,0.40417328361608035,0.21382066580537173,0.31233726488274355,0.5177508749217992,0.37960748157405655,0.21681623351170565,0.31046313189123914,0.5129768056629076,0.34719315204126916,0.21069562795987343,0.25259639916455207,0.5087340319859229,0.20961604933543418,0.110084384419526,0.3506049602929154,0.22629513355744746,0.17495856575994223,-0.5197657254268017,0.14792756282786645,0.5315286106011948,0.11521182051299539,0.3491030715418318,-0.11411978201956091,0.5137947475450036,0.42330264364739156,0.24764825827687334,-0.2592914530277493,0.5061457241195894,0.3178156548650356,0.24066151927756246,-0.19166427478093465,0.46668243400884907,0.3108842280187928,-0.10417780081158919,-0.40214221062365546,0.5016533281116193,0.15294979186091587,0.13631510668869246,-0.24879313662941022,0.5397946461476576,0.3293122327207778,0.10514174225345688,-0.46929053015868255,0.5412875743194594,0.1669808205345945,-0.022480290586440146,-0.3971787148450413,0.5338199718137925,0.11066411338125987,-0.06574519628887121,-0.51,0.5265864272658511,-0.01,0.2665269659644211,0.2893684659183312,0.26291390564252326,0.34367367321237996,-0.0787973639299032,0.18742680777168735,0.5107703894079623,0.36133977688253915,0.11745450560223616,0.27630589236117686,0.5319170634953094,0.24357495772351556,-0.030373875741434492,0.11445397291431535,0.539053929989112,0.11051857111599228,0.1717332607107762,0.30264128082231745,0.5375625895762814,0.3534854728993617,-0.11,0.06148083342980509,0.5271921068362497,0.07740876778412181,-0.025737007561472416,0.17265157260479877,0.5199699947616349,0.18254486369032277,-0.06796192090188745,0.027436332580209652,0.5221938320408116,0,-0.044284143414610636,-0.3622346261511023,0.5004452555746285,0.26138251042124216,-0.0672369783444253,-0.48753388440159384,0.5297212498412464,0,-0.05604776289923517,-0.4447692398682405,0.521402895998331,0.06004920588700418,-0.11,-0.51,0.5104606994181022,-0.01,-0.06599736058995281,-0.5079588896098683,0.5129815865011094,-0.01,-0.11,-0.5118225,0.5339198601963997,0,-0.11,-0.51,0.49806571249120635,0,-0.11,-0.51,0.49678765670381575,-0.01,-0.07661819461409601,0.3316126982816492,0.5355295226091897,0.2761171572170758,-0.12210262865545694,0.030175699154147244,0.5482361093649315,0,-0.07097968599844043,0.18181113004622013,0.5336551865048599,0.14993946572097644,-0.5222717295359558,-0.01,0.543738188285666,0,-0.07315137231382582,0.15917465395873964,0.5383901923010183,0.03678964810244794,-1.01,-0.01,0.49738820330531075,-0.01,-0.21553434860483475,0.035751217474401624,0.5014043736547701,0.077923561339762,-0.11,-0.01,0.4055522546537732,0,-0.05038833160749763,-0.38701824855370426,0.5393146854922357,0.17582648336805273,-0.11,-0.4706996748485612,0.512182276037395,0,-0.07153666504949242,-0.51,0.533362199822991,-0.01,-0.11,-0.46769625971259027,0.4655271492304827,0,0,0,0.5239513948798453,0,-0.11115875,-0.51,0.36850048802682,0,-0.7859709169523633,-0.51,0.3823516033444478,-0.01,-0.11,-0.51,0.18007467894359552,0,-0.16345564697446152,-0.01,0.48331020541130787,0.11405373946791998,-0.17276046571182324,-0.03298019995649514,0.5185105278297761,0,-0.11586688084404194,-0.00955016056065218,0.5332199940266408,0,-0.11,-0.010659305058705467,0.48551475406621125,-0.01,-0.07120499515578052,0.021482222670684434,0.5251089616985422,0,-0.11,-0.03509380918857768,0.4343243977009341,0,-0.18868610564890723,-0.01,0.5026005378018159,0,-0.11,-0.021137500000000004,0.3433654618661278,0,-0.15673664733694598,-0.51,0.5325557711048705,-0.01,-1.01,-0.51,0.4912171037158335,0,-0.11115875,-0.51,0.48964535846229473,0.03614202533753332,-0.11,-0.5178045194097374,0.28851177303579373,0,-1.01,-0.51,0.33644140053211213,-0.01,-0.11,-0.51,0.09,0,-0.11,-0.51,0.2115016583592252,0,-0.11,0,0,0,-0.139697415590093,0.06587140982334122,0.4755267729258361,0.11138840112508938,-0.13274093815751145,0.03265748684956206,0.5264699792659463,0.07629005628095237,-0.12171266379989704,0.022833646110702946,0.49517905175172217,-0.01,-0.11,0.0944766603730973,0.40493476029051967,0,-0.11,0.03184482424559604,0.5431344034620964,0,-0.11,-0.01,0.4347117695046654,-0.01,-1.01,0.020634567587602626,0.4786681159110688,0,-0.11,-0.01,0.2352751483929348,0,-0.11,-0.4949522457640126,0.511165286707561,-0.01,-0.11,-0.51,0.4762869011871745,0,-0.11,-0.51,0.4261942930065901,0,-1.01,-0.51,0.2503672030309815,0,-0.61,-0.51,0.32172791711529874,0,0,0,0,0,-0.61,-0.51,0.09,0,-0.11,-0.51,0.09,0,-0.15657031844398112,-0.01,0.5128088242685793,0,-0.11,-0.01,0.4565150949472479,0,-0.09434022332032894,-0.01,0.44098348837749163,0,-0.11,-0.01,0.21112459435059097,0,-0.61,-0.01,0.4109496670427568,-0.01,-1.01,-0.01,0.19251030165461075,0,-0.11,-0.01,0.3358452881547619,0,-0.11,-0.01,0.09,0,-0.11,-0.51,0.4281467902306864,0,-0.11,-0.51,0.20448882514012204,0,-0.11,-0.51,0.20382696176480422,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.2788398530747399,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,0,-0.11,-1.01,0.17148800595906843,-0.01,0.29711323759409053,0.45754507918323445,0.016170104245908607,0.41187779811834124,0.2886952032003883,0.45150122012145943,0.03188503432864128,0.4282381412519901,0.19967068180546166,0.38170849910734145,0.0017045691933212622,0.45289942466025923,0.158795306622948,0.4348956399788628,-0.10525181015496782,0.20694994688894514,0.22309906325597556,0.4198821489360546,-0.003962510422132797,0.4440409669203842,-0.02541391878441074,0.3683603977190927,-0.13195021294803402,0.23857932428379133,0.004084745724926148,0.4335566851238474,-0.1222782339880976,0.11259958876172477,-0.11,0.43791283112983603,-0.3134886422508499,0.11523236178828979,0.15646825460465735,-0.11156019181724053,-0.00020651196934259874,0.44290968027415256,0.05792095788934759,-0.1755334883820916,-0.22113833706371736,0.35674930771029184,0.050586042606645724,-0.23363055407951872,-0.042352766115643356,0.4495275568141661,-0.013160288992501528,-0.37349451527252275,-0.21530361982487473,0.4507712969687956,0.045164617614247095,-0.3434821559738503,-0.21679172480235806,0.4390828973548759,-0.009420741202979824,-0.39975414888365646,-0.31995621414706155,0.4332372452973023,-0.07841916060497887,-0.42426150363700155,-0.3266967878122639,0.45203887426475825,-0.10287787671875,-0.51,-0.40233874999999997,0.4509540066001168,0.14856387445671007,0.3842939575622906,0.005185900234769826,0.45070597214461977,-0.21093517279962587,0.20440159536421518,-0.07694622913676033,0.45081365252914196,-0.00980706842547173,0.30201985689894384,-0.13103353767605003,0.44962264713707994,-0.05913143896721796,0.11467462139997726,-0.25555195767341876,0.4486595065347947,0.15800333099301817,0.20250840912675264,-0.1746951189414156,0.4499092173440583,-0.04980498193720273,0.09938400695675305,-0.303328044771095,0.45002060669010624,-0.05304904377412316,0.13343475490138562,-0.32588062551947095,0.4505858628313435,-0.11,0.02936994632248164,-0.3699052938103862,0.4491145966607656,0.0775977474669033,-0.23082006932891805,-0.20093032756822685,0.4442920060788899,-0.04724134133144603,-0.4061879166751241,-0.2777230019691276,0.43560052301024255,-0.0886592903015244,-0.3823279961227634,-0.26260958349468355,0.44218938826943244,-0.11,-0.51,-0.41,0.44263989352277944,-0.10427866971458108,-0.41331575416503197,-0.3639658399777753,0.4391399722191847,-0.07629148424527188,-0.48339925808335926,-0.41,0.4367902021138742,-0.07600305498537438,-0.49732867672309505,-0.3788425891936081,0.44374430403262805,-0.11,-0.51,-0.41,0.3389264673068478,0.2286311017168401,0.3327730489440254,0.0022468215197157847,0.4550393355283603,0.11739306787377736,0.3001761706867717,-0.1663729703669078,0.4571546902547178,0.11095560277668584,0.21299351160039567,-0.17700698391524175,0.45361563053108434,0.010945061094104841,0.1209409415673807,-0.263998588039708,0.4561425364794359,0.09634308214010995,0.2705252653658105,-0.1817231543053185,0.45374031532504083,-0.029704053449047314,0.10080360294131177,-0.34679568274295686,0.45946148334540254,0.0064839610390537115,0.10565106008121068,-0.3054203453373742,0.4532859925592046,-0.11451360099622684,-0.011512576519181571,-0.4025915001535236,0.45441729012298754,-0.3723945517777423,-0.3767061662436558,-0.27229186736229216,0.44504262571427095,-0.06668913842871022,-0.4440683064199349,-0.3653536598651968,0.44272515191082973,-0.009616101833774735,-0.48662639700246163,-0.3406320618667927,0.4380644818653879,-0.11,-0.51,-0.41,0.4377051309356245,-0.07946861811932641,-0.51,-0.41,0.43044535067082745,-0.06691489752738249,-0.51,-0.41,0.421024899871138,-0.07378489115245229,-0.51,-0.36492514705837964,0.4361038084545568,-0.11,-0.5051133968530098,-0.41,0.3444578526519527,0.11451558462765749,0.27922204633078634,-0.22844566705147062,0.4407023744559472,-0.06984065339327789,0.08993089636070892,-0.3735695174425681,0.4407634497056998,-0.4368059627404137,0.04949188112989739,-0.352837114580793,0.4400889414263063,-0.06030669131991276,0.020583313318168702,-0.41,0.44354101289124626,-0.042838110105704146,0.19913062688220978,-0.3623031114335232,0.4403395603382003,-0.07813365631703367,-0.010336903686514355,-0.36762846091800466,0.43944464425739266,-0.114779213067045,-0.010943133479567105,-0.41,0.44316404457688857,-0.06024305711668072,-0.011260326169676661,-0.41,0.3368762325166046,-0.07906139140030878,-0.4539449597815522,-0.1925624068031219,0.43461582857607195,-0.11,-0.4874570162222046,-0.41170999999999996,0.42845532523426366,-0.11,-0.51,-0.41,0.4309011472327771,-0.11,-0.51,-0.41,0.2861627895879531,-0.08459216403877343,-0.511170138455467,-0.4106975,0.4179116379076123,-0.11,-0.51,-0.41,0.32546236667849426,-0.51,-0.51,-0.35539290412285146,0.3227758533697216,-0.09679514817837875,-0.51,-0.40350782412429687,0.27015186062976243,-0.047040168844408876,0.4357606672268738,-0.21119060372816695,0.08655845388491798,-0.11,0.44111126405065965,-0.41,-0.01,-0.8982535415695229,0.4489685457558405,-0.3259667928967476,0.03464028415616783,-0.11,0.40055947694751204,-0.41,-0.01,-0.07520259721874825,0.43417664399840417,-0.4022404931834831,-0.01,-1.01,0.3549099100686411,-0.41,0.03590758696750465,-0.161695375,0.3755598343412834,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.6526479209375,-0.51,-0.41,0.4347625302799991,-0.11,-0.51,-0.41,0.3012706564584502,-0.09775912536092254,-0.51,-0.41,0.39183406062205406,-0.11,-0.51,-0.41,0.11069503898681424,-0.11,-0.51,-0.41,0.3056037717195686,-0.11,-0.51,-0.41,0.17302981366506787,-0.11,-0.51,-0.41,0.07591798024518431,-0.11,-0.51,0,0,-0.40450264544318865,0.3811203487186229,-0.41,0.034219432604525965,-0.16115875000000002,-0.03875787111601093,-0.41,0.36970928367702294,-0.9705432771438071,-0.017833218659302555,-0.41,0.36822049735361295,-0.11,-0.027588419184406236,-0.41,0.03413808806189454,-0.11,0.05763203924392428,-0.41,-0.01,-0.11,-0.044567699016086156,-0.41,0.1121293982365178,-0.11,-0.012690482539115916,-0.41,0.1728150280677652,-0.11,-0.01,-0.41,-0.01,-0.11,-0.51,-0.41,0.33995110880974255,-0.11,-0.51,-0.41,0.25823667465264394,-0.11,-0.51,-0.41,0.07077398441368082,-0.11,-0.51,-0.41,0.04959122743132316,-0.61,0,0,0,-0.11,-0.51,0,0,0,-0.51,0,0,0,0,0,0,-0.17034955902372872,0.3520728707146288,-0.41,0.03634883355906935,-0.11,0.2693320596809684,-0.41,0.03262443058844626,-0.812376483491061,-0.007094841798608662,-0.41,0.3822116058127834,-0.11,-0.00013856812925898843,-0.41,-0.01,-0.11,0.1326261464653396,-0.41,-0.01,-0.11,0.05699149779947181,-0.41,-0.01,-0.11,-0.010179584451713712,-0.41,0.2795881116207544,-0.11,-0.0010655621934911549,-0.41,-0.01,-0.11,-0.51,-0.3778969412179884,0.18815907774242213,-0.61,-0.51,-0.41,0,-0.11,-0.51,-0.41,0.11282409393303369,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0.1132127241301371,-1.01,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-1.01,0.2389314231898693,-0.41,-0.01,-0.11,-0.044479063989526606,-0.41,0.14223289563987135,-0.11,-0.025173801304630154,-0.41,0.033865547955426234,-0.11,0,0,0,-0.11,-0.0005235018357103078,-0.41,-0.01,-1.01,-0.01,-0.41,-0.01,-1.01,-0.01961083460120308,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,0.17159372823351982,-0.11,-0.51,-0.41,-0.011147500000000001,-0.11,-0.51,-0.41,0.03033098699056641,-0.11,-0.51,0,0,-1.01,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.11,-1.01,-0.41,0,0.3331890641961064,0.4445613346964805,0.4792433044293093,0.4450539211425343,0.20185552027560077,0.4115442999469904,0.48829030488277564,0.4286663820549214,0.28144181856714123,0.4072011699156445,0.44898193123397945,0.4590992867714792,0.12273554310370884,0.2695682227305081,0.47666450684316725,0.2644389447516492,0.26248104754033913,0.3247367198237637,0.34019174158426757,0.4505700602276675,-0.2035817319960383,0.29643467058931805,0.47657696956336415,0.3163763912731002,0.07980541550745952,0.2325889148372411,0.1680880304524518,0.4495276201043189,-0.06524076963455762,0.06020015618107269,0.4618273564784477,0.14876831400548424,0.32423024097869424,-0.06738266096354482,0.44943350331702236,0.39743626870443466,0.19034822870467147,-0.1324560191889779,0.49038213168987077,0.2958691104499042,0.21396345744689435,-0.15864592758182966,0.4648986015691803,0.3495261453257442,0.07757803235292487,-0.3750634814534599,0.4543615343310488,0.20341363563438147,0.09384237353312117,-0.19213735122117054,0.4859535471256134,0.2992774671581766,0.059504157494253446,-0.4306407678181998,0.4737771834246959,0.11255959109757634,-0.35300907066396514,-0.33685606085829567,0.4765803452916534,-0.01,-0.61,-0.51,0.4591139720658507,0,0.32874088108091254,0.3673276318964551,0.3546823351388495,0.43836981320771884,0.026976389022464062,0.25971087271820814,0.456273810407635,0.3731236376136977,-0.04521137575482906,0.23238570349291351,0.45876060326159973,0.270045334685209,-0.013662813219213789,0.06997037861902712,0.46792074804750994,0.12048917710409171,0.23161095047865501,0.22988356777210373,0.4232260329681806,0.23060583658024064,-0.002298695550676204,0.09205449311537997,0.10885144053925243,0.40760174559227824,0.032545112260568616,0.06390951766481726,0.42093471773076985,0.10171419144744039,-0.11,0.025106965969924414,0.4339941606962092,-0.01,0.17794571860421307,-0.29827735102562475,0.4214387110868488,0.19950708718141008,-0.015736213108511636,-0.4227744350617573,0.4101146125460589,0.1072422903080332,-0.11677684014753234,-0.438089609318264,0.44524911163555914,0.10813792686540577,-0.11,-0.51,0.460975166200877,0.03458526396738815,0.033407167158341626,-0.4387285436148306,0.44742594317379264,0.07255382856111059,-0.0689288226464719,-0.51,0.4459179652626664,0,-0.06958194397787178,-0.49288018750852747,0.43943114764225333,0,-0.11,-0.51,0.37611185104053974,0,0.333647071783896,0.3573887152258392,0.4353560254536222,0.34968860535669033,-0.25665354235420657,0.24959361164331417,0.47889572038034317,0.2192690860981917,0.11124534132028732,0.23119834769643927,0.4431683921159106,0.22092186418622597,0.13973903192932668,0.08860231182046864,0.43906675740060663,0.251217971501961,0.13283692341064313,0.20480909082982385,0.4448470646761205,0.19307502149240574,-0.1226942943502087,0.08686725898254449,0.36514489874038647,0.03345716758487677,-0.11,0.04447393363661087,0.3958172640743817,0.10204026991483128,-0.06366586022691048,0.019186940063968996,0.4425704525011859,-0.01,0.061895817489795994,-0.28329144340661205,0.48359979861946195,0.173187458495049,-0.06068792292023813,-0.46400058614374906,0.4676840242991227,0.1118330052362469,-0.4297209599728912,-0.4840359522902874,0.34361966538577754,0.11082346115468258,-0.11,-0.49042870624606993,0.40278794205319457,-0.01,-0.3449224972520252,-0.4609245143148548,0.47145861197050437,0.03181839906676349,-0.11,-0.51,0.45783841372012335,0,-0.06813824978035543,-0.51,0.4579934921306606,0,-0.06675978813262363,-0.51,0.3762862275301092,0,0.11306531760465764,0.14072682664523978,0.46859819674044095,0.14767422574757005,-0.08608535154960864,0.14268219140791552,0.43282456135972325,-0.01,0.08095696009433692,0.09828177636377994,0.4319829483300687,0.03247690247079609,-0.11,0.020748065766531022,0.44319863526270253,0,-0.04537686812789203,0.11896062287455147,0.42084919986697034,0.06557744362106774,-0.11,0.03520806892314183,0.39402797685810814,0,-0.07255610150024816,-0.01,0.3701174290860882,0,-0.11,-0.01,0.30074560508978826,0,0.0906089249609292,-0.49460876535709924,0.45448245675084037,-0.01,-0.11,-0.51,0.43910021330382465,-0.01,0.005429126354627549,-0.4687440794589474,0.4453013593153117,0,-0.06960411039842775,-0.51,0.38048365418218594,0,-0.11,-0.51,0.4333166796307761,0,-0.11,-0.51,0.31012034015037315,0,-0.11,-0.51,0.3136194676129796,0,-0.11,-0.51,0.21367864583489465,0,-0.7865748567672736,0.07674410680532394,0.4660523053560471,0.06696058142164713,-0.0709679785974246,-0.01,0.4792431844156633,-0.01,-0.17245763000014303,-0.01,0.4730540455576397,-0.01,-0.11,0.035316683137798045,0.43135638324290826,0,-0.07077111311739241,-0.01,0.4015730473223882,-0.01,-0.17625248261733442,-0.01,0.33098160637541224,0,-0.11,-0.01,0.3032407028312718,0,-0.11,-0.01,0.12710338224924925,0,-0.11,-0.4591145746515264,0.4838603516162461,-0.01,-0.11,-0.455787351211693,0.42464068740983885,0,-0.11,-0.46384368797332665,0.313147233385434,-0.01,-1.01,-0.51,0.16557127788261167,0,-0.11,-0.51,0.269123969959229,0,-0.11,-0.51,0.13056688511342812,0,-0.11,-0.51,0.12887260345776502,0,-0.11,0,0,0,-0.1393269725443002,-0.01,0.40455540785669203,0,-0.11,-0.013039001315259554,0.325126136343393,0,-0.61,-0.01,0.38816381983225307,0.024723751927789972,0,0,0.23953545001598492,0,-0.11,-0.01,0.3399313545889506,0,-0.11,-0.01,0.19898129181630123,0,-0.61,-0.01,0.17930078490090295,0,-0.11,-0.01,0,-0.01,-0.1697053772903512,-0.51,0.3700500269593397,0,-0.11,-0.51,0.21343673969618684,0,-0.61,-0.51,0.2007011733143826,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.13458196506721398,-0.01,0.4521728337860354,0,0,0,0.39404780168146264,0,-0.11,-0.01,0.29614288302253233,0,-0.11,-0.01,0.23827354951683408,0,-0.1728527499043108,-0.01,0.39080539078426935,0,-0.11,-0.01,0.19344974226160355,0,-0.11,-0.01,0.177941312420208,0,-0.11,-0.01,0.09,0,-1.01,-0.51,0.22553054314932408,0,-0.11,-0.51,0.13535856340863509,0,-0.11,-0.51,0.12954363608244343,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,0,0,0,-1.01,-0.51,0,0,-0.11,-0.01,0.3621556864847907,0,-0.07538802572440859,-0.01,0.21233481418124917,0,-0.61,-0.01,0.24722480161323598,0,-1.01,-0.01,0,0,-0.61,-0.01,0.13702200840748066,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.11115875,-0.51,0.25521808835924975,0,-0.11,-0.51,0.12503422057281263,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.61,0,0,0,-0.11,0,0,0,0.24133733009683717,0.40183136586872714,-0.07110286299764937,0.4355521293766853,0.20088875481350296,0.3646908612346604,-0.2482935746674117,0.2392548803287226,-0.014146405606624224,0.2108807723227374,-0.30695538466745514,0.43434082982729144,-0.3827922394912909,0.44089892131864034,-0.3540309867279736,0.036053059820043566,-0.06050128358382284,0.29308477869248833,-0.18625264213765477,0.4214782404467042,-0.00732480746361866,0.35434983629046357,-0.290469452467458,0.11450569241859476,-0.061007013335504984,0.14390479321351904,-0.3731482282087043,0.3338899342717256,-0.11,0.34379482094755165,-0.3721835724588217,-0.01,0.014632799587124334,-0.37184498173775987,-0.2779077683346812,0.4325455651538028,-0.11,-0.44366858248594115,-0.2683951431952676,0.42831867624241216,-0.03797181434112714,-0.49388691564625065,-0.3061010210661122,0.4326662041542369,-0.11,-0.49346364588751224,-0.41,0.42691486189976346,-0.11,-0.47629667061443004,-0.39274459066063705,0.41612737285731616,-0.022690413553640376,-0.51,-0.41,0.43133476758790673,-0.11,-0.51,-0.41,0.41506391232144235,-0.09671514858907643,-0.51,-0.41,0.35120365958705446,0.034737170675465015,0.2505491973668412,-0.2332104726992667,0.42918605407834703,-0.015691574011738735,0.07353760548777169,-0.2784345810788126,0.4225015248141065,-0.06403838833822521,0.06948371967688399,-0.4106975,0.42869081941520876,-0.08036404142321134,0.03745908837954359,-0.3910532990786508,0.4286580866448784,-0.008025215466504036,0.08889370766906102,-0.3823422529313516,0.4236421214078118,-0.08951178649342355,-0.010096278316695009,-0.41,0.41732392855445055,-0.11,-0.011418769368025713,-0.41,0.4270150059677737,-0.14789542838982017,-0.011016291766314856,-0.40158733316895057,0.3359791179422574,-0.06120406551594344,-0.456739383210486,-0.39067881705851903,0.40979584128188473,-0.11,-0.51,-0.41,0.4053708533251391,-0.11,-0.51,-0.41,0.41297217879515424,-0.11,-0.5064737531291916,-0.41,0.35220874426220006,-0.61,-0.461668034669574,-0.39635096961529054,0.41061455952391057,-0.08373939612183176,-0.51,-0.41,0.35433089725218525,-0.11,-0.51,-0.41,0.31101207029583566,-0.11,-0.51,-0.41,0,0.05840703226511339,0.26515387452258143,-0.24237055551324257,0.4405304616760716,0.05983895837172759,0.1066989841917026,-0.350254561223586,0.4164081386649659,0.023393872316510265,0.07317187006433207,-0.36579143791781593,0.43941642626112615,-0.048372054794876176,0.013943755235026604,-0.4125088501725188,0.4353837953611874,-0.4229038162438018,0.014346347686847186,-0.31900963288835427,0.4306113165783671,-0.056323065683195304,0.03286162353005762,-0.3107799550951904,0.3229000806076392,-0.08754055830808397,0.005533744893289165,-0.41,0.4412915344700777,-0.11,-0.011503009424447886,-0.41,0.3685300021978958,-0.06476038930970808,-0.4748649642501577,-0.34772427625711705,0.41219221491957003,-0.11,-0.51,-0.41,0.4131517729027651,-0.10107642692408096,-0.51,-0.41,0.4105315561877102,-0.11,-0.51,-0.41,0.22865573543968304,-0.09806223148544552,-0.51,-0.41,0.36552396714797114,-0.11,-0.51,-0.41,0.24457564950884736,-0.11,-0.5046463578516515,-0.41,0.20890814006417915,-0.11,-0.50290125,0,0,-0.08456200577087225,0.08491925806854386,-0.3586986055643145,0.41472759487942024,-0.08916547337831982,0.031883025012915095,-0.41,0.39586191899307266,-0.11,0.0579097650229327,-0.41012374999999995,0.4104593487621553,-0.11,-0.010798495039040158,-0.41,0.24652193173430012,-0.4403550460792697,-0.011236507907525846,-0.41115874999999996,0.38124533340407385,-0.5399919050996098,-0.012445673729087007,-0.41,0.3252966212711366,-0.11,-0.011151947812349513,-0.41,0.2393914650731043,-0.08783850590765992,-0.010495724076416767,-0.41,0.06666816129445283,-0.11,-0.51,-0.41,0.32981660358848497,-0.11,-0.5101679163345878,-0.41,0.22189213588907591,-0.11,-0.4910969449013887,-0.41,0.2884167727197719,-0.11,-0.51,-0.41,0.034107357683702544,-0.11,-0.51,-0.41,0.2103255966459251,-0.11,-0.51,-0.394297796313288,0.023984676801747144,-0.11,-0.51,-0.41,0.08765806856291995,-0.11,-0.51,-0.41,0.02757223145888501,-0.61,0.4143465158720651,-0.3630577004331384,-0.01,-0.11,0.2545259818188909,-0.41,-0.01,-1.01,0.30900739210299477,-0.41,-0.01,-0.11,0.07314049095620923,-0.41,-0.01,-0.09072667415172297,0.28303863447500544,-0.41,-0.01,-0.11,-0.01,0,0,-1.01,0.08814685842667393,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,-0.49020524445567765,-0.41,0.2690878117181532,-0.11,-0.51,-0.41,0.1646506769147794,-0.6525875,-0.51,-0.41,0.07169912807641826,-1.01,-0.51,-0.41,0,-1.01,-0.51,-0.41,0.034283646634534044,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0.19047264577647288,-0.41,-0.01,-0.11,-0.02450982928409382,-0.41,0.034508291196422215,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,0,0,-0.61,-0.01,-0.41,0,0,0,0,0,-0.61,-0.011885296070618258,-0.41,0.03514052864237503,-0.11,-0.01,0,0,-0.61,-0.51,-0.35512717363045904,0.019101289092500508,-0.11,-0.51,0,0,-0.61,-0.51,-0.41,0,0,0,0,0,-1.01,-0.51,-0.41,-0.01,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.14942039147259226,0.25863977405614863,-0.41,-0.01,0,-0.01,0,0,-0.11,-0.012881893953426336,-0.41,0.06253282325996068,-0.11,0,0,0,-0.11,0.09255233557850348,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.014575120371038128,-0.41,0.031196336914474793,-0.11,0,0,0,-0.61,-0.51,-0.41,0.03053810438619179,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.11027498713136571,-0.41,-0.01,-0.11,-0.04325148723791776,-0.41,0.013463572076610886,-0.11,-0.01,-0.41,-0.01,0,0,0,0,-0.61,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,-0.41,0.004601601141200161,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3287479183301556,0.4389170510976675,0.5286346912860427,-0.062454608569407856,0.30251928217904833,0.39553106435890223,0.5242603034644799,-0.05894495697725857,0.3361030273210286,0.3976254949394716,0.5382878724741103,-0.07066692166132459,0.22030752515237775,0.36753030924380586,0.5419736781631977,-0.15226260064840255,0.3501641349488624,0.3941529558632245,0.5355403615034295,-0.061678383233145985,0.2783995872676288,0.3714792000567757,0.5262810069390064,-0.119256536566203,0.24623996568444914,0.27925613468905947,0.5407938907417768,-0.1614288582035786,-0.022215429006463887,0.11298657121873193,0.5437321382871065,-0.3614512318472001,0.2798007824014174,-0.05733740943994714,0.5183123893520297,-0.07408612768821368,0.24555963538190395,-0.10698036175080429,0.5317414106702055,-0.1692351425177076,0.23654273854643199,-0.1374682981013426,0.530350994481158,-0.1398370297599555,0.09668943826131043,-0.2611042635236527,0.5360848578946086,-0.2943319284513544,0.26356940698359654,-0.20401850758441886,0.531910014705574,-0.16822618131539155,-0.3515119996720607,-0.3832687361811503,0.5502653131740932,-0.46621431931808277,0.03263026998613014,-0.4693908244292353,0.5502494165493669,-0.3067296865945233,-0.08779050685900547,-0.51,0.5325824500530302,0,0.2701263816232252,0.38357228965695855,0.5383200209721276,-0.07862645466052282,0.22684880434667118,0.3206867625519594,0.5327542026489795,-0.126951082149947,0.15933175900029836,0.3635066861108384,0.5412674009891921,-0.11810253765372232,0.006513460954150535,0.08344146032041092,0.5396743690156587,-0.3546513341330891,0.13470439408104273,0.3743648853178236,0.5463835019934236,-0.11616051220421807,0.07656335730001611,0.2545651741534559,0.5428382928432378,-0.46376941161573226,0.012355876556650387,0.12463410533424765,0.5221976509822177,-0.38818483155395,-0.04493900849606401,-0.01,0.5440798737236344,-0.4794903635794304,0.19322040420209724,-0.21407827328395027,0.5452523589075863,-0.26740406953824253,-0.005075553516064556,-0.41089646671167535,0.5468892974646848,-0.4672751418304378,-0.10841468599289236,-0.39378034652521593,0.5327671844627637,-0.41394070053583326,-0.51,-0.512025,0.5333633620313986,-0.4731800497285903,0.07247208684089577,-0.4599829519519802,0.5389340226724685,0,-0.08046670916003333,-0.4797616853283006,0.5320191354265806,-0.51,-0.07323599687229351,-0.47443633476638436,0.54860907552992,-0.440721328414187,-0.11,-0.51,0.5026165159395558,-0.51,0.2418487609577455,0.4032889833668349,0.5096095978460916,-0.08236629684686432,0.19756594943729178,0.2969359052537794,0.5166637577743125,-0.20055860193506336,0.12346651877578219,0.3080327498449225,0.5543419651880442,-0.12657085307852714,0.021298551036745952,0.11811963842511794,0.4677415372763833,-0.4306595328813191,0.1986601880630289,0.35294418500204366,0.5271908215992726,-0.1789639101432593,0.21837067511380187,0.15338947277237555,0.48045293931898675,-0.3936298917846398,0.07570464800805275,0.1930641513950859,0.5218442577996201,-0.46996938666884186,-0.0996757863622936,0.05643604783446912,0.5313708325159502,-0.4650612223529661,0.07606938122747298,-0.2135041599675867,0.48911903846909166,-0.2608944417188675,-0.02336863516201952,-0.3304077095879504,0.5144587199508004,-0.37359690800158213,0.1417138718461465,-0.35184409657490856,0.5071370773711623,-0.33042636130396147,-0.04032537109035508,-0.51,0.40698064098198006,-0.51,-0.2873150441643942,-0.43688009441421394,0.5313915548367085,-0.4482148271127414,-0.06462542864268679,-0.48002155847946004,0.5384577441954663,-0.51,-0.030068877806783106,-0.51,0.5202872884316261,-0.51,-0.11,-0.51,0.4477017229629933,-0.51,0.20116861091145025,0.3341972379232403,0.5057775767583497,-0.2391984811985814,0.10530146428679868,0.2556549863499653,0.49533153566778787,-0.31498204602543495,-0.06682534937177215,0.2058650101560508,0.5102576938166572,-0.46084153194456823,-0.1611475,0.026779654531848662,0.5258218079117334,-0.46662699293311716,0.1278303652833772,0.10796200948668297,0.534486726123226,-0.4637682044534251,0.005962638957556186,0.023484607619592673,0.5380394082309359,-0.51,-0.61,0.11327408096724237,0.4886197131296093,-0.4163241146580857,-0.07687010744629941,-0.01,0.4881357453819051,-0.51,-0.3539697899360122,-0.51,0.5284459998049836,-0.47845337780804864,0,0,0.5331541945763218,-0.5032483102864467,-0.11,-0.4818390317080687,0.5113027739395422,0,-0.11,-0.51,0.4846047964220557,0,-0.0702852204744828,-0.5066396896297681,0.5470145538122946,-0.51,-0.11,-0.4967650073980081,0.4572002556798129,0,-0.11,-0.51,0.4524956271249695,0,-0.11,-0.47142227286911503,0.40811414599398904,0,-0.18658593135949417,0.23536793339333353,0.5309791782462222,-0.36975755111935343,-0.07057591315724344,-0.01,0.5329607400708987,-0.4136660755126055,-1.01,-0.01,0.5384637475858018,-0.47195651292146523,-0.11,-0.01,0.45060746158817816,0,-0.525409304355172,0.4435318252021101,0.09,0,-0.11,-0.01,0.4097741739951463,0,-0.8814500867049904,0,0.41399423299444627,0,-0.11,-0.01,0.3014397616305623,0,-0.97059625,-0.46633533618861933,0.5199748443728485,-0.51,-0.11,-0.51,0.5285559060016034,-0.51,-0.11,-0.51,0.5047663539605892,0,-0.11,-0.51,0.36651060777886596,0,-0.11,-0.51,0.4763081672303363,-0.51,-0.1102800080461662,-0.51,0.26721599351187225,0,-0.11,-0.51,0.265055864393531,0,-0.11,-0.51,0.17466636212349673,0,-0.11,-0.01,0.4953415446278276,-0.46945707629713807,-0.11,-0.01,0.49809718260914626,0,-0.61,-0.01,0.4977949889724462,0,-0.11,-0.01,0.43517625482616484,0,-0.9004730948576378,-0.01,0.4381388916972905,0,-0.11,-0.01,0.37459707762011485,0,-0.11,-0.01,0.27596881138236473,0,-0.11,0,0.22609370328411987,0,-0.11,-0.50639586714967,0.4934362723302941,-0.51,-0.11,-0.51,0.3091835269119763,0,-0.11,-0.51,0.36014398649140444,0,-0.11115875,-0.51,0.13638068064448422,0,-1.01,-0.51,0.17858049877647172,-0.51,-0.11,-0.51,0.13507792237907706,0,-0.11,-0.51,0.13443145026061215,0,-0.11,0,0,0,-0.11,0.029066867537577756,0.5352315588342407,-0.51,-0.11,-0.01,0.4468677726887567,0,-0.11,-0.01,0.2848126607806102,0,-0.11,-0.01,0.21642608641030425,0,-0.916750784530593,-0.01,0.4929131852262129,0,-0.11,-0.01,0.13757197236302338,0,-0.61,-0.01,0.17004451576415341,0,0,0,0,0,-0.11,-0.47391240030778564,0.4019017394539243,0,-0.9196760419093745,-0.51,0.39498043013089096,0,-0.11,-0.51,0.2825580301741857,0,-0.11,-0.51,0.09,0,-1.01,-0.51,0.16396092885106492,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.1380361213691001,0,-0.11,0,0,0,-1.01,-0.01,0.47127936927822567,0,-0.11,-0.01,0.4349603849773307,0,-0.11,-0.01,0.21521561028246328,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0.09,0,-0.61,-0.01,0.09,0,0,0,0,0,-0.11,-0.51,0.29191842900801146,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.13769893500607144,0,-0.11,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,0.14228117301891907,0,0.24638154714551147,0.4532791767718554,0.02892478286693323,-0.07994277099843299,0.05155412297744946,0.4507078161661601,-0.03791533297759432,-0.15336406791349913,0.07570591497428839,0.4583970248531066,-0.07709314855301386,-0.2597298249180266,-0.035157746798814046,0.4486322427887391,-0.23675253871261626,-0.3636156502215493,0.09012821115399001,0.45566522241332114,-0.10290626974872852,-0.22200300636419656,-0.030711415313502986,0.4496060618563885,-0.3225794400985251,-0.40391886064785154,-0.08068663548839547,0.44742340533579306,-0.37113402772436566,-0.36210626865363565,-0.61,0.4322185549271243,-0.30333337404035926,-0.4669851726324294,-0.3309355701126435,-0.38928401765357074,0.0289154012389844,-0.4709876220773428,-0.32609627332681546,-0.4467903788709524,0.03198742620747257,-0.4894099658342728,-0.40213120007484415,-0.44720117812470955,0.028428149480681845,-0.4393089097064226,-0.25852537005091386,-0.443633592398801,-0.16461602389425006,-0.3600853745478359,-0.4141249739121827,-0.43657367022470306,0.018740903573476388,-0.4155260651243984,-0.4119131213678559,-0.4742476972776366,-0.065531454591407,-0.4563833025642014,-0.3850338397631014,-0.29957088360601736,-0.38657405814609536,-0.43241498283049085,-0.10919627882851289,-0.4814722549216331,-0.36551947834558624,-0.47516518431611654,-0.12677703848069732,0.3910550392898386,-0.23785280176771598,-0.32412105212176123,-0.1440684395873199,-0.09360762450621496,0.022282573392344317,-0.26799782450593634,-0.09552623848428918,0.11734688982197894,-0.08534344221837384,-0.3385698519222727,-0.4779031447705829,-0.11034201763248153,-0.2320012678393856,-0.4224523510691341,-0.1622210508802299,0.09343873487804435,-0.1761981680441813,-0.3690443122140284,-0.187408162542138,-0.08227033517040233,-0.3401628891043329,-0.38014380119647184,-0.11036966614561812,-0.0192753598903318,-0.3014367830729947,-0.4143260647500911,-0.17840702833032004,-0.13447492944847506,-0.41,-0.38019805737613666,-0.37486441628779554,-0.51,-0.011774946004296447,-0.51,-0.2600555154807366,-0.51,-0.1206670064451851,-0.4985473426667769,-0.30085666892623253,-0.4991292434366679,-0.22519226522532076,-0.4293491195947553,-0.40451183886772146,-0.51,-0.14486910261506583,-0.49142745469917537,-0.5330089803156148,-0.51,-0.10697446599944503,-0.51,-0.61,-0.51,-0.22070735915503825,-0.51,-0.41523440533739353,-0.4936173734318146,-0.32890334090148354,-0.51,-0.43104351289902704,-0.51,-0.4106975,-0.51,0.06040548244277888,0.35868687774816455,-0.12906566574459075,-0.24530287830100087,0.0008324433465576389,0.37459865718632834,-0.22609903592408065,-0.4165790043441416,-0.00893847410983534,0.11572714277072468,-0.2024301809116628,-0.2700691849272484,-0.5004973439171564,0.061041965692553685,-0.24208768829316063,-0.4422850295917581,-0.025480492263607813,0.07903632949150968,-0.1301887661019615,-0.46589284902807915,-0.024987106950840877,0.19815115814113904,-0.28762133877605484,-0.45418932014317637,-0.08041302301551996,-0.014742685721558329,-0.28887651371863127,-0.3062583763678011,-0.1036969039600982,0.012347877081373852,-0.3675547229289797,-0.51,-0.38903787085173386,-0.474634497250758,0.01810408613297889,-0.4920392429097375,-0.1660367165526241,-0.47818443740021593,-0.2529591120286986,-0.44335515708730683,-0.4132838739643295,-0.51,-0.1066673477883323,-0.51,-0.09291904859499137,-0.5049107317172881,-0.3644349273341736,-0.51,-0.30171082389412857,-0.4313225059019851,-0.41012198521727444,-0.47402569899157493,-0.13922051179286796,-0.51,-0.41,-0.45723953903451653,-0.11,-0.51,-0.41,0,-0.51,-0.51,-0.41,0,0.006801113632051343,0.35294858713294913,-0.31455675774191616,-0.43968584965372187,-0.20115335729228043,-0.1124137185668723,-0.2467247776228862,-0.38442660811341034,-0.42094987523906585,-0.056538469852557366,-0.3723688856767502,-0.49979404104924713,-0.13891216348339175,-0.1505200729064286,-0.39622731081107193,-0.43887508350702514,-0.019775800152937506,0.15414635740739513,-0.41,-0.51,-0.1816687545029353,-0.11246369292650171,-0.384382713684424,-0.47603767389581253,-0.08300255063805943,-0.10329424590322457,-0.3888794110551525,-0.51,-0.11145731875059907,-0.06477501288738197,-0.36975633697746185,-0.4838784899014458,-0.61,-0.51,-0.07116206816110972,-0.51,-0.4539153263799249,-0.51,-0.17018154037501135,-0.51012375,-0.08660077522083175,-0.51,-0.38028517257639843,-0.510135,-0.10087358392056024,-0.51,-0.3728477254267387,-0.51,-0.61,-0.51,-0.3563733928036152,-0.51,-0.11336768277895684,-0.51,-0.41080887499999996,-0.51,-0.11,-0.51,-0.41,0,-0.11971842450659956,-0.51,-0.41,-0.51,-0.44673622468620255,0.4489215507901195,-0.3701081167338205,-0.51,-1.01,0.35030620974806603,-0.41,-0.51,-0.12031364620981154,0.28897047159388445,-0.41,-0.51,-0.11,0.11066026455490277,-0.41,-0.51,-0.61,0.3190619850168228,-0.41,-0.51,-0.56059625,0.12982264435682406,-0.41,-0.51,-1.01,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.44202951591496553,-0.44865635761747724,-0.3231438154171683,-0.51,-0.19660810772683393,-0.51,-0.41,-0.51,-0.4478494808961328,-0.51,-0.3651658582089696,-0.51,-0.11,0,0,0,-0.3791163532936623,-0.51,-0.30599213147475746,-0.50290125,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,0.24465745817432655,-0.41,-0.51,-0.11,-0.03097438758149465,-0.41,-0.51,-0.11,0.0579759029850914,-0.41,-0.51,-0.11,-0.039846203801505164,-0.41,-0.51,-0.11,0.04617959086975257,-0.41,-0.51,-0.11,-0.023525043501343133,-0.41,-0.51,-0.61,-0.01,-0.41,-0.51,-0.11,-0.06720007294590374,-0.3957119256886085,-0.51,-0.411221310496369,-0.51,-0.20636527662113618,-0.51,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,-0.11,0.23061605623831855,-0.41,-0.51,-1.01,0.12208911472758069,-0.41,-0.51,-0.11,0.040195837283625066,-0.41,-0.51,-0.11,0,0,0,-0.11,0.10116532488872834,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.61,-0.01,0,0,-0.61,-0.01,-0.41,0,-0.4579655583564612,-0.51,-0.25308182219352715,-0.51,-0.12596111409502925,-0.51,-0.41,-0.51,-0.11488019797035307,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,0,-0.51,0,0,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0.08633595143289373,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,0,0,-0.61,-0.01,-0.41,-0.51,-1.01,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0.3304771475693634,0.4387619350513672,0.40909926849009853,-0.0896981044404364,0.1705430033428131,0.37735507500338006,0.48633009804701166,-0.19870980403336708,0.1676780457127839,0.3502417636171912,0.46082909041873193,-0.14013134803749908,-0.39820598525878564,0.11340232882305311,0.4818476582761,-0.38436348236022333,0.2575157571023909,0.35306512527368605,0.4860073874001398,-0.13732640471654345,-0.11,0.09775104978480723,0.4795523748850071,-0.3189041108896331,0.14248994067603193,0.032100137918043524,0.4536132687121629,-0.46521851881622384,-0.007665117829158859,-0.01,0.47653521498864315,-0.51,0.2237591589743353,-0.1680570685116428,0.4804247103484162,-0.30341860281143307,0.12378701819020518,-0.303066697112857,0.473533043795023,-0.46932801449527367,0.020629770588185607,-0.4070861885489926,0.4823334889773359,-0.46758915528425127,-0.05666936447652973,-0.45878217928945875,0.4765968677260019,-0.51,0.005711725700650219,-0.34318995413343234,0.48547668166956875,-0.3779111078415972,-0.42836889654584787,-0.4874051112247098,0.48149888121772433,-0.51,-0.06937867957161004,-0.51,0.4736780832214227,-0.40215782568663,-0.08368319631569816,-0.4942253360330337,0.43260381550680155,0,0.02140107220964263,0.25621777494476583,0.4354209699397906,-0.2921266865561458,0.029220968853947916,0.04444459807737998,0.45857433045509005,-0.43410128235153467,0.08556273702848227,0.09554315772690243,0.4678976631233253,-0.3229425439530056,-0.07313311851187576,0.040213362177320494,0.4744930826198686,-0.4864262864871306,0.022536723531706965,0.04604588638909597,0.46087835166606544,-0.46633700755883933,-0.61,0.020311052431603333,0.4339639642502629,-0.51,-0.06709209086598744,0.015300275547975082,0.4334477491872032,-0.4678487815748712,-0.11,-0.01,0.42895089392821034,0,0.06424475236239466,-0.3692326217030985,0.3923419750496849,-0.4605690816261643,-0.10292321984375,-0.51115875,0.42722378822795354,-0.51,-0.08086204163411292,-0.51,0.4645517890549744,-0.47579080990217865,-0.11,-0.51,0.3724183460570452,0,-0.07803141285579496,-0.5031075637066643,0.43519908743454533,-0.4446927268304741,-0.11,-0.51,0.39625204003149883,-0.51,-0.11,-0.5049399152721121,0.38284171267939765,-0.51,-0.51,-0.51,0.21915311937643192,0,0.23874195853743063,0.32841456884647413,0.47209620515264067,-0.3149703685190576,0.15011456394433395,0.13188755499562438,0.42993904774100533,-0.3983360192803697,-0.023940256763012868,0.1753974686698576,0.4092605896609607,-0.4041408587977464,-0.06489032915038487,0.016880705820570205,0.31429413934802786,-0.45097503901147606,0.074709303231758,0.09930574414546178,0.466873198578312,-0.3980900112174748,-0.06759344355308458,-0.01,0.4631137827397204,0,-0.5956473682900796,0.01760069247019591,0.4443434710920905,0,-0.06799839095207859,0.019871455749796027,0.3603007472470702,0,0.04761424238408813,-0.3994610765612899,0.46531505131772116,0,-0.026311855568936005,-0.4738415005779698,0.48118396132007435,0,-0.11,-0.51,0.42230765877752025,-0.51,-0.11,-0.51,0.39468760429294775,0,0.047551751228374156,-0.51,0.4710970236895517,-0.4593281287360687,-0.06782557800253769,-0.51,0.46310790875426705,-0.51,-0.11,-0.51,0.37759555494873825,0,-0.11,-0.51,0.19253847487202846,0,-0.06413607366188966,0.10849791855611302,0.4260273803497163,-0.46828595252513094,0.0003460870065974675,-0.01,0.4377107485587528,-0.46893590452198425,-0.11,0.007789885559497932,0.4382241523298931,-0.479044733715428,-0.11,0.012580287081367223,0.4279018275090563,0,-0.5158139471713188,-0.01,0.43921147248197245,0,-0.07086032091755869,-0.01,0.38864377681264556,0,-0.11,0.012463091863298652,0.3806212899848711,0,-0.08019553848975139,0,0.24932428139685742,0,-0.11,-0.47251618925115296,0.45027832206137397,0,-0.09149416249192041,-0.500886543933038,0.3819909036224207,0,-0.11,-0.51,0.31088509749505516,0,-0.11,-0.51,0.20569412944993196,0,-0.10234946984375,-0.51,0.3387223650764463,0,-0.11,-0.51,0.1852361781350938,0,-0.11,-0.51,0.1975442805833999,0,-0.11,-0.51012375,0.088207457625,0,-0.11,0.07640601627795394,0.47139717085190264,0,-0.11,-0.01,0.37113402446949534,0,-0.1716085578082358,-0.01,0.34456056986492634,0,-0.61,-0.01,0.15230832516700346,0,-0.11,-0.01,0.32609807742183267,0,-0.11,-0.01,0.2338001104273404,0,-0.11,-0.01,0.2434888393659356,-0.51,-0.11,-0.01,0,0,-0.11,-0.51,0.37341908810437463,0,-0.11,-0.51,0.40325714423686154,0,-0.11,-0.51,0.1970538835323995,0,-0.61,-0.51,0.25555746854693207,0,-0.61,-0.51,0.16617860389455244,0,-0.61,-0.51,0,0,-0.11,-0.51,0,0,-0.61,0,0,0,-1.01,-0.01,0.36951077454521897,0,-0.11,-0.01,0.28485145833439934,0,-0.11,-0.01,0.18485409363583988,0,-0.11,-0.01,0.22030496201387795,0,-0.11,0.019852723172130472,0.24250860224871637,0,-1.01,-0.01,0.09,0,-0.11,-0.01,0,0,-1.01,-0.01,0,0,-1.01,-0.51,0.28157517189664844,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-1.01,-0.51,0.09,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.01,0.3338853020890682,0,-1.01,-0.01,0.18972224511785774,0,-0.61,-0.01,0.207081537345161,-0.51,-0.11,-0.01,0.22506761435805722,0,-1.01,-0.01,0.2467613327255353,-0.51,-0.11,-0.01,0.09,0,0,0,0,0,0,0,0,0,-0.61,-0.51,0.16613658115432842,0,-0.11,0,0,0,-1.01,-0.51,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0.18922077591393915,0,-0.61,-0.01,0.09,0,-0.11,-0.01,0.09,0,-0.11,0,0,0,-0.11,-0.01,0.1284537819286255,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.21738151232340694,0.4310389165753279,-0.13264625490421553,-0.3250834674773477,0.03954249965073792,0.4346236719848603,-0.2852691866947115,-0.4721605420740973,-0.07185104152439689,0.4380880052073937,-0.3778832814797184,-0.3581261752526874,-0.11,0.4352276289004145,-0.41,-0.51,-0.11,0.4053320425584146,-0.3143142364120015,-0.3876194427256959,-0.15074377694594343,0.1543694909134882,-0.35735374081315324,-0.4911146873680285,-0.11,0.33486648316923195,-0.4040553075832755,-0.51068625,-0.11,0.24541993842818355,-0.41160874999999997,-0.51,-0.44941027014642615,-0.48400961884797716,-0.06812195477808136,-0.5113673137500001,-0.40286714333779244,-0.51,-0.08882875415056968,-0.510135,-0.42855719419346466,-0.44125558132417614,-0.32072897128496897,-0.49501410660475054,-0.11346474132531909,-0.51,-0.41,-0.48188023728238905,-0.13633722677309715,-0.44078513759096194,-0.3417929037718374,-0.4766765520592239,-0.11,-0.51,-0.41,0,-0.51,-0.51,-0.411455303999524,-0.51,-0.11,-0.51,-0.41,-0.51,-0.05614034551418134,0.3769228256230254,-0.3319233881313228,-0.4738865308714285,-0.21083979758339524,-0.12622557381733587,-0.32929409500896956,-0.46972248283163504,-0.13210213890504535,0.12595277074849087,-0.39891725017319285,-0.46293507198215583,-0.16835738513270027,-0.14846995500848537,-0.373212706668966,-0.510246375,-0.61,0.09140188735522208,-0.38126771835303996,-0.4669474843391802,-0.5516653345617224,-0.16259547275870181,-0.37802361042346594,-0.4155132782969267,-0.06092581524156989,-0.09775740012110354,-0.4108990887499999,-0.445153644067004,-0.1365584616379522,-0.14318951465001395,-0.41080887499999996,-0.47058838923033985,-0.264736018059546,-0.5114625,-0.3675201929771229,-0.49920250308226055,-0.14619659488414952,-0.51,-0.37254828086277525,-0.47925371387567656,-0.61,-0.51,-0.41115874999999996,-0.51,-0.08427948146429039,-0.51,-0.41,-0.51012375,-0.1494593900841398,-0.5052086866902954,-0.41,-0.51,-0.11292239032482593,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0.013399651566149105,0.37140535057177504,-0.3774705953769302,-0.42764303645346036,-0.11,0.35122012210167264,-0.41,-0.4971795082124823,-0.0507210937981323,0.0379988312090762,-0.376613068592815,-0.4234224814890818,-0.08850124659128794,-0.04159466079577651,-0.41146249999999995,-0.48273258946689823,-0.1324316774968396,0.1065630412116342,-0.3564000059252256,-0.47461818734874156,-0.11,0.12802770687012008,-0.41,-0.51,-0.08033739363230162,-0.018996805183193126,-0.41,-0.4770863004190998,-0.12217428364152084,-0.07666461946992613,-0.38713949545981957,-0.474024328131415,-0.51,-0.51,-0.23164822899611345,-0.51012375,-0.1428572862658228,-0.5004657342643495,-0.41,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,-0.11,0,-0.41,0,-0.10055283558230962,-0.51,-0.41,-0.51,0,0,0,0,-0.5764721306743512,0.33016718374701803,-0.37464750643107786,-0.51,-0.5146717130729621,-0.15365639228362565,-0.41049775777774367,-0.51,-0.19560610417835814,-0.1132257710522787,-0.37763378527825553,-0.510246375,-0.11,-0.01,-0.41,-0.51,-0.11,0.1555504776952179,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.182399848607869,-0.11007090463298042,-0.4080923488336643,-0.51,0,0,0,0,-0.2937185178074991,-0.4955211347411869,-0.4115376367892545,-0.51,-0.11,-0.51,0,0,-0.11140030088939816,-0.5060453913377965,-0.4074177415940719,-0.51,0,0,0,0,-0.11,0,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.323881596341876,-0.41,-0.51,-0.61,0.07363806390269281,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-1.01,-0.01,-0.41,0,-0.11,0.03406521597059454,-0.41,-0.51,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.51,-0.41,0,-0.1211058820906111,-0.51,-0.41,-0.51,-0.11,-0.4835911859578928,-0.41,0,0,-0.51,0,0,-0.61,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.11,0.17233418167603748,-0.41,-0.51,-0.11,-0.04341512603704962,-0.41,-0.51,-1.01113625,-0.01,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,0.021209913174146118,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.51,0,0,0,0,-1.01,-0.51,-0.41,-0.51,0,0,0,0,-1.01,0.08754373357492445,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.61,-0.01,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3419206789663438,0.44139807718457647,0.5017950009718988,0.3905495626269974,0.2666318211844939,0.4329517907387495,0.5220145181783025,0.38502594727964606,0.25381206836177017,0.4433109051610219,0.5345394261820122,0.3878541913307858,0.12319283771351437,0.40152902778093846,0.5287995360427253,0.3251643541010551,0.22289388947222627,0.44410654516448045,0.5454879113997276,0.38396392305611826,-0.0373712964932606,0.3949753460594683,0.5375827493101477,0.34975182945090083,0.0817363438957675,0.3615314972507779,0.5353093618127515,0.3140173840231298,-0.016127233274307533,0.19819961573916664,0.5186664028368213,0.02786547087114989,0.11669973427045918,-0.052131042138355094,0.5446753207804523,0.37597938778861245,0.2033748794092462,-0.10985930592458666,0.5177886144190813,0.3658748972411748,0.1559235050612392,-0.07525211769584739,0.5314565206330364,0.3659524026561687,-0.0761110191709467,-0.23322415615185701,0.5300243675673685,0.2118244494731012,0.19392730174111364,-0.1656403127132273,0.5448870590595256,0.31225456537487345,0.042975545575448,-0.4304291611724006,0.4892028201884202,0.17204805116489577,-0.0315119830679892,-0.3537981035065559,0.5326638624932609,-0.01,-0.039792623576433886,-0.46663243147400046,0.5256462144372467,-0.01,0.26479604045643546,0.38385248096968044,0.5167622465005485,0.38277508982757863,-0.09899561978638095,0.3632083796590608,0.5343916362883524,0.36357294054633726,0.016109058867248498,0.3749643209915973,0.5207417645823925,0.3585274455224993,-0.01389189380031932,0.23774223664659166,0.5201804640021699,0.22408443349912724,0.052943416691456024,0.30669774698439406,0.5302039538186536,0.36804137068361403,0.0665497833051723,0.09468986401159707,0.49687079911164217,0.028234734150993347,-0.024194964944759666,0.14186208565544348,0.5104344483970817,0.19022867842063124,-0.079118990195727,0.044254829012503716,0.5094367228294336,0.06410772788925906,0.16566079956074695,-0.18401765362817368,0.5303619941567048,0.279912279764817,-0.1636691515923771,-0.3195864896945206,0.5395485054127874,0.1779647357855365,-0.08914743497391858,-0.40930698147766215,0.5350989688215206,0.11901376696886902,-0.06766189357628234,-0.46992283710083693,0.5216475553264607,0.027498961504485928,-0.029772254068998454,-0.44144764143067133,0.531133192005025,0.24459123475507627,-0.037050845860566506,-0.51,0.5172047403573936,-0.01,-0.10151076051158416,-0.51,0.4931055517057773,0,-0.11,-0.51,0.48663688274961925,-0.01,0.31418625809914913,0.38970165326519274,0.5290188455672677,0.37784528550827096,0.20266936143427716,0.34057373232819055,0.5262687475606515,0.30171446870017404,0.048759268183251187,0.3002366936135406,0.5263308221118363,0.3118158334780046,-0.05688758128639929,0.24740751439455813,0.5296834984267538,0.09360328197991107,0.19310078505434608,0.3493467236233948,0.5211366538580232,0.3187854024969552,0.010770336348887813,0.02632629748719978,0.5262079333465667,0.09509118315726434,0.07639838458932299,0.1221125390450291,0.5366662412816331,0.11711917198347509,-0.51,-0.01,0.532845225124136,0.026997281702584537,0.13487322158162088,-0.13433588823300383,0.5281586223624768,0.3021407960006064,0.12467130383420842,-0.44555070980344164,0.5365433068170617,0.027213201988326767,-0.0434094657234838,-0.39335573538540536,0.5164091852877695,-0.01,-0.360946048083668,-0.47287884881789266,0.5343949640675305,-0.01,0.002217309415771883,-0.3905732447590707,0.5177375527231223,0.11014376662399544,-0.11,-0.47499920104525406,0.5249388754621779,0.02712069097759911,-0.0686798711474815,-0.4443280861412164,0.5053274416515755,0.11425047195631766,-0.11,-0.4880059919067172,0.49205063030935847,0,0.1637167810081378,0.3078939916267083,0.5403106201277599,0.27481459531268554,-0.009219527634009864,0.1630731355734474,0.5270065319609866,0.13980681065074635,-0.42308738123368683,0.18170396341311207,0.5162746654209203,0.11757240949876721,-0.09571306483130963,0.07568495115277692,0.5007373896074949,0.026812129995047035,0.1015404785582891,0.21915910443728334,0.4918967908867957,0.1774625077324829,-0.04540894052578154,0.026212035095256728,0.5078109341302336,0.0536019068987641,-0.45863647073755454,0.012478135098319932,0.4868027356340083,0,-0.09143624222897184,-0.01,0.460112307519254,0,0.01245964213810559,-0.4193254197391099,0.5160998681582062,0.04554792688992429,-0.61,-0.49080156620588594,0.49536530420053354,-0.01,-0.1490306877693712,-0.5016048524379298,0.5358596439972652,-0.01,-0.08249930717214862,-0.51,0.46260681687203364,0,-0.4464158851019932,-0.43511804064599713,0.5159698269799022,-0.01,-0.07419109402522639,-0.51,0.41412264379353314,-0.01,-0.11,-0.51,0.4441836863269849,0,-0.11,-0.49511057242662126,0.3072248988157943,0.022038187629097816,-0.042585462517822144,0.03728584598793517,0.5276901737732795,-0.007296766673329572,-0.15490223165413736,-0.01,0.5348513404765173,0,-0.11,-0.01,0.5173412785516752,-0.01,-0.61,-0.01,0.4139129175186738,0,-0.6588090946095558,-0.01,0.5418468006949019,0,-0.11,-0.01,0.38340682504261336,-0.01,-1.01,-0.01,0.4143160879716555,0,0,0,0.15925567879256292,0,-0.11,-0.463849070684176,0.5348198435676896,-0.00869097378105229,-0.11171617820562983,-0.51,0.5228149026590444,0,-0.10880322547214527,-0.4802205954627148,0.5138052075156814,-0.02637970680400216,-0.11464660573330629,-0.51,0.38366109407058346,0,-0.15849715821252322,-0.51,0.4195500686612791,0,-0.11,-0.51,0.39586985250283657,0,-0.11,-0.51,0.2961489158129506,0,-0.11,-0.51,0.2662187407342107,0,-0.13084473144498954,0.029661552898869778,0.5326374502548966,0,-0.1020702911853125,-0.009008064092886096,0.5216508835255119,-0.01,-0.09919048660138333,-0.01,0.5143950859360447,-0.01,-0.12473828192912062,-0.01,0.4673816089306175,0,-0.11,-0.01,0.4403592234233292,0,-0.11,-0.021137500000000004,0.35674002956175904,-0.01,-0.15787787372720663,-0.01,0.3481498460672376,0,-0.11,-0.01,0.13222982497113467,0,-0.16059625,-0.4388275355639082,0.5048547817189295,-0.01,-0.11,-0.51,0.3979787488626075,0,-0.11,-0.51,0.2654482854394176,0,-0.11059625000000001,-0.51,0.13047058153937274,0,-0.11,-0.51,0.2948020628458613,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,0.09852301785509361,0.5369702792364026,0,-0.5643020607521114,-0.01,0.4466684462624394,0,-0.11,-0.01,0.4884702896007311,0,-0.61,-0.01,0.2439631306855528,0,-0.11,-0.01,0.4355494230439444,0,-0.11,-0.01,0.25821747841630777,0,-0.11,-0.01,0.20243902737209532,0,-0.11,-0.01,0.128734062516851,0,-0.11,-0.4936900184560764,0.47593721806881933,0,-0.11,-0.51,0.30526582197808094,0,-0.11,-0.51,0.2659436931419435,0,-0.11,-0.51,0.17799504181442033,0,-0.11,-0.51,0.17725781510916844,0,-0.61,-0.51,0.1767907875575896,0,-0.11,-0.51,0.13516363162765216,0,0,0,0,0,-0.11,0,0.45609562396824,0,-0.16,-0.01,0.31520458914200455,0,-0.11,-0.01,0.36166878053108353,0,-0.11,-0.01,0.1404386668348254,-0.01,0,0,0.268534750562966,-0.01,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.2407726550290507,0,-1.01,-0.51,0.244402484092326,-0.01,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-1.01,0.14202320891984094,0,0.1499414646349339,0.45815572022439416,-0.003773516084617838,0.3178234814656152,0.01574243031056642,0.45534697161400084,-0.11976886305490679,0.22345057892326306,-0.04964782893897776,0.454997538439427,-0.14229711871119766,0.26854001718496573,-0.017671655213297957,0.45227364286244254,-0.35572251073281114,0.12404051384876658,0.1154402925043271,0.4576740506405126,-0.08460023582793688,0.23875540281015106,-0.046090676842269314,0.4495781624971265,-0.29543799989252056,0.022642107279750613,-0.004230262669952738,0.4436287011295044,-0.25284120921936143,0.07767219485961759,-0.153114522859375,0.4309978937363031,-0.33288897487496455,-0.01,-0.2564586199058213,-0.15143582390563756,-0.012715731437238236,-0.10815999123373475,-0.21130648896615656,-0.2387447711594233,-0.045320364733791696,-0.12572583688304803,-0.32100129633657787,-0.05489886037975123,-0.251966838312761,-0.12720883829669782,-0.23450112633383124,-0.29920108908486065,-0.20792997472399152,-0.09684671510269294,-0.22530458148172847,-0.24240322494749283,-0.05124422442184296,-0.1399153627673661,-0.16716539691394708,-0.3993921639716696,-0.19562584295943278,-0.08546734351065279,-0.21159610351989883,-0.36853933924597215,-0.32687208678722884,-0.09539251844929905,-0.11852720657759035,-0.51,-0.3991704974989669,-0.10797838919624997,0.09964816551878604,0.3890310295896088,-0.18130977208665097,0.004566408471133972,-0.21775258148005258,-0.039491065103874366,0.0035185576357102894,-0.04784013229665037,-0.14364031340684483,-0.015254265181493674,-0.04111611458332506,-0.024795118158127998,-0.12624974286564614,-0.054579658078018616,-0.18594121732449018,-0.05644911811436308,-0.003584576419215925,0.06709413038283765,-0.1756730407242388,0.019154845337737893,-0.1369989869121347,-0.05350263761404447,-0.06596736977810498,0.04487083298654783,-0.25409387003839057,0.07188602599363664,-0.22223555083326377,-0.020600098159710385,-0.13144360028797344,-0.04477217265883529,-0.2960890087292195,-0.06157135166321555,-0.2247202744477291,-0.18618240750225398,0.009325623780442875,-0.14144813168595363,-0.1806133809692309,-0.5298784301373328,-0.03416945440482065,-0.14907896912588783,-0.17646749186756353,-0.4160251676800252,-0.1912618700186593,-0.1341123830820043,-0.1466967417464562,-0.51198277875,-0.21831076016170503,-0.11543313208109485,-0.09902424430957046,-0.444243009182514,-0.28760487514953875,-0.1226580545373854,-0.10857664857510477,-0.51,-0.3294826764070655,-0.1295449430644196,-0.16351341645648462,-0.5031901474135948,-0.41,-0.11202463742898947,-0.26791701497929493,-0.51,-0.3632669845360866,-0.14951782047481468,0.1611780564421536,0.35887095696660676,-0.08605501166796573,0.049637500422468075,-0.0020684232873637055,0.3770108677361417,-0.26281284077812295,0.021529004181425563,-0.008771474810637206,0.1185479455643264,-0.08860133210141366,0.013685622129707265,-0.08327422915911468,-0.021801988431334674,-0.07749818265090738,0.09365025643248216,0.018939626528400443,0.14874914584232207,-0.07123637047113464,0.04533485799725377,-0.02360746922677072,0.0597259394189439,-0.23728878512183804,-0.021028071716521674,0.010661803205183992,0.047434552283608704,-0.1662129828080663,0.006931771176624283,-0.22134037297391226,-0.03774005114841436,-0.30534274457184357,-0.010143568235759555,-0.34319149498515905,-0.2613217779240841,-0.002534769124660648,-0.14048435925544822,-0.1788364121984656,-0.37652529105365407,-0.19116858517650187,-0.14796106523473113,-0.21916592104506655,-0.5066616894687066,-0.23585901204552817,-0.1397764434282883,-0.21326687840900937,-0.5034594249715044,-0.2892757445967474,-0.150754892695273,-0.28277433034225163,-0.4978762781370536,-0.3653558166075963,-0.13346929170990132,-0.19585592133487487,-0.51062775,-0.3269496530208602,-0.1456887136527327,-0.23658540293557026,-0.5000413670644691,-0.41,-0.15864808571573835,-0.61,-0.5118210814016084,-0.4101324459009566,-0.14399114590427894,-0.09294436361472802,0.3542710607744109,-0.28657035114616525,-0.024699742765588114,-0.08431129974333793,-0.0787726489997949,-0.06740619249299981,-0.07879631495264934,-0.12582666843086993,0.04265177899630608,-0.3004295174445409,-0.0629911863528946,-0.1459187201453185,-0.09243835710826269,-0.28674669636019406,-0.05490336901845564,-0.16528295209115382,-0.010223591565632439,-0.34077994626018576,-0.061048387091303696,-0.1902983110342647,-0.10273834167444422,-0.2742084763710985,-0.09329192014377018,-0.09047738368448535,-0.03276147834498755,-0.3724723779967334,-0.07704711424516218,-0.1490293331601466,-0.10302513046262812,-0.3871624967472215,-0.05205014894159981,-0.2999770638419444,-0.4329756747092624,-0.3021809660580339,-0.13728673214980605,-0.19977917691928584,-0.5197686348470989,-0.3236597821724361,-0.14098848407109865,-0.29089204840376715,-0.4604755103519653,-0.3633136300878242,-0.14904085750525908,-0.11,-0.51,-0.41,-0.09060813695724891,-0.16065168534478186,-0.5096613337536856,-0.3568596509639555,-0.12361305107171329,-0.13218103247275964,-0.5123067297793139,-0.3762167361562022,-0.10848969827276293,-0.11,-0.510135,-0.41,-0.07372106130528375,-0.18232391648618698,-0.51,-0.40346374999999995,-0.1258710353545897,-0.07212789394728855,0.4578143722928011,-0.367430434105622,-0.017937906457067613,-0.11,0.39673858562598024,-0.41,-0.026595360976569976,-0.11,0.3948869519058979,-0.41,-0.01,-0.11,0.13841072709240837,-0.3353050961145445,-0.01,-0.11,0.2681037709420883,-0.41,-0.01,-0.11,0.11056688376908624,-0.41,-0.01,-0.11,0.21435143402754203,-0.41,-0.01,-0.11,-0.01,0,0,-1.01,-0.46685699006354275,-0.32559432403643146,-0.11316722193010977,-0.11,-0.4127059067542992,-0.41,-0.0803017080130839,-0.11,-0.51,-0.41,-0.06608652601085695,-0.11,-0.51,-0.41,-0.06603832021312545,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-0.61,-0.51,0,0,-0.5470587902521855,0.34106007109383035,-0.41,-0.01985338958183949,-0.10861420612685377,-0.05225840641022284,-0.41,-0.05878757023657798,-0.61,0.04344347663864346,-0.41,-0.05169686290772952,-0.11,-0.06403386901816444,-0.41,-0.06467578014391188,-0.11,0.06378000821297593,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.01,-0.41,0,-0.11,0,0,0,-0.12059099892065998,-0.51,-0.41,-0.12774407437519036,-1.01,-0.51,-0.41,-0.027362803207534606,-0.11,-0.51,-0.41,-0.04103087319019577,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-1.01,-0.51,-0.41,-0.044798836435148516,0,0,0,0,-0.11,0.3041109593354558,-0.38967952212717705,-0.01,-0.11,0.10378976979628063,-0.41,-0.01,-1.0122794947468046,0.07523019836177786,-0.41,-0.03987459987893536,-0.11,-0.01,0,0,-1.01,0.07576149848586272,-0.41,-0.01,-0.11,-0.01,0,0,-1.01,0.014298220939175755,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,-0.07141021042792528,-0.11,-0.51,0,-0.01,-0.11,-0.5082156385226191,-0.41,-0.01,0,0,0,0,-1.01,-0.51,-0.41,-0.04507769844388608,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.61,0.027234638358039194,-0.41,-0.01,-0.11,-0.0899349332379254,-0.41,-0.08594518231689029,-0.11,-0.01,-0.41,0,-0.11,0,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.110135,-0.01,0,0,-0.11,-0.51,-0.41,-0.01,-0.61,-0.51,-0.41,-0.02246318213924952,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0.2285509825341631,0.27172582441629456,0.4575398522691526,0.2570282108228419,0.2000863421448171,0.31235078088481943,0.44170009196335563,0.27057121894790076,0.12768229129519496,0.33070065622518374,0.43661566317690914,0.2440240283762004,0.04639449233413936,0.09485505191211306,0.40967315313752767,0.06862113282448176,0.18115664147123764,0.22992697590257455,0.42339277659148983,0.20071033943846683,0.10459532742029676,0.15474089206090733,0.3848448044669906,0.1441440077185946,-0.19244975155099575,0.2511972156213836,0.11343912240206383,0.0941949518155504,-0.07202851520098097,0.003440396323488174,0.39800726588794394,0.04570763192865833,0.18753815559472276,-0.13048742763298174,0.445668526398347,0.24425306834812652,0.07693055284612632,-0.23820584102416673,0.459383880110355,0.034143577153583224,0.05501848722875396,-0.2646818431299317,0.4330365419997758,0.008225735033627618,-0.0009809360860207686,-0.51,0.4267480715377667,0.04572879759559363,0.13645836680432158,-0.31471452585962867,0.4365446679270425,0.13552985140219903,-0.032518213059390844,-0.51,0.3783507846485343,0.04644724731797472,-0.05205245282181707,-0.4901477359550725,0.36281495914429474,0,-0.06765307057572784,-0.4961707704516158,0.218727923080772,0,-0.02548646485536595,0.38551112109636065,0.06340038412808226,0.03800514515946621,-0.022480942531853718,-0.0016724898719478127,0.07519504346328902,0.005403684949654751,0.03325263792913554,0.11826513835681327,0.002090967862936486,0.021163535378734374,-0.10686612360979089,-0.026796200058291426,0.0566146343995274,-0.03411859520949614,0.07212350127340998,0.10179718596023218,-0.0005630212791802973,0.026229715558186407,-0.06767384297332266,-0.031948623378495335,0.04160979680159219,-0.024337829945638163,-0.031512359059461634,-0.00974921108617389,-0.017659138184470947,-0.013405025867838146,-0.02501471332936038,-0.03022692450394851,-0.023294662908905903,-0.004779679612268704,-0.1591513561031211,-0.19931926012710272,0.06138042605627075,-0.07507885938159549,-0.11,-0.51,0.0389676391682925,-0.07530515082442749,-0.371356571751279,-0.44205136394257627,-0.020401864853090788,-0.09406320156433691,-0.032537630463668324,-0.5064040047209819,-0.03225892700710172,-0.04923061767361228,0.1219997064677059,-0.4210025848354633,-0.05858656888225594,-0.06512729814071797,-0.09557492744884216,-0.51,0.035845849547414294,-0.05500900541031665,-0.1541551757374747,-0.497348963103437,-0.038832902094923474,-0.05276676893580311,-0.11,-0.5119198448211103,-0.008902107919974471,-0.10163007775489576,0.20116204510423344,0.3264886236990603,0.22856472395636152,0.100957204669918,0.11633143306331685,0.15362318275890433,0.3596995115037282,0.046063687758528704,0.17878916270007536,0.09213883152706563,0.009022009917189659,0.04976401840577627,-0.07219128244335762,0.010478406872765378,0.004975278456688479,0.10293475439299207,0.05208195996648598,0.1724947511547911,0.049453457447531206,0.06471589349189803,0.0040510526904102145,0.04593326357592928,0.08233883460984255,-0.0014361181205686802,-0.09104642526380934,0.03821125765394942,-0.0007202808661467362,0.04447627497600478,-0.19228996849493052,0.006303192247160013,-0.012030055169754562,0.04328607759333803,0.04916560409714748,-0.4346513136774971,0.3305385077646643,0.05490243804149021,-0.07165934461205693,-0.46060524793023366,0.28778745083652113,0.0026562407603035777,-0.006756155336884714,-0.49565587855664944,0.07146370201926665,-0.03777301039254609,-0.61,-0.51,0.033849731896613965,0,-0.13659825772690323,-0.4741144819199549,0.09306838499842816,0.00867040136705861,-0.11,-0.51,0.11062548801072894,0,-0.07241123644942385,-0.5088335221398105,-0.013656600955250016,-0.010779224800247626,-0.61,-0.51,0.03232366722168427,0,0.09581092291366987,0.3534797774793665,-0.042083008423780086,0.007099852543885516,-0.09470388675904412,-0.060457452642089585,0.00518047159000282,-0.06502659466276907,-0.05947044835179489,0.035909075023028994,-0.016299101037248215,-0.02030501693299399,-0.39900746591924047,-0.056677519647130824,-0.004719140630696736,-0.05421352473218671,-0.0798171639176011,0.059190196118813446,-0.017750190191938464,-0.0181689935701691,-0.05084985377167836,-0.031915126507677985,-0.004107673233906033,-0.03216226312434569,-0.09712036820601178,-0.040119002264463216,-0.07088295234483209,-0.047625616832430474,-0.5496629964367321,-0.01810413179229631,-0.019176229308038507,0.00749000023274252,-0.14508617276240787,-0.474557697849113,-0.0038364946339727955,-0.0653846221486345,-0.11393482270488552,-0.5002008652707005,-0.029423403968887492,-0.11062576462519214,-0.1288556072795368,-0.4998377366426992,-0.03942793258346075,-0.10534324152455327,-0.09118284515033839,-0.51,-0.014044151870219698,-0.05994428893638311,-0.09636011370350617,-0.49685148813266505,-0.06395466561065707,-0.0918256206031508,-0.61,-0.51,-0.046923670014236335,-0.06450132657569049,-0.11,-0.51012375,-0.01767201702686174,-0.022092148365419798,-0.10991328226252964,-0.5109644193968785,-0.05179893957176451,-0.07300868975703753,-0.18574219222344496,0.03711463549890541,0.4543304788189495,-0.01,-0.23410226515975163,-0.01,0.41898254155515247,0,-0.11,-0.01,0.3551216347556075,0,-0.11,0.16886077543557748,0,0,-0.11,-0.01,0.26306024869720146,0,-0.61,-0.01,0.1666535027737717,0,-0.11,0,0,0,-0.11,0,0,-0.01,-0.11,-0.51,0.44285170817969693,0,-0.11,-0.51,0.37125850406596156,0,-0.11,-0.51,0.31013871025872586,-0.01,-0.11,-0.51,0.129899703678335,0,-0.11,-0.51,0.27759827039165574,0,-0.11,-0.51,0,0,-0.11,-0.51,0.15928217021265845,0,-0.11,-0.51,0.12520012258604338,0,-0.11,0.28203326752825225,-0.0196542025300158,-0.01,-0.5504075584068862,-0.02404246337671491,0.05169567043647752,-0.01,-0.11,-0.01,0.01638474745294728,-0.01,-0.11210693067124747,-0.01,-0.0070259067807996595,-0.01,-0.13790063576999967,-0.01114243647724415,0.013550093948810755,-0.03086980618229524,-0.11,-0.01,0.06101323617559991,0,-0.11,-0.01,-0.005669893846824699,-0.01,-1.01,-0.01,0.09,0,-0.5334732756024563,-0.51,0.03557863809136222,0,-1.01,-0.51,0.0866707419848927,0,-0.11,-0.51,0.01440892722667007,-0.01,0,0,0,0,-0.11,-0.5125875,0.025865852957030595,0,-0.11104625,-0.51,0.08736225044458278,0,-0.61,-0.51,0.09,0,0,0,0,0,-0.11,-0.01,0.31769471302280905,0,-0.11,-0.01,0.18071140815478795,0,-0.11,-0.007489530207987056,0.022319940682276496,-0.01,-0.11,-0.01,0.09,0,-0.61,-0.01,0.08650089966650645,-0.01,-0.11,-0.01,0.06435381837504782,0,-0.11,-0.01,0.09254764632989139,0,-0.11,-0.01,0.09086632978822193,0,-0.11,-0.51,0.2553429626804052,0,-0.11,-0.51,0.17519571583390017,0,-0.11,-0.51,0.07525283999204732,-0.01,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0.030795235630535454,0,-0.11,-0.01,-0.017588123718268487,-0.01,-1.01,-0.024089287663856797,0.0891532459606125,0,-0.11,-0.05090163004972589,-0.020165840617719217,-0.011260000000000001,-0.11,0.019811702130512955,-0.014987865145766163,-0.047281148170591925,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,-0.01,0.088122375,0,-0.11,-0.512025,-0.04652811802053014,-0.04107698421285813,0,0,0,0,-1.01,-0.51,0.08677346319077155,0,-0.11,0,0,0,-1.01,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0.04521325377050078,0.42963223271225054,-0.14393293675032803,0.21531031634485331,0.03069705467252973,0.43757931202048633,-0.23577850344768755,0.1434791250408089,0.04353635891634479,0.43505796384012047,-0.2882074278717239,0.03251414354376535,-0.0763036694169903,0.4315240062529124,-0.3919467339174746,0.04248181502767673,-0.07116297598343937,0.3361692276346482,-0.4013392569893258,0.12013802712271343,-0.1431235740466762,0.3720541762042303,-0.3518689772908116,0.03969005869973738,-0.40042856419531514,0.342730865855237,-0.3857932288621119,0.039457665989526325,-0.51,0.21683295524891977,-0.41,-0.01,-0.2753847253485061,-0.15971876880605396,-0.18118551548722225,-0.1314713773873524,-0.20079291586808967,-0.34814948021516895,-0.2579338984013796,-0.14602038033794495,-0.21551231931633497,-0.3913490652721262,-0.3088421012401754,-0.1435489772985718,-0.21951705863537027,-0.45173880977191205,-0.36396311625048305,-0.1561553902115483,-0.16573002980250334,-0.46244117011436064,-0.34234188713150343,-0.14386464561933415,-0.15058079092078056,-0.4800049974876593,-0.41,-0.13968646158354658,-0.1451057876001981,-0.4837696456786272,-0.41059625,-0.1277663465418441,-0.11,-0.51,0,0,-0.4780170084117966,0.37712195891400163,-0.4233985173245883,-0.018993300582189763,-0.1158618154142784,-0.07421437668359698,-0.5128825504165431,-0.08817193027409197,-0.10149829268520723,0.056480740998962116,-0.4863465505245733,-0.07780625706730768,-0.4580877490216949,-0.10159575866176973,-0.41937287896972586,-0.10202475529650315,-0.5307877495925754,0.07672286380470097,-0.41090911249999995,-0.02977673083487311,-0.14110893865734264,-0.10836422218453076,-0.43542927159472133,-0.05841599690013404,-0.31734806415768946,-0.07421814581437808,-0.42213473116352923,-0.08035389804174063,-0.1559381829216816,-0.07418417992978031,-0.42118915015624997,-0.07355596906312863,-0.15898292984944068,-0.3461425298685454,-0.5036098841405492,-0.15191177517647195,-0.1998489973795987,-0.5424175395144828,-0.45807612727361147,-0.10356058338643516,-0.10660150699566426,-0.51,-0.4106975,-0.11359505648199994,-0.08817683692249462,-0.512703176859375,-0.41,-0.11240617469690685,-0.08262134764411412,-0.51,-0.41,-0.1156457401880402,-0.11135487851571349,-0.51,-0.44073234028723435,-0.09438752431251697,-0.11,-0.5115350056938823,-0.41,-0.09440952500868414,-0.11,-0.51,0,0,0.006253152478739428,0.3602398079083249,-0.3461675368730765,-0.004773824145980688,-0.11,0.369025010754534,-0.41,0.000021385034984647625,-0.254332040491717,0.09700656131892436,-0.4335664996670433,-0.03154894143424491,-0.11349619402420955,-0.04062679049280441,-0.4128931335784512,-0.054746329397672426,0.09567558762053852,0.023676768956053702,-0.41839709493673377,0.009689460372146581,-0.0688986160460273,0.020245011876740198,-0.41,-0.013322790900469794,-0.12186958138733894,-0.005560170733887716,-0.41816790049969865,-0.01949413757765665,-0.11,-0.01916694257019227,-0.41013499999999997,-0.007278397699678274,-0.25782160415121896,-0.46464376584378775,-0.325207076417054,-0.13825482421085958,-0.11454812321219096,-0.4540345855711261,-0.36908741051231186,-0.110998700678978,-0.5202056541015214,-0.49384908424252116,-0.41592010206857943,-0.14809760573864764,-0.09607497644032234,-0.51,-0.41,-0.08876549950481465,-0.5229286535997892,-0.5005945279688007,-0.41068625,-0.11489567964152717,-0.11,-0.51,-0.41,0,-0.14376866548291622,-0.51,-0.41,-0.09245812412899915,-0.11,-0.51,-0.41,-0.03557871528451617,-0.00447659819937269,0.356500523263084,-0.41,-0.01620653502807013,-0.39060886932494304,-0.09274348237318705,-0.5025141356217611,-0.10411820638633038,-0.14853222430561142,-0.054759152304462835,-0.4533632997782359,-0.0950691686396346,-0.11,-0.06401264599236182,-0.41,-0.06353848815770553,-0.11,0.03855352013590673,-0.41,-0.01,-0.434215383848665,-0.08308644406571883,-0.41012374999999995,-0.08340310913138888,-0.10379667955836028,-0.06724316923316327,-0.41,-0.06826706782958555,-0.14614282976298515,-0.10758637877006538,-0.41,-0.10779779391852957,-0.2865618463890803,-0.4922109755065339,-0.4343906821123733,-0.08484114547107804,-0.11551486805727766,-0.5151599265485448,-0.4321414980756057,-0.10604046866514193,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-0.61,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.604364309193609,-0.51,-0.41,-0.08397303938456675,-0.11,0.3750721659957335,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.61,-0.01,-0.41,0,-0.11,0,0,0,-0.11,0.03549536520874342,-0.41,-0.01,-0.11853658846203656,0,0,0,-0.11,-0.01,-0.41,0,-0.11,0,0,0,-0.11,-0.4939405680034707,-0.38354870770601873,-0.09252400997283848,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.02515062215093679,-0.10993840570547343,0,0,0,-1.01,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.029121715632592728,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,0,0,0,0,-0.11,-0.01,0,0,-1.01,-0.021137500000000004,-0.41,-0.01,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.06576122519428432,-0.11,0,0,0,-0.61,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,0,0,0,0,0,-0.51,0,0,-0.11,0.16368091520782807,-0.41,-0.01,-0.11,0.02746671832243726,-0.41,-0.01,-0.11,-0.0038045769902587106,-0.41,-0.01,0,0,0,0,-0.61,0.08967293472617427,-0.41,-0.01,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,-0.41,-0.0106975,-0.61,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.01,0,0,0,0,-0.61,-0.01,0,0,-0.11,0,0,0,-1.01,0.01837284766902287,-0.41,-0.01,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01971347341397102,-0.41,-0.01115875,-1.01,-0.51,-0.41,-0.04014835991132218,0,0,0,0,-0.11,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3409245268643768,0.4455222071005805,0.513067835152618,-0.15384940867952895,0.16252923993027507,0.36453797624583717,0.5295340255958804,-0.27724681577855154,0.14707213172749653,0.3762605955549426,0.5290770692903728,-0.28477768677986265,-0.008884487325588601,0.30075008286318605,0.526477780529435,-0.3201198045243997,0.21443337818053304,0.33051699556688735,0.5489226187575117,-0.2215877349383502,-0.30869545349253047,0.07917815431300972,0.5339438918098381,-0.40097660160596504,0.11761485456875163,0.06535551952670861,0.5360753334606418,-0.44040188977325534,-0.11,-0.01,0.534238857154321,-0.51,0.2423321358640354,-0.1970962944155083,0.5364120335166367,-0.30031434407853397,-0.15144392066575896,-0.3792912568580987,0.5376759141721945,-0.4709713395815903,-0.03331488910665942,-0.3009604963465647,0.518725223896134,-0.3919033916900713,-0.08551159390966782,-0.45444950102124876,0.5287742406465274,-0.51,-0.23153624765017874,-0.34432609275066944,0.5379779064080635,-0.51,-0.11,-0.50290125,0.5384364604100023,0,-0.55290125,-0.4992395762877902,0.5264929813448797,-0.51,-0.11,-0.51,0.4506419999475214,0,0.14994295559835827,0.35276709868564826,0.5197508422801782,-0.31214103778148417,0.03503532305484704,0.18359027146289353,0.5268273468791069,-0.4363694328437563,-0.04373230113925484,0.16777062278079247,0.5303343781672254,-0.33868810827686824,-0.40464622399569206,0.02771534251935582,0.5264450568366568,-0.505966467487937,-0.011397106229450338,0.2165793002768112,0.5170443851637582,-0.4014064706043537,-0.08784726770991952,0.02604606241173288,0.5205740107718266,-0.48297519212249007,-0.042126166636015414,-0.01,0.5341853362683466,-0.4729870519816525,-0.08677093857326261,-0.01,0.5102356110674412,-0.5080521869662861,-0.053175177262858905,-0.32622577631899213,0.522975971210404,-0.48069189828686537,-0.11,0,0.5277826752137307,0,-0.09846309371462199,-0.46760903957482336,0.5127965435556734,0,-0.07772236860858232,-0.5093081459721572,0.45500494522414586,-0.51,-0.11,-0.5038035560928177,0.5354311907223257,0,-0.11,-0.51,0.47310388549167604,0,-0.11,-0.51,0.39351492315999115,0,-0.51,-0.51,0.20126207532954452,0,0.2633949277313265,0.2937092149572689,0.5120568408698826,-0.373669152035314,-0.03035184424288112,0.029035836550968683,0.5341604322575122,-0.4856208504424734,-0.01296169144761438,0.11311577473037525,0.5212061708661733,-0.51,-0.09703649058706526,-0.01,0.5179927518955116,-0.51,0.1039932699119001,0.23868689154787562,0.5313034476825105,-0.51,-0.11,-0.01,0.5322899584929116,0,-0.06681736186860518,-0.01,0.5223300999633149,-0.49978918713049125,-0.11,-0.01,0.42487481654775383,0,0.04946691207528082,-0.4392276716627075,0.5046849805368646,-0.504400083399409,-0.0968540146753924,-0.4719600907047613,0.5302174955487938,-0.4960499967974851,-0.006204991129102964,-0.51,0.5304719494273897,-0.51,0,0,0.4725526041712411,0,-0.11,-0.51,0.513195031411052,-0.49610049852678234,-0.11,-0.5106975,0.47313226751751913,0,-0.11,-0.496198140516077,0.47908554831238825,0,-0.11,-0.51,0.30340928875988266,-0.51,-0.028126381941660422,-0.01,0.5055788917672018,-0.5118690386573981,-0.11578146456364086,0.023410391977007117,0.5203302426376136,0,-0.11,-0.01,0.5159141290924064,-0.51,-0.1272824414886109,0.012129580244497359,0.49499797081108565,0,-0.11,0.00675900080644593,0.5300780170759287,-0.51,-0.11,-0.01,0.4905821568317754,0,-0.11,-0.01,0.45150706942744656,-0.51,-0.11,-0.01,0.2803380338698995,0,-0.055816661881763374,-0.51,0.5043321975460923,0,-0.51,-0.51,0.43760402602983206,0,-0.07510961338182229,0,0.4030477103004624,-0.51,-0.51,-0.51,0.37640266668372474,0,-0.11,-0.51,0.45282610500946197,-0.51,-0.11,-0.51,0.3751803605066599,0,-0.11,-0.51,0.1943659265143373,0,-0.11,-0.51,0.12375918501823924,0,-0.7888413349414757,0.034549063077986816,0.5217067728626078,-0.51,-0.11,-0.01,0.44307127101654087,0,-0.11,-0.01,0.47503257302280055,-0.51,-0.11,-0.01,0.26990405578429694,0,-0.11,-0.01,0.32575124723904914,0,-0.11046125,-0.01,0.335107701540992,0,-0.11,-0.01,0.13694444742944836,0,-0.61,-0.01,0,0,-0.11,-0.51,0.4809006163658875,0,-0.11,-0.51,0.3910688202707699,0,-0.11,-0.51,0.3185920457763366,-0.51,-0.11,-0.51,0.25050257596245645,0,-0.11,-0.51,0.13794929971941294,0,-0.11,-0.51,0.09,0,0,-0.51,0,0,-0.11,0,0,0,-0.11,-0.01,0.4520541670157547,0,-0.61,-0.01,0.39218202092654003,0,-0.11,-0.01,0.20730439814947432,0,-0.11,0,0,0,-0.11,-0.01,0.13582885744006812,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0.3887039200044892,0,-0.11,-0.51,0.17783614194057212,0,-1.01,-0.51,0.17015823041864347,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0.1364317933039743,0,-0.11,0,0,0,-0.61,-0.01,0.42283413170755735,0,-0.11,-0.01,0.21359125561870534,0,-0.9933810423802625,-0.01,0.23694899097498628,0,-0.11,-0.01,0.13535015099462344,0,-0.11,-0.01,0.29537212015272485,-0.51,-0.11,-0.01,0,0,-0.61,-0.01,0.21496062931300985,0,0,0,0,0,-0.11,-0.51,0.354005309177108,0,-0.11,-0.51,0.1746572219174895,0,-0.11,-0.51,0.12888812531118396,0,0,0,0,0,-0.61,0,0.09,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.6262951218499837,-0.01,0.3252721468698552,0,-0.11,-0.01,0.3574868780224593,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0.13201909802646672,0,-0.11,0,0,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.51,0.13321448136758857,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,0.1145135337874261,0,0.18083070681818803,0.4629081471011901,-0.05802882785334335,-0.3098405386101322,-0.021756358468277448,0.4566861206679303,-0.34267809133670707,0,-0.11,0.45820652332509004,-0.30335426656241576,-0.4369271888905482,-0.46233875,0.44429834752536074,-0.41,-0.48306215282892717,-0.01049468421177207,0.45768472437785485,-0.32520238454613926,-0.4896994016850512,-0.11,0.4369645329272679,-0.3093174229391625,-0.4685255384276596,-0.11,0.4446600297422605,-0.41,-0.51,-0.09855761261401762,0.28395010400933224,-0.41,-0.51,-0.3150560801874132,-0.3898922631892782,0.002694331317463422,-0.5246834457199758,-0.32198728265254933,-0.39310576644208983,-0.034057322540428606,-0.5525128206304621,-0.2207794594571,-0.43713851192265085,-0.08948503729245684,-0.531937020224109,-0.45458014942256136,-0.51,-0.15431001327939348,-0.51,-0.3408012138998543,-0.4039440642058269,-0.1958356310592087,-0.5160422804485224,-0.12229615383309791,-0.51,-0.4006674696248459,-0.5171006495536005,-0.13752519871949326,-0.48736725691452304,-0.36704708301125655,-0.5178574187126266,-0.11,-0.51,0,0,-0.10090694731993843,0.3878820217374972,-0.3689007063334991,-0.51,-0.1457874323718025,-0.09640800434447888,-0.1967099779507114,-0.5199608550057733,-0.09017208776294568,0.11626652619863455,-0.23565722378217585,-0.5225280853001859,-0.1997186465710453,-0.14136291891794206,-0.4106975,-0.5179893280565843,-0.06230737403505111,0.07449129616086708,-0.33928203625692793,-0.5160594547102189,-0.19896699328116996,-0.15049124647893933,-0.285825756983913,-0.5298963218005699,-0.110135,0.015761029766575684,-0.3678685125659812,-0.51,-0.15883314635335344,-0.14957268749149538,-0.36141127940456436,-0.5079892520794813,-0.462459050046875,-0.51,-0.058164152948553066,-0.51,-0.45416783186133824,-0.5177636414682834,-0.2443499404537818,-0.5116087500000001,-0.1061447228299545,-0.51,-0.3731583569679049,-0.5159763861183625,-0.4005009699050238,-0.5200308180604618,-0.29559238170805546,-0.51,-0.44286284374403206,-0.51,-0.32918905935408965,-0.51,-0.11632935714399574,-0.513278469541668,-0.41,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,-0.04905221758507152,0.33591639814330704,-0.2896402411760833,-0.5131198416579217,-0.03884787161604337,0.366587342491108,-0.41,-0.51,0.005006415691943563,0.1370573201616752,-0.3832060442878954,-0.5144164706650546,-0.61,-0.0033454049334234385,-0.3958940092155261,-0.51,-0.11,0.13234827603784244,-0.41,-0.5063050470561613,-0.11,0.11599593651146733,-0.41,-0.51,-0.51,0.10754756577747349,-0.41024637499999994,-0.51,-0.11,-0.019435572038743194,-0.41,-0.51,-0.17086772919034354,-0.4723741391087158,-0.31515243367559254,-0.5138037852329859,-0.14571768535419843,-0.4686019669579842,-0.41,-0.51059625,-0.43007349198430683,-0.51,-0.3135179969672073,-0.51,-0.0985547177816165,-0.51,-0.41,-0.51,-0.3813831046691355,-0.51,-0.33816338056102907,-0.511315125,-0.51057375,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11101506750476817,-0.51,-0.41,-0.51,-0.09457833640531936,0.3482868739613436,-0.41,-0.51,-0.5579128681920755,-0.14818769851997404,-0.36532111293442115,-0.5120635886724358,-0.16,-0.05408790233653394,-0.38652820628073165,-0.5123330945715604,-0.14607989212586756,-0.15003805120637687,-0.41,-0.5260008950056247,-0.11,0.08068340943453768,-0.3892932293646962,-0.512353614716594,-0.11482703154834141,-0.1205179695756953,-0.3732864047877546,-0.5114268375,-0.11,-0.01,-0.41,0,0,0,0,0,-0.1653943520898699,-0.4967963357070228,-0.39176441326650296,-0.5102371871530547,-0.51,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.51,-0.61,-0.51,-0.34680208726653877,-0.510135,-0.11,0.32217082520297946,-0.41,-0.51,-0.11,0.1431423489941426,-0.41,-0.51,-0.11,0.11143622420349561,-0.41,-0.51,-1.01,-0.01,0,0,-0.11,0.03484168648215675,-0.41,-0.51,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.2782611180214919,-0.51,-0.41,-0.5286819314105112,-0.111132875,-0.51,-0.41,-0.51115875,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51012375,-0.41,0,0,0,0,0,-1.01,0.17092713359358663,-0.41,-0.51,-0.11,-0.11091420080323608,-0.41,-0.51,-0.11,-0.029101175416333783,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,0.01995266766753595,-0.41,-0.51,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.14794933298390225,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.5065058438394796,-0.51,-0.330782875917803,-0.51,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.03065450597421116,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,-0.005579943709500846,-0.41,-0.51,0,0,0,0,-0.61,-0.010833943437361613,-0.41,-0.51,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.51,-0.3664004407283031,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.61,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2459679917928035,0.3204094803055984,0.4427737945043721,-0.354676999724083,-0.06513736332936826,0.11680966111309027,0.21531308414706238,-0.44114760670746417,-0.028128578862470575,0.10560393963953049,0.42907075475393763,-0.46235416783490196,-0.11,-0.01,0.45766476721858906,0,0.04263889569647665,0.12152688410625981,0.3889611981606886,-0.484529780936309,-0.1408819811489927,0.04938268660797528,0.20550037844560953,0,-0.11,-0.01,0.20683548686398517,-0.51059625,-0.07654652984301719,-0.01,0.29498140298542774,0,0.06284624857225121,-0.42984812740178596,0.43867750942461026,-0.48841165665531144,-0.07357070846224259,-0.51,0.42622242464712595,0,-0.052510246417239455,-0.51,0.4456857944207294,-0.51,-0.11,-0.49178304640687154,0.381320452741191,-0.51,-0.08948757652409503,-0.4686709000417165,0.18103624416413167,-0.4895881423770417,-0.11,-0.51,0.37311105806465583,0,-0.11,-0.48666004458140666,0.3408974503430755,0,-0.09327827793347368,-0.51,0.2385256047636022,0,-0.17582029428855558,0.3758116918645437,-0.02080721888463085,-0.5068367086083098,-0.07766114660427194,-0.07959640252815504,0.05749828279074893,-0.5075519879958417,-0.03536784474316032,0.053037149093615524,-0.03727812325718294,-0.500797759327399,-0.11,-0.0918825304675403,-0.05391345022974281,-0.503752947439931,-0.51,0.023891781220219517,-0.01216078014044416,-0.503761358168709,-0.11,-0.029895362285808354,-0.014921714218028011,-0.51,-0.04646973188640124,-0.023867270790268614,-0.032289850370925806,-0.51,-0.077765844010618,-0.03374630631001864,-0.007216123234663387,-0.5099546864756214,-0.11,-0.4662849350966664,0.08304519551434852,-0.5121433040658492,-0.11,-0.51,0.05796316936276412,-0.51,-0.11,-0.51,-0.02395835592625365,-0.5119600030344754,-0.10208300083134872,-0.512025,-0.06796996218810512,-0.510246375,-0.11,-0.51,-0.017403754194535024,-0.51,-0.51,-0.51,0.08202120200182525,-0.51,-0.09264622937008035,-0.51,-0.0336181170000179,-0.51012375,-0.10167899420696137,-0.5173202725987206,-0.08938668399384758,-0.51,0.0955217754725507,0.08452511263938839,0.378920545354218,0,-0.07037709927273111,0.05570342811324803,0.21978301880318576,-0.51,-0.03393631260628652,-0.034406602212370456,0.022968527360530032,-0.5118751275959985,-0.11,-0.01,0.057744610563124674,-0.51,-0.11,-0.01,0.067594561382551,-0.51,-0.11,-0.01,0.06278526946325552,0,-0.04004249510394068,0.06295033649579661,-0.03750521600892985,-0.51,-0.06807592321804945,-0.031077468161746502,-0.03211243877148447,-0.51,-0.11,-0.473212265525043,0.3591549826210519,-0.51,-0.11,-0.51,0.32735600819747235,0,-0.11,-0.5065945463296958,0.021261818390086017,-0.510741375,-0.11,-0.51,0.07224237399572069,0,-0.11,-0.51,0.08630325339288317,0,-0.11,-0.51,0.0874707364865589,0,0,0,0.07526027543706694,0,-0.11,-0.51,0.0912023995029669,0,-0.5082623617024529,0.3506434008601215,-0.01865133478732147,-0.51,-0.09091189369565351,-0.07827888353144946,-0.02520777155070926,-0.51,-0.05327784707228262,-0.009670055384610951,-0.046750917671086585,-0.51,-0.11,-0.06408881091898826,-0.06381887108884043,-0.51001125,-0.11,0.06290998724355217,-0.028250844395809126,-0.51,-0.11,-0.0345541874841822,-0.021716920931135253,-0.51,-0.11,0.03908887057385652,-0.0406814391910126,-0.51,0,0,0,0,-0.11,-0.481305608661154,-0.05221499334731179,-0.51,-0.11,-0.51,0.0751223264645734,0,-0.11,-0.51,0.09140932527849535,0,-0.11,-0.51,0.09,-0.51,-0.11,-0.51,0.0055826212633848515,-0.51,-0.11,-0.51,0.043626155956449836,-0.51,0,0,0,0,-0.10242877407442871,-0.5142081115073069,-0.09638714539270454,-0.510145125,-0.8811674903966404,-0.01,0.3526049944549144,0,-0.11,-0.01,0.13719014167784083,0,-1.01,-0.01,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0.24234605546576707,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.51,0.21375813052583065,0,-0.11,-0.51,0.2208394572903457,0,-0.11,0,0.16387878143637416,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.61,-0.01,0.09,0,-0.61,-0.01,0.0914356612424086,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,-0.0074583949855661705,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.12291076107496617,0,-1.01,-0.01,0.09,-0.51,-0.61,-0.01,0.07757475690744034,0,-0.11,-0.01,0,0,-0.61,-0.01,0.09,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0.1428820196641394,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0.0839388063181947,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0.006824497252100117,0.4329499941979621,-0.3114976638792966,-0.512025,-0.11,0.4350249551913981,-0.37082462994851134,-0.49798870945710616,-0.07349813782552772,0.4324295168688773,-0.41,-0.51,-0.11,0.32393220547128865,-0.41,-0.51,-0.11,0.37465799447988035,-0.40048984545799227,-0.511467377472616,-0.11,0.23233609001069588,0,0,-0.11,0.17736649928731532,-0.41,-0.51,-0.11,0.08874151975905137,-0.41,-0.51,-0.17086814100552009,-0.4249779805667643,-0.4007165725162619,-0.510135,-0.4539151871611749,-0.51,-0.34484499158093773,-0.51,-0.13825745050563157,-0.4668290362386365,-0.41,-0.510135,-0.11,-0.51,0,0,-0.17159866447477964,-0.51,-0.41,-0.5284941904222776,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.4456146249571027,0.3480302778548257,-0.4437701869720337,-0.51,-0.20099022792343832,-0.14411975240444422,-0.43120773514062494,-0.510990523710008,-0.46266632167893773,0.006752364636763836,-0.41012374999999995,-0.51,-0.61,-0.01,-0.41,0,0.0033360273315933852,0.011762306040773291,-0.41170999999999996,-0.51115875,-0.11,-0.0106975,-0.41,-0.51,-0.10396365449072291,-0.06175812874357974,-0.41,-0.5117896123642945,-0.11,-0.01,-0.41,0,-0.61,-0.42913694350111986,-0.5239613232284838,-0.51417154687875,-0.21492701680513857,-0.5216184860097115,-0.41,-0.5454713478629594,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.51,-0.51,-0.41,0,0,0,0,0,-0.045016353263158275,0.3652858820030086,-0.41,-0.5121717100992476,-0.11,0.22180046501518022,-0.41,-0.5063521653122735,-0.11,0.0713910101220431,-0.41,-0.51,-0.11,-0.0008152811540209315,-0.41,-0.51,-0.02099117031776314,0.023545700363505187,-0.41,-0.51,-0.11,0.013751320568403566,-0.41,-0.51,-0.11,-0.018133753020037825,-0.41,-0.51,-0.11,-0.01,0,0,-0.14308874236236127,-0.51,-0.39061035084675955,-0.51,-0.11,0,-0.41,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.61,0.2067215306703312,-0.41,-0.51,-0.11,-0.05693883276279497,-0.41,-0.51,0,0,0,0,-0.103648813484375,-0.04233296412593486,-0.41172125,-0.51,-0.11,0.047648416767285234,-0.41,-0.51,0,0,0,0,-0.11,-0.05034413589594561,-0.45120465978307134,-0.51,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.22933595125926792,-0.41,-0.51233775,-0.61,0,0,0,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,-0.51,0,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-1.01,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29129351199543785,0.29212363394855606,0.29774652063868073,0.38403910253330964,0.34964111643282847,0.36563772428512425,0.5368209391766721,0.3467192217352836,0.24644206793174034,0.3865747208125025,0.5360099260434517,0.3372431162279544,0.17740675629221672,0.3432926638653931,0.2642830361499618,0.2788468412506907,0.255977198185791,0.3274598231958874,0.5139263052209964,0.3082447341596269,0.25237449058152966,0.2703964968291158,0.5052109522172152,0.28131073384036087,0.225788395507258,0.26107384222847024,0.5102758469204719,0.270835902769558,-0.07099764667047893,0.1408566682680053,0.5405289022098014,0.12160080357471938,0.31257493458894464,-0.06826007280039022,0.5195037785806882,0.31028579841820364,0.16926293054890895,-0.15611179602350445,0.5228359420761388,0.306102096147653,0.2219466532814791,-0.18822511463772648,0.5379325858972087,0.2971173181024343,-0.022625432692839224,-0.3600568523402342,0.5422576857097083,0.06380049700465482,0.0864769064428612,-0.17995671026895146,0.5142867332793823,0.23811254910181176,0.08099725160860989,-0.3143490779379796,0.4764604140309816,0.12474693200039669,0.05367307288344342,-0.3048627380095824,0.16644323472220884,0.11869653463252386,-0.06510945408039213,-0.51,0.49340221350516167,0.029365457466629975,0.24875733017300425,0.37345513458191204,0.5283106647362815,0.3435878627751048,0.07499154496275948,0.3338365815786865,0.5072283822214342,0.3308548670683413,0.21102093331020333,0.34549873428576566,0.46952015969790467,0.297523996973615,-0.061322146887659454,0.12276343028632972,0.525206439170815,0.060700189826624264,0.17735047651404495,0.281083661360696,0.5270850829220333,0.3780190305714144,-0.18468489457312023,0.0951912829818161,0.5231674434308162,0.12341619873194437,-0.12446147460566885,0.057594924138438565,0.5041275497920366,0.1981767519684393,-0.49178382713388086,0.025322074662184585,0.5013967748536938,-0.01,0.11724831606474333,-0.28789733490212965,0.4999002296599969,0.25711026147369714,-0.05080358417285103,-0.3960559109504894,0.5249676695670079,0.026567392788960933,-0.11,-0.4422868116099259,0.5053247274436528,0.027660773633618588,-0.11,-0.51,0.5415531402952052,0,-0.4407850176908455,-0.4709550285038682,0.38894535485728104,0.11127645040893187,-0.020312162501547538,-0.4250301695615206,0.3512968386553588,0.022949148577440147,-0.11,-0.49462986799201303,0.5256011228594746,0,-0.11,-0.51,0.3845867684317711,0,0.18405082311283108,0.3291155354312369,0.20156138733852333,0.20498562126499864,0.13149371310585742,0.2932251413340542,0.48874073660844186,0.20087521485167684,0.20870773352913335,0.24976736873617894,0.44648462619634527,0.22498847239921568,0.029372629993574203,0.1828011161400588,0.47378284477230925,0.1646551033457539,0.06872007981746145,0.278938083419764,0.19473439643811621,0.1930222389194165,0.09618360833775552,0.36651401361501135,0.13154142462228785,0.17948166938050522,-0.18382771376391044,0.28212873258204296,0.1240097734247967,0.13632518357667545,0.07353731411335199,0.30074923308469637,0.07835445778353214,0.07918520923798121,0.20731102498819065,-0.2696768427507032,0.49545044458967563,0.2025804725105925,0.00589794521900152,-0.4129713915780932,0.4867146748011513,0.08444201737099696,0.2462092894921517,-0.3644171433367302,0.4725303210352795,0.1384458166620457,0.010048793215936339,-0.42752219429700394,0.20858705395151292,0.015381092940737145,0.025745215047003528,-0.4125156347658657,0.1716279859786451,0.20815545385804987,0.0722978506729165,-0.43814428672847694,0.42188174510794474,0.048210256073974556,-0.06497180206015427,-0.4943157322447931,0.43127651815815293,-0.01,-0.06728079792229323,-0.51,0.07973269552339599,0,0.22454220003459918,0.2795964091037519,0.48227356325429976,0.2475003508289611,0.13944625173708808,0.050222265271806676,0.3670244407268479,0.1010788329243054,0.13475605293329976,0.18686766470434085,0.44509495986542874,0.11827148135003099,-0.030998424731893723,0.1631729788970644,0.40985591801276017,0.04954898822383677,0.0807139975446689,0.15353617106083184,0.4117467553844036,0.10146906415632406,-0.2866819454754604,0.061927628340794114,0.07724220536903961,0.2420006449837205,-0.49196560898824726,-0.01,0.5117126869051005,-0.01,-0.4906719650554914,0.0008306368841786626,0.3490679020978622,-0.01,-0.030173936272858796,-0.4308416446738841,0.4768687487152296,0.03840931756620062,-0.1050135577450331,-0.47062282917406656,0.39069356425870194,0.019730602217864886,-0.012777212415461203,-0.51,0.42031597267031817,-0.01,-0.11,-0.51,0.3736497681551874,0,-0.5162154639429424,-0.48202809708081185,0.44590791024148524,0.040488354354285064,-0.11,-0.512025,0.3725251386591913,-0.01,-0.11,-0.51,0.36909383532514556,0,-0.11,-0.51,0.3056365168936218,0,-0.13135270018160106,0.0863822245336962,0.4522369117606655,-0.01,-0.10618676317308123,0.078463005619206,0.5045280817289888,0,-0.8810147480193014,-0.01,0.4260582069288762,-0.01,-0.11,-0.01,0.4478642090692364,0,-0.16854313388006087,0.0335815898894273,0.4021093100405907,0,-0.523110045062676,-0.01,0.3795540434172424,-0.01,-0.11,-0.01,0.3467462323062871,-0.01,-0.11,-0.01,0.13845432447691547,0,-0.11,-0.39490315234047446,0.5246155189242095,0.02935488265954482,-0.16059625,-0.51,0.45690156866350967,-0.01,-0.11,-0.51,0.44224543125673166,0,-0.11,-0.51,0.31310164017232844,-0.01,-0.11,-0.51,0.44026768736487837,0,-0.11,-0.51,0.27422488828490377,0,-0.11,-0.5023387500000001,0.1601116614181487,0,-1.01,-0.51,0.13750301234246098,0,-1.01,-0.01,0.5188379435966152,-0.01,-0.11,-0.01,0.49092373212607204,-0.01,-0.11,-0.01,0.5024786871626089,0,-1.01,-0.01,0.2364417603505991,0,-0.11,-0.01,0.4470324081386872,0,-0.11,0,0.24810383571465913,0,-0.11,-0.01,0.2960008156937221,-0.01,-0.11,0,0,0,-1.01,-0.51,0.4047754880799352,-0.01,-0.11,-0.51,0.24571721012952635,0,-0.11,-0.51,0.11704209224934192,0,-0.61,0,0,0,-0.11,-0.51,0.13870028574987073,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.051660953924556025,0.420518735820647,0.043789428856079816,-0.11,-0.01,0.3912069188218456,0,-0.11,0.026230544856303842,0.18894910428679132,-0.01,-1.01,-0.01,0.197015608120994,0,-0.11,0.030094130313920636,0.2666391254387407,-0.01,-0.11,-0.01,0.21574342802928972,-0.01,-0.11,-0.01,0.1936631556070705,0,-0.11,-0.01,0.127286935612148,0,-0.11,-0.51,0.42119422129502104,0,-0.11,-0.51,0.11897085795097045,0.011749668400562898,-0.11,-0.4602390827465945,0.1343754623526312,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.12301494269914805,0,-0.11,-0.51,0.09,0,-0.61,0,0,0,0,0,0,0,-0.07178942721887102,-0.01,0.262327609253301,0.03748086525759488,-0.11,-0.01,0.22026203907742561,0,-0.61,-0.01,0.2632298766257303,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.2514190969220509,0,-0.11,-0.01,0.11879478153757625,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0,0,-0.0962295455146493,-0.51,0.12858002416757722,0,-0.61,-0.5455164875772452,0.1356848910937421,0,-0.61,-0.51,0,0,0,0,0,0,-0.11,0,0.10556347269899295,0,0,0,0,0,0,0,0,0,-0.11,-1.01,0.10739863313887256,0,0.09603327817398276,0.4564857093015368,-0.017312818651301687,0.2489081331363294,0.1227337040389117,0.4578421258500287,-0.0794707443347352,0.23301568443362744,0.07671391172873047,0.4599656478165882,-0.12869342563022504,0.26901357074304083,-0.08047385124292358,0.44647955896874947,-0.2777165560545063,0.021740034967587862,0.167458603507318,0.44559580993169356,-0.14444833194158707,0.30092131783260895,0.049177081459730904,0.41701261878735957,-0.27322516855564255,0.1953894562272952,-0.20468434324298226,0.4108654431298611,-0.3655064909269199,0.13262917574627725,-0.0921254041835859,0.4073799182272201,-0.41,0.017178816028612605,-0.045629711688330965,-0.14830323029685494,-0.013134525839874156,-0.050236263480000584,-0.1203594498863365,-0.26518947899907974,-0.20235094533556056,0.06228105472431743,-0.038851058700888244,-0.37420639689309554,-0.23627695459172063,0.02130826932654638,-0.08049147291206626,-0.45899071069761205,-0.2975808973952785,-0.033229566512948006,-0.13461231973006696,-0.34670317192404837,-0.37544061655617633,0.019324838798820035,-0.09576090774728749,-0.4321150970604972,-0.24651662575287173,0.03453317745711929,-0.14375704286321736,-0.4874904918806634,-0.4033925372878134,0.028835567313918026,-0.08513147672990809,-0.51,-0.41,0.02153293385622976,-0.1657931723697264,0.3915838335837408,-0.11859940600463362,-0.0019398535929806128,-0.10423894164702271,0.030212061288461996,-0.008128243099948857,0.02860608741756442,-0.04036898158135693,0.04184582428439425,-0.02239350993635884,0.00830113737514641,-0.00839096869817898,0.056484459177894034,-0.059169955765991974,-0.023196896013469644,-0.009934451853025779,0.11991841348370436,-0.09882210063708216,0.017142025698330347,-0.27979490658472084,-0.028791059404293457,-0.14224558008579846,-0.005443234021206379,-0.0355626926614267,0.0260628142283117,-0.26670803388921244,-0.00471262055156082,-0.32347033179275075,-0.05956107352202782,-0.3873041956533867,-0.008848006060611983,-0.11366975417665048,-0.3190773857798307,-0.21282158454102806,-0.05690510331887884,-0.106900087066308,-0.4852430225308987,-0.289310773069004,0.035469278114900686,-0.11,-0.5111475,-0.41012374999999995,-0.009314452729027594,-0.11,-0.51,-0.41,0.015948780044127586,-0.08307088065745696,-0.51,-0.41,0.02090364886926717,-0.11,-0.508723749236034,-0.41,0.0066081437646466415,-0.0950464517011465,-0.51,-0.41,-0.017794905667564625,-0.11,-0.51,-0.41,0.00019695012274200015,-0.003983494364036163,0.35951857658268205,-0.13133160242479203,0.07251115873763192,-0.1165131875282859,0.3625368450698886,-0.2538890281251467,0.02256688582316338,0.17115768548778493,0.035468140126736776,-0.1879778544932317,0.038223776774462426,0.012626138811252234,0.04069425977609439,-0.0649664662521997,0.038797686361755485,0.053405473689243824,0.0830606984184521,-0.08974028787066204,0.05951736976250089,-0.03755237961336326,-0.0022964508378280927,-0.3148553247310043,0.08359207255699297,0.05420741463502987,0.08466676321249335,-0.23100667383343942,0.047767219088647866,-0.17925462769654307,-0.0005900111954369224,-0.24127127687691752,0.050155574683519555,-0.09739235635408633,-0.326513179360572,-0.23698474905298358,-0.040332218415848525,-0.08555605153889538,-0.47670204635524366,-0.2814423486236053,-0.028198063587199534,-0.11,-0.5077970564589003,-0.2888148241225304,-0.03403422789110895,-0.11,-0.51,-0.3665307659403527,-0.04491616597083525,-0.13592804953657278,-0.46916826657785604,-0.41,-0.06157736946200519,-0.08317093006482476,-0.51,-0.36608092629068467,-0.06115138274117127,-0.5420667678599473,-0.5100201016944346,-0.41,-0.03128400693031891,-0.11,-0.51,-0.41,-0.004844441478002317,-0.04363255536045449,0.3305432222219531,-0.41,-0.006448212737059788,-0.047570691420047065,-0.012107940154729305,-0.2072928653067608,-0.026076516131502928,-0.05120422735617779,-0.0015169962158901413,-0.2216149771777175,-0.01938425660953333,-0.11841766823450353,0.01782118242066499,-0.29453438396800646,-0.026215901785675125,-0.00288516791809134,0.08639327821510083,-0.29241697334084543,-0.013222606323274896,-0.058441329494519856,-0.04662459190221851,-0.3269780524838892,-0.030587912751533452,-0.09899715392670129,0.0006960182728988004,-0.4043917026934716,-0.015585307708987393,-0.15335042294002466,-0.05051964310697311,-0.41,-0.023792091441497094,-0.10593461138486575,-0.4051636291750225,-0.41158499897671347,-0.024718996261694392,-0.11,-0.512201625,-0.41068625,-0.031413449614756755,-0.5527047755809442,-0.510135,-0.3865610647513941,-0.017095348176634544,-0.19128467404499808,-0.51,-0.41,-0.05578974961478498,-0.15231354604012629,-0.5108526612001125,-0.38261381362312213,-0.058133227133929204,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51265275,-0.41,-0.03811389400018824,-0.11,-0.51,-0.41,-0.09974898316046675,-0.07468931787958404,0.4416466748277581,-0.41,-0.01,-0.11,0.3272102573963942,-0.38567285731502315,-0.006483485483422676,-0.11,0.367790228385894,-0.41,-0.01,-0.61,0.20555749499112622,-0.41,-0.01,-0.11,0.313450452506267,-0.41,-0.004419710317495286,-1.01,-0.01,-0.41,0,-0.11,0.12991072700259346,-0.41,-0.01,-1.01,-0.01,-0.41,0,-0.11,-0.51,-0.36540394087630457,0.00863452037260334,-0.11,-0.51,-0.41,-0.02586889325602401,-0.11,-0.51,-0.41,-0.027868267849502353,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-1.01,-0.51,-0.41,0,-0.61,0.3148305658332187,-0.41,-0.012213038579898307,-0.11,-0.020697331947106733,-0.41,-0.005681580382609155,-0.11,0.08095148347002218,-0.41,-0.01,-0.10474417951759175,-0.020954001079020852,-0.41,-0.01043172696734683,-0.11,0.042510924579823695,-0.41,-0.010688087514338692,-0.11,-0.058401783853854077,-0.41,-0.02255240771383557,-0.61,-0.019209305912929728,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,-0.035798339073497845,-0.11,-0.51,-0.41,-0.01076371504662168,-0.11,-0.51,-0.41,-0.017570674592653115,-0.61,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.28047090810351394,-0.41,-0.01,-0.11,0.056966037864399105,-0.41,-0.01,-0.11,0.00852778116388051,-0.3659094320811234,-0.01,-0.11,-0.021532919473685373,-0.41,-0.01854561015992633,-0.11,0.017427537606992383,-0.41,-0.01,-1.01,-0.01,-0.41,-0.01,0,0,0,0,-0.11,0,0,0,-0.11,-0.4834035712201427,-0.41,-0.016086515449074898,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.1560434957229,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-1.01,0.20985820468550107,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,0.017150595716487197,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,0,0,0,0,0,-0.61,-0.01,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,-0.03795435895091816,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0.20362165563434168,0.22352502924624282,0.4620140179639364,0.22847044694713822,0.21087227166389252,0.3805439432938504,0.23569903050858895,0.22458972341868785,0.201890421612543,0.2867633913657473,0.4281526606969731,0.23458607501493234,-0.06383482651941311,0.07604192811696142,0.4837842229311653,0.10344025628905548,0.1879228494000385,0.2783418939940246,0.1798934975963678,0.19684754367958768,0.12102733531733381,0.17574054349594254,0.3638060523405169,0.14668387333437613,0.09009385594523028,0.3289809705688107,0.19717891956053518,0.166761980565054,-0.07666043186079002,0.21264841608471508,0.09927082254527139,0.08086674930861837,0.16386662880938963,-0.17513319074713202,0.35693949015116067,0.17374776585191462,0.07071743953934495,-0.4043123374255221,0.4430266502557369,0.05159219673160542,0.03890624600778422,-0.34900573680234426,0.44603653266888366,0.14900782724360043,-0.61,-0.50290125,0.46136875056194615,0,-0.19720909333919961,-0.4584868537687053,0.30956633029195463,0.09280205184582321,-0.11,-0.44887876331952015,0.23889923664775878,0.019852063784110002,-0.11,-0.47282967339185394,0.4039050981530267,0.020091085165029575,-0.11,-0.51,0.3879240245204802,-0.01,0.2132939528039627,0.386361177251458,0.046413559901068414,0.050714024171680666,0.006570894112913813,0.006888611037487421,0.022253507999361044,0.0066906851259574355,0.21134023509384614,0.057886628722138386,0.018251212826799177,0.03343779113169342,0.009988486544776923,0.001021506954579328,0.009736358806512906,0.01006643878874042,0.1994085585373271,0.11814548005502153,0.016746588744004164,0.07246210193047044,0.13658764157167522,0.037107394249929586,-0.005917129958798519,0.03576874715168286,-0.012171567930391598,0.02942858711420239,-0.015862359169866804,0.030581144058726768,-0.06388926351012664,-0.019438482719727045,-0.019493903008718446,0.08227537828214046,-0.24583776082744663,-0.40794368611196313,-0.02333544216593885,0.022473930555710876,0.0036318529338311627,-0.49268979597060303,0.04244642886237423,-0.014939089034517669,-0.026317370766421225,-0.5011483904079593,-0.03410353285257319,0.013934172618068704,-0.11,-0.5106975,0.04396791058919539,0,-0.06883913473956339,-0.4828818658350413,0.01379021688397934,-0.03338421439765728,-0.11,-0.5117507677946105,0.005729559915128324,0,-0.0818180894486711,-0.49877309469234815,0.0008138226292588855,-0.01,-0.11,-0.51,0.07361976984910007,0,0.11516500945949322,0.34839691225546665,0.24647841587920727,0.08607324908774774,0.03663542758512646,0.32080933157234925,0.16404862600621695,0.007875601044341375,0.06242897115100922,0.11894397303172918,0.05800578477565916,0.07619187105655256,-0.06130992924353696,0.009438297420540375,0.014527880472656834,0.12259410303344886,0.053718342685885406,0.13280467364158716,0.04207512270916066,0.052359849369989886,0.005884763169000627,0.021329134645928727,0.07203737013942417,-0.01,0.01775643716589424,0.10468348000244479,0.007188996197068941,0.05210987035282867,-0.11,-0.004877418044940558,0.04253375779880517,-0.01,0.06152737008580707,-0.3479767375712296,0.3337091889713311,0.031486231457204784,-0.5126058130940583,-0.4636152126657511,0.39434866667948393,0,0.003041759926750015,-0.507295179226039,0.0698170943128684,-0.0013182153009978102,-0.06994893722721214,-0.51,0.032922183984416264,0,-0.06357466483959388,-0.5061446877701203,0.08093103974383498,0,-0.11,-0.51,0.05066193395131432,0,-0.61,-0.51,0.05294433760432584,0,-0.11,-0.51,0.06431356495304898,0,0.023991066643198805,0.35682585656810334,0.0035720272381966588,0.007059115129190233,-0.03624963382085995,0.05604586264407898,0.004988201042375331,0.003979025394018587,-0.012941440656438208,0.11418096433174503,0.010684194801034984,0.010970254163279075,-0.037261739715865896,0.020052358318971904,-0.01967039874250781,0.011178307965058561,-0.059733348533343125,0.07917459744797138,-0.022383298802458314,-0.00024428028110524535,-0.07002548754239055,-0.018753146131875526,-0.02741813026721891,-0.002689437107124576,0.12554893189126995,-0.03094237666875224,-0.033299319700363414,-0.0019309649558934298,-0.1616462880422432,-0.013148520225831434,0.004574033249452312,-0.012772447116292093,-0.06883194939723544,-0.4397656054743979,0.0030396757458416475,-0.03698094415472505,-0.11,-0.49944531603163916,0.006402997110868436,-0.021732602385218038,-0.61,-0.51,-0.02581524246227279,-0.0415337207312202,-0.11,-0.50436900061349,-0.02888205430848396,-0.02871187329394394,-0.11,-0.5052323134071912,-0.01724475903999045,-0.027776039365241298,-0.11,-0.51,0.0017036605330176188,-0.01,-0.11,-0.51,0.0892485,0,-0.11,-0.51,-0.011212188787750618,-0.01,-0.034241803794631966,0.054231420790223965,0.40380158113597936,0.021704213743756667,-0.11,-0.01,0.3379556758333151,0,-0.11,-0.01,0.35432008192019127,0,-0.61,-0.01,0.12886616512595397,0,-0.11,-0.01,0.2282866914694212,0,-0.11,-0.01,0.13169341602777232,-0.01,-0.61,0.0194581086312988,0.0934766520503099,0,-0.11,-0.01,0,0,-0.11,-0.46808838531703406,0.2788890736697036,-0.01,-0.11,-0.51,0.15423069756927613,0,-0.61,-0.51,0.19323933769405574,-0.01,0,0,0,0,-0.61,-0.51,0.0876676400001582,-0.01,-0.11,-0.51,0.09369664163491022,0,-0.11,0,0,0,0,0,0,0,-0.11,0.3162791544877735,0.027784514701572196,-0.01,-0.11,-0.01216977289331414,0.024315547296449726,0,-0.11,0.054945163778495024,0.022193411957718616,0,-0.07350505126297015,-0.01,0.02883764423550885,0,-0.61,-0.003927376787453794,-0.00029643552018027413,0,-0.19349881976788263,-0.01,0.04441444244213304,0,-0.11,-0.01,0.07686493719242413,0,-0.11,-0.01,0.09,-0.01,-0.11,-0.51,0.056758844424865236,0,-1.01,-0.51,0.07759650692952744,0,-0.11,-0.51,0.07765681278724523,0,-0.11,-0.51,0.09170001885914802,0,-0.61,-0.51,0.07704415678299784,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-0.11,0,0.06875650324010976,0,-0.11,-0.01,0.22580802511609,0,-0.11,-0.01,0.09,0,-0.61,0.021771677045077292,0.02116470939756289,-0.01,-0.11,-0.01,0.07653754622716269,0,-0.07578673077631956,-0.01,0.07266706537711147,0,-0.11,0,0,0,-0.11,-0.01,0.06388013014752161,0,-0.11,0,0,0,-0.11,-0.51,0.13310200973091513,0,-0.11,-0.51,0,0,-0.11,-0.51,0.04954219168759133,0,-0.11,-0.51,0.08048196077933421,0,-0.07503081316595141,-0.51,0.08078989937285012,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,0.13296945285828737,-0.01252888860159014,-0.01,-0.61,-0.01,0.0425346699789757,0,-1.01,-0.01,0.053337281972132555,0,-0.11,-0.01,0.042081240902753024,0,-0.11,-0.01,0,0,0,0,0,0,-0.61,-0.01,0.07889380706088797,0,0,0,0,0,-0.11,-0.51,0.07347899858529444,0,-0.11,-0.51,0.05240908481566625,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0.09,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0.09214504008755378,0.45111971159750336,-0.18652677076194096,0.16907517586232207,0.032362126624484115,0.44331921772871774,-0.41165160830337694,0.12806284573924365,-0.09276632508768626,0.44173080256718433,-0.4033917566148042,0.10357634587079263,-0.5225561142979253,0.43548946385284865,-0.39072589149082476,-0.01,-0.00943692803382569,0.36609580573727346,-0.36799105645268304,0.09617270994284824,-0.037900539344275085,0.26463784984486777,-0.3561401033193886,0.04626273103099329,-0.07509243241353326,0.347727664249234,-0.4111475,0.061393224548448776,-0.11,0.2642217582928047,-0.41,-0.01,-0.14851645251207973,-0.3728962778100378,-0.31395012826317686,0.026482139102042567,-0.12730634776264482,-0.476244811022139,-0.28606299184170514,0.005738022633330889,-0.11,-0.47875880437521784,-0.40208378686008256,0.023172996920001583,-0.11,-0.4995838264968656,-0.37183397991182154,-0.003517958969982087,0.16205341002198043,-0.42873927678041956,-0.3990561912983595,-0.06099586893641831,-0.08074589958260957,-0.5032427847024272,-0.41,0.00911993568992741,-0.10010888458948171,-0.49973335179280454,-0.41,0.007133415530354681,-0.61,-0.51,-0.41,-0.007485176213574582,0.0012405478755875242,0.3829282424115701,-0.42629676607707473,-0.0029823290285455437,-0.09185019113273737,-0.042325288147562985,-0.46513732010498154,-0.06521993182162385,-0.09120828583098056,0.019640899987844292,-0.4476945363749536,-0.04818960645035161,-0.09700491646715172,0.029091939846106325,-0.4337106898642724,-0.058533728849767805,0.1301716156219543,0.0715321298300275,-0.4302009681322468,-0.0040666203570068685,-0.10053204936661697,-0.037743635885880686,-0.4194410459318305,-0.04857758874997956,-0.314003308809505,-0.05196223984685224,-0.41373299783163586,-0.03819926874931372,-0.61012375,-0.06755778783434581,-0.41022398749999994,-0.067720630482292,-0.5298248898979674,-0.4637614620791049,-0.41080887499999996,-0.020662491462364586,-0.5510134832482525,-0.51115875,-0.41,-0.06136989596341446,-0.09784336074277243,-0.4989090938636159,-0.4176988593385329,-0.0381859341735535,-0.11,-0.51,-0.41,-0.01,-0.06410152816153546,-0.5114625,-0.41,-0.023409116557475115,-0.11,-0.51,-0.4204755013700417,-0.0919598411098487,-0.11,-0.51,-0.41,-0.015046810580891521,0,0,0,0,0.05729526723937254,0.3228882304208683,-0.34920681205748233,0.009052687970333675,-0.0718247959257983,0.3560469640111384,-0.41,0.00006577737690930947,-0.003322354324367255,0.10464882501398078,-0.45114237198712803,0.00926828399605668,0.06069986626123659,-0.010878651491755617,-0.43972692764540855,0.0049128422826468,-0.07429681294757964,0.17882153062998377,-0.4051623655498295,0.0035674138590795195,-0.11,0.1031111375710668,-0.41013499999999997,-0.012196380993621133,-0.03384518948784588,0.09879305615997803,-0.41677185272863276,0.000590593335637903,-0.5276126632990676,-0.01960822074994042,-0.41,-0.01929781746942364,-0.10745530368852682,-0.47450803497472227,-0.4116515178743268,-0.08812671908262869,-0.11,-0.50290125,-0.3783863031263172,-0.06586287548868497,-0.11060428885628887,-0.51012375,-0.4179831759312518,-0.08885291588472535,-0.11,-0.51,0,0,-0.06378324937400345,-0.51,-0.41249238537799154,-0.04132026651775541,-0.11,-0.51,-0.41,-0.05041126380955227,-0.11,-0.51,-0.41,-0.015171780654577843,0,0,0,0,-0.13361534612550965,0.3490817655199931,-0.41,-0.010135,-0.2246699480983182,-0.0811642982626425,-0.4305281758089969,-0.06567692309723565,0.09261247826811983,-0.06256280105080922,-0.4315251614296551,-0.06090230752234353,-0.11,-0.059555846158893685,-0.4210719364773557,-0.060502873903049884,-0.0747409644324794,0.004742616061744649,-0.41,-0.02359506235272826,-0.2373846020124937,-0.06357850898466033,-0.4179190789044292,-0.05969094453875498,-0.09236907395658533,-0.06562364877803133,-0.41,-0.05973758053797998,0,0,0,0,-0.1777315039052319,-0.4619079987722776,-0.4120854209375,-0.04933929609317571,-0.11,-0.51,-0.41,-0.01,-0.11,-0.510135,-0.41,-0.03870918963160253,-0.09270201747876873,-0.51,-0.41,-0.01,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.08321950086040676,-0.21296683859763016,0.36903562926094813,-0.41,-0.01,-0.11,0.1383138972980949,-0.41,-0.01,-0.16217125,0.10641720376239802,-0.41,-0.01,-0.11,0,0,0,-0.11,0.05301012532321515,-0.41,-0.01217017355401104,-0.11,-0.01,0,0,-0.11,0.006712695261177204,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.012326717259986268,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.61,-0.51,0,-0.01,0,0,0,0,-0.11,0.18379800545377345,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.61,0.060658284331381096,-0.41,-0.01,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,-0.11,-0.51,-0.41,-0.036269351649040854,0,0,0,0,-0.61,-0.51,-0.41,-0.022075894212527668,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.521902731217624,0.22495283913296144,-0.41,-0.01,-0.5223003623125078,0.06272225684337682,-0.41,-0.01,-0.11,0,0,0,-0.61,-0.01,-0.41,0,-1.01,-0.01,-0.41,0,-0.11,0,0,0,-0.11,-0.010629967986507567,-0.41,-0.00290125,0,0,0,0,-0.11,-0.51,-0.41,0,-0.20012375,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.51,-0.41,0,0,0,0,0,-0.11,0.14926559910683576,-0.4206443028814426,-0.01,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.31835753718972665,0.3470691768888762,0.49131106026080995,-0.17489146863820307,0.2768931361988232,0.33492692192415574,0.4973026452078915,-0.21065345763965415,0.18611354441437966,0.42797680892754525,0.516845634380163,-0.2812236153071261,0.11691240469912516,0.11628604942752402,0.5086274943400411,-0.32464943482440756,0.1998380337689484,0.24682785315238498,0.4794372667225166,-0.19208815864851314,0.03539687582523594,0.14378068475985484,0.3546800389348734,-0.381909303990824,0.014450054438244271,0.12296838209581937,0.5139220471963751,-0.28972806394105666,-0.04455142169030197,0.0771193462057817,0.5156685845366895,-0.4553064425501616,0.15194061428076103,-0.1864164525891298,0.5447404762950113,-0.3269650960459918,0.04466775259705398,-0.37998520710403383,0.5188063046470905,-0.4007974712538903,0.09593506941569281,-0.3176787366356223,0.5124793178096057,-0.3531274900677484,-0.0651297668265208,-0.4955408537611725,0.5420567255752544,-0.51,-0.0640441989328803,-0.3470441942371511,0.44115292223884917,-0.51,-0.06931966568844462,-0.4677022338854385,0.36572372343210635,-0.5032387386815578,-0.06738222932774826,-0.4472460691548284,0.5279328757087559,-0.4138159685698069,-0.08082876573889788,-0.51,0.47814747209769154,0,0.2883005156862884,0.3573323363048423,0.5231315910474097,-0.30761894685913316,0.006220319315152399,0.09055173236112468,0.5440706916850744,-0.3727270457845005,-0.23835967271544192,0.09111627816766407,0.5302335876721869,-0.43007435755690643,-0.05380331986435921,-0.01,0.5278557782307176,-0.4827449821191277,-0.047637078503058664,0.21536038845494687,0.49172683797523464,-0.3594798236892205,-0.07518102010936012,0.06136197410479275,0.5345322104202628,0,-0.06613224191140876,0.016647676250989403,0.5232828555246073,-0.51,-0.11,0.014571411305537968,0.47853270182482394,0,-0.0414174339433175,-0.51,0.5100061978169855,-0.44279494227585475,-0.35963541756512585,-0.48570565477605776,0.5256691149697442,-0.51,-0.556938746346328,-0.48000747893656026,0.5281706009270957,-0.46897234651408315,-0.0743233439966922,-0.51,0.4687770588728708,0,-0.035450797282751176,-0.4840705558526128,0.5220913371280727,0,-0.07738004532838427,-0.48927898152773097,0.5068638214997917,-0.51,-0.11,-0.49701333635675016,0.4287689509101456,-0.51,-0.51,-0.51,0.30180270366670126,0,0.23184845917743893,0.285750503782542,0.5258924972704356,-0.3942206471330209,0.08103925721683639,0.15363954504447497,0.4288732242911002,-0.43653525947618194,0.038261996612326196,0.2680327555688239,0.38321195872038855,-0.34067769840685425,0.04918300826251266,0.04842285632881817,0.5172690067893134,-0.4863122268324442,0.13383518840816003,0.10036213513149245,0.47956347546130373,-0.35845056430615074,0.04885597197621448,0.06465004828718232,0.34360227855096576,-0.4936290088242222,0.009368747764764304,0.0066326982669230716,0.45698268087153787,-0.4642064406187511,-0.11,0.02561205097785889,0.3963001810288749,0,0.08878241617254981,-0.4479413142731995,0.44820805959863175,-0.4570736237733028,-0.11,-0.4809713259744443,0.5275281812179857,-0.51,0.06649808901629788,-0.4564240234892766,0.454057655696663,-0.47498865742426377,-0.127184808397174,-0.51,0.29727394252327655,-0.51,-0.030730467801354973,-0.47668523203722435,0.4878383012243168,-0.4802645244421264,-0.11,-0.51,0.43945164584405244,0,-0.06903871196388872,-0.51,0.3883436287716699,0,-0.11,-0.51,0.17818479848207736,0,0.09801827608280336,0.2704374477956114,0.4792698430047827,-0.48805647007937,0.008608209557038185,0.06484595418647246,0.48720113423052347,-0.48832030799599263,-0.018243645224258125,0.03596563198158356,0.4764899447950195,-0.4665886660151428,-0.12368235222497484,-0.01,0.395143834138074,0,-0.02393432971207818,0.01995940438792316,0.36293286115866635,-0.51,-0.11,0.013720742270865175,0.4343985879205014,0,-0.11,-0.01,0.40452797399547136,0,-0.11,-0.01,0.3204891661116847,0,-0.11,-0.51115875,0.4480656932308919,-0.51062775,-0.11,-0.51012375,0.43272817101999217,0,-0.11,-0.51,0.4156109855788719,0,-0.11,-0.51,0.3404006034338719,0,-0.11,-0.51,0.37359773824321735,-0.51012375,-0.11,-0.51,0.3024847408688884,-0.51,-0.11,-0.51,0.17900125882596696,0,-0.11,-0.51,0.19063411349385398,0,-0.9674320530080077,-0.01,0.4797246451129729,0,-0.11,-0.01,0.43337937011843497,0,-0.11,-0.01,0.45741818891297426,0,-0.11,-0.01,0.13709206149240938,0,-0.11,0.0351662771628032,0.4708669932558051,0,-0.11,0.03562039359626662,0.20734749516502643,0,-0.11,-0.01,0.17692155942790652,0,-1.01,-0.01,0.09,0,-0.11,-0.51,0.3475351699975696,0,-0.11,-0.51,0.35929201174770364,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,-0.51,0.2639593260894214,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,-0.01,0.43988219720108634,0,-0.11,-0.01,0.36873594044084773,0,-0.11,-0.01,0.39155985067742005,0,-0.11,-0.01,0,0,-0.11,-0.01,0.1776106907961118,0,-0.11,-0.01,0.1713547053602396,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.51,0.3730653619817486,-0.51,-0.61,-0.51,0.1340282386993103,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,-0.51,0.17175005395854498,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.61,-0.51,0,0,-1.01,0.029191647401609518,0.35261579055794234,-0.51,-1.01,-0.01,0.13680957174431022,0,-0.11,-0.01,0.1655306204660597,0,-0.11,0,0,0,-0.11,-0.01,0.0922665064825419,0,-0.11,-0.01,0.09,0,-0.61,-0.01,0,0,0,0,0,0,-1.01,-0.51,0.23691441949584852,0,-0.11,-0.51,0.16476257986346923,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.61,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.01,0.19735900293256486,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.01,0.09,0,-0.61,0,0,0,0,0,0,0,-0.61,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-1.01,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0.07228280248688884,0.4635078344114021,-0.07860622335046287,-0.3664215024206596,0.003341615490596365,0.45340252339748033,-0.32274164799405614,-0.44409351678550985,-0.039919863191651514,0.44700719255863847,-0.2820927129913614,-0.5023387500000001,-0.07410409015824218,0.44800387948252585,-0.41,-0.51,0.02013059870149246,0.4303390275408129,-0.35120370286847324,-0.43607086489388447,-0.0716928039116551,0.43144916381250936,-0.41,-0.498508941673409,-0.5324992739869465,0.4081983808526129,-0.41,-0.5118008438787045,-0.51,0.34004450665208086,-0.41,-0.51,-0.3113798914895659,-0.3790179261439043,-0.016120990956538142,-0.4992161956786653,-0.16054822202895494,-0.46699301437455965,-0.3639765295351688,-0.5001084242178253,-0.4484181096980181,-0.43244157119832505,-0.1614626395232473,-0.506150171918168,-0.61,-0.51,-0.28618293903798653,-0.51,-0.33926877027978547,-0.4595288243943761,-0.31550081687843207,-0.49471250306912223,-0.1529242356376762,-0.4735950409491443,-0.41,-0.51,-0.4711193062235388,-0.51,-0.40441042903243296,-0.51,-0.10963838257430045,-0.51,-0.41,-0.51,-0.03767203608486705,0.3875038218782423,-0.33079212756727194,-0.5036334764637194,-0.4106794408924798,-0.07812108031216311,-0.22888152418848848,-0.49230260485740523,-0.08955677140825527,-0.03485861973811974,-0.2387191382156554,-0.5084337847907706,-0.29870318235332133,-0.15224990607716876,-0.3396056069572968,-0.5014660543979391,-0.0713203008528629,0.19949733214067752,-0.28904656910973453,-0.51,-0.09065460013545919,-0.12625681122124838,-0.2902214829027946,-0.510135,-0.1017128889334998,-0.07461758453075967,-0.41,-0.5031029808618099,-0.4181699309344476,-0.15449216328696358,-0.397095641861416,-0.5133409642127902,-0.15266023349138785,-0.49781137114253154,-0.36963331950425343,-0.510246375,-0.4565463899966449,-0.5206876554495184,-0.36437611427651245,-0.51,-0.4481156926045523,-0.51,-0.18904251619040766,-0.51,-0.1111329399880723,-0.51,-0.41,-0.51,-0.40644955806547894,-0.51,-0.3697366034581856,-0.51,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.06995056055483666,0.34628390394849523,-0.2849156176963924,-0.5008125772718048,-0.0738234891632611,0.35104861034373624,-0.41,-0.49991252281018234,-0.029864577079888845,0.048477407774661876,-0.3247028066431057,-0.5058910075470241,-0.10290125,-0.007670130723673123,-0.41,-0.5123254227891193,-0.006895206362451278,0.14460245834352037,-0.4089640730496864,-0.4953578070461455,-0.07538704337883129,0.19750463013681685,-0.41,-0.51,-0.07532028000795955,0.11444085602388712,-0.41,-0.51,-0.61,-0.06579789961329117,-0.41,-0.51,-0.4244165785674452,-0.47477436316134625,-0.16077233194997403,-0.51024525,-0.51,-0.51,-0.3215568360177867,-0.5085428659426585,-0.51,-0.51,-0.3306871436066222,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,-0.11,0.3440364633055217,-0.41,-0.51,-0.10513221173063331,-0.12063592495573272,-0.4119451638060899,-0.49845805379065494,-0.08716609643827784,-0.013129524154331357,-0.41,-0.5095187686665672,-0.11,-0.01,-0.41,0,-0.11,0.14565196688566429,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,-0.019210312670726894,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11579759948185574,-0.51,-0.41,-0.51,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.51,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-1.01,0.3158320821411253,-0.41,-0.51,-1.01,0.03465483471409993,-0.41,-0.51,-0.61,-0.01,0,0,-1.01,-0.01,0,0,-0.11,0.10802410694357398,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.51,-0.311830762528234,-0.51,-1.01,-0.51,-0.36564649506033436,-0.51,-0.16059625,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.51,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,0.02918702403420432,-0.41,-0.51,-0.61,-0.01,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,0,0,0,-0.61,0.06949439632436051,-0.41,-0.51,-0.07962959813587674,-0.01,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,-1.01,-0.01,-0.41,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0.18451990010119967,0.33751951458411916,0.28690360230518996,-0.41374228570561966,0.04884056592401554,0.14795575679776737,0.4785530371881011,-0.48220765888923606,0.10740174126217625,0.21971938815009157,0.44909189850129816,-0.4647005648900785,-0.11,-0.01,0.40408724981052724,0,0.1018405742022385,0.14024909994103987,0.39646910260365326,-0.4466631608490053,-0.11,0.10574514432044009,0.20753261098984072,0,-0.018827005872628345,0.18122502251216874,0.09593334604081803,-0.4894614441585863,0.00631664835373303,0.02700328340104991,0.14935805268694782,-0.51,-0.028303634618012254,-0.35203991807648577,0.4557553360607345,-0.47742593561264585,-0.03169859929955196,-0.4684432908918971,0.43163479865585647,0,-0.11,-0.4754356848078256,0.473376047908694,0,-0.11,-0.51,0.33640837866194595,-0.51,-0.06550250486032394,-0.5029102263300235,0.3736778544923086,0,-0.11,-0.51,0.31551844778552046,-0.51,-0.11,-0.51,0.3166686704797313,-0.51,-0.07137771951908665,-0.51,0.10240290170369418,0,0.026434640970847294,0.377552526641678,0.004094589398318988,-0.5055714839048681,-0.0600639854789187,0.0037572705754276396,-0.000020448382429496224,-0.504149441253531,0.027890108760805804,0.08564450457520169,0.02653680344367631,-0.48175096987184657,-0.02277847622153434,-0.005722750556036913,0.02353279588718142,-0.51,0.02681961314588971,0.03160676270563332,-0.009445792773218593,-0.5069041431342648,-0.11,-0.01,-0.008574814465975134,-0.51,-0.08015566640445229,0.06559208829712017,-0.012504007899563433,-0.48859612656721907,-0.2276269016001634,-0.040466158529466306,-0.04027091770746942,-0.51,-0.51,-0.4735455995911232,0.050904382410006374,0,-0.10250552874584844,-0.51,0.0499076926984109,-0.51,-0.073632597256358,-0.51,0.07570784401351185,0,-0.11,-0.51,0.06692797992794197,0,-0.11,-0.51,0.03750406121679374,-0.51,-0.61,-0.51,0.08448192847529522,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,-0.02433720449894805,0.10378912563323685,0.175440171914491,-0.5042427938297478,-0.11,0.018965121157593252,0.3692325108110826,0,-0.089207135075858,0.07487362268220393,0.012273851269520235,-0.51,-0.11,-0.01,0.05809378086707928,-0.51,-0.023745073075077207,0.018950611851860734,0.09432676855086006,0,-0.11,-0.0031142548457266392,0.06989650084866066,0,-0.11,-0.005557180709909528,0.03810371774904938,-0.51,-0.11,-0.01,0.06741803257131014,0,-0.026617793537763876,-0.51,0.3473916348637174,-0.51,-0.11,-0.51,0.3494212727150353,-0.51,-0.11,-0.51,0.06093101662111283,-0.5026711014038726,-0.07874449796916146,0,0.0425464716234975,0,-0.11,-0.51,0.07230108813919309,0,-0.11,-0.51,0.08266037999245347,0,-0.11,-0.51,0.05579804819902093,0,-0.11,-0.51,0,0,-0.11,0.3561093317804371,0.015279364127487975,-0.51,-0.03718382676500571,0.017476775131634273,-0.01407657359495215,-0.5041761,0.16381562973353286,0.025212483797478355,-0.0181783645733289,-0.49924408378711493,0.059105047638293946,-0.03093636124016182,-0.01600812643008568,-0.51,-0.11,-0.01,-0.0009585820422724801,-0.51,-0.5365577311785008,-0.01,0.027170345699595214,-0.51,-0.11,-0.01,-0.0029292647906070625,-0.510135,0,0,0,0,-0.05513017934066442,-0.5086933727984917,0.0032065498650332997,-0.51,-0.11,-0.51,-0.007202187459943714,-0.51,-0.61,-0.51,0.0045481773803067865,-0.51,0,0,0,0,-0.03670316334459844,-0.51,-0.025929588217313216,-0.51,-0.11,-0.51,0.08930249999999999,0,-0.07708004227749735,-0.51,-0.00940307647245251,-0.51,-0.11,-0.51,0.09,0,-0.11,-0.01,0.40835269738612845,0,-0.61,-0.01,0.18659008576790612,0,-0.61,-0.01,0.12661124482489597,0,-0.11,-0.01,0,0,-0.61,-0.01,0.09377857348627072,-0.51,-1.01113625,-0.01,0.09,0,-0.11,-0.01,0,0,-0.61,0,0,0,-0.11,-0.51,0.18758695461626637,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,0.16376107956572802,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,0,0,-0.11,0,0,0,-1.01,-0.01,0.07800599554997778,0,-0.11,-0.01,0,0,-0.11,-0.01,0.06397354943458972,0,-0.11,0,0,0,-0.11,-0.01,0.09,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0.09,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.16517630245709414,0,-1.01,-0.01,0.09,0,-0.11,-0.01,0.048297787453223516,0,-0.61,-0.01,0,0,-0.11,-0.004778088479992539,0.08933247575806921,0,0,0,0,0,-0.11,-0.01,0.02572616228768563,-0.51,-0.11,-0.01,0,0,-0.61,-0.51,0.13052946151051134,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.29654142888186197,0.44966836614726563,-0.3006525722733785,-0.510135,-0.039383885874323434,0.42765321262074907,-0.33243775400237213,-0.5029445011755862,-0.11,0.4282215390019021,-0.41,-0.51,-0.11,0.178644722767908,-0.41146249999999995,-0.51,-0.003312701918530024,0.3540766994082875,-0.3994742182412842,-0.51,-0.11,0.09745063927012364,-0.41,-0.51,-0.11,0.13140115264431065,-0.41,-0.500767033525433,-0.09587324128144706,0.030553829217556797,-0.41,-0.51,-0.3410509973819209,-0.478821275556294,-0.20509620555057312,-0.51012375,-0.10230516663231891,-0.51,-0.41,-0.51,-0.16012375,-0.51,-0.41,-0.51,-0.11,-0.51,0,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.07916567856363453,0.37637771138252984,-0.41,-0.5121503302925818,-0.1423022726760724,-0.1256532384819386,-0.4165315530643693,-0.5151012693951202,-0.11,0.08396585345622598,-0.41,-0.5130166383431277,-0.5565851026336446,-0.14834663909260498,-0.4329292610114439,-0.51012375,-0.08832066141857048,0.12918615059367147,-0.41,-0.51,-0.10807303144632514,-0.01,-0.41,0,-0.10247510862988043,-0.0901848117010518,-0.41,-0.510246375,-0.102966240250861,-0.016127119072823465,-0.41,-0.51,-0.13624638130446123,-0.5001238480794541,-0.4220574894417276,-0.504016125,-0.11404245295792823,-0.51,-0.41,-0.51,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.07232238024277661,0.37198030081579514,-0.4074384448416716,-0.51,-0.07202077641673715,0.2833566793926102,-0.41,-0.51,-0.11,0.05972189649342195,-0.41777505067255916,-0.51,-0.10254110069421875,-0.08058456559742426,-0.41,-0.51,-0.03860221949848396,0.10463364066719008,-0.41,-0.5029125,-0.11,0.019718963699034538,-0.41,-0.51,-0.11,-0.012299073656433885,-0.41,-0.51,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,-0.51,0,0,-0.11,0.1806707256203292,-0.41,-0.51,-0.11523761933336374,-0.11383990734994714,-0.4206856324523846,-0.5133473150934158,-0.11,-0.046435188115774476,-0.4204088302043657,-0.5147513509321531,-0.51,-0.044327737520932414,-0.41,-0.51,-0.11,0.04113829899473982,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.1232318116868535,-0.5047345373162134,-0.41,-0.5106975,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,0.03521442767935318,-0.41,-0.51,-1.01,-0.01,0,0,-1.01,-0.01,-0.41,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,-0.4043836766419781,-0.51,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.61,-0.01,0,0,-0.61,0,0,0,-0.11,-0.01,-0.41,-0.51,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.51,-0.11,0,0,0,-0.11,0,0,-0.51,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11685711364480121,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.14973348606534354,0.38283834885733786,0.5229199667458329,0.3450848001601908,0.1970719804784587,0.3425537123920615,0.519526117664411,0.2880066692495085,0.11363427837533972,0.46041479987766976,0.3325506823204879,0.31045120237095625,-0.45073032667903146,0.07130321405116696,0.5340576725795733,0.1629019444892738,0.21819644070349142,0.3401441232783794,0.5418830325413689,0.2930061290878612,-0.03813472477020729,0.19463430378875446,0.5082433335241952,0.06040170473328428,-0.049873668367541146,0.06892077813157495,0.5155068717823731,0.02606860188745435,-0.1337121871994217,-0.01,0.5172303503563578,0.059064842345154724,0.05075271645790936,-0.15833797227647664,0.5352976729855528,0.2351578927148882,0.06931924927102981,-0.43758699354217145,0.5222284927974797,0.13652384831679634,-0.023242306738596542,-0.35794982954853743,0.5362021880305217,0.15806737439239954,-0.11042838217369551,-0.46666675175321576,0.525118747513879,0,-0.25782185344025454,-0.3858483542468344,0.4950806303961931,0.10869425447950257,-0.11,-0.49445000443844567,0.4997864687161013,0.04362662543151543,-0.07479074938434374,-0.44617650737826064,0.46328160072077873,-0.01,-0.0700459440532294,-0.51,0.4871850689351962,0.058159188282251965,0.05510675640728731,0.3330817532659455,0.5161117957191822,0.281110562070612,-0.06676780906270234,0.14480919326768382,0.5108419582941487,0.0987112983682312,-0.15992439158058952,0.22226277458427626,0.4999636327081834,0.0892831522168231,-0.0849362207469979,0.026217182961678548,0.4889836855126562,0.025764502007700668,0.1545355894693985,0.19160393565816336,0.5331921830944909,0.0581040987928106,-0.10996040317549913,0.08247550795922282,0.5003160017971088,0.05886346033764519,-0.09687163223456331,0.08376496800508493,0.49580680997309046,0.0876051752379775,-0.61,-0.01,0.4361552428330923,0,-0.08652616130451425,-0.36005670214047186,0.5077648989481629,0.02481025299313317,-0.06195153231245813,-0.4968706755688285,0.5192129779472532,0.0324981584078783,-0.15335125,-0.51,0.48320593940654266,-0.01,-0.11,-0.51,0.4460253386898426,0,-0.11,-0.4745562005702695,0.4938564406072278,-0.01,-0.06957135541627792,-0.51,0.4752710751587134,-0.01,-0.11,-0.51,0.31290016442804475,0,-0.11,-0.51,0.23106685591327292,0,0.27160804679486794,0.29984275578557607,0.5084706123208865,0.22388049894270595,0.15174211809034807,0.12415493382552042,0.4898555160567921,0.008684768621500619,-0.08621830953539003,0.23694625411378337,0.11099261499990731,0.10827000138563839,-0.03302992522009335,0.0856046714783823,0.4368148136146447,-0.01,0.036907730209381324,0.15525397917423323,0.4295291207704971,0.11588038683039824,-0.03923906516563222,0.1990439519927985,0.025581480682386748,0.104280666924449,-0.06775896646632856,0.29982996528898115,0.09791365452836578,0,-0.07370017244577112,-0.0037243554789306767,0.3692154354413936,0.021716926435007777,0.07133471140969272,-0.3885481132650701,0.46584542940367885,0.061159505761304925,-0.0661244248900921,-0.51,0.5061540674201894,0.04529808568105955,-0.02438990800602696,-0.51,0.4341241160476515,0.0230930781684493,-0.11,-0.51,0.3603570030041161,0.019881620304931298,-0.06292970826418731,-0.463389986820558,0.4819883901497445,-0.01,-0.11,-0.48860788282307105,0.3658556247354717,-0.01,-0.11,-0.4974557272594282,0.3828859749482088,0,-0.052728314868635884,-0.51,0.2700366428470297,0,-0.043819477872723625,0.23500487698612035,0.07188649963649389,0.0790114822825295,-0.06268563234668269,-0.0001777750880851952,0.40700146018779626,-0.01,-0.44402333148805506,0.050480513015602885,0.5008698267150198,0.03796075833555633,-0.10233875,-0.01,0.3973273985211367,-0.01,-0.1713605409181912,0.04299054268323342,0.32706380823349324,0.056935770893417836,-0.08193942466655718,-0.014985078518422788,0.12653220743371274,0.007619526107387378,-0.073783463483311,-0.01,0.30322977878214513,0,-0.11,-0.01,0.16545020062885551,0,-0.11,-0.4981412855988696,0.3620152176072707,-0.01,-0.11,-0.5106975,0.18476926061059598,0,-0.11,-0.51,0.3892724637396742,0,-0.11,-0.51,0.22515636926617186,-0.01,-0.08870796387907665,-0.49349697199981,0.3906041809858506,0,-0.11,-0.51,0.12991382574416646,-0.01,-0.61,-0.51,0.09,0,-0.11,-0.51,0.225296496069647,0,-0.10039215305997241,0.03508805029735483,0.5139479780671037,-0.01,-0.61,-0.01,0.4642413849157304,0,-0.11,-0.01,0.4072905378942994,-0.01,-0.11,-0.01,0.16886721017742654,0,-0.11248240918986198,-0.01,0.4530714854186963,0,-0.11,-0.01,0.21465928688118657,0,-1.01,-0.01,0.3150413434755884,0,-0.11,0,0,0,-0.61,-0.51,0.47479775968856863,0,-0.11,0,0.4209680066553505,0,-1.01,-0.51,0.33338116861061445,0,-1.01,-0.51,0.09,0,-0.11,-0.51,0.2063411366769911,0,-0.61,-0.51,0.09,0,-0.11,-0.51,0.13206092035445055,0,-0.11,-0.51,0.09,0,-0.11,-0.012025000000000001,0.3428716988845019,0,-0.11,-0.01,0.32458480654190885,0,-0.10450714608046492,-0.01,0.32070427435905735,0,-0.11,-0.01,0.13578171794553262,0,-1.01,-0.01,0.17349365276238884,0,-0.11,-0.01,0.2542207943135696,0,-1.01,-0.01,0.09,0,0,0,0,0,-0.11,-0.49852732062380944,0.2700039363239788,-0.01,-0.61,-0.51,0.13235644317571965,0,-0.11,-0.51,0.16778766688171753,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.46225926533185974,-0.01,-0.9464033290651163,-0.01,0.14107322668420827,0,-0.11,-0.01,0.17863521143422023,-0.01,-0.11,-0.01,0.13596557011533913,0,-0.11,-0.01,0.1270709919036901,0,-0.61,-0.01,0.1324419975963548,0,-0.11,-0.01,0.09,0,-0.61,0,0,0,-0.07621011112832751,-0.51,0.22395933401796728,0,-1.01,-0.51,0.09,-0.01,-0.562811628484728,-0.51,0.09,0,-0.61,0,0,0,-0.61,-0.51,0.09,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.5556111603309343,0.02715571986761451,0.16558542856140426,0,-0.11,-0.01,0.20007196816779083,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0.14310567350422318,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.10871314802090452,0,0,0,-0.11,-1.01,0.09,0,0.06201758963838369,0.46009920427044915,-0.11313202309852835,0.21960030999519714,-0.14131056311515686,0.45424430226297885,-0.24256886699504188,0.11614791399087274,-0.03752823740982945,0.4505928753904114,-0.30608650258761755,0.07498447944682196,-0.04572227125446282,0.4439889920294512,-0.3351772441720122,-0.01,-0.10619017710908465,0.4231572627472797,-0.30229170515727555,0.12467557663429168,-0.009717620082822565,0.43143417212246415,-0.3978399415940036,0.021312263386902987,-0.610135,0.41932905793418696,-0.41,-0.0005960933375374639,-0.11,0.34576989215480997,-0.41012374999999995,-0.01,-0.17248421014272824,-0.23300688439166878,-0.021016931756558492,-0.15003060732060217,-0.2533279006396366,-0.21390896150607044,-0.263074729524138,-0.14673816989450986,-0.15958116277847975,-0.29404363587372234,-0.25054369117883357,-0.1532943235295911,-0.10934896237728338,-0.45548376746160485,-0.3588507098150229,-0.15594287795539447,-0.16657484911424777,-0.3941602689192371,-0.2602840852561534,-0.143270053637874,-0.147455414698946,-0.473493441612565,-0.3287598379229886,-0.14980874048798404,-0.13543740263181037,-0.51,-0.41,-0.11044916048732117,-0.10618957030564272,-0.51,-0.41,-0.12705477307347474,-0.05946522110866125,0.38944908572645554,-0.379580867730043,0.00393829575400287,-0.23215112375851102,-0.1021885836553329,-0.17150974092533713,-0.10961164538198184,-0.26583419004376385,-0.004498111127049197,-0.3081453903113544,-0.0821128241782366,-0.1443529116918668,-0.08399203962668933,-0.311410069610696,-0.08954909775067402,-0.04315328883039754,0.07449250990444577,-0.22884820259562952,-0.044096908426847846,-0.14390768829970318,-0.08893200071056026,-0.27775367201032175,-0.09506638539097433,-0.11,-0.07040591223751458,-0.410235125,-0.08356404152269077,-0.5062440615320598,-0.07322966561813041,-0.40301262499999996,-0.10069260290362435,-0.3155152443191796,-0.3937256591426841,-0.2387344783719764,-0.16810169870344166,-0.3340051002493474,-0.536596384848569,-0.2872491871481978,-0.17374576516122153,-0.22278124685367434,-0.48921182902679256,-0.37325985809011836,-0.1651298497046757,-0.61,-0.51172125,-0.41,-0.08526329858958287,-0.51,-0.51,-0.3641929966647398,-0.1747291328919842,0,0,0,0,-0.1497212896175354,-0.51,-0.41022398749999994,-0.10907291233317618,-0.09189455970455424,-0.5106975,-0.41,-0.11054891723709992,0.036111187161053854,0.3485497990120233,-0.2989217382940933,0.008390767939555621,-0.11,0.3728945821955498,-0.36554062438985063,-0.004578245700355534,-0.12759974298379323,0.12594878790047612,-0.35306816695952536,-0.03521803254496097,-0.424182363966777,-0.016465879882610335,-0.32996454028305006,-0.06256228246881253,-0.13486849696315917,0.16479174231339028,-0.33938954044653735,-0.03477158735912925,-0.017871199581696178,0.11006011939178845,-0.41,-0.030386375647833485,-0.05683283759238342,-0.03141075378645916,-0.36594872509717313,-0.002685707514591534,-0.11,-0.004940163068189571,-0.3729812919956269,-0.03870891797022084,-0.15707057614445868,-0.39929362463075807,-0.3561109945581281,-0.15277895258822108,-0.61,-0.51,-0.3739388017426282,-0.1282893302701903,-0.14462293797162928,-0.49248627759689423,-0.38457791146482995,-0.12962115074905006,-0.20366803200531525,-0.51012375,-0.40345658135173085,-0.1362718381537368,-0.1627019375089968,-0.4994104022160234,-0.41022398749999994,-0.1328818320877693,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11885977246844102,-0.51,-0.37944462751046887,-0.12345074545390594,-0.11,0.34847547681038793,-0.41,-0.015391658528391193,-0.13565824527715442,-0.072618126194854,-0.3263187248581491,-0.09180783639413209,-0.15700017027656651,-0.09118002522494319,-0.33200603508443044,-0.09168362747137658,-0.10002033670807972,-0.06976539685202268,-0.35302091065961444,-0.07376839638886795,-0.005303915737921533,0.020585213412013834,-0.3997325478000955,-0.04867080891720605,-0.11,-0.05506552992108414,-0.41068625,-0.05383415725114643,-0.09669370924698373,-0.04077133728873717,-0.4107515,-0.041738187233160084,-0.11,-0.02549101158472871,-0.41,-0.02428595700933659,-0.61,-0.44353738004568355,-0.38353107102661244,-0.0559534492282801,-0.11,-0.51,-0.3738144117844929,-0.07474331167029155,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.61,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0.43622444866572496,-0.38638050845482885,-0.01,-0.11,0.29255389315601765,-0.41,-0.01,-0.11,0.09248139606271233,-0.41,-0.01,-0.11,0.11111289844815386,-0.41,-0.04449176085366998,-0.11,0.1682677624356722,-0.41,-0.01,0,0,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.2197116153958443,-0.4659272254699093,-0.41,-0.1888214747689826,-0.11,-0.47739343322698913,-0.41,-0.020860193994371126,-0.11,-0.51,-0.41,-0.025168730492121073,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.062105892549781244,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.18829380692691108,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-1.01,0.0003049572372781275,-0.41,-0.01,-0.11,-0.01,0,-0.01,-0.11,0.020953466812980465,-0.41,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.10092629127582134,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,0.14463392114294307,-0.41,-0.01,-0.61,-0.01,0,0,-0.61,-0.008540103306688541,-0.41,-0.049728530758513134,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.023779441664825936,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,0,0,0,-0.11072222441978674,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.21734181405128222,0.3106992752268111,0.4597335740504075,0.24557148508560042,0.006331383160990876,0.1736514871646233,0.4326770820793997,0.07223048399254386,-0.04731295695036151,0.2332874694056996,0.4385668695109639,0.1308810939174362,-0.0650884404240879,-0.01,0.3771918898042441,0.020022502147298823,-0.17431134742771778,0.19662755544489774,0.28351569335069593,0.0863701685890428,-0.61,-0.01,0.40912439375905535,0,-0.61,0.02376665134247992,0.3462253662079329,-0.01,-0.11,0.007658938512267977,0.25503555872760575,0,-0.00526634059097756,-0.3867568424659002,0.4501170422081051,0.030440388606129968,-0.11,-0.46572883287830635,0.4297333340786806,0,-0.051741747307882384,-0.4984924492149709,0.42480590136433566,0.01664304799106267,-0.61,-0.51,0.4429190443139149,0,-0.024713562111357362,-0.4399896000119893,0.40679531031176047,-0.01,-0.11,-0.51,0.4162349223296329,0,-0.11,-0.4959372937184766,0.273077319508392,-0.01,-0.11,-0.51,0.17379207710680555,0,-0.05960193117435934,0.38006286164487824,-0.0003185712262349662,-0.01,-0.09979840630860139,-0.049724238273419076,-0.01919550513211187,-0.045110176846564605,-0.036545433082724454,0.04117193670243402,-0.04262069409516824,-0.020833284326348924,-0.33258612404438115,-0.07498565838118651,-0.047984693153020216,-0.07479951782824716,-0.11992837992582545,0.06848383762500282,-0.03674852798553621,-0.00177443360464335,-0.021486235919936623,0.01801039041598187,-0.06098448542594984,-0.040705212968773656,-0.02691088447963645,-0.0031076294856002074,-0.024256543157935982,-0.015655527240069543,-0.51,-0.035478027715358344,-0.034773213939823897,-0.03462928198437888,-0.11593059724178606,-0.3844192378208566,-0.00034692664120292843,-0.06963689017503669,-0.10693627001995554,-0.5031434582095065,-0.048544497674364764,-0.08895442739038598,-0.11945116750385468,-0.48790830011151554,-0.04311529607983554,-0.0770806226241918,-0.11,-0.51,0.070092933990257,0,-0.14501220131472956,-0.4877180136528264,-0.1100297352516005,-0.09569959992745636,-0.11,-0.51,0.0465199801600804,0,0.07362889450585838,-0.4954247411209316,-0.060323739661152884,-0.06083588717751143,-0.11,-0.51,0.0063896573298972675,0,0.015002835789849088,0.13341574616483254,0.325715077541732,0.009744605551429017,-0.11,0.061830782853065286,0.329320275199057,0,0.002437215359918962,0.13730278976514965,-0.015802367430971482,0.021940837281148845,-0.1112378361428601,-0.0026745477352233442,-0.009046714627261324,0.04734095451587576,-0.4320564852500716,0.07949895924477146,0.044264754396829115,-0.01,-0.12454628101181081,-0.01,0.061505332806865404,0,-0.06652527005504166,0.03003621619209693,-0.014064560278995343,0.06446684535177558,-0.0601318539046108,0.013743914448191182,-0.020531569747300613,0.01623734157766108,-0.06918576388111922,-0.4766377686409082,0.3345232975423147,0.0014903082878233672,-0.06966214280070274,-0.48251069911934397,0.29013233196811633,0,0.11057399299298382,-0.49548896509673684,-0.03208351825363005,-0.00607242164056507,-0.06969103944387244,-0.5115215127792229,-0.02617934553307203,-0.03246764729196442,-0.09840190608238168,-0.51,0.0716289848274358,-0.01,-0.51,-0.51,0.0723617599406611,0,-0.18335552169297273,-0.5038767126524318,-0.025021637948947843,-0.039441367735258595,-0.11,-0.504871978849789,0.048232580250745886,0,-0.10312680920687706,0.34495305782169566,-0.004921542767223447,-0.0067739413604139265,0.04551948214465655,-0.04240991564120852,-0.04062763279435886,-0.04161957876936684,-0.11,0.02681136998798097,-0.038649469939108755,-0.032519786605016456,-0.43731910057431433,-0.04498734221099299,-0.03347221052912254,-0.04379477785201622,-0.030897463636109346,0.14634677894929782,-0.019038744257035074,-0.01993790149795832,-0.135985879672962,-0.059951877565074724,-0.03782418277556406,-0.060486177260724264,-0.11,0.014475321805569907,0.03413776398265081,0,-0.08748168150870912,-0.011869953459939677,-0.010977658969795571,0.008965966825037454,0.14796699911743297,-0.4734977047882984,-0.042298858298743455,-0.029233146320640512,-0.11,-0.51,0.0593649979331194,0,0.036828532068776766,-0.51,-0.08400589942788908,-0.07662795247207471,-0.11,-0.51,0.05994542296683544,0,-0.11,-0.49620704508952396,-0.06721811304697824,-0.08414131596660461,-0.11,-0.51,0.08987624999999999,0,0,0,0,0,-0.09678646159772111,-0.51068625,-0.0801664228708696,-0.049388955709124285,-0.11713207793174703,-0.01,0.3944216395771023,-0.01,-0.11,-0.01,0.16439121017815658,0,-0.11,-0.01,0.09,0,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0.07924855846691901,0,-0.11,-0.51,0.22601087480211143,0,-0.11,0,0,0,-0.11,-0.51,0.22238498969539233,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.02774151114389125,-0.012063995905489202,-0.01,-0.11,-0.022960662657508926,-0.02398793655058501,-0.02109595212877645,-0.11,-0.01,0.09,0,0,0,0,0,-1.01,-0.01,-0.01691913386799818,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.08807007952698852,0,-0.11,-0.51,0,0,-1.01,-0.51,0.09,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0.11762122388847053,0,-0.11,0,0,0,-0.11,-0.01,0.04994698566009884,-0.01,-0.61,-0.01,0.0479396146257416,0,-0.61,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0.0665257799722727,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.61,-0.01,-0.020915939273809452,0,-0.61,-0.01,-0.018546309373744827,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.3524522057412377,0.4409295270845141,-0.41,0.09733285759127498,-0.05698748127325581,0.4347502107922067,-0.41,-0.005832984606136728,-0.0924945471588276,0.42343423736685465,-0.41,-0.01,-0.0804755383784578,0.3521177167971444,-0.41,0.012033729096936502,-0.11,0.3952588039958068,-0.41407025,-0.01,-0.11,0.2782152685383385,-0.41,-0.01,-0.61,0.29504970286097393,-0.39703992734522575,-0.01,-0.087038387488855,0.03967373827727395,-0.40010369776050947,0.00617471296677307,-0.14248245611101734,-0.42274976266208014,-0.34907157127386024,-0.14837797596972876,-0.211524746994472,-0.44266861174973227,-0.3122448513052606,-0.16527130701747078,-0.5484121928956983,-0.46523875720674573,-0.38506664964495857,-0.13540107527436582,-0.11,-0.51,-0.41,-0.05205427426235729,-0.17734350122914438,-0.5023387500000001,-0.352419397969218,-0.13004823439159585,-0.11,-0.51,-0.41,0,-0.51,-0.4965491340431705,-0.41,-0.016252512602639414,0,0,0,0,-0.142689839260427,0.37761236881409727,-0.41,-0.011471310645280262,-0.22376598787099494,-0.09230299213951058,-0.4530233206288994,-0.07885737328381766,-0.09664003384941852,0.00831947688122852,-0.4672100881888793,-0.03499430277067398,-0.14065596435383618,-0.11256964661404623,-0.43066368839289443,-0.10077841300893228,-0.61,0.08506141551802965,-0.44008058867516225,-0.027225306167473123,-0.11,-0.06081605708587142,-0.41,-0.05146490713513664,-0.51,-0.07619569116993218,-0.4106975,-0.07716421327157953,-0.11,-0.029553176987185327,-0.41115874999999996,-0.02753170432490854,-0.20423608689204667,-0.51,-0.44734999999999997,-0.11199502505675729,-0.0958480111587287,-0.5131687185714278,-0.4478,-0.11378681024974567,-0.11,-0.490777623204274,-0.41,-0.10941595992593497,0,0,0,0,-0.61,-0.51,0,0,-0.10443585643154299,-0.51,-0.41,-0.07486220810062644,0,0,0,0,0,0,0,0,-0.46491808626229475,0.3367856826407212,-0.36951104349681685,-0.010135,-0.07711206023329215,0.2798074730640303,-0.41,-0.003233307052265314,-0.09082821759229169,0.1233580914884273,-0.41,-0.04952966945318428,-0.1481941250057696,-0.023512620428452365,-0.43121469789777417,-0.049687936054796294,-0.08493972607163996,-0.04648809515655102,-0.41,-0.04655485209106703,-0.11,0.05058761694880086,-0.41,-0.005360350114546624,-0.11,0.002806793998812005,-0.41,-0.02089613002186143,-0.11,-0.043642543753279694,-0.41,-0.048106712510502206,-0.5624328337335185,-0.48550817306620414,-0.40570024773137764,-0.09838357272131992,-0.10279443178874151,-0.51,-0.41,-0.030007414583181673,-0.11,-0.51,-0.41,0,0,0,0,0,-0.61,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0.2659949771982364,-0.4231046623083522,-0.01,-0.10512850925361891,-0.05722652254542068,-0.41,-0.05337805152154887,-0.11,-0.01,-0.41,0,-0.5959924597009351,-0.07638408448102568,-0.41,-0.0757087268525322,-0.11,0.04363688840347984,-0.41,-0.01293628778526424,0,0,0,0,-0.11,-0.01012375,-0.41,-0.01,0,0,0,0,-0.5622019223496953,-0.51,-0.41,-0.09238774443653025,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.1107238902745471,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.030513970622270566,-0.11,0,0,0,-0.61,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.10745829531051304,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01577324700251751,-0.41,-0.01,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-1.01113625,-0.01,0,0,-0.61,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.230689187080651,0.29806984399856845,0.5153476173061546,-0.36957809522712926,-0.06907174457191233,0.11640383398038384,0.5247905432711133,-0.4494186104582129,-0.055406346735581036,0.44062059943444143,0.13792687317139424,-0.4401075284775139,-0.0008647572735337589,-0.01,0.506172820146682,-0.51,-0.4236187364677725,0.060679552317256844,0.5284966806398287,-0.441999968903014,-0.5252740831126594,-0.01,0.5421610370507673,-0.51,-0.06858351129283267,-0.01,0.5077123143634436,0,-0.06567737603975081,-0.01,0.44882928544492773,-0.51,0.029477116667132826,-0.38509274927868065,0.5193885336946212,-0.5021219402877344,-0.4271314263085346,-0.47507574385388374,0.44984847821422885,0,-0.09202369739714941,-0.4713514726927469,0.5030128750004674,-0.51012375,-0.11,-0.51,0.4441099306248825,0,-0.11,-0.51,0.5374162297540086,0,-0.61,-0.51,0.413476420096699,0,-0.11,-0.51,0.4458553832433604,0,-0.11,-0.51,0.1364300567144079,0,-0.06636653256539798,0.08555842542654678,0.5138915519707661,-0.5105850000000001,-0.07003846248414469,0.05700657345019371,0.5414612275125807,-0.51,-0.035377995456661405,0.04826508573335305,0.4262028822057602,-0.51,-0.11,0.025259607854613238,0.5012065220688756,0,-0.11,0.013628712948951552,0.4927277137640849,-0.51,-0.11,-0.01,0.4817776739470281,0,-0.61,-0.01,0.4717792052685609,0,-0.11,-0.01,0.34962076548159554,0,-0.04480494255239576,-0.51,0.5103513485253933,-0.51,-0.11,-0.51,0.4732649980164678,0,-0.11,-0.51,0.45330379286524936,-0.51,-0.11,-0.51,0.2372495537860742,0,-0.51,-0.51,0.36139838685651027,0,-0.11,-0.51,0.3095951690381827,0,-0.11,-0.51,0.20122760610873752,0,-0.11,-0.51,0.09,0,0.042600500161431076,0.1337438274190738,0.4910481556495966,-0.5009331017985476,-0.11,-0.01,0.5162607535515487,-0.51,-0.068128433673141,0.042098180258818105,0.43540788743602277,-0.49222145862485195,-0.11,-0.01,0.3752436525791501,-0.51,-0.06413656422801112,-0.01,0.4889763743846051,-0.51,-0.11,-0.01,0.3197721818456247,-0.51,-0.61,-0.01,0.3536351124799921,0,-0.11,-0.01,0.1748319203796424,0,-0.11,-0.4652629497854886,0.5061892347470683,0,-0.11,-0.51,0.45224052384788394,0,-0.00758632017082389,-0.49372202315343433,0.17160392096553706,-0.51,-0.08593059309652129,-0.51,0.2034434476541299,0,-0.11,-0.51,0.35052851775160127,0,-0.11,-0.49779182728261534,0.20729277412307595,0,-0.069973919161168,-0.51,0.16459696668006793,-0.51,-0.11,-0.51,0.13563266662500878,0,-0.11,-0.01,0.46046630942994426,-0.51,-0.61,-0.0049397983071794655,0.3362326454322238,0,-0.0747240053818651,0.016629176977039,0.05533583225422171,0,-0.11,0,0.09,0,0,0,0.27328528385901496,0,-0.11,-0.01,0.16363916179576937,0,-0.07158546149315849,-0.01,0.16721512350804876,0,-0.11,-0.01,0.08377149954520705,0,-0.11,-0.48696144247081197,0.43294119993651653,0,-0.10234946984375,-0.51,0.238315182496417,0,-0.11,-0.51,0.20971209103473967,0,0,0,0,0,-0.11,-0.51,0.1321643845320533,0,-0.11,-0.51,0.09,0,-0.61,-0.51,0,0,-0.11,-0.51,0.09,0,-0.9726505504580792,-0.01,0.46674670012864755,-0.51,-0.61,-0.01,0.09,0,-0.11,-0.01,0.20799035732413013,0,-0.11,-0.01,0.13811599258252516,-0.51,-1.01,-0.01,0.28956226414539876,0,-0.11,-0.01,0.17684373442373996,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0.2326459013830925,0,-0.16115875000000002,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09239420415320573,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0.13481487257333852,-0.51,-0.11,-0.01,0.13445648640633018,-0.5106975,-0.11,0,0,0,0,0,0,0,-0.61,-0.01,0.09,0,-0.61,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.1754926859961734,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.01,0.17143174168492117,-0.51,0,0,0,0,-0.11,-0.01,0.13755656972944028,0,0,0,0,0,-1.01,-0.01,0.09,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,-0.11,-0.01,0.09083336504878853,0,-0.61,-0.01,0,-0.51,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,0.023098920952910357,0.4611436120832831,-0.36551857714920255,-0.5036852983338083,-0.11,0.45122447928986426,-0.34749599754620525,-0.49260561448943735,-0.08239393287298374,0.4501099185907794,-0.3671911209326449,-0.510135,-0.11,0.19624849976350592,-0.3704436767939117,-0.51,-0.0699385062700612,0.43505967740106355,-0.3948349805476206,-0.4954518098038553,-0.07864886955121228,0.34969659131414416,-0.41,-0.51,-0.08358113055171072,0.2583460003239874,-0.41012374999999995,-0.51,-0.11,0.06055945516538734,-0.41,-0.51,-0.45619584915246336,-0.48780991731996604,-0.07661093050690418,-0.5102341560378006,-0.38537697163715245,-0.4995505809635996,-0.18588791942380933,-0.51,-0.4547190256117061,-0.51,-0.3627854392453014,-0.51,-0.11,-0.51,0,-0.510135,-0.11,-0.46800682089548046,-0.41,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.08794907349433574,-0.51,-0.3732918954135356,-0.51,-0.11,0.38286732986476885,-0.39463460538707057,-0.512246900765625,-0.12827639509591604,-0.1283238448783112,-0.3570998374686767,-0.5106542517111352,-0.5459171985462404,-0.006240491354242835,-0.35891477993702026,-0.51,-0.13096492748269717,-0.1302165042120602,-0.3539835424849123,-0.5112637394368467,-0.09030060641088111,0.03878768506726904,-0.41012374999999995,-0.51,-0.160135,-0.09262146455196973,-0.41,-0.510707625,-0.6029012499999999,-0.027075729582983356,-0.41,-0.51,-0.11,-0.01,0,0,-0.4539151871611749,-0.51,-0.2915686616879207,-0.51,-0.10653752728361209,-0.51,-0.37125758612939874,-0.51,-0.08267394479752443,-0.49779998758011734,-0.41,-0.51,-0.11741884544401573,-0.51,-0.3825820437707988,-0.51,-0.13640176591382525,-0.51,-0.389226115264067,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.04020869576290192,0.3519561558877303,-0.41,-0.51,-0.10273834523563895,0.3027986239570434,-0.41,-0.51,-0.11,0.0465636124261653,-0.3746392182950469,-0.51,-0.11,-0.01905951379269203,-0.41,-0.51,-0.11,0.10738718972375727,-0.4045010682453409,-0.5129028740625,-0.11,-0.01,-0.41,-0.51,-0.08909007096147259,0.017512056284176004,-0.41,-0.51,-0.11,-0.027203740074104144,-0.41,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.19285293281705654,-0.39540129965209475,-0.51,-0.5596876617422583,-0.11086227326802493,-0.41,-0.51,-0.11,-0.03321670396345186,-0.37658648252254984,-0.510135,-0.11,-0.03928318228047471,-0.3819276803746762,-0.51,-0.11,0.0018496240892255066,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11163821909273687,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.09328774714438928,-0.5106975,-0.41,-0.510135,-0.11,-0.01,-0.41,-0.5528646698790332,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.61,-0.01,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,-0.51,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.04741756170039396,0.14169210231876908,0.45991405137682106,-0.47883641214646816,-0.06811019222604861,-0.01,0.4596787438371433,0,-0.02904582833706512,0.03185885470088105,0.4539172525134416,0,-0.11,0.033090690647380884,0.3343479439396055,0,-0.11,0.03314091595249816,0.42856156446341626,0,-0.11,-0.01,0.29136221569220155,0,-0.08552065314604974,0.021029820023095752,0.3396268916661034,-0.51,-0.11,-0.01,0.1374713391609345,0,-0.06842762381390533,-0.51,0.4440648970379874,-0.51,-0.11,-0.51,0.38990377043998214,-0.51,-0.11,-0.51,0.2968184575484733,0,-0.11,-0.51,0.2192277553340569,0,-0.06616497422563446,-0.51,0.34673234206371495,0,-0.11,-0.51,0.12936787676582948,0,-0.11,-0.51,0.1275988631231565,0,-0.11,-0.51,0.13734574570865365,0,-0.11,0.3653304075821808,-0.00445694913766728,-0.51,-0.11,-0.054279111040637665,-0.02779674285147713,-0.510135,-0.5365028444126458,0.1203510389412986,-0.0029435370371786286,-0.51,-0.052328225613920115,-0.03314475982579356,-0.03471331881633996,-0.51,-0.16702469920387425,0.00668360820295174,-0.010595905052273605,-0.5106638732769877,-0.030967719644968285,-0.06924242368401706,-0.06722684814344174,-0.5133653893134683,-0.3716295822726432,-0.03514662690890293,-0.03391247248909992,-0.51,-0.11,-0.01,0.09,0,-0.11,-0.51,0.07883497834042129,0,-0.61,-0.51,0.08955107241947144,0,-0.11,-0.51,0.035824044794050665,0,0,0,0,0,-0.11,-0.5018011146198347,-0.029065839481273302,-0.51,-0.11,-0.5106975,0.050208244536691864,0,-0.11,-0.51014625,0.0019413014931788156,0,-0.11,-0.51,0.05419475968860463,0,0.04540597964262677,0.02657047105367135,0.331759265256264,0,-0.11,-0.01,0.27869777022634773,0,-0.0721707725025506,0.13627250413113592,-0.0146338302425442,-0.51,-0.0832558730189511,-0.01,0.0384850946706449,0,-0.51,-0.01,0.08709419233227594,0,-0.11,-0.01,0.0875341590106758,0,-0.11,-0.01,0.0030697413530125896,-0.51,-0.11,-0.01,0.09,0,-0.11,-0.51,0.2563471445781415,0,-0.11,-0.51,0.17692221848199452,-0.51,-0.11,-0.51,0.01956135400379571,-0.51,-0.11,-0.51,0.09,0,-0.11,0,0.0825894868519292,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,0,-0.51,-0.51,0,0,-0.11,0.18056647072716944,-0.015010247920009885,-0.51,-0.16,-0.07023000486745007,-0.03775299561548161,-0.51012375,-0.11,-0.011344496281356633,0.08009973475158086,0,-0.08026596319676486,-0.07907335227272966,-0.07899783501824084,-0.5127611887500001,-0.11,0.00005626252756223658,-0.011040015493970145,-0.51,0,0,0,0,-0.11,-0.0114625,0.0783162091029595,0,0,0,0,0,-0.08132922760767794,-0.51,-0.052436641338520655,-0.510246375,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.27418552738711616,-0.51,-0.11,-0.01,0.12918427762293483,0,0,0,0,0,-0.11,0,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0.09,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.09,0,-0.11,0,0,0,-0.11,-0.01,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0.09,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.4373143522073635,-0.3938759715434637,-0.5057176225608093,-0.11,0.25950766420830695,-0.41,-0.51,-0.08610661718301213,0.2270594018929989,-0.41,-0.51,-0.09634084323327537,0.031805226227048344,-0.41,-0.51,-0.08626387914400002,0.2999985521271009,-0.41,-0.51,-0.11,0.08418055749328171,-0.41,-0.51,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.08649732612369548,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41012374999999995,0,-0.11,0.17172228882507923,-0.41,-0.51,-0.1232180197525961,-0.12245541823862367,-0.4108160149245305,-0.51068625,-0.61,-0.02076835098754583,-0.41,-0.51,-0.5111475,-0.014077204080976563,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.61,-0.01,-0.41,-0.51,-0.61,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.10243925393095463,-0.51012375,-0.41,-0.51,-0.1240469815268703,-0.51,-0.41,-0.51068625,0,0,0,0,0,0,0,0,-0.11,0.25463678405317125,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.0807050430036192,-0.03649732887989117,-0.41,-0.510246375,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.11987458065904191,-0.51,-0.41012374999999995,-0.51,0,0,0,0,0,0,0,0,-0.09896246636508627,0.10578154406533072,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.07369959939741935,-0.07330622841123643,-0.41,-0.51012375,-0.11,-0.01,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29426272666001063,0.41938548436331285,0.540038956652101,0.41894086021713073,0.3444666710553992,0.428424567470621,0.5374312366038896,0.43294960091268,0.255353560239548,0.42784020310527016,0.532698690610027,0.43787582849315676,0.3354013696205792,0.4174046845207324,0.5107311415089592,0.41387474701355886,0.2744316878653636,0.3162410521996365,0.3125045541801731,0.31194729028833873,0.19396839727391837,0.3813299311641597,0.5226533994410388,0.37716729631761414,0.30532583693689974,0.40132187773545325,0.49684777620739223,0.3950131475442732,0.12983707507353637,0.4105218358770408,0.29139799694131613,0.3030067517700459,0.3422770272103133,-0.054080022499856856,0.5084180481130594,0.4089143087268042,0.34256180319298063,-0.05740952794004451,0.5336894266382205,0.3993172825384886,0.31273823596856937,-0.04924854853379198,0.5175494470337321,0.45791757993858284,0.33297331883318,-0.06405865299650389,0.5285535827386415,0.40184547673823023,0.32120177399368566,-0.054403982542422354,0.49622826007840815,0.33805282386571295,0.3483537880574055,-0.06577823477752383,0.5153508944982571,0.42157080676265524,0.3336370176712572,-0.06826892076153679,0.530879501003219,0.3830287185292179,0.13294297421674714,-0.2479545797101539,0.5217034570567161,0.3486642808633178,0.2883185530674039,0.3766148638984771,0.4832236925051434,0.3978026532978782,0.2289511429790257,0.3695925003917841,0.5394906453174039,0.3888052832955988,0.2125034028367638,0.38904283841341997,0.4959185946386764,0.4368988473628771,0.17512336315161145,0.38421694251482985,0.5358011290755661,0.44897412830602546,0.26459636274481696,0.36753482723833103,0.525470424616217,0.41610763103272846,0.2347769204806095,0.37346677280049645,0.50010631087309,0.43382683488962426,0.25128673991988904,0.38085919419452424,0.5493041073710201,0.4462868070460391,0.13517810118742252,0.3177964352953585,0.5464030371114676,0.2651379844170151,0.3385300988214942,-0.12432675010841573,0.5297380957458637,0.36208178920347445,0.3135653132342951,-0.13415458866777286,0.5362103171444785,0.39563897661353664,0.30551386774714984,-0.1510701522246721,0.5387267749608146,0.40269828316520756,0.2933486328097596,-0.2571879784722304,0.5414858150038353,0.3330897652679938,0.3221391919893262,-0.2045537032976853,0.5339321307582868,0.41071635410837415,0.19964445174365641,-0.3598544046678497,0.5273505309748322,0.2678243569199561,0.2597784459740194,-0.3373233778020649,0.46691723208043084,0.2859154315251683,-0.07409569205072139,-0.4740676187671784,0.5259067110307959,-0.01,0.29802719271822986,0.3847958633524001,0.4238160991186239,0.4060944378354534,0.31508262104739365,0.4156874642208467,0.36992941093860926,0.3631442602379042,0.2224277962613134,0.2647533202911561,0.27080740624411426,0.41833919395890684,0.27764444030072877,0.23973562941402418,0.4079260414816963,0.2587391431575586,0.20857324655104068,0.3448397877366439,0.4419345354443183,0.30222672241761217,0.17278185116858175,0.3846130885200942,0.25094143651175177,0.2848832997608814,0.2257555681086026,0.39232623929968785,0.3332536073563469,0.3282542668306124,0.24035215629698525,0.256532039002633,0.5416935279339248,0.3203755645902688,0.2724997128608887,-0.10187655355483792,0.49993064248580843,0.3716995539499429,0.18550113911615881,-0.10647886134355392,0.27066707159344067,0.4345667878581113,0.2194552617113344,-0.17302596652680333,0.5316281103978009,0.19970726929295,0.21571839596063222,-0.20836456195950115,0.5144815168763897,0.28115268683456895,0.23904182215923553,-0.13947653890872988,0.306378385345475,0.3945416765865274,0.269987729672369,-0.18064510911045636,0.4916203552799779,0.24745500468191178,0.2560067739932925,-0.2000713902282988,0.5114771807683833,0.23570655474347088,0.16746401767547534,-0.45832034312795217,0.48193124055311026,0.15905541549994215,0.17871157039188126,0.3469743932563662,0.5026998151795095,0.327710696559125,0.1922410955379729,0.3071909660673942,0.5195235453185202,0.33648803058030713,0.21707494845216835,0.25893061085589597,0.48727472833142105,0.27605866388402966,0.20582944966570657,0.27458858178309664,0.47377600825959504,0.307440446878924,0.247148001152581,0.30640222535505185,0.5259842569627163,0.3043958002159391,0.21873987179713433,0.23494688803566183,0.5072002738669972,0.23357947214852262,0.02639432109294837,0.31021057301643085,0.4547347167060458,0.26352097997774215,-0.21448171049148868,0.15756900476687138,0.5245656211294747,0.1819293523795546,0.21864574187500047,-0.16091026169232991,0.25169516312794366,0.27312030360285877,0.25044758377985044,-0.21923051991887668,0.4535758854289389,0.32203751154423044,0.10264728879101044,-0.2558768321401952,0.4799762300659874,0.33168316853236124,-0.06503647904788631,-0.5058357749423753,0.47634439248391014,-0.01,0.2258137212499595,-0.3220392835428442,0.505359681205201,0.20391947574162703,-0.08533460358303475,-0.39911525804268144,0.48772977697850445,0.1824255306809576,-0.11,-0.4295640377229391,0.52373174643968,0.12616081419065422,-0.45915539417397533,-0.5130375,0.4042246439868568,-0.01,-0.22529295698387752,0.4183266449077556,0.5456037460805899,0.4112935144042217,-0.11497831808339282,0.2653485994779583,0.4404621369586959,0.3930716727543266,-0.08163079469304628,0.30195783987111396,0.5219971653149349,0.22262782283752722,-0.18039585947369033,0.03512902942907069,0.4976994334184023,0.07022930229248495,-0.0009947393865419527,0.44260072885971197,0.35706421821015794,0.30582128404292136,-0.07096252286586581,0.2029763063142448,0.5203875068441111,0.17632521999303044,-0.8397339080862563,0.0772651349729131,0.42623461360893883,0.17644493267970662,-0.11,0.03458338016250292,0.44480451944454946,0,-0.17915047057195438,-0.22218820243533807,0.5219570067499153,0.32968365650800413,-0.12312613551128042,-0.31133720775231855,0.5200324232551017,0.1441739445359357,-0.10518258427003259,-0.32708643898948553,0.5195389469707601,0.15190547365529383,-0.06881252106441987,-0.47061398477114746,0.5321507166151271,0.03766228115851814,-0.11,-0.3889256482298027,0.4940938224768087,0,-0.09079891500477957,-0.46720245974663677,0.4080041136981496,0.1111307917990984,-1.01,-0.4650789860636733,0.5150885867987881,0,-0.11,-0.51,0.37732809275515183,0,-0.19426211643556326,0.24894014136443413,0.5324845235444328,0.2009295472523334,-0.9344010338846644,-0.01,0.5047707939607103,0.035795911879028926,-0.11,0.05385930831733883,0.531917163179619,0.07742851558240271,-0.11,-0.01,0.5272312888002565,0,-0.09616912748401547,0.016747556591662133,0.39840375384063176,0.19612804726357072,-0.11,-0.01685424779147763,0.5033365970442613,0,-0.10163522978006984,-0.01,0.5355825276033993,0,-0.07176859343548253,-0.01,0.4606402709050861,0,-0.21217349338409133,-0.48569858121510034,0.5023701874096542,0,-0.11,-0.5244795083694853,0.5371250590674839,0,-0.11,-0.47796654242161196,0.5110107207418534,0,-0.11,-0.51,0.4201835866031908,0,-0.11,-0.5069567782553506,0.5257135836619655,-0.01,-0.11,-0.5211375,0.40987271265115377,0,-0.11,-0.51,0.3768442917537421,0,-0.11,-0.52903412671875,0.1868219518336786,-0.01,-0.32377450814870834,0.34210161346966766,0.5170237756196182,0.28672249204534267,-0.0700811366571241,0.06656533810203727,0.519326715593446,-0.01,0.010901436344687269,0.19093637404881142,0.31041296985225353,0.19364340121235213,-0.12289220397567627,0.02780840849228816,0.3848732035210784,0.05778440562725438,0.07958569668945542,0.17394293538400968,0.4493456989415434,0.18348690666665157,-0.04148114727188458,-0.01,0.35299848392751143,0.08578033324024992,-1.01,0.006680171996509552,0.4493826526719825,0.038380928781162005,-0.09007946915783646,-0.01,0.3752304455773849,0,-0.6167865886138375,-0.40070148466649685,0.5329743567648388,0.03598739668948007,-0.7237578459589292,-0.49250150836970513,0.5180881142292189,0.024762498738599682,-1.01,-0.4758634662447097,0.38561655722591903,-0.01,-0.11,-0.476704361590717,0.43419565797805093,0,-0.17733658563219346,-0.4544279279276908,0.4667853917673846,-0.01,-0.11,-0.51,0.37239375352063164,-0.01,-0.11248821419262103,-0.51,0.23717205411957543,-0.01,-1.01,-0.51,0.2648270110948309,0,-0.032870520543487915,0.08696650709489634,0.5034281039410082,0.017225950877006235,-0.11,-0.015793103471666514,0.47644733876631756,0,-0.06897436941356894,-0.01,0.47469923683762444,0.033327912176722964,-0.61,-0.01,0.3048943117988473,0,-0.11,-0.01,0.4819131699092875,0,-0.11,-0.01,0.3720473127297169,0,-0.61,0.020998840032066216,0.45214240615844314,0,-0.10528138612595192,-0.01,0,0,-0.11,-0.51,0.38464163443509763,0,-0.11,-0.51,0.41179043829913137,0,-0.11,-0.51,0.3803191103040451,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.22108524850243755,0,-0.11,-0.51,0.13631347488719422,0,0,0,0,0,-0.11,-1.01,0.1892470336349939,0,0.30418977753444476,0.46118092815275297,0.02882431612271147,0.4094152759231726,0.2975378977334728,0.45575177553395946,0.018857820418062055,0.41100322464705846,0.2573294881053751,0.45690623885512577,0.014956463573505397,0.4133542036958434,0.26108328805222775,0.41489760765178374,-0.016620196709085922,0.4056562125065943,0.28037188593398876,0.45482425354703426,0.02175077267047244,0.41842389356588006,0.2685653006698979,0.24934906633283535,-0.07146869037350734,0.35947297317752197,0.23537292773489493,0.4439767393450728,-0.09345715924060258,0.4014661139527287,-0.2456528267855161,0.4380741082640379,-0.24385923731623232,0.18338085387971684,0.2506242697377897,-0.04602748138477394,-0.03732087033247821,0.4542215062424299,0.2647268033080396,-0.06693374496814415,-0.00006593637876442537,0.45361957391116015,0.25254627441345506,-0.06031364346616549,0.004468146529586927,0.4452204329620508,0.12001384932929463,-0.23150518737428272,-0.12702965192509003,0.4570240620066365,0.20336655117930835,-0.09314358391018165,-0.001918050150220214,0.45430498938490593,0.09344878167225582,-0.1970075347028468,-0.1461781142076038,0.4559201171303151,0.16872882103346387,-0.21348670847747953,-0.21928591809997763,0.4536977258590148,-0.5239183288935003,-0.4357176619164094,-0.27191247186437006,0.448140920885453,0.2836517289707137,0.39498674526324984,-0.0024688665938691805,0.4558429618311454,0.23073787175278973,0.3258651173755443,0.016536841806645577,0.4565524712721152,0.1993692258955047,0.3280733410782468,-0.07556366820565807,0.4451212036543015,0.12928432294706693,0.21246387257608768,-0.11955335000499367,0.45681711499867317,0.23980604382774295,0.3285110695220899,-0.04934143767425307,0.4577598728698782,-0.08696035911042216,0.2395362300051036,-0.14220339205539362,0.45644046983472947,0.13712124004794635,0.2570551546372273,-0.15415349281989926,0.4615870480163441,-0.057963073882364984,0.14967657814965799,-0.33393998860711016,0.45858544047411215,0.19714228728528493,-0.14353386754548772,-0.010727143773964054,0.4642017716951276,0.08675013346873484,-0.3258935094424152,-0.07781648296623452,0.4592989412093763,0.15022119835991382,-0.3133127999042123,-0.15870859142772936,0.45546596003205136,0.04178063398555158,-0.4631188896596744,-0.35917569236348734,0.45333851212285586,0.08832022614673392,-0.3383019779770873,-0.2565265301736931,0.4611321833761262,-0.060407408861056645,-0.47179177515280024,-0.2514439050354451,0.45396214772523613,-0.040867016630377444,-0.51,-0.3830285843996292,0.4549900028025372,-0.07711010541230982,-0.51,-0.41,0.45729431798027576,0.26164164421394603,0.33701338051069135,0.0133073647856436,0.4110276534468809,0.2179859383922552,0.2765186243224492,-0.01306290761225804,0.4118036136461123,0.21544625494208344,0.2496587643477947,-0.10244499985094793,0.42443951701958443,0.1388517963206035,0.2464326558151743,-0.09260404384173998,0.418246014898666,0.16713996751337282,0.2780308434884969,-0.08602736098870138,0.3882351269049378,0.22081310702236176,0.20726580445372783,-0.08062321617031257,0.39222041075809416,0.10376739867921567,0.26679420244280233,-0.17273620068520376,0.42209598323604697,-0.36292475790154033,0.03007113608341269,-0.3196925915190206,0.3952300092975772,0.21352628634602105,-0.18905890243361903,-0.04075401068148398,0.3662613257434283,-0.00590284393249519,-0.3361867766021123,-0.17653527671258049,0.39984193114006483,0.13679864887172125,-0.39732341749703753,-0.1668095415822549,0.37658295920553375,-0.008806703098752089,-0.4886433366457243,-0.31644865835912994,0.42153955606625393,0.1240592467323823,-0.43220221127193126,-0.20339881791756487,0.3785128692024916,0.024276477190796675,-0.4869468888992471,-0.2859485678582301,0.3796825317272983,-0.07026420071141307,-0.5073504036828723,-0.34164579538927725,0.40736874168516085,-0.006029284387724529,-0.51,-0.41,0.40476539381370163,0.27521260994884267,0.3003867740398568,-0.06901187609656141,0.44039072135170676,0.1620899519662096,0.25387395360574716,-0.10924288612046967,0.44061293306150995,0.08353506198281269,0.1823240396801289,-0.3419439346765858,0.43905251436460896,-0.36627187615187984,0.03506235670837417,-0.294523474502878,0.43327573336431985,0.10593332185278055,0.2500736736713799,-0.293861824203669,0.44236548451847957,-0.07600971464835518,0.08928592389758405,-0.3729067880080826,0.4410994367794265,-0.5320390412449677,0.08560983702304975,-0.34532831669902025,0.4362639586858569,-0.5204236039058601,-0.012921040808304597,-0.3324577748882501,0.43149523184501004,0.17982940666771582,-0.304727623582831,-0.2146730250127632,0.42171429292948925,0.02008202596401537,-0.48986424967459624,-0.3665319845123845,0.4279160516958079,0.025497479966138988,-0.4641176824913746,-0.37732663669902544,0.40275534301575816,-0.08935392231158172,-0.51,-0.39952020555216383,0.4357598418861891,-0.06840769935973766,-0.49615175480874,-0.3590210980822328,0.40037607269393516,-0.61,-0.51,-0.3650196975534585,0.41883864209089555,-0.51,-0.5113448055193922,-0.37085189584720024,0.4343648440009477,-0.11,-0.51012375,-0.4005885265924362,0.30998943253082567,-0.40121675277893126,0.429772505437189,-0.21035989588485374,0.2961762909101629,-0.21295607075566939,0.44559561958289884,-0.29743209699295325,0.0795430365451984,-0.6246392145190869,0.44972338449068566,-0.3688027456277868,0.17487742956294386,-0.11,0.4388903704806879,-0.41,0.0349242892172197,-0.2226837286948165,0.14556265063276572,-0.2752094442043854,0.4526511036401411,-1.01,0.426302137512045,-0.3308339878880587,0.03629408186130427,-0.11,0.44100656754978285,-0.366270355002012,0.031644335308360576,-0.11,0.196200163653727,-0.41,-0.01,-0.12339138461246198,-0.39106950131612683,-0.2901070718235489,0.4505165177846702,-0.11,-0.4991818650038089,-0.41,0.41251524985654237,-0.13621913165649824,-0.51,-0.41,0.4301281427990715,-0.11,-0.51,-0.41,0.3671727025304759,-0.11,-0.46520379024066294,-0.3236620533745909,0.41954447333394473,-0.11,-0.51,-0.41,0.3289296845951331,-0.11,-0.51,-0.41,0.3620826987709056,-0.61,-0.51,-0.41,0.11544801339831749,-0.09412957096765659,0.38779317786466144,-0.36788247167944904,0.031708616005141285,-1.01,-0.023748621100323587,-0.36950536471989154,0.4407679298127007,-0.0730804143098288,-0.023313605216949154,-0.37820608656570964,0.4462571530307164,-0.11,-0.028937256270904203,-0.36552105612783836,0.20462408511694916,-0.11,0.2155019812911102,-0.3156061061766299,0.035694298698622014,-0.61,-0.019242984033071973,-0.41,0.24657374038361118,-0.11,-0.020575811551697354,-0.41,0.3508718783793334,-0.11,-0.04194986366324078,-0.41,0.14933431939825545,-0.18605075933131293,-0.51,-0.41,0.43373248177446716,-0.17118131201172015,-0.51,-0.41,0.3569283236656774,-0.07304111455409928,-0.51,-0.41,0.23086259460655148,-0.11,-0.51,-0.41,0,-1.01,-0.51,-0.41,0.19924313542289815,-0.11,-0.51,-0.41,0.07234981642483829,-0.61,-0.51,0,0,0,0,0,0,-0.19559661950498752,0.365904890089647,-0.320106540574756,0.07171011612084849,-0.18396771219121738,0.365486247566113,-0.41,-0.01,-0.11882000934714479,-0.0016720057593246924,-0.32152116372105954,0.42417797329382695,-0.97,-0.017122975219062628,-0.41,0.3471574708395775,-0.11,-0.01079465832482213,-0.3641969220788829,0.4039719819851795,-0.07341984371818207,0.13058186507890707,-0.41,-0.01,-0.61,-0.010029998704582105,-0.41,0.3586601757999372,-0.61,-0.01,0,0,-0.1232732753664982,-0.51,-0.41,0.3819391574251042,-0.9339038011586569,-0.51,-0.321664458389821,0.27416755566798046,-0.11,-0.51,-0.3004906444737697,0.28675100539363985,-0.61,-0.51,-0.41,-0.01,-0.07277987989095158,-0.51,-0.41,0.23915675030636516,-0.11,-0.51,-0.41,0.04194231506182477,-1.01,-0.51,-0.41,0.07886964258487622,-0.11,-0.51,0,0,-0.11,0.33589033269432134,-0.4029125,0.033874591607806384,-0.61,-0.036893102566782916,-0.41,0.3122372919804833,-0.11,-0.012025000000000001,-0.41,0.24099530354503293,-0.2014750296875,-0.021137500000000004,-0.41,0.18509982051658408,-0.11046125,-0.013315243846338913,-0.4106975,0.3351280534029138,-0.10955237486077729,-0.04752854882951483,-0.41,0.030154531964753206,-0.11,-0.012658891108997525,-0.41,0.07491259939607516,0,0,0,0,-1.01,-0.51,-0.41,0.27209265872220195,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0.05355649081892791,-1.01,-0.51,-0.41,0.03325686111752041,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-1.01,-0.3970290966958238,0.09006700913089838,0.2869608632232316,0.358788320324363,0.4598341515066591,0.3688648710855616,0.22379597098230417,0.3924971601324804,0.4903550891133481,0.3716323052096273,0.28985697613822664,0.3964195786823632,0.48282332785263493,0.3614595738617683,0.22621932008771817,0.32494938746799623,0.44579426817987283,0.3783989925392329,0.20611111115794145,0.2173227299650749,0.4569695391927206,0.2081049424423582,0.1801317980284057,0.2888389160850876,0.47133516597970154,0.2586020797251433,0.19745077736496905,0.428969531891344,0.25479965645038155,0.2866247861323312,0.1688662076734655,0.18177592870074955,0.18648227512692578,0.29866553085882713,0.3088525667692582,-0.05123156810419817,0.4705523879035546,0.384891125284229,0.281173272602045,-0.06610533558570349,0.4640411851453229,0.3265524817606553,0.3369231982018137,-0.05506154088572509,0.4761858578066863,0.4222150617196705,0.1262891617159358,-0.19919092365096927,0.4698165718301196,0.3513923628251863,0.24360266066415384,-0.08580388109064221,0.24942958458519593,0.35029112356992453,0.20334527117366438,-0.17163246154505032,0.3233124287210145,0.38357390920043866,0.17393453053970184,-0.13243057885336304,0.453975307330371,0.24137923382217227,0.1318059082933669,-0.3617047737020241,0.46361313507444757,-0.01,0.2991967886670434,0.3229888103101516,0.39636065533276615,0.32182171272056226,0.1713594893665037,0.22394818886685666,0.24847161442504934,0.3867770067351653,0.1664678535553027,0.16595105804954322,0.19849220972324788,0.3495355799928831,0.159059324079472,0.22162257295809357,0.3003353668036461,0.35995794077923565,0.22444639019651533,0.24720467648202413,0.3282958623586814,0.2530996489938193,0.20208774559057757,0.15765211298135579,0.17900123160163559,0.3659451494618425,0.17542743610777092,0.2170729524880946,0.220735277566505,0.3672504749286713,-0.027659057278425478,0.13036317934193598,0.32406682917170765,0.13686394513323355,0.21269921255419005,-0.13348348347105554,0.23702503063820413,0.3736584435992226,0.21966854176950965,-0.31083556856852207,0.21916489354111143,0.37533536726541866,0.2125173745503578,-0.25453764360185477,0.19180650505072253,0.38714557517889425,0.13532183223465385,-0.424331884836876,0.37142014488419384,0.16334395199034224,0.06976169067983269,-0.3097561978258627,0.23723838985675338,0.37846123449637237,0.006392524020605556,-0.42023031535533595,0.3723702745868906,0.049382319206833086,0.06432020049486703,-0.42442578547247495,0.2909331256915402,0.035739455433029234,-0.5175384605983662,-0.4990446561444989,0.24851804368714545,-0.01,0.3251490301690422,0.31750348801328643,0.47050470503867664,0.32507934832522317,0.2799418353157504,0.2637375565461303,0.4566656785099073,0.3118690372062619,0.17757218790160942,0.2747475028526953,0.20919431971786287,0.2315274203019452,0.15110116381026825,0.18800350464384688,0.3051226333445044,0.1881992584756744,0.20070898302243714,0.20456803032621637,0.2083590175430411,0.21805019819071939,0.21844503013539562,0.27506803132986685,0.1997701184506138,0.1998965763962927,0.151799175682356,0.26322549918500265,0.20994084336922025,0.21503804635748472,0.07689667840951807,0.099313876206255,0.10425805059805072,0.17605019651663686,0.20557097451103334,-0.13946391591868743,0.4453671291330614,0.24672327764503638,0.30448624977581074,-0.23215499612766996,0.46492785658922603,0.28742615847944447,0.2216320990528209,-0.27245635784958905,0.3961252918920498,0.19779531991029758,0.16821355052266188,-0.406908638958937,0.3124044759443307,0.16529101735539647,0.1299146103970415,-0.2733072306351281,0.4029064358072709,0.19789150329216604,0.04747792890491268,-0.4552521547443793,0.42047320656771114,0.13431509869996455,0.007466961795668733,-0.4873806177263386,0.4279533676117063,0.18624632575872388,-0.020137902428887848,-0.51,0.12776698041609566,-0.01,0.2609323363327224,0.3671946155764626,0.3166503882897385,0.26275754876296953,0.2427577084059567,0.2401054279192638,0.3969954035477007,0.2447631459216647,0.11394915058424882,0.2526968154844682,0.3447754832806492,0.2736207314133631,-0.07740952788796318,0.10405111275515729,0.3982306287617286,0.143849842573107,0.1896744617066221,0.20366838026121534,0.3479642017925115,0.09857196433999003,-0.004215298619596637,0.13517672426079125,0.20421317893246665,0.10492043781050263,0.1080406848569886,0.10488350694303428,0.33740658108814486,0.08732308683629494,-0.027046047919050638,0.03331834254011464,0.3882342292311631,-0.01,0.16468114906193776,-0.3177865702524438,0.39750972131890067,0.204686827424953,0.009661470481853666,-0.39842676231555924,0.41684231881241096,0.09017199587305348,0.010346958407029087,-0.4496850799087026,0.41610661087345324,0.06089763421371022,-0.06320976132866185,-0.51,0.4123370578237714,0,0.009613238637831305,-0.449085504931281,0.3728656128552418,-0.01,-0.0907643190060351,-0.4935078301282108,0.357594246548498,0,-0.11,-0.510135,0.4055633490116601,0,-0.11,-0.51,0.35129028090495523,0.01230223031483644,-0.14401997175616765,0.33013041926995135,0.4673629028402501,0.24308316503396257,-0.18310872690534213,0.17414607921676656,0.43383215959906857,0,-0.13464201240571644,0.035013761298301006,0.4782308656936648,0.0942790192441565,-0.11,-0.01,0.4579229191451969,0,-0.5649872077643503,0.15977687649974234,0.2642558295717177,0.07972075029772534,-0.9320885134095207,0.06849350201843685,0.37331322256355887,0,-0.11,0.13971402637741487,0.3240314307949373,-0.01,-0.5209705575584305,-0.01,0.33085672339298294,0,-0.16123095324073647,-0.43109608246150977,0.4480727641116324,-0.01,-0.9698022208820576,0,0.4765721026365859,0,-0.11,-0.46533763051444127,0.4651004277446809,-0.01,-0.87933278552928,-0.51,0.3807113983669909,0,-0.042647474306526344,-0.4640534570098473,0.43496700883353356,-0.01,-0.11,-0.51,0.42608930935410677,0,-0.61,-0.51,0.37645578358034304,-0.01,-0.11,-0.51,0.1854999003976676,0,-0.11,0.11943162882336515,0.3408794221839284,0.07757828295621993,-0.1679991268825482,-0.01,0.30109139123617,-0.01,-0.61,0.021733380677741533,0.39203087458704655,0,-0.11,-0.021137500000000004,0.27342648973625566,0,-0.11,0.0272020506750485,0.3270582427614531,0,-0.10991435533632485,-0.01,0.23268444979173597,0,-0.906909488695789,-0.01,0.22311252339466547,0,-0.11,-0.01,0.15181112293336405,0,-0.11238036768804996,-0.47380362044906504,0.26433265234274905,-0.01,-0.5260397027742467,-0.51,0.2781433300426617,0,-0.184241981897886,-0.51,0.2367894698946938,0,-0.11,-0.51,0.12811981214044932,0,-0.5665789039586722,-0.51,0.3042620693445245,0,-1.01,-0.51,0.164881509864593,0,0,0,0,0,-0.11,0,0,0,-0.09740483529797128,0.13616457399374726,0.4114527601772681,0.0021810984560806657,-0.12505553218027687,0.024113520103306613,0.4375765454427271,0,-0.11,0.08764788045100819,0.27660764554025874,0.0568173852867616,-0.11,0.016440311698136326,0.24303439764318757,0,-0.11,0.026830595608385133,0.25460506717625203,-0.01,-0.11,-0.01,0.21000604241259202,0,-0.03654671299058936,-0.01,0.21265879314403446,-0.01,-0.0703648370255417,-0.01,0.08930858793952995,0,-0.0711988562104084,-0.47926778112241303,0.38458002202442515,0.027941614450597348,-0.11,-0.51068625,0.4244103602474142,-0.01,-0.11,-0.51,0.2856272475330148,0,-0.61,-0.51,0.27025212819176353,0,-0.11,-0.51,0.3224204680770515,0,-0.11,-0.51,0.21354001496253738,0,-0.11,-0.51,0.1350479436244619,0,-1.01,-0.51,0.09,0,-0.4071946298002645,0.02899364809907435,0.3447253851822546,0,-0.11,-0.03971947893653253,0.26831154559218945,0,-0.16046125,-0.01,0.2923087603068367,0,-0.61,-0.01,0.09,0,-0.10988223379105919,-0.01,0.3619285167187118,-0.01,-0.11,-0.01,0.22991989059259674,0,-0.11,-0.01,0.16006479095989312,0,-0.11,0,0.08369213514920797,0,-0.11,-0.51,0.25021720784550155,0,-0.61,-0.51,0.16976531389449345,0,-0.11,-0.51,0.1631731042023759,0,-0.15243235161364166,-0.51,0.15490680793201556,0,-0.11,-0.51,0.1610436658562739,-0.01,0,0,0,0,-1.01,-0.51,0.09,0,-0.11,-1.01,0.1193770000990681,0,0.3013954873643485,0.34988435954590075,-0.04860729528108447,0.4014755716435592,0.20359803772088553,0.43058095785504863,-0.09967224566081825,0.33784442078812627,0.2471628856640788,0.44209970882707056,-0.13661351045388115,0.30543056393538215,0.007222021150303275,0.44195510294153395,-0.3303326532422607,0.1872737154593907,0.2209396299375668,0.32121595529393876,-0.13611914656756657,0.2431365588161668,0.1272427249107512,0.23356323721720715,-0.20696962066077607,0.2820278966238254,0.15138348516318578,0.23608820213968257,-0.28685000578536723,0.35392350921785903,-0.41889505610512895,0.14110533581118095,-0.3138185688373702,0.30696661825025556,0.17262651157704625,-0.1136462035058966,-0.08364999086881462,0.41439853022855455,0.18352463661187962,-0.21536836731377096,-0.1331755879941079,0.4123751162204494,0.1247289404799417,-0.22643466252370942,-0.2716614722800272,0.4261534811070966,0.024939685432612886,-0.41383423867662233,-0.33957996881856467,0.41217539792765134,-0.014120875716215547,-0.33264193552379867,-0.20950606919871576,0.39003063553966255,-0.11,-0.48042090446745667,-0.3130847968411359,0.34894662589043235,-0.11,-0.44477711221687366,-0.3946767445106074,0.391830399916985,-0.11,-0.49554788878304007,-0.37403951102152233,0.39415278239014934,0.24351937090565193,0.28013526339755934,-0.153963681910192,0.33441700952814535,0.144841546067786,0.18620083115708597,-0.2744234706169267,0.39862741661065126,0.14068117373385003,0.2317937520344598,-0.21069444080371488,0.3917036676489735,0.09612706790473333,0.12384632102968963,-0.3451626684177819,0.37102729380107846,0.09156367267401617,0.22017063363820483,-0.20168787686831835,0.3692076435459525,0.1058156369138929,0.05845618720895898,-0.33283074859520634,0.30998396188461536,-0.03599259451754452,0.16352870902571165,-0.38340923853289677,0.30379990651900146,-0.04212119381899252,0.0005019699268351933,-0.36661975834835103,0.36749607674596396,0.09909691609685232,-0.2316864563097375,-0.20289481646305763,0.37680381364133253,0.02811602907328741,-0.41681968313991646,-0.3721376892061881,0.38326978505933296,-0.04370856531157148,-0.44095633660431144,-0.33349982353508256,0.371068452311421,-0.11,-0.51,-0.41,0.3464695644255621,-0.05609190748188723,-0.49489008154919234,-0.35100085641776846,0.34803748775457277,-0.07936164368541691,-0.5106975,-0.3720427340644202,0.3259105301222273,-0.11,-0.5046546661879396,-0.41,0.34702558038340936,-0.07439367302847139,-0.51012375,-0.41,0.27640201456811353,0.17288640202705674,0.2338817171847664,-0.07472712218901213,0.3960352655509715,0.13975317749412225,0.14949037315709798,-0.20922026493580054,0.3265613650685208,0.12764209880831454,0.13379700332791972,-0.33472496006736613,0.3968237950553911,0.02614133010543401,0.03811818285537794,-0.33162881537238087,0.33964165598092766,0.014469771290375813,0.21147362698132824,-0.25316957109313226,0.36560915185005244,-0.022281704066000354,0.11061780684520167,-0.34502700891596816,0.34931090827260625,-0.03200381376343297,0.06553459989524915,-0.40646554752975494,0.37267892843613265,-0.11,0.043029518877791495,-0.41,0.27212721203318535,0.07100018622637741,-0.34331086769024743,-0.26990089871628725,0.31873713519449415,-0.038000656764992057,-0.44450085232297454,-0.32516425841847674,0.28503285456471705,-0.37595774047875774,-0.5034543643959462,-0.3742638998839247,0.24758344519779732,-0.06981737248368038,-0.4981679136394022,-0.41,0.2240234460496487,-0.0074811013464033856,-0.454937168839118,-0.34897487429084,0.3545000381732012,-0.0349251929718684,-0.4922020084785977,-0.41,0.32597192923568086,-0.3639843872192661,-0.51,-0.41,0.3112945639916785,-0.11,-0.51,-0.41,0.315877409987442,0.00219082212861553,0.29030810599260637,-0.3412501798138836,0.11265323742728862,-0.04595116844223651,0.051075437440831276,-0.40453387526175766,0.3467279557094387,0.0031687325667672343,0.09543226224310412,-0.41614959897634285,0.34551502815100893,-0.11,-0.012287024956324995,-0.41,0.3862036118392028,-0.3677093361699333,0.011202357564419528,-0.41,0.39162364301282,-0.07725147159775315,-0.012351931562390409,-0.41,0.1606812693372597,-0.03352208200813024,0.023181350054255836,-0.41062775,0.25200599823560516,-0.61,0.006224246630526465,-0.3903922972679418,0.14329090866986727,-0.04102798087766885,-0.47949749316978313,-0.35612657355444693,0.34323459294781294,-0.06967167764491934,-0.5028526178449786,-0.3753139279977038,0.3799710764125084,-0.11,-0.51,-0.41115874999999996,0.36097553917416353,-0.11,-0.51,-0.41,0.28640366010333307,-0.61,-0.51,-0.3846697163565438,0.33460980576717964,-0.11,-0.51,-0.41,0.2893020621918357,-0.61,-0.51,-0.4106975,0.27490400031988094,-0.61,-0.51,-0.41,0.0723526711084905,-0.03453525308016847,0.4004688069838487,-0.3189698173794981,0.023949766040640863,-0.12590867626714217,0.4274109355796002,-0.41,-0.01,-0.61,0.4213915886068942,-0.41,0.02877365823456688,-0.11,0.33228910396100786,-0.41,0.03401711263102141,-0.61,0.3626493121298252,-0.41068625,-0.01,-0.11,0.27515701664964626,-0.41,-0.01,-0.11,0.2134903243579188,-0.41,-0.01,-0.61,0.05330195156167318,-0.41,-0.0106975,-0.1713119898208479,-0.46658226691695165,-0.40170541073418026,0.3189377612913094,-0.11,-0.51,-0.41,0.17891677936207867,-0.11,-0.51,-0.41,0.3225891662388757,-0.11,-0.51,-0.41,0.19435546527116687,-0.61,-0.51,-0.41,0.22139758962634526,-0.11,-0.51,-0.41,0.02457115622387921,-0.11,-0.51,-0.41,0.02733883842526446,0,0,0,0,-0.07328326665134882,-0.012078501765625001,-0.41,0.3022273259516397,-0.6728093473955791,-0.023149556544468826,-0.41,0.29100448066300255,-0.11,-0.021218914652909066,-0.37444350278622296,0.2432638124286657,-1.01,-0.04735,-0.41,0.04970314376689064,-0.11,-0.012025000000000001,-0.41,0.24388660367813658,-0.11,-0.02695144554579626,-0.41,-0.01,-0.11,-0.020387504770188372,-0.41,0.027784563533141272,-0.11,-0.01,0,0,-0.19930507330776473,-0.4754590584999478,-0.41,0.20083042140628146,-0.11,-0.51,-0.41,0,-0.61,-0.5034345801146131,-0.41,0.03506930903824348,-0.11,0,0,0,-0.8815000058186131,-0.51,-0.41,0.1910397654560469,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-1.01,0.33729439278872597,-0.41,0.0056114526308387435,-0.07262002540341235,-0.0106975,-0.41,0.3095273657984645,-0.11,-0.010448657201197697,-0.41,0.26866208783549644,-1.01,-0.005236700986869682,-0.41,0.06945359554110438,-0.5692318105278884,0.11376059693864382,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.20119253097639447,-0.019202740548556356,-0.41,0.10649304296774914,-0.61,-0.01,-0.41,0,-0.11,-0.51,-0.41,0.21889600169303974,-0.11,-0.51,-0.41,0.12222128621731032,-1.01,-0.51,-0.41,0.10932532267770469,-0.11,0,0,0,-0.11,-0.51,-0.41,0.008148653632510444,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.02600492155817473,-0.41,0.28571574681475126,-0.61,-0.01,-0.41,0,-0.11,-0.01201809544767401,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,-0.01,-1.01,-0.0472375,-0.41,-0.01,-0.20146250000000002,0.0029399404138512383,-0.41,-0.01,0,0,0,0,-1.01,-0.51,-0.41,0.005521259424240178,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,0,0,-0.11,0,0,0,0.33900442456237545,0.43618374339180704,0.5374906499717668,-0.07209253245437222,0.35142793146111523,0.45411125958870274,0.43395842887766173,-0.06019873324311691,0.34197642096778574,0.36723102079402264,0.530904473879654,-0.06762825916644075,0.32559367756786683,0.43194439552576464,0.5293278967592282,-0.06312116732906746,0.26382260015055287,0.3997044438534876,0.30366391562062417,-0.05957812410983708,0.2884023967020532,0.44680181858286666,0.37639629963781673,-0.05989481216834219,0.3261791584004181,0.3538085045787602,0.5378386867835462,-0.06218277448759338,0.1300769491766475,0.4377576459690673,0.2994028034832759,-0.23727758226923218,0.27307043770415584,-0.05627087868101971,0.5271062407586995,-0.050239974842306634,0.30695823628938224,-0.06909818612638698,0.5313686173450111,-0.05178220961407352,0.35825234588744015,-0.05220111544708851,0.5306775516100448,-0.06577343645414879,0.23953782534230442,-0.22288389596260508,0.4342840156235035,-0.14716757497595828,0.2458446364999941,-0.07997239242822474,0.4918881057153895,-0.07845223476471351,0.08043905899186418,-0.1641662497081492,0.5205268064998223,-0.1298712262012331,0.2965393228764384,-0.16092536590427825,0.5561376962698824,-0.21050077984162757,-0.021805888235024308,-0.3894976484559474,0.5142578656221136,-0.39544550648838467,0.29724329219503887,0.3859766860934252,0.5018324064512999,-0.05532376598674383,0.21050843380536863,0.3653444379785462,0.5137272497380108,-0.059860615433844196,0.32034577744833787,0.36324012769394404,0.5229051165190097,-0.06370032506191778,0.1380817088279977,0.3383209245076282,0.5042676483520232,-0.09775571765354885,0.2917815090224329,0.37337364785626137,0.5323028693177844,-0.058405177007561204,0.1596889552083079,0.30164142738386535,0.5289491625175953,-0.1406630317105075,0.09043489632131972,0.34027821311713125,0.5426510162383026,-0.10656971922195246,0.10252681736964488,0.09749652243817553,0.546985527439722,-0.2734163984301887,0.328625364476846,-0.1398390532235792,0.48238275665795266,-0.09369410099287528,0.1328587084958239,-0.2846811145509721,0.5057222711332818,-0.2334552707728296,0.14089799694481717,-0.26498399024330554,0.5361506882029103,-0.22446015223319618,0.11207704097685192,-0.41629682630471837,0.512215309617168,-0.4634838650280534,0.25403211678784304,-0.33767135465493736,0.5484439127428997,-0.2834480711808627,0.0985035672760767,-0.3916038434474058,0.5336109883028901,-0.3933930338362092,-0.004921448337901618,-0.51,0.5091328705757029,-0.463576805043447,-0.4417181017128836,-0.51012375,0.5173439165625717,-0.39379716866333075,0.24370879143230975,0.41491040853660266,0.28165732492330714,-0.08517581332920374,0.2908162578952918,0.29553177697795024,0.5160563673689529,-0.11333750292325603,0.21961547655505287,0.2886285405625156,0.4810104071919612,-0.1413174992747798,0.2641088138991398,0.37713798913898894,0.22730044073721437,-0.1989204206570398,0.2327708852287044,0.39967233397879987,0.2622182495344405,-0.09817215034656836,0.12734511146069916,0.39578222487143194,0.307840295668782,-0.2039159525842631,0.28135120262152863,0.3523266283777861,0.27827419176055124,-0.20274398813317693,0.08251290890952706,0.11785725198199716,0.5359636767273693,-0.46805435303165666,0.3273848998521046,-0.11119063043382278,0.509186990784624,-0.12499437162813724,0.25872802369370645,-0.18478022886695933,0.514002003665752,-0.19132031660758694,0.26068638091517343,-0.21821701024012177,0.5198474388824441,-0.20105015872938134,0.012457729755311377,-0.4770525654738819,0.5155659491791831,-0.31889917870296897,0.21873718118158345,-0.2874009994332434,0.5190388870484157,-0.2500537011941492,0.01442514290738861,-0.43157650752609394,0.5400265619433142,-0.3075795504235729,0.04385511822827083,-0.47296863646194887,0.4693072979890341,-0.43544396407259167,-0.441611416795216,-0.51126,0.5160960167988645,0,0.3030968786888984,0.30540006971884975,0.4577995252035853,-0.1154404515288428,0.18564029897447304,0.3152454006281655,0.4744966274592855,-0.24696338664710954,0.19127316439023,0.3198059104035759,0.4984641823959497,-0.19683571898368582,-0.02365671054933726,0.11483969577708107,0.4852536394990471,-0.4247089868673861,0.22072512610394582,0.23385203990995682,0.5292239114628038,-0.1790875995712086,0.0060713424135054594,0.1960045965081837,0.489546821183382,-0.2951550273784227,0.0969882670034479,0.12456311229371708,0.4577304909229561,-0.3893913222531101,-0.4293454130307175,-0.01,0.5081021651522655,-0.51,0.16086487091205795,-0.3528226904062124,0.470954389691624,-0.2873134696115695,0.14050978666412794,-0.44359176108473625,0.504610828795063,-0.4185562127481729,0.046118370466681616,-0.45886488166988537,0.502225102243667,-0.3811600703865124,-0.05042350760650676,-0.51115875,0.4959012676032814,0,0.012606301040888349,-0.4243441034392703,0.49926169601283665,-0.51,-0.022549799324701997,-0.510820125,0.5391561730976985,-0.51,-0.02614355710064701,-0.512025,0.5027148999424594,-0.51,-0.01885362824086209,-0.51,0.4334011307111456,-0.51,-0.390938863739855,0.21660489627925072,0.5131487624898646,-0.13516347069803733,-0.19719311281250237,0.07116059496782881,0.5216581217688931,-0.51,-0.33034493259723724,0.14730619565288808,0.5413181759083122,-0.51,-0.11,0.07650370448882707,0.4928571694151444,0,-0.14897417780594346,0.14254129033537416,0.4991797549435619,-0.3907668992743113,-0.11,0.03576078287250268,0.44035900466493255,0,-0.8804060987367731,0.03417115906374945,0.5106342077060348,0,-0.11,-0.01,0.32473548604909525,-0.51,-0.20089958762507762,-0.38349651907269133,0.5351862841283772,-0.51,-0.1599904497048242,-0.51,0.5287144190614992,0,-0.61,-0.51,0.5310077625034126,0,-0.11,-0.51,0.4094113021526763,0,-0.11,-0.51,0.4981491409236032,0,-0.11,-0.51,0.37726997457617534,0,-0.11,-0.51,0.35003882894660177,0,-0.11,-0.51,0.13585224602563106,0,-0.06244108986153425,0.027601076275255654,0.5293931972776771,-0.3923281658757547,-1.01,-0.01,0.5251144808304277,-0.51,-0.5266073980474377,-0.002339073390163912,0.5162902789034356,-0.51,-0.11,-0.01,0.47651164581884764,0,-0.162025,-0.01,0.4533124405258735,-0.51,-1.01,-0.013947165524550779,0.4354387362031035,0,-0.11,-0.01,0.4083472580039891,0,-0.11,-0.01,0.2653419467962396,0,-0.61,-0.5015845745083123,0.5142703454044285,0,-0.16298530533034433,-0.5294418990228139,0.4600864672425247,0,-0.11,-0.51,0.386036991160225,0,-0.11,-0.51,0.27300479886520646,0,-0.11,-0.51,0.30635445406546347,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-1.01,-0.51,0,0,-0.15920923043108423,0.12216969878241637,0.5352876294489172,-0.4685493753578632,-0.11,0.06309665789513658,0.463408266464458,0,-0.06951361453759847,-0.01,0.45179246930992173,0,-0.11,0.026143362150340632,0.3495415299610537,0,-0.9208464731224292,0.051380460689584045,0.4124840652575835,-0.51,-1.01,-0.01,0.40438168835360366,0,-0.06918946289977236,0.029652523274568972,0.35201708629143724,-0.51,-0.11,-0.01,0.15685972230143752,0,-0.8626035167877543,-0.4370264774495679,0.4827102732870454,0,-0.11,-0.51,0.446896418624219,0,-0.11,-0.51,0.3963940274966091,0,-0.61,0,0,0,-1.01,-0.51,0.3900396468129348,0,-0.61,-0.51,0.25006810287362563,0,-1.01,-0.51,0.24648372337998314,0,-0.61,-0.51,0,0,-0.11048459396958756,0.05258090760237516,0.43334318277234424,-0.51,-0.07622790906759772,-0.01,0.44210986396244545,0,-0.11,-0.01,0.43562213412726103,-0.51,-1.01,-0.01,0.21429732614023414,0,-0.12024865282005538,-0.01,0.41080241477057955,-0.51,-1.01,-0.01,0.317222569324994,0,-0.11,-0.01,0.25118801946948666,0,-0.11,0,0,0,-0.17803727014374016,-0.51,0.3882961136765234,-0.4773590178341514,-1.01,-0.51,0.2231553131902111,0,-1.01,-0.51,0.25731450832129227,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.29384220562327334,0,-0.11,-0.51,0.14353162170449846,0,-0.11,-0.51,0,0,-0.11247321798733867,-1.01,0.1515885985239439,0,0.22168626805325384,0.4564950853519188,0.02687645961330031,-0.06813424668102228,0.22030207618199482,0.44908392966280813,-0.0020820923290688336,-0.07668259086803274,0.04894034241411739,0.4559385635205127,-0.07570270637783566,-0.11916488167969058,-0.272743439153258,0.44050700000853704,-0.2227599603157826,-0.3265106095937347,0.20767863778400267,0.4213883159624978,-0.010605478580134348,-0.16093440086293664,0.12297707405007448,0.4432051342940882,-0.22792475370039447,-0.33690835679063813,0.013784461288625108,0.4480768741647895,-0.21119213053492047,-0.30570348943166764,-0.51,0.4217656162918357,-0.41,-0.46515725450170003,-0.29303778078700543,-0.28133912938178907,0.019843127594762318,-0.3221159279601078,-0.23708381091434969,-0.2414445911593216,0.03136135860716793,-0.38740125010338333,-0.35145256135409275,-0.4573888866864,0.013047332221916416,-0.510135,-0.41683560739888104,-0.36283763526590035,0.0171014727868955,-0.4685068172645318,-0.61,-0.47230762026471856,0.030032764623229857,-0.3677969587429391,-0.16727391138910092,-0.2887864746439426,-0.05009233789192642,-0.255030267533531,-0.3922215630236832,-0.2929356710430095,-0.4024326546187694,-0.4255759145723873,-0.12438731422238539,-0.4825970511468836,-0.3908664934244505,-0.4290371337198847,0.08705277005029392,0.39123670556576995,-0.06271473881240316,-0.18880329489832662,-0.2570777522531773,-0.07812634563629184,-0.017760624620684656,-0.18428953951576213,-0.15259087498580629,-0.03525618981082479,-0.007344204541246763,-0.12370000629705447,-0.10763160058914326,-0.07220260118707018,-0.14198943554783874,-0.23220628227147222,-0.029640883756386807,0.09538555314820119,-0.09335736900627789,-0.13478849802497797,-0.19822188844416488,-0.05404593759507498,-0.2169398450725411,-0.270762314015281,-0.13155930849074277,-0.057663937528317395,-0.19880234116592696,-0.22332421520979756,-0.24662779945714924,-0.15025746655403796,-0.34223695885718636,-0.36017396406810553,-0.4090911823507286,-0.4946463105699017,-0.008587697881097946,-0.4865872069687299,-0.3358495384866829,-0.5236354831290041,-0.028834422658636772,-0.51,-0.4350251400927712,-0.5059395982004821,-0.009978199745634957,-0.5023387500000001,-0.39667176000650545,-0.51012375,-0.2593807034443858,-0.4667218760831605,-0.4539151871611749,-0.51,-0.04060762422022943,-0.51,-0.407643496032761,-0.5382812137633276,-0.3163008394501733,-0.47526946699514994,-0.36161195208500435,-0.51,-0.41,-0.4716558791804717,0,0,0,0,0.1984907395096399,0.2502942877005722,-0.0035717879463857648,-0.17478667033836257,0.026362326923070226,0.37212311628537964,-0.20022241023855666,-0.35344258780572035,-0.008650292019512007,0.10854644400063176,-0.09950785540063911,-0.11198598220484769,-0.05004521002542374,0.0391241508466526,-0.2272548860680665,-0.30732127044889035,0.01067796955047812,0.1782066657846742,-0.004804429842266764,-0.14158830489141444,-0.0265814564320778,0.043730684132755146,-0.1688714398544169,-0.27993298483814655,-0.041123174440146355,0.10226631303067601,-0.16981784079741885,-0.1755823941620735,-0.11728088833386865,-0.046446311016857034,-0.2971053264232414,-0.4658447722548526,-0.422600649696485,-0.4158727425534372,0.0294550081152486,-0.4788758507069996,-0.5154172743397569,-0.48482309707574023,0.01100377380872351,-0.51,-0.36297593023046787,-0.4891244711534971,-0.04724669914689068,-0.51,-0.4173241242565241,-0.5074584624893198,-0.2575483496716568,-0.51,-0.32194735037209987,-0.5004017526049034,-0.06827880555708367,-0.49483038499804133,-0.4143763545447594,-0.51,-0.13582348203163272,-0.51,-0.15976075391441605,-0.5059479504752664,-0.41,-0.4912548453756794,-0.11,-0.51,-0.41,0,0.032926314226485925,0.3263447114081898,-0.18278946156266734,-0.405257468210363,-0.13206813330430542,-0.11505788937814293,-0.030652290151663774,-0.2122702426710074,-0.25621375764247845,-0.08737540378744546,-0.27455137872362384,-0.288441107127162,-0.2755713677178624,-0.14997966047266365,-0.31209289997920353,-0.42795199596702727,-0.08777689394274019,0.17589800702964822,-0.3201161284489786,-0.31272950250013076,-0.4560344387128853,-0.13012622478140007,-0.37162084628207614,-0.42735370291614805,-0.12158740453668287,-0.10177018290634955,-0.37278017421828735,-0.4017158326722456,-0.5606975,-0.13548874970032704,-0.41062775,-0.49309177355474293,-0.43487863380312847,-0.51,-0.0816803984563462,-0.51,-0.45812130201968837,-0.5106975,-0.15599103575648823,-0.51,-0.44966594280815875,-0.5091934659103774,-0.3729183027618779,-0.51068625,-0.1340294536514895,-0.5189535565545634,-0.41,-0.51,-0.51,-0.51,-0.3336626373637568,-0.51,-0.4429681188378753,-0.51,-0.31652479457031146,-0.51,-0.18321083452782758,-0.5135584357314802,-0.3787034503761674,-0.4706367949569936,-0.11223141992374505,-0.51,-0.38842704865517685,-0.51,-0.10915446099892126,0.4502786906070691,-0.2728194966223936,-0.402328302031886,-0.11,0.44259039767745323,-0.41,-0.4703017518041257,-0.07967987406528487,0.4522160126711623,-0.3630897854516379,-0.4652888449587489,-1.01,0.3208274268719066,-0.41,-0.51,-1.01,0.44107798426824835,-0.41,-0.4781812105919735,-0.07854172972010945,0.2227199697960242,-0.41,-0.51,-1.01,0.10642615602851667,-0.41,-0.51,-0.11,-0.01,-0.36613328448868654,0,-0.5272872270941642,-0.51,-0.016500543731333483,-0.51,-1.01,-0.51,-0.04556760536874797,-0.51,-0.5065058438394796,-0.46481260312420064,-0.10392389953389751,-0.51,-0.11,-0.51,-0.41,0,-0.4226841877345921,-0.4983313163295499,-0.26739664822498443,-0.51,-0.61,-0.51,-0.27212438994566907,-0.51,-0.9657852995548233,-0.51,-0.3016783192555819,-0.51,-0.61,-0.51,0,0,-0.11,0.36921653051847014,-0.36531080250801706,-0.51,-0.9198508308105462,-0.05396601798295233,-0.41,-0.51,-0.11,0.10405806121220948,-0.41,-0.51,-0.11,-0.01,-0.41,0,-1.01,0.049793531027644014,-0.41,-0.51,-0.11,-0.021137500000000004,-0.41,-0.51,-0.61,-0.023775947505325558,-0.41,-0.51,-0.11,-0.06693976596341406,-0.41,-0.51,-0.5065058438394796,-0.51,-0.14776682884129252,-0.51,-0.12396651402463005,-0.51,-0.41,-0.51,-1.01,-0.51,-0.41,0,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.647709368582133,0.3425852226814201,-0.370912475556507,-0.51,-0.11,0.2807240730599222,-0.41,-0.51,-0.11,0.0863650187500391,-0.41,-0.51,-0.11,-0.00571412354945604,-0.41,-0.51,-0.11,0.0734875428364491,-0.41,-0.51,-1.01113625,0.014598536175450575,-0.41,-0.51,-0.130748815765768,0.05498249181608235,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.5768852888694477,-0.51,-0.18785251933384883,-0.51126,-0.41888054923956686,-0.51,-0.3090339381094136,-0.51,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0.18062141175013172,-0.36469947624445465,-0.51,-0.11,-0.0789776937114132,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,-0.41,-0.51,0.284430953504207,0.369146394176676,0.48180629428479405,-0.08857260850604663,0.30325043911700855,0.38413610894750067,0.46773925697800284,-0.09872973256158815,0.29191808541906894,0.36332552636446447,0.4511201384580667,-0.08445501971787234,0.1158551104750128,0.44202636884448226,0.34067579388649044,-0.21137268546149934,0.17311804530450575,0.25252783557624825,0.280438387858768,-0.08292352214791184,0.21461185632631044,0.43006909958096906,0.23803858618859192,-0.2560772033079075,0.08478321948461476,0.275277435030653,0.4758077890562007,-0.20743010637135859,-0.03865578345165991,0.1785375080848026,0.4748920056815941,-0.51,0.3334946208471557,-0.05814989710709328,0.462645921626321,-0.11090916802137744,0.21669842721543403,-0.18715267964912546,0.4889683111835479,-0.20105210809046625,0.19015953991468373,-0.22513126576305104,0.44487859165929067,-0.17759147528610542,-0.06665463506037309,-0.43757951780246757,0.4783921691604905,-0.3394561076111156,0.252892688362507,-0.15138947156162463,0.2207636295100079,-0.17591704068267655,0.1049337110861419,-0.38634877009204466,0.4142474911473881,-0.4027455163300695,0.12614414591126033,-0.46680328474594146,0.4291761058158045,-0.3716106043733251,-0.06428966939367789,-0.4989667246912034,0.41202510042721274,-0.51,0.3299266271437972,0.3878014198027336,0.37464486000229,-0.24610203091628388,0.17692586317686923,0.175953117180566,0.39166144951135473,-0.2295706405930738,0.19606551143188886,0.15328712143113146,0.28741438855601514,-0.23373221136864095,0.1881242992125513,0.08298575956645468,0.448778558890616,-0.27637390274244017,0.24192303076246877,0.22173341764009494,0.41987470830601537,-0.20183270481377188,0.14223481919210604,0.1064021332468987,0.38854500492898364,-0.38557263742918013,0.013774369055216187,0.13910817553547894,0.41991678579632447,-0.4318129000177196,-0.11,0.01931433947514872,0.4111804166966514,-0.46800276353576853,0.2032134316241273,-0.272413146736473,0.371865795553742,-0.28520149661658134,0.14469921305009176,-0.4241396536977742,0.3348172363632304,-0.3134426748732444,0.0043625903361953905,-0.4655855890057906,0.20044107522335147,-0.51,-0.06639587983088344,-0.49744058317490913,0.3917640137548295,0,-0.019779933884652004,-0.4918484238879122,0.41705368902710105,-0.4705279308177089,-0.11,-0.51,0.42890047147442195,0,-0.027257188910591736,-0.5070439644869523,0.358619081219933,-0.51,-0.11,-0.51,0.3596752364061497,0,0.3106549389152564,0.3270943784849489,0.47511327355701194,-0.17313902271661274,0.12753025056909878,0.2916223864428618,0.42919393367004954,-0.3522611678183672,0.18191693073329013,0.3191461025900988,0.20480765761164033,-0.20856421412841944,-0.07431987728535042,0.23862635799177004,0.19354135552948726,-0.331583659040947,0.22278039992497334,0.20293335710098506,0.32005644144186346,-0.2695458992477121,-0.07073340177546167,0.07507981454305983,0.3564881057911837,-0.41864038862570885,-0.02505213401708234,0.07522958103122299,0.42531246172112624,-0.396965371068701,-0.11,-0.01,0.43022394400432157,-0.4892603786522967,0.10618240524031453,-0.22173971299132503,0.4585310141173297,-0.27752405904197225,0.12906559267622625,-0.4460132346031769,0.44249923915032346,-0.455179577104323,0.1670422590023472,-0.42475233292501496,0.45404413545140626,-0.36881305520092633,-0.04115764475498111,-0.51,0.22555142536348835,-0.51,-0.021407799652846254,-0.51,0.3001908932649642,-0.4342801118960081,-0.61,-0.4609167046228288,0.3491082678165229,-0.51,-0.04792019444623111,-0.4827924302427701,0.3627719872928115,-0.4829553309657561,-0.06591825693883163,-0.50444025,0.1409196517138625,-0.51,0.22693567201699483,0.20534255262954368,0.39793707637246084,-0.18702525274008122,0.07990909631504499,0.13357877510611815,0.3690709634425401,-0.33406306979540207,-0.32193168537900274,0.1246656547188692,0.44017884553956554,-0.38213152796408983,-0.06729713768445966,0.017833956975242593,0.4034535479448314,-0.4695589377394126,-0.021723574040747554,0.04690935992261058,0.44106959463008777,-0.37457950618449404,-0.4254204546246765,0.009765811331701797,0.402962719245637,0,-0.06603279184653485,0.03298380568842311,0.36852581806177503,-0.4794776099995655,-0.06533539597199606,0.021359258076939662,0.3762011515159648,0,-0.06593797040591634,-0.44182875643310404,0.40751105435221024,-0.47966476633073807,-0.11,-0.513067875,0.31687076550365195,-0.4980733296948682,-0.11,-0.51,0.32175394031458315,-0.5028708755492965,-0.51,-0.51,0.3417266837564978,-0.51,-0.06302512070081637,0,0.389144412701794,0,-0.06906944503374045,-0.5106975,0.31469548141219544,0,-0.11,-0.51,0.27913254496133566,0,-0.11,-0.5029254330356348,0.20638790975541915,0,-0.15605636615477864,0.03801199590312305,0.45783967970348655,-0.45107640782512887,-0.16612263504483477,-0.01,0.4817156327043109,-0.4677409588861251,-0.11,-0.01,0.37784190798328415,0,-0.18315456998780885,-0.01,0.34998238696509354,0,-1.01,-0.01,0.39874233330670944,0,-0.61,-0.01,0.2862452663589599,0,-1.01,0.03197723811536268,0.3404451310787005,0,-0.11,-0.01,0.11102510753052851,0,-0.20644524793028776,-0.46610804702171565,0.4805782475725205,-0.51,-1.01,-0.51,0.33988696812267044,0,-0.1895167592187864,-0.51,0.27161455395534784,-0.51,-0.11,-0.51,0.16196524006741952,0,-1.01,-0.51,0.32437622487840523,-0.51,-0.11,-0.51,0.09528438076734164,0,-0.11,-0.51,0.15636357569522238,0,0,0,0,0,-1.01,0.059664187752975835,0.355944696806934,0,-0.5291358494526961,-0.01,0.2788008062553862,0,-0.11,-0.01,0.3244072263906435,0,-0.11,-0.01,0.12017135645996067,0,-0.61,-0.01,0.31351007316168905,-0.47086583926936104,-1.01,-0.01,0.25585033695070214,0,-0.11,-0.01,0.1936689103105302,0,-1.01,-0.01,0.09,0,-1.01,-0.491257715029895,0.2800528964550625,0,-0.11,-0.51,0.16349207805709706,0,-0.61,-0.51,0.2173073124028086,0,0,0,0,0,-1.01,-0.51,0.17196273727479924,0,-0.61,-0.51,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11148055513014367,0.06579210062504609,0.38171040564966846,-0.4747573498780474,-0.11,-0.01,0.36346894307778493,-0.51,-1.01,-0.01,0.18397489341789075,0,-0.1897581166306375,0.012847568152951553,0.1685557614468758,0,-0.11,0.013816182330282279,0.30631873783406366,0,-0.11,-0.01,0.19476322902202603,0,-0.11,-0.01,0.15943652394964977,0,-1.01,-0.01,0.09454648403479238,0,-1.01,-0.51,0.3766389288890512,-0.51,-0.12574812822877152,-0.51,0.19666779932184367,0,-1.01,-0.51,0.15810507463057336,0,-0.11,-0.51,0.13031686579882681,0,-0.11,-0.51,0.18122572398971087,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.61,0.028943543511436555,0.3918734640200382,-0.51,-0.11,0,0.17817671526446335,0,-0.11,-0.01,0.19117179957900757,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.10927237038701558,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0.12662486942122333,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-1.01,-0.51,0.12927094720888432,0,0,0,0,0,-0.61,0,0,0,-0.11,-1.01,0.09225191962688543,0,0.18496074751395725,0.4405330831691221,-0.11527158945560312,-0.14716539129379444,-0.0075098936945527175,0.42312768648888327,-0.18579421638218116,-0.3261679850505387,0.057554369266695785,0.4511965922511219,-0.35032785036206143,-0.36656567003083723,-0.11,0.4403173043793217,-0.41,-0.47182539804396534,0.014040019644775054,0.333159195091554,-0.24327710035962868,-0.31514428828994595,-0.5223172286863867,0.320797044415277,-0.27811543217793444,-0.4692472692876037,-0.11,0.26306273452006196,-0.39072877286797975,-0.48294971970388717,-0.61,0.27773868873921487,-0.4104892355220374,-0.51,-0.4024334511876897,-0.38746362245507765,-0.07773030363784417,-0.44859865584593556,-0.34084964528127537,-0.37170183822315683,-0.06069281166229014,-0.4106374343740699,-0.4422346371971897,-0.4323925280739206,-0.07668384243880766,-0.51,-0.4143172389956515,-0.51,-0.30075504803594005,-0.51,-0.08600615432807461,-0.42357976564761607,-0.39834468126602235,-0.41805650747766726,-0.4350506033104713,-0.4441535989671512,-0.3597330593750951,-0.5023387500000001,-0.12900501366174383,-0.48646409268245716,-0.37018582068910827,-0.47376264085096476,-0.11,-0.51,-0.41,-0.51,-0.014283687048692328,0.3873620437806413,-0.25675204934004187,-0.4210278686655269,-0.39719670512325567,-0.051199217498427096,-0.30313692690021626,-0.32770416990026724,-0.19779636217351737,-0.0915985404624303,-0.4055974277495094,-0.3420885501651567,-0.2410491085402739,-0.13671504777210305,-0.37313474730409496,-0.42167189700014795,-0.09742261791378656,0.1657541150670019,-0.3499263266380098,-0.4927180364740056,-0.14689092702389817,-0.13862103109842294,-0.409183892148448,-0.43111724277293384,-0.5083806445980003,-0.032769573413313456,-0.41070874999999996,-0.4151975611616286,-0.1472255131111787,-0.10704506489918905,-0.41012374999999995,-0.4628827411498593,-0.4539151871611749,-0.51,-0.17034948127453386,-0.51,-0.43132834981832907,-0.51,-0.21099036602234555,-0.4981059003442681,-0.4539151871611749,-0.51,-0.36260564850508253,-0.51,-0.4466712406502689,-0.51,-0.3687350804172575,-0.47769180126021926,-0.4328919958368655,-0.5121373936633542,-0.38975360158685884,-0.51,-0.51,-0.51,-0.3216052846278733,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0.11495959022756956,0.21734591927443095,-0.36862025825719064,-0.3571457565540028,-0.07050516725814525,0.35070394759612544,-0.3996242240622838,-0.51,-0.26834031382023615,0.05370969940790575,-0.33152471225956326,-0.32969500122584117,-0.0934798642145218,0.019445034140753843,-0.346173754905084,-0.49884570096900493,-0.03537398919887211,0.033202843038709615,-0.3106617039014856,-0.33999963283807066,-0.07148846704621592,0.04292172220784679,-0.41,-0.4862695208918773,0.16630412924081517,-0.06260214789171445,-0.3828996481725972,-0.51,-0.11,-0.08404591916485746,-0.38433765438387635,-0.48502275725496824,-0.46898936775164035,-0.4755019064228248,-0.14971316366271434,-0.51,-0.61,-0.51,-0.1777443407774112,-0.51,-0.4158101378871079,-0.5016793011528224,-0.3191068881492376,-0.51,-0.4539151871611749,-0.51,-0.3720610629770947,-0.51,-0.06783239088922177,-0.51012375,-0.38651104912104134,-0.48599098095841764,-0.61,-0.51,-0.35647604827879603,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0.31551982250732796,-0.41,-0.51,-0.09634591338898674,-0.14044437170163301,-0.341787524249564,-0.4624391840386113,-0.14792799418241268,-0.09046894617657467,-0.4051655376253148,-0.49160851144239953,-0.11,-0.047853263131969394,-0.41,-0.51,-0.11,-0.004836074830395658,-0.4106975,-0.49975026699277,-0.0992554036139116,-0.11146847294776518,-0.39547553214242614,-0.51,-0.11,-0.03611458998515945,-0.41,-0.51,-0.11,-0.01,0,0,-0.3287809071374288,-0.45457065061843965,-0.41,-0.51,-0.1991583094413091,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.61,0,0,0,0,0,0,0,-0.1089862792753483,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.07133155378635007,0.42610040785314857,-0.41,-0.51,-0.61,0.23412651161046527,-0.37413930984370414,-0.4965881610970644,-0.61,0.27347854052295406,-0.41,0,-0.11,0.04885188817777921,-0.41,-0.51,-1.01,0.21450204368658807,-0.41,-0.47372210455586267,-0.11,-0.01,0,-0.51,-1.01,0.03943361144343993,-0.41,-0.51,-0.11,-0.01,0,0,-0.45850578857601837,-0.51,-0.23487180889464798,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,-1.01,-0.51,-0.41,-0.51,-0.5065058438394796,-0.51,-0.3247510414303019,-0.48635586777898665,-1.01,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.2588957390733779,-0.41,-0.51171,-0.61,-0.05659346329508658,-0.41,-0.51,-0.97,-0.020745432115212965,-0.41,-0.51,-1.01,-0.01,0,0,-1.01,-0.01,-0.41,0,-0.11,0,0,0,-0.11,0,0,-0.51,-1.01,-0.01,-0.41,-0.51,-1.01,-0.51,-0.37273947548708336,-0.51,-0.61,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,-0.41,0,0,0,0,0,0,0,0,0,-0.8836597791318536,0.20687892044896805,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-1.01,0.026859273436139187,-0.41,-0.51,-0.11,0.000011290186370511643,-0.41,-0.51,-0.61,0.05142170193959664,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.4151785100874742,-0.51,-0.3104468189593591,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0.05720035192806122,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.11,0,0,0,-1.01,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.21983171843038754,0.44876894790881094,0.5327581336163318,0.38924874613291227,0.13736391358475292,0.44548702091595016,0.529552861381048,0.3797963575480721,0.24150819471271198,0.4506766394517113,0.532757612607729,0.3883305676671095,0.2091050353920224,0.40488517716483224,0.5200338428130696,0.377338258048165,0.28752140536476906,0.39768039245086484,0.5127274578417589,0.3694722318689974,0.25026264837585266,0.41514646969361435,0.5337462372191892,0.37105157511130493,0.26235581216802156,0.45260632603321344,0.34147793897444434,0.3553496152138092,0.08117632014851817,0.40156204934500617,0.5296403485892114,0.3419599888340964,0.2775174895100958,-0.055783423866730866,0.5278335313433481,0.33758894745002466,0.33357884120690684,-0.06524168428196667,0.5329628275892622,0.37040173185804925,0.29890141617747285,-0.05650921960210915,0.5410635380178248,0.38394231187205413,0.1156482284053898,-0.0976725598748207,0.5435387713062564,0.32042770378425883,0.27256479600495076,-0.0697580780148747,0.5105159848999549,0.36477009629675355,0.2767966749972469,-0.16511562273591374,0.5021586819144817,0.3417612829309807,0.2847930219450893,-0.1051475103449521,0.52477161698377,0.34336581346169137,-0.020050902413760972,-0.3641562080247838,0.5225017336569979,0.17617334123138634,0.2626627850420878,0.3845073449349282,0.5345291979108135,0.38556942055592447,0.20307329928253962,0.3436664484705318,0.5292290310431065,0.3618793774247769,0.28142798892621446,0.3935175865818612,0.5339372268330705,0.3846424101046078,0.2520972829631478,0.35091689700117135,0.5362361332878514,0.3435314365219268,0.29497708264943767,0.39275336665935556,0.5262983009708332,0.3905854524267817,0.21173728835222289,0.30364136278185105,0.5303138749379632,0.30640834174144244,0.2338947297742013,0.3471014614813705,0.5226285771421298,0.374280713998798,0.0817853192871478,0.24857341786200227,0.5093723372519114,0.21694225169219017,0.1824800675006108,-0.1277577095614073,0.5306928257045056,0.35501338300371166,0.1729581324191539,-0.19006982503434183,0.5381096962939265,0.3281817641992016,0.16800229295642483,-0.1937044592979624,0.5305019520919926,0.365699958251656,0.026632042929756364,-0.3833264536547757,0.5287464630447082,0.11404711312768101,0.08782586397870298,-0.31269050937301773,0.5197399183351821,0.34841808293265597,0.029583724559849346,-0.3793030275466496,0.5164199864878074,0.22565496765449997,-0.3128606275838155,-0.4228276223372902,0.5166063114266735,0.06637891694885317,-0.06692733690239729,-0.5106975,0.5107603233725848,0.029090556225975367,0.22893825515579916,0.39733919338797363,0.5200460813754408,0.36123874835487685,0.22143746984738666,0.3929068865175336,0.5414794273315069,0.3480400333147492,0.20596879053104805,0.3641120220046963,0.519941405207369,0.32917245110801385,0.19596457261456074,0.24734332126786032,0.5459193091861735,0.30870806826421043,0.21723145138164082,0.3117502783785359,0.28742457308888897,0.28754010403885966,0.2425483116784478,0.3815564144040392,0.46192466287244915,0.2913351792900725,0.16797226014952119,0.33280369591577935,0.5357908642355501,0.31319042663900604,-0.1440234179826689,0.36650213469449744,0.17103352999459137,0.12214977475581307,0.23627244314280044,-0.09907187913949053,0.533587155020742,0.2695415580264714,0.22605853854448626,-0.13135689501742578,0.5352794484523472,0.25710554208928305,0.16302559719466053,-0.17133752208743483,0.4971379508182866,0.2859862195547505,-0.0015723928899153902,-0.41839719115905527,0.5133860696713046,0.2023418479125884,0.21184115425012615,-0.16958566997805927,0.5222018597095139,0.3035651319726995,0.1423027417593607,-0.3715524752169408,0.49787338215860166,0.18496994638214065,0.16988768497006376,-0.28295949680385507,0.5357034151666814,0.19249452161709568,-0.11,-0.48806161863881103,0.478847813183371,-0.01,0.20671423233152422,0.31993381705359974,0.3016880445663287,0.298882483522843,0.1147420679725123,0.260603334566779,0.4410877410296026,0.2440443611409129,0.07891424909688416,0.3431919541113848,0.5235631296606522,0.33671964400631765,0.002266224478996069,0.14747111271358587,0.5134285908249411,0.059927912881102684,0.2429957210242124,0.3390733504498707,0.5186452818374847,0.3127686152614799,-0.0746596748905318,0.19747538190370262,0.5059686916763799,0.09877216588943824,0.09480940504568462,0.1987572125550923,0.473226929601995,0.20395982635934257,-0.03722115544672891,0.023273371617416265,0.5114330344888938,0,0.12405006365090833,-0.19193724599042367,0.5221103654281426,0.24504352507281701,0.12605906453374877,-0.4266705648644759,0.4934770297051807,0.13069630122188414,-0.005208507420189459,-0.42570824585101485,0.46814457145769595,0.10983452332047693,-0.07151782825313513,-0.509486385619432,0.4726257775653167,-0.01,-0.15019371230317702,-0.47145525808906646,0.5162099327389591,0.1556120177915213,-0.07594892793962014,-0.48513669294443135,0.49965728469148796,-0.01,-0.04025602464835204,-0.51059625,0.5157401874185816,0.052643731382931505,-0.04436934481418335,-0.47463473405967427,0.4530356453452132,-0.01,-0.00806492189955093,0.2961497050965215,0.5274925664652108,0.0993360054067094,-0.4530138278638554,0.03364072165630357,0.5418316527577625,0.020700487681593153,-0.39508312682467694,0.039494694568761146,0.5431693378114705,0.025446659034293256,-0.08096708858721047,-0.01,0.5224861252350921,0,-0.7540059410566273,0.10508084340493101,0.5206857774161394,0.0712323852412287,-0.11,0.03337975112470219,0.5447788823164116,-0.01,-0.85908944547461,0.0788005375296333,0.4738295752237026,0,-1.01,0.035068635589182696,0.4506782357154907,0,-0.14803072907356818,-0.4237105698872402,0.5335408406735195,-0.01,-0.11,-0.4707314568874301,0.5399275116804774,0,-0.9774353076589171,-0.51,0.528659996118838,0,-0.61,-0.51,0.36526410750178856,-0.01,-0.11,-0.51,0.5229627800333214,0,-0.9891681288162366,-0.51,0.4202966144399485,0,-1.01,-0.51,0.38228062684068714,0,-0.11,0,0,0,-0.13482254802133148,0.028176265336145048,0.5294010396465152,0.003109030424307076,0,-0.01,0.5306424709378522,0,-0.13761384773355873,0.0323209330232008,0.5098426649883852,0.035225297693738875,-0.11,-0.01,0.48838055088410925,0,-0.11,0.004907902498269406,0.5142155779092187,0,-0.11,-0.01,0.4861521890127254,0,-0.5564608560707927,-0.014655397632473978,0.4852221052630499,0,-0.11,-0.01,0.2806122853417083,-0.01,-0.11,-0.51,0.5282747925640922,0,-0.11193146002718415,-0.51,0.3783717478191824,0,-0.11,-0.51,0.4713036166817557,0,-0.11,-0.51,0.1764225247919321,-0.01,-0.11,-0.51,0.42473081759821574,0,-0.11,-0.51,0.09,0,-1.01,-0.51,0.17833395210801697,0,-0.11,0,0,-0.01,-0.12818663890087267,0.13273022994163178,0.5057300631878671,0.0801604659339352,-0.11,0.03117537655240825,0.5054137886061456,-0.01,-0.11,0.13553402967490352,0.4431882129927356,0.019250020202897306,-0.11,0.026642519108827742,0.3861723571899079,-0.01,-0.11,0.060471056923876464,0.43915110402252583,-0.01,-0.11,-0.01,0.43310623307136575,0,-0.11,-0.01,0.3966090086787428,0,-0.11,-0.01,0.1356407275248187,0,-0.1814218591717553,-0.51,0.4542179250017956,-0.01,-0.08138708148750243,-0.51,0.4572383139115283,0,-0.11,-0.47494110603970985,0.33832391014663366,0,-1.01,-0.51,0.1682106901162183,0,-0.11,-0.51,0.3406778565092691,0,-0.61,-0.51,0.09,0,-0.61,-0.51,0.16904120328002456,0,-0.61,0,0.09,0,-0.11,0.05695447141798879,0.536559903116352,-0.008900523514926595,-1.01,-0.01,0.3994095846972889,0,-0.6172596135352604,-0.024268437948332017,0.4408457889255764,0,-0.11,-0.01,0.19607565628391765,0,-0.11,-0.01,0.39788232322594996,0,-0.61,-0.01,0.2956185884082855,0,-0.61,-0.01,0.1752971713277642,0,-0.11,0,0,0,-0.11,-0.51,0.37457548497417353,0,-0.11,-0.51,0.23883607361815923,0,-0.11,-0.51,0.12889825484210568,-0.01,-0.11,-0.51,0.13477837417402228,0,-0.11,-0.51,0.1724767194226344,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-1.002125053416182,0.11650985821475136,0,0.18079654971670592,0.4596218925128215,0.027444703771298193,0.334992392019541,0.25998989077731277,0.45554073892424235,0.017960467284070563,0.3330414536874996,0.18523548684039404,0.4550565401007972,-0.0259458706054865,0.3307576356562042,-0.25812963659859306,0.45147195749184205,-0.08753846553528591,0.27957417724887146,0.18023030884996485,0.45524703237934905,-0.06250413620839271,0.330101568930272,0.14297797738375295,0.4501646148203784,-0.13372556929895307,0.2791824916192162,0.14065569224832256,0.44535256367362047,-0.2410717698268293,0.19640707519939127,0.07032192675188431,0.4283766794610843,-0.29419972983500475,0.10622629846677403,-0.004211716434823081,-0.05206966263078022,0.018976586138964198,-0.002597119303598472,-0.047629344529263644,-0.07290744154904875,-0.020564883783290078,0.13138914425276413,-0.024205044407862274,-0.07157108846843005,-0.016672721059871522,0.042784501205542405,-0.003314859236952076,-0.30043495316051805,-0.2233112322669013,0.10840730490478588,-0.057313309566818224,-0.18524581485258593,-0.07949555075385373,0.10376315159031053,0.10002907236316867,-0.2832261312131857,-0.1271942306267187,0.03263083862230721,0.003244978101052686,-0.3097979011009019,-0.23440252889456423,0.1575851342697642,-0.5467689312142062,-0.4349498007453514,-0.3490844006506587,0.0849417216255479,0.08663003039017715,0.3918012419749327,-0.04788601844583222,0.15667010543301305,0.02032596427788444,0.015466323189891011,-0.024459566160251342,0.14552960236270024,-0.029742598818613172,0.008942571641637982,-0.11827245212326401,0.03766702185459347,0.02293095854121414,-0.017740823962635016,-0.1383341614031932,0.04996117019114357,0.1691185072104605,0.1276168614073255,-0.08980375456958925,0.08417205767217945,-0.045104762648571696,-0.04611820463960481,-0.14756497798468776,0.07466866987419202,0.023890518998379073,-0.010576004484360772,-0.2923379172259891,0.09607520395403582,-0.06521074039662905,-0.020947870324607598,-0.38863579639974766,0.1048545848233562,-0.04859397792498378,-0.1736952381615624,-0.053099310210935,0.12566271417236194,-0.039978580768238,-0.5217583814401154,-0.28451783062140923,0.15749426096024713,-0.24979996526968057,-0.3522610164287045,-0.2139742745179512,0.12026429857065901,-0.11,-0.51,-0.41,0.161586297310434,-0.25554184659560103,-0.4413171297601503,-0.3000821971671229,0.09829335422759232,-0.39446038929159816,-0.51,-0.3203650139615698,0.09967094770171328,-0.11,-0.49343563504350313,-0.3648910207247426,0.047280944309066236,-0.11,-0.51,-0.41,0.06125294055148436,0.14140579539703577,0.3331688198867823,-0.0619165504561069,0.16012486631753794,0.14391692677580586,0.37626034327539865,-0.298577660682622,0.0886067942973443,0.016066684506245012,0.10737115113449228,-0.02684583560128408,0.06006912551635367,-0.05312160005914787,0.024788776916504066,-0.12655511072979125,0.08524135014397684,0.0523409684680774,0.06746177223085084,-0.0410134772207625,0.1318276982897712,0.03802521801986625,0.1652548384827022,-0.21650807191611976,0.07826513276712313,0.026972233763929987,0.016633147599974023,-0.1866135954046434,0.04030551132542859,0.005984027533467967,-0.006248493593640065,-0.23005338503454723,0.07668777526604345,-0.06633273960913208,-0.2848276182632072,-0.16153044140174583,0.21083830791798083,0.016200868252291462,-0.3032616785268074,-0.190426031549605,0.11395591370813739,-0.5064875732731919,-0.46276188025082515,-0.17245299190587193,0.06588511440585965,-0.08135759912414016,-0.5039045713374329,-0.3560621167344204,0.10148032286045522,-0.15685747686627585,-0.4339489133708612,-0.41,0.060294085939788564,-0.11,-0.4931571664184987,-0.40011152557660945,0.1374196661809477,-0.07881092159123919,-0.51,-0.39375460238742266,0.1182201713228969,-0.11,-0.51,-0.3836220534146363,0.11996169235779393,0.046637949670157705,0.34322442171572903,-0.3401201930722609,0.057868788303312414,-0.0590804320095001,-0.044684137889995465,-0.2212512751428842,0.22650050689819357,-0.027082077810024207,-0.026963919942416186,-0.2559549269556535,0.07221432943481472,-0.06866299719619193,-0.05175943694324198,-0.27275678381870094,0.1240756407631976,0.012661426150590703,0.02365922771460143,-0.2814744619437588,0.10163974505368006,-0.0447960074801038,-0.05891561918431244,-0.36522407183697825,0.16505655690059662,-0.07919711742118497,0.012528358188649101,-0.4106975,0.10455420513342006,-0.11,-0.014622891804433113,-0.41,0.09294481927562975,-0.039087961024193076,-0.4434719672526764,-0.3558248464225944,0.06491384891625315,-0.11,-0.5127802150209803,-0.392718436930624,0.156043527201927,-0.17602614146023243,-0.48246438407859077,-0.36712709427821505,0.12002533604646717,-0.11,-0.51,-0.41,0.15105203086764618,-0.11,-0.5058341299448104,-0.41,0.06505512315931593,-0.11,-0.51,-0.41,0.1023808355309096,-0.11,-0.5098410158628188,-0.41,0.12023970219042775,-0.08950160361359222,-0.51,-0.40346374999999995,0.026759684821620448,-0.17798817548692403,0.45631756327572087,-0.2941216668499686,-0.013404971059783674,-0.08729417562732253,0.4484558784006267,-0.41,0.018143907059582944,-0.11,0.45146792100840155,-0.3650694451286622,-0.01,-0.61,0.3699041645452904,-0.41,-0.01,-0.08856214259361339,0.4440544301008957,-0.41,-0.01,-1.01,0.35692744349430194,-0.41,-0.01,-0.0885372672979152,0.29913190496927583,-0.41,-0.01,-0.11,0.02826398367644352,-0.41,-0.01,-0.11,-0.51,-0.40241583288580096,0.1502074070370451,-0.1435400366034778,-0.51,-0.3786982953089665,0.1279661066579948,-0.11,-0.51,-0.41,0.06762164585265391,-1.01,-0.51,-0.41,0.04796973129602883,-0.11,-0.485101292779526,-0.41,0.11142558988836679,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,0.3781825443476048,-0.3661310480948876,0.017176971380287395,-0.11,-0.03367115676210067,-0.41,0.12307869143299988,-0.11,-0.02294686068610593,-0.41,0.1139429957483938,-0.61,-0.01,-0.41,0,-1.01,-0.01969814097367468,-0.41,0.1799492062346093,-0.61,-0.01,-0.41,-0.01,-0.11,-0.02508602790672146,-0.41,0.08382563173037474,-0.11,-0.020013149009283478,-0.41,-0.01,-0.11,-0.51,-0.41,0.10554197616185391,-0.11,-0.51,-0.41,0.020276588749653143,-1.01,-0.51,-0.41,0.022273341805243076,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0.04939572153918585,-1.01,-0.51,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.521453694388495,0.36273195718920453,-0.37730563012083906,-0.01,-0.8832100378142361,0.2666440212996414,-0.41,-0.01,-0.11,-0.011483698321054852,-0.41,0.11985551325332004,-1.01,-0.011412490412482748,-0.41,0.06079687507853938,-0.61,-0.012914573928046468,-0.40009180235368724,0.1378722587807962,-0.61,-0.01,0,0,-0.11,-0.01,-0.41,-0.01,-0.11,0.0009992663702912137,-0.3666663365886723,-0.01,-0.07612681989084001,-0.51,-0.41,0.12479726899546958,-0.11,-0.51,-0.41,0,-0.16220041562499998,-0.51,-0.41,0.047753011049070815,0,0,0,0,-0.09465639957316759,-0.51,-0.41,-0.01,-1.01,-0.51,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.1613992084397422,0.2502381969308017,-0.41,-0.01,-0.61,-0.01,-0.41,-0.01,-0.61,-0.01098119102284616,-0.41,0.09900099702462807,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,-0.01,-0.11,-0.013521592304500011,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,0.03824013445915633,-0.11,-0.51,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.51,0,0,-1.01,-0.51,-0.41,-0.01,0,0,0,0,0,0,0,0,-0.11,-1.01,-0.41,-0.011831500000000002,0.2819747352141278,0.317431802910302,0.29906146390581156,0.25794501811461223,0.23008642776009935,0.27640840634454544,0.3207791971591472,0.2511843299037474,0.2716168387224533,0.27317003619169405,0.43467381055708454,0.2542001427861926,0.19882412697718563,0.3308235484831226,0.44682105119647747,0.15187714710099498,0.22047926131104995,0.20929120903309142,0.4192486977482719,0.20891559286194403,0.1797450923733866,0.1788345524467761,0.3715542069503466,0.17822012286488947,0.1514353379911628,0.2266217157549859,0.3878491034158015,0.2266812759177877,0.07228772714775146,0.1414459517406415,0.1643874698747709,0.17431444329821438,0.26333036926504755,-0.11371714027465271,0.3479154199478805,0.24878042464357733,0.24457375265750433,-0.1780891303370963,0.45161153288220807,0.2634655498205088,0.2153135695712238,-0.1566096054149625,0.4477004374094753,0.2570235623757344,-0.08687680324216351,-0.4122258261481442,0.4291531900944482,0.02039498612537461,0.17743618488847693,-0.2046635151116831,0.307901256239295,0.21379061885299744,0.1495078850928201,-0.4009815474143111,0.4312504730630562,0.14349295163979586,0.21750230400275672,-0.41285230285031965,0.24395910439136337,0.1443225392640721,-0.5233172374636382,-0.46070785857725427,0.4137987656532589,0,0.1891247729736229,0.39346187163816415,0.01684348136289997,0.17037398948226376,0.0346213051867891,0.044331365965322556,-0.00022929349104422111,0.10271152267822545,0.027357987788417765,0.06419889950754709,0.022278263741293682,0.033912334147119395,0.031072995397134102,0.018612170434622943,0.022921309731101843,0.10404489177268701,0.23334099286862542,0.0794652995816255,0.04130223075996029,0.07314444664057629,0.025762573295566322,0.023154748857176933,0.004747765986009227,0.19779032888447684,0.04086611561089438,0.029245907083546966,-0.06586585982803528,0.08698382397430443,-0.07519425518325579,-0.0005828732451698959,-0.03213263326203371,0.06630385649515488,0.033933444267878435,-0.17955863901146793,0.03968793665271099,0.09850037672319073,0.03979680506391471,-0.46757001988225216,0.032411791131956864,0.09603932851929056,-0.0592251266856884,-0.40289937172088947,-0.026927647857623423,0.1298070812617025,0.026192122885734755,-0.5064685397757934,-0.032413479524146784,0.08266314714647757,0.004462497179839056,-0.4452779443810826,-0.043633666634824625,0.08788066692933569,-0.02796832201917126,-0.5134223321690305,0.010608848953683081,0.08712908830400898,0.025830280689629222,-0.5114198730187501,-0.04067170906027643,0.0354310385141388,-0.11,-0.5119457919265453,-0.022799105407939634,-0.0014009824816485356,0.20318389881517945,0.19728718457365274,0.3810568565118734,0.19895008771562173,0.1470077659507617,0.23131729012703184,0.3679811438849404,0.10874701215375576,0.03717287301830054,0.059280716144897494,0.027985625382454297,0.07688961455368135,0.23793550566425953,0.05762450048583835,0.045441877291475696,0.10638964188209024,0.13934056955278945,0.16915048067604296,0.08953394519341484,0.13900427929822742,0.06401263488145952,0.13310401044846656,0.09222133503216126,0.061459156570233674,0.23308895086357354,0.09515644241294521,-0.024265701500802997,0.09035717302415455,-0.08376963735226424,0.020216351470453493,-0.012460748932551148,0.14042810693796756,0.18366768530638056,-0.32797240454067145,0.38965912244706596,0.12086410126442022,0.07938832816919582,-0.4474716194141539,0.3623997520794632,0.09482464291184883,0.22330170245790867,-0.32866419266965663,0.03293734156507952,0.13277773790382727,0.001307419795589515,-0.4990138232362252,0.018217220184532368,0.08063438983138313,0.047581696764055555,-0.40270929874823425,0.09670633295487366,0.057237570803264234,-0.02851984072500681,-0.50346375,0.09916952331697228,0.01558068866066562,0.1875283068345338,-0.42102087599526683,-0.02506299240168159,0.049852513427036144,-0.045434088355310376,-0.50290125,-0.00677525582676918,-0.005010731528925453,0.1713297790428008,0.2820263880095479,-0.005695576279304251,0.15180723271650437,0.020110556575213497,0.019021461923224275,-0.009150981874209171,0.10664816945657545,0.06796203372220078,0.05930057223338765,0.004520577092853117,0.06725774564258205,-0.10088167758428201,-0.005125115381867043,-0.06155593454888448,0.08809277931822637,0.13813649947284054,0.08112564698769244,-0.0541122325133836,0.11786373820250769,0.039119600888209816,-0.005969282894039111,-0.010439340353453883,0.05080701804555035,0.032900157262327694,-0.015283418528425038,-0.05329930661547757,0.13175041236216586,-0.08500883449574487,-0.014211909206381747,-0.0265113108272948,0.13825131530390825,0.01726624085183056,-0.2571399467674213,-0.0442570333717638,0.1508169501686623,-0.04933734402479642,-0.51,-0.04771648884099057,0.11989781818603296,-0.06642886611305202,-0.487518567526643,-0.04641747025711643,0.07446482285674937,-0.5326009427188048,-0.5131293085575029,-0.020629480041955233,0.09551648645047107,-0.02595306930973368,-0.4896657048942283,-0.0321989792300008,0.18756497649532988,-0.11,-0.51,-0.011303179150405285,0.15966650188874257,-0.4969151711146654,-0.510135,-0.02614277976026978,0.1015109206262291,-0.05268751538218362,-0.503620772859375,-0.04174796692570212,0.01493079446307876,-0.06852913535640548,0.42787024513448274,0.21724790048165488,0.07087843611752082,-0.07006555130042942,0.037690373098442816,0.43501917606118934,-0.01,-0.07196845964564631,0.1982284232442813,0.42540165925847107,-0.01,-0.11,-0.01,0.3971087380775493,0,-1.01,-0.01,0.3783916091598423,-0.01,-1.01,0.06920425115325218,0.2737249018419683,0,-1.01,-0.01,0.22805307010147213,0,-0.11,-0.01,0.07733025493482684,0,-0.21574659005586974,-0.4293648619229475,0.4207173366286021,0.019343395498104987,-1.01,-0.51,0.34503555551948617,-0.01,-0.61,-0.51,0.31801738377964195,0,-0.11,-0.51,0.09,0,-0.11,-0.4683482722553693,0.272516711384543,-0.01,-0.11,-0.51,0.18400675904439104,0,-0.11,-0.51,0.12806284134227364,0,-0.11,0,0,0,-0.11,0.36734809114020744,-0.011417691861262402,-0.010557004981320157,-0.8895969197287239,-0.01,0.060336551770603604,0,-0.11,-0.017080172484371277,-0.02479197865133804,0.026751093029139063,-1.01,-0.026242824931706696,-0.013667725770477515,0.0701276674536753,-0.07954357263966462,0.08229802454320606,-0.015547501299845619,-0.01,-0.11,-0.011147500000000001,-0.01324625811147074,0.047713787577023714,-0.11,-0.01,0.02291825992033219,0,-0.11,-0.01,-0.006488435896070208,-0.01,-0.11,-0.51,-0.011533149862153633,0.015670124770434612,-0.11,-0.51,0.08096115473097926,0,-0.11,-0.51,0.0891605236017455,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.07893795209087882,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51012375,0.09,0,-0.11,-0.003286759321775772,0.2720247109728181,0,-1.01,0.018644451979690037,0.2792025610727186,0,-0.529991688560909,-0.01,0.024187608282163597,-0.01,-0.11,-0.01,0.006515089729014389,-0.01,-0.07297220490849554,-0.01,0.07515154937689775,0,-0.11,-0.01,0.07186566328052822,0,-0.11,-0.01,-0.007119462723749613,-0.01,-0.11,-0.01,0.029575431600384474,0,-0.11,-0.51,0.33715054452979665,-0.01,-1.01,-0.51,0.19502815426292666,0,-0.11,-0.51,0.058676372470897326,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.07846075313928944,0,-0.61,0,0,0,-0.11,-0.51,0.07932759101180517,-0.01,-0.11,-0.51,0.09,0,-0.61,0.2481741771718825,-0.01728745545707239,-0.01,-0.11,-0.021137500000000004,-0.011269263199797454,0.03967220278536341,-0.11,-0.017267372262291632,-0.013401029592906904,-0.004186244399682203,0,0,0,0,-0.11,-0.0035352001421790603,-0.016361945164515737,-0.01,-0.11,-0.04335379903402784,-0.017329473900134857,-0.01,-0.11,-0.01,0.088122375,0,-1.01,-0.01,-0.014098203786357452,-0.01,-0.11,-0.51,-0.019170047269839313,0.01631470315321598,-1.01,-0.51,0.07481419725774086,0,-0.11,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,-0.019578567409497927,0.015542524133738212,0.21262734782957232,0.41580130288441547,-0.11771818143187826,0.27078172671946993,0.11685543693678542,0.4239802088937727,-0.24036007682675573,0.1633779650338677,0.03576106577615475,0.43995429339963876,-0.3274077464153996,0.18125104631488653,-0.0369172477677399,0.4318949089823663,-0.32889518729881695,0.043387460905562905,0.14252165446295456,0.26121375057793184,-0.2822445834060014,0.1470640734823123,-0.03719374508053377,0.41566622898213373,-0.3796007460572403,0.11652421267940018,-0.2705065071169625,0.3704231137697582,-0.38836596972567766,0.013170392463876652,-0.11,0.2679788377108503,-0.41068625,-0.01,-0.006068557669579259,-0.1858216755533493,-0.2518367967861164,0.1725791958468286,0.003985455573457128,-0.2655690383436909,-0.10651968946739897,0.0003788875387932388,-0.03167204461032185,-0.42450998656613076,-0.35512600922912135,0.1146810603338235,-0.11,-0.49315914663534016,-0.39321112651360496,0.16152497513833702,-0.013123974395651515,-0.3856713693073404,-0.3845975049569782,0.15684000346793617,-0.14383757405894762,-0.4853468590513775,-0.40578710868087436,0.13936988357325103,-0.07605548570167349,-0.5032534906359376,-0.41178274093781075,-0.00842050259550711,-0.11,-0.51,-0.41,0.10220212239499173,0.04047724443502779,0.3803659472308099,-0.47652830310453576,0.06162685571188503,-0.086636178827689,-0.06369540366064072,-0.5352991840027932,0.10677473311525691,-0.14730474397855242,-0.010949452742573414,-0.445256049649994,0.060512691766762765,-0.04778057887971179,-0.039395730231282185,-0.46428635432490545,0.13648316298012889,-0.012385762649358052,0.05973759072664037,-0.5252080255267193,0.10791869844086027,-0.08947423964946838,-0.039297988887912964,-0.5012701348855378,0.1805959830415144,-0.00899319635169207,0.013182672521648568,-0.470975370010529,0.03636194947625446,-0.13232876297432616,-0.03477924084530502,-0.41012374999999995,0.011062008522093034,-0.11867166176480136,-0.3820314965394098,-0.4773210541407885,0.08254768209327688,-0.05435668370162759,-0.51,-0.44216030134015993,0.029562686812705418,-0.05810508424570435,-0.510135,-0.4349370933628312,0.0003644061596887289,-0.11,-0.51,-0.41,0.20728867611682356,-0.11,-0.49870245222460396,-0.41,0.17297882156699507,-0.1332117302722166,-0.512025,-0.41012374999999995,0.06943604250630407,-0.11,-0.51,-0.44734999999999997,0.06981285000463412,-0.10234946984375,-0.51,-0.41,0.017130994215365618,0.0384141116866067,0.37782631266359246,-0.35465095071414954,0.13133124427613457,0.05221372687755613,0.36758084863053975,-0.4125875,0.027746259922669096,0.032381872838229624,0.04411641543087532,-0.4448345385411312,0.07694004027709778,0.03545573356729529,-0.030138146784730084,-0.4273344430680389,-0.003978175981928882,-0.15453988609491245,0.07979615098916726,-0.4099618454923418,0.11973327568847784,-0.44211712476507015,0.022694696922240343,-0.41,0.020993561362486608,-0.0042525946645294264,-0.019860136950298393,-0.41010023749999996,0.17930621323310056,-0.11,-0.010542360752096951,-0.41,0.024747937460840017,-0.03445826684372302,-0.3912893522270747,-0.3975613001397085,0.02599115800923832,-0.09704745571718526,-0.51,-0.4112781234463714,0.1462708511977839,-0.08516397819446798,-0.5135961349655582,-0.42142890984267356,0.08234783367204719,-0.11,-0.51,-0.41,0.04720538413498282,-0.11,-0.496336208280614,-0.408432496304775,0.057479049749021786,-0.61,-0.51,-0.41,0.08640520780409124,-0.51,-0.51,-0.41,0.10725508120322798,-0.11,-0.51,-0.41,0.05034109926515239,-0.0021746491547542275,0.3569352975022781,-0.4275631473997356,-0.004119103851333931,-0.32260183766700107,-0.06642634467295117,-0.4677141240753879,0.05195346411260388,-0.08737697028256461,-0.03697109119225359,-0.41012374999999995,0.07761100505350221,-0.61,-0.016901422135080384,-0.41,0.012289847725461402,-0.08397469877215616,0.001887434520382974,-0.41115874999999996,0.14419913782204521,-0.11,-0.020919522787899693,-0.42598566733729804,0.1383452094295632,-0.077925264248863,-0.014243415912567541,-0.41,0.10527002939006756,-0.61,-0.03957250535826049,-0.41,0.05053206301826918,-0.11,-0.51,-0.42049526347328164,0.06580924176161232,-0.08468903287264218,-0.512025,-0.43853147865610353,0.055844227459916816,-0.11,-0.51,-0.41,0.06950448400780106,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0,-0.11,0,0,-0.01,-0.61,-0.51,-0.41,-0.012667296033727262,-0.8785682804598028,0.4329389607023409,-0.41,-0.01,-0.5611584502334659,0.3301475487122821,-0.41,-0.01,-0.61,0.3732444841946848,-0.41,-0.01,-0.11,0.13725186277701973,-0.41,-0.01,-0.08831197505946231,0.23526928303888975,-0.41,-0.01,-0.61,-0.01,-0.41,0,-0.11,0.0963401637794339,-0.41,-0.01,0,0,-0.41,0,-0.11,-0.51,-0.41,0.09634695925112025,-0.11,-0.51,-0.41,0.035459094591869585,-0.11,-0.51,0,0,-1.01,-0.51,-0.41,0.02059378857453148,-0.61,-0.51,-0.41,-0.004193215239054205,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0.007277464530466566,0,0,0,0,-0.11,0.2770640962801544,-0.41,-0.01,-0.11,-0.0425624702031442,-0.42521234973186806,-0.020337553974631738,-0.11,-0.01933629886569685,-0.41,0.05951056458172552,-0.11,-0.01,-0.41,-0.01,-0.11,0.09097696934072974,-0.41,-0.01,-0.11,-0.01,0,0,-1.01,-0.01,-0.41,0,-0.11,-0.01,-0.41,-0.01,-0.11,-0.51,-0.41,0.02087938806955047,0,0,0,0,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0.07010028869215461,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.24544645784201471,-0.412025,0.017054527168686745,-0.11,0.06253474662125653,-0.41,-0.01,-0.11,-0.012246905691119473,-0.41,-0.01,-0.11,-0.0049423335822966555,-0.41,-0.01,-0.11,0.005452772763872932,-0.41,-0.01,-0.61,0,0,0,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.61,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.0106975,0,0,-0.41,0,0,0,0,0,-0.61,-0.51,-0.41,-0.01,-1.01,-0.51,0,0,-0.61,-0.51,-0.41,0,0,0,0,0,-0.11,0.008152120680064748,-0.41068625,-0.012025000000000001,-0.11,0,0,0,-0.11,-0.01338571156875887,-0.41,0.023462666017189642,-0.11,-0.01,-0.41,-0.01,-0.61,0.01844567198887704,-0.41,-0.01,-0.11,0,0,0,-1.01,-0.0031146271433028566,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0.3314598250438891,0.4016813446798557,0.5294127676170107,-0.13093386401630058,0.24353391212846934,0.4162907388787658,0.5422953399097891,-0.13183648107482598,0.26100788399802516,0.44495117685988816,0.3663312329687259,-0.13975763378744072,0.15227368994980475,0.29725279205690075,0.5451622003760997,-0.19404672489703778,0.24368638043516477,0.3622025207583899,0.5301234944851493,-0.14456377751378907,0.08482363488701808,0.32222938636364,0.5321344539043333,-0.21087326943870366,0.1515771092207009,0.2528007933474212,0.4785398833253538,-0.21286657753937127,0.033578623317190553,0.11383453163711063,0.5116236113956516,-0.40510697242826177,0.26717081760561684,-0.053107481963667644,0.5150569636608094,-0.15369808758920123,0.17598857703163498,-0.1376820033431209,0.536475209491705,-0.26773819030738066,0.21383322319532236,-0.17689254668364174,0.526724850743108,-0.2208047684726424,-0.29288522045710697,-0.3028820072745876,0.5285287544798388,-0.38077492701131094,0.2407299084634828,-0.16887496994780407,0.5347666421676591,-0.2528415779126384,-0.02621372151223804,-0.4260573464830546,0.5460978639113556,-0.40402699020816807,-0.21667776665067595,-0.4165395597784145,0.5236766080194142,-0.51,-0.11,-0.51,0.5259167599693746,0,0.2471514915204024,0.37457713437069373,0.5388766091891644,-0.14419131187604428,0.06604283607663122,0.27938361208239926,0.5225301008631196,-0.23433239286152768,0.06965318044395488,0.2818323476805142,0.5316954853059737,-0.24407131274274443,-0.06265788991223792,0.0914508898482217,0.5332422787843678,-0.35643910773908716,0.13855918870568268,0.3152931228161557,0.533016741048048,-0.1796517350746765,-0.020916594830219667,0.05950511525122214,0.5267104484140038,-0.3861036532564004,-0.020551948271787558,0.18965104494147703,0.5182524182618398,-0.35497634611944034,-0.049126400959530026,0.08684845166766064,0.5237031020885209,0,0.019675067357325608,-0.3401236966863831,0.4871074709841528,-0.34994175897126767,-0.06356719636163911,-0.51115875,0.5065634071929889,-0.51,-0.27523941384119116,-0.49534410476533186,0.5229488006697623,-0.461299121824053,-0.11,-0.51,0.5299565455334818,0,-0.11,-0.51,0.5294466306388832,-0.495567657985234,-0.11,-0.51,0.5192272484765402,0,-0.08107971707852366,-0.51,0.5282325147468541,0,-0.11,-0.5108088749999999,0.4282147033856653,0,0.24545008125338927,0.3123005640658939,0.5200426011576036,-0.2121493312359942,0.17810309799689172,0.27343248220150596,0.5238785012043933,-0.3241092876759884,0.08142708584155303,0.14715137969528785,0.5200496928224443,-0.3332907683323365,0.00011126997662651988,0.09113800406221345,0.5229353267282396,-0.51,0.007628077194450234,0.34570435429138724,0.1358203266383138,-0.35759452637747235,-0.3351252477581012,0.12271134183698842,0.4124638414600439,-0.45131267893283683,-0.22636721993341608,0.09162758190417447,0.5114173631200885,-0.44518109083414087,-0.03365267223125987,-0.01,0.5133999791054789,-0.51,0.03529516728844372,-0.21939771728839963,0.5073957519845894,-0.37974946027745793,0.04512482488360779,-0.44916497899307384,0.5176649709421142,-0.41340104405297035,-0.2810708898208586,-0.3810268544721426,0.5399663058358113,0,-0.11,-0.51,0.47261052548152277,0,0.03652630383514231,-0.43118058523680247,0.48869530029368763,-0.46204037518050023,-0.06329522268053488,-0.51,0.5335607052291528,-0.48172467118479784,0.004845593630534904,-0.40881275873435313,0.5077478309810123,-0.51,-0.11,-0.49325200410801584,0.49273787074460906,0,0.16140359691282008,0.2353668891677819,0.45403152352666465,-0.35807433179541864,-0.03620472821358999,0.11281948302045729,0.5187213084835687,-0.4140050859487516,-0.10413001444823618,0.17143705706045387,0.5113870702544013,-0.41329479187174506,-0.51,-0.01,0.4962339209600624,-0.51,-0.012778985187100023,0.053866859476978786,0.5262705239442964,-0.4560149471169787,-0.11,0.015942716657269936,0.5346694538328656,-0.51,-0.15240226397013829,-0.01,0.4814190337083041,-0.51,-0.11,-0.01,0.42476061043206986,-0.51,-0.11,-0.4870552582272665,0.5321062970156177,0,-0.11,-0.51,0.5293744810443436,-0.51,-0.07853796043132111,-0.51012375,0.48896190115691296,-0.51,-0.11,-0.51,0.3686810607161203,0,-0.11,-0.5100234894004785,0.501295124113238,-0.51,-0.11,-0.51,0.28662067108472944,0,-0.08588936115090856,-0.51,0.3462946083680648,-0.51,-0.11,-0.51,0.283568092962596,-0.51,-0.10296671653681533,0.03705201886816057,0.4818561098421497,-0.41069297644188546,-0.21366946639543144,-0.01,0.5190868349233952,0,-0.11,0.024121784857470553,0.525316676209254,0,-0.1739371129703688,-0.01,0.4304242250333503,0,-0.11,0.03512809054193552,0.5150499715663217,0,-0.61,-0.01,0.35321114466208914,0,-0.11,-0.01,0.442667190177322,0,-0.11,-0.01,0.247732548359329,0,-0.11,-0.51,0.5349564072326655,0,-0.11,-0.51,0.3344287285978364,0,-0.61059625,-0.51,0.39981099722915103,0,-0.11,-0.51,0.1729156790919492,0,-0.11,-0.51,0.42750675378472086,-0.51,-1.01,-0.51,0.17744329974345252,0,-0.11,-0.51,0.09,0,-1.01,-0.51,0,0,-0.61,0.028402466811677726,0.5298883491198817,-0.51,-0.11,-0.01,0.43016840519042404,0,-0.11,-0.01,0.3977135196021413,0,-0.11,-0.01,0.2796858752845408,0,-1.01,-0.01,0.40240682880031964,0,-0.9250039522144445,-0.01,0.30974044153413827,0,-0.11,-0.01,0.32849967802728425,0,-0.11,-0.01,0.13356850579376267,0,0,0,0.38339252215677355,0,-0.11,-0.51,0.20327035381418843,0,-0.11,-0.51,0.13651593813752547,0,-0.11,0,0,0,-0.11,-0.51,0.2115679969965759,0,-0.11,-0.51,0.1329427771326592,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.45722108794781186,-0.51,-0.11,-0.01,0.4314373255696042,0,-0.11,-0.01,0.39026977197561985,-0.51,-0.11,-0.01,0.2196409172761252,0,-0.11,-0.01,0.3562702760843628,0,-0.11,-0.01,0,0,-0.61,-0.01,0.16829430401961787,0,-0.11,-0.01,0,0,-0.61,-0.4689528840195127,0.39367879943876644,-0.51,-0.11,-0.51,0.27759658725733666,0,-1.01,-0.51,0.17558835337840795,0,-0.11,-0.51,0,0,-1.01,-0.51,0.17829634941790548,0,0,0,0,0,-1.01,-0.51,0.09,0,0,0,0,0,-0.61,-0.01,0.3685784506070774,0,-0.11,-0.01,0.27609196305426903,0,-0.61,-0.01,0.33591290916126204,-0.51,0,0,0,0,-0.11,-0.01,0.09,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.01,0.09,0,-0.61,-0.51,0.12420832012220766,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,-0.51,0.09,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0.20549666760363036,0.46047963078033227,0.017691757812677008,-0.25351554315997216,0.041637473004667164,0.4551310121370335,-0.17567351910118226,-0.389511670065429,0.030532637127816665,0.45668272115566955,-0.28414363075586846,-0.3901847968659877,-0.07825667629946045,0.4501758203374579,-0.298939848536817,-0.45099406845369067,0.06997020712818863,0.45299468315102165,-0.2711498038186135,-0.3419801392768871,-0.007423922452181875,0.44066075545856964,-0.2711576758395833,-0.4482787229542815,-0.11,0.43737251681913275,-0.3728812680653822,-0.47873086197992687,-0.11,0.39551849833866876,-0.41,-0.51,-0.3517448872005139,-0.3918171723999271,0.02492297454109495,-0.5007268381663988,-0.3620658508907185,-0.4390501376256166,-0.057254967797421015,-0.47881917764717197,-0.4102000345728891,-0.510135,-0.08327455826624741,-0.4971078235656549,-0.45286739242115576,-0.4382376113463295,-0.1955623081548763,-0.51,-0.61,-0.51,-0.020401822264915725,-0.51,-0.3842047466379465,-0.5106975,-0.2614976840686231,-0.51,-0.2112259763615233,-0.5013342673904597,-0.3862947856137868,-0.4998858899466677,-0.10655174172162622,-0.5106975,-0.3686449718187911,-0.51,-0.07768628813743582,0.3884461555830556,-0.25075973032659077,-0.4260877126103126,-0.38519951935838853,-0.08710484880104787,-0.23971785906260026,-0.45206560631971326,-0.41394065247660894,-0.013130189517069533,-0.2627086066608886,-0.41842263627512477,-0.37284043784051807,-0.11378259121977334,-0.3217528821685459,-0.47104930328410455,-0.10825669717252057,0.15251447271771448,-0.26608220242017044,-0.4847270971545497,-0.10275685939816118,-0.14860232796646178,-0.35344007250407383,-0.4177804464472564,-0.12256478848408409,-0.04772144397078791,-0.36109512967430035,-0.5004684933694177,-0.20717929718681838,-0.14024597382716217,-0.41,-0.4654759462583683,-0.37510239939027357,-0.4789405952698957,-0.05310155439986364,-0.4865153783817086,-0.40667627608073453,-0.5625859360231512,-0.2129140106116285,-0.51,-0.4081542532834423,-0.51059625,-0.20407538716700735,-0.511202625,-0.1229991018144628,-0.51,-0.41,-0.51,-0.51,-0.51,-0.21231778706042775,-0.51,-0.1679225511114076,-0.51,-0.41,-0.49774432947626157,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51012375,0,0,0.10058955822655878,0.3599257240051721,-0.24090858673813084,-0.3998914916196328,-0.03860684986663281,0.35415273921301316,-0.3442665785060669,-0.471604199993857,-0.02216685339422869,0.17437286252631576,-0.09838566535323293,-0.38774712943021417,-0.11,-0.009453388432877874,-0.3891948993445329,-0.506459815173616,0.0457764028170647,0.050888751545015064,-0.35267196132450557,-0.46291678266677677,-0.07310631660557779,0.20103475405261695,-0.41,-0.51,-0.09014589954701925,-0.022059116795958393,-0.41,-0.51,0.06440044371077608,-0.07759933888140952,-0.41012374999999995,-0.4901964981743719,-0.4178947854202111,-0.51,-0.16420158039355284,-0.4957621761044719,-0.11648177269276422,-0.51012375,-0.3977456789933069,-0.5123297232859054,-0.38991630396396026,-0.49701135747606395,-0.36522463506414327,-0.5114535427128708,-0.4066917781102822,-0.51,-0.31824603921754907,-0.51,-0.4038588892846401,-0.51,-0.21461110344292103,-0.5114625,-0.61,-0.51,-0.3513287867097093,-0.51,-0.15580099828529495,-0.5078236570242738,-0.41,-0.51,-0.51,-0.51,0,0,-0.11,0.35069679046828284,-0.36831835284979403,-0.47911418319894744,-0.15316625206646736,-0.14598840138352515,-0.2513663617870292,-0.45529912883747087,-0.21896458074210687,-0.10090169657698922,-0.37160659227419424,-0.4574447378099338,-0.5032455100353687,-0.13901188023014255,-0.3314054981438712,-0.5127818772768321,-0.11,0.04189854351340506,-0.38143829469311136,-0.51068625,-0.20366846374356684,-0.08976785426904368,-0.41,-0.5109962887744155,-0.04456953553425713,-0.10156131266676373,-0.41,-0.4968061940589918,-0.07288580637866188,-0.10191329441089107,-0.3937844602081663,-0.51,-0.15261341597758343,-0.5114625,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.45022053221540864,-0.51,-0.3504263725247061,-0.51,-0.11,-0.51,-0.41,0,-0.089253317846534,-0.51,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,-0.38349958172032744,-0.5509881391473626,-0.40413762499999994,-0.5106975,-0.11,0.44321581379931946,-0.41,-0.51,-0.11,0.28021693298560557,-0.41,-0.51,-0.11,0.33104596291341176,-0.41,-0.51,-0.11,0.0354078080270763,-0.41,-0.51,-0.11,0.16103061401683655,-0.41,-0.51,-0.61,0.07941449147475366,-0.41,-0.51,-1.01,-0.01,-0.41,-0.51,-0.11,-0.01,0,0,-0.5065058438394796,-0.51,-0.19786078388218392,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,-1.01,-0.51,-0.41,-0.51,-1.01,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.29722841940886213,-0.41,-0.51,-0.11514114490213552,-0.09817808991934399,-0.41,-0.51,-0.11,0.013021383206657536,-0.41,-0.51,-1.01,-0.01,-0.41,-0.51,-0.8944708442487846,-0.008356570979643523,-0.41,-0.51,-1.01,0,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.3061129823133237,-0.37737459127500067,-0.51,-1.01,0.10184296374456557,-0.37743980961543216,-0.51,-0.61,0.01293263502261712,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,0,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.61,-0.01276654603958927,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-1.01,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.11,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0.25205300305117434,0.2607232830503163,0.4497406666570798,-0.22972714646678374,0.14271019113272249,0.26231851470398637,0.44140638454379544,-0.3288406830398106,-0.043564341857476874,0.2839587166057305,0.42761120450501233,-0.3721529179807589,-0.03005747313530599,0.1325105412634577,0.41997449326779457,-0.42884959172418385,0.26589579255650053,0.21515209451782863,0.2433502297136747,-0.27159915058732265,0.008861732195025916,0.0519084286746143,0.3545532976667089,-0.4439030810560327,0.11644018064379476,0.057393250956707206,0.3226194176564094,-0.3690996750168192,-0.002975487435715511,0.026484132897611444,0.34620051326482365,-0.4823710958857222,0.09911351016266878,-0.2506549191088018,0.3115982683821919,-0.39849452035044824,0.06965294919061872,-0.4236974313487872,0.4352882722273019,-0.3860493778199063,0.03903795850354634,-0.45349855412542533,0.4607806469058511,-0.4690013002070018,-0.09401886760680006,-0.51,0.4619994392966705,-0.51,0.09892275156180078,-0.368015968641533,0.16417766772782294,-0.4624809444248606,-0.06516763805625259,-0.51,0.1850159019531082,-0.4733094548320327,0.03910393448519829,-0.4278073487394997,0.32283661500832256,-0.4821248261203691,-0.61,-0.51,0.20575031633118235,0,0.05610929287017265,0.38253744311684346,-0.008127858946593455,-0.388718705764822,-0.16023027018992314,-0.09151842392893547,0.012340261163228186,-0.40612857893632254,-0.015439696869447385,0.09250057702657744,-0.05053670352713499,-0.42857497244758114,-0.11,-0.07146248234812919,0.038018712330343825,-0.4519024101793242,0.026168723263406326,0.2013276172582304,-0.024299836397570752,-0.41605897303057116,-0.4800358827461972,-0.09956743384155849,-0.0025827098246176314,-0.46591182690543814,-0.13592966243513013,-0.014944115171051084,-0.06038297230127357,-0.4425631327875595,-0.11,-0.03998858133630289,0.007720904831829377,-0.51,0.11650664483104886,-0.37316149504084456,0.007870088066950753,-0.47789196793996136,-0.06289562994427658,-0.5226268518414665,0.06681719147884882,-0.4946666204365371,-0.09143442249045061,-0.4865349658586726,0.007271464762055965,-0.49826295424918743,-0.09390691001704565,-0.5187439295477396,0.004153332467035488,-0.51,-0.037131980285723835,-0.5085862513537662,0.01890779662079546,-0.5084053494383405,-0.07498475981462568,-0.5130110251334831,-0.017980171800501397,-0.4854384471621427,-0.11,-0.51,-0.03582101404202304,-0.5111384056766693,-0.051977792999421964,-0.524497426655426,-0.07511079699252093,-0.48967934776688304,0.14316641068682498,0.17306710802240546,0.3617393517074504,-0.3764386273406859,-0.06389420571933188,0.11956179758095675,0.3440084269998826,-0.47542904660221635,0.015964312565875792,0.1387441028746281,0.015905762663533007,-0.3179412597609412,-0.007990567312637323,-0.033251565378711316,0.02064705699120499,-0.45806556820747574,-0.29236493427911153,0.023781441852865008,0.07873826033102298,-0.5106975,-0.06770744703562859,0.14132685477911597,0.00989023936355096,0,0.22737775828282172,0.03351601596046321,-0.030547071652052553,-0.405203658414901,-0.11,-0.0158779190963014,-0.0064016563846566715,-0.4821676496030723,-0.06661727590593616,-0.39928739742874947,0.3379744585338364,-0.5003519729604504,-0.11,-0.51,0.27643732027002194,0,-0.11,-0.5086593659003651,0.03693749860278875,-0.48804676693716276,-0.11,-0.5050002945082787,0.03510244819675862,-0.51,-0.11,-0.5022795460582191,0.0765318099702231,-0.5111475,-0.06779622505575145,-0.51,0.06617275938770131,-0.51,-0.11,-0.5054082465096988,-0.022587997545024486,-0.51,-0.11,-0.51,-0.027855733787391992,-0.51,-0.07209440708063292,0.32724566126347876,-0.002035689833766178,-0.48558166435488337,-0.1096332771039242,-0.10218904270832987,0.009525532129025068,-0.48517327433740437,-0.12004102606972844,-0.0652513383540485,-0.0793749446025156,-0.46653188777785193,-0.0827804915447026,-0.0817277479401752,-0.008924463088663168,-0.4932809162747677,-0.02598111925161696,0.0789985622563952,-0.011175278963896468,-0.4979305565279235,-0.1107649054526784,-0.0710347969819173,-0.05738644566947246,-0.51,-0.0907404163594434,0.021835552105395162,-0.053017518095498206,-0.5068323422007267,-0.11,-0.01,0.028766089712871926,-0.51,-0.11,-0.5114625,-0.03435982984903234,-0.5114398151528402,-0.08040933212193661,-0.51,-0.009451723299993135,-0.510135,-0.11,-0.51,-0.002374982427894433,-0.51,0,0,0,0,-0.040843804582312404,-0.51,0.006255587456147621,-0.51,-0.11,-0.51,0.03933379025911291,0,0.002293457623554454,-0.510671625,-0.0804848858601782,-0.51,-0.07096159941314877,-0.51,-0.046277585041791365,-0.5054458221423299,-0.11,-0.01,0.40804164966480766,-0.5060180335486675,-0.11,-0.01,0.270236600993612,0,-0.5231962182885467,-0.01,0.3392372897749833,0,-0.11,-0.01,0.15501841994959184,0,-0.11,-0.01,0.20677709390198618,-0.51,-0.11,-0.01,0.19558705110480298,0,-0.11,-0.01,0.1278620408636398,0,-0.11,-0.01,0.08877884188713732,0,-0.11,-0.51,0.2944397201995851,0,-0.11,-0.51,0.2694308928258659,0,-1.01,-0.51,0,0,-1.01,-0.51,0.23377337893037706,0,-0.61,-0.51,0.19465230705373218,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.25815501552991577,-0.014868083857415988,-0.51,-0.11,-0.01,0.035912199431297545,0,-0.11,0.06897842698929135,-0.030065440897158745,-0.51,-0.11,-0.01,0,0,-1.01,-0.01,0.06491944881025047,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,-1.01,-0.51,0.07120243216815386,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0.25280526790083346,0,-0.11,-0.01,0.09,0,-0.61,-0.01,0.05218309588441624,-0.51,-0.11,-0.01,0.09,0,-0.12323418811066318,-0.01,0.06958058928973476,0,-0.11,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.61,-0.4949022311127277,0.1760517824829704,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,0.08224253196656209,0,-0.61,-0.51,0.08920172826296383,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,0.08248290330480706,-0.011713547499579702,-0.51,-0.11,-0.01,0.09,0,-0.11,-0.02794427053405714,-0.032448552836013125,-0.51,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0.09,0,0,0,0,0,-1.01,-0.51,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.08383263457533471,0.42633376931988975,-0.32368852370688234,-0.4041902887755645,-0.36760033235421197,0.43543712949311086,-0.40344893463058407,-0.42193159418598053,-0.11,0.43461747122290995,-0.36314212954945346,-0.45098473039333886,-0.544342973806847,0.4035536851014465,-0.41,-0.51,-0.002355422668111104,0.17717956308057847,-0.36370111470999733,-0.47111974348719476,-0.11,0.37348370863959207,-0.41,-0.47917323097419423,-0.0753206596098773,0.27836255278952776,-0.41,-0.5086079857591486,-0.11,0.21020454912342276,-0.41,-0.4901210956672722,-0.4656047772167168,-0.4175350133976382,-0.16261520280787747,-0.5135854960721128,-0.20175126520153203,-0.46521622504698085,-0.34636410359195596,-0.510246375,-0.1548462944755925,-0.51,-0.4065445664638544,-0.51,-0.11,-0.51,-0.41,-0.51,-0.1553470965495364,-0.51,-0.3626018998155314,-0.5116036671362233,-0.11,-0.51,0,0,-0.44554344246885647,-0.51,-0.41068625,-0.5114625,-0.17398648067602357,-0.51,-0.41,-0.51,-0.0799444216638953,0.3782900241085761,-0.43051746843058863,-0.5093741142603434,-0.5117194450049397,-0.15048243067361886,-0.4199182980410287,-0.5079148271668253,-0.1018575911629046,-0.0004604227329231131,-0.4317133817997706,-0.5007354698997273,-0.16367728692270644,-0.13922280558486722,-0.41171899999999995,-0.48960789632921065,-0.08372322765601962,0.02950243755907891,-0.41012374999999995,-0.49374198246047263,-0.1595534699988111,-0.11597873628654945,-0.41,-0.48669058100927554,-0.11,-0.05542256811094337,-0.41,-0.51,-0.11,-0.057239140041483644,-0.41,-0.51,-0.51,-0.51,-0.4906463629371369,-0.51,-0.5606331148522209,-0.5152699064679105,-0.5252780462617599,-0.507438736345342,-0.1388171245244133,-0.5082134489452388,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.0720250761390721,0.3307483079496959,-0.3826759725586887,-0.4925576717361677,-0.07433685556015261,0.35388151476085683,-0.41,-0.51,-0.06179458989814588,0.15601604815541706,-0.41,-0.5114504602458074,-0.11,-0.038527799077234456,-0.41513679302913364,-0.49990406291833805,-0.07152651783766686,0.1060680659994033,-0.41068625,-0.51,-0.11,0.08432072011882952,-0.41,-0.51,-0.61,0.04915100109790179,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.20851157436032716,-0.51,-0.41013499999999997,-0.511573875,-0.11,-0.51,-0.41,0,-0.51,-0.51,0,0,-0.11,-0.51,0,0,-0.4539151871611749,-0.51,-0.41402241896238123,-0.51,-0.51,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.3779460457845734,0.11610177820582106,-0.4399268282692874,-0.51012375,-0.19641888315478293,-0.14404835435177868,-0.4317033983240832,-0.5114776906410023,-0.10109397393603506,0.019267634919838385,-0.41068625,-0.51,-0.11,-0.01,0,0,-0.1604520763442857,-0.04897297319111196,-0.41,-0.51,-0.61,-0.022404414422234675,-0.41,-0.51,-0.11,0.001858144210067041,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.14735994752193743,-0.51,-0.41012374999999995,-0.5116087500000001,0,0,0,0,-0.51,-0.51,0,0,-0.51,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,0.28593953042380027,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,-0.5012375037599535,-1.01,-0.01,-0.41,0,-0.61,0.03415486438732763,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.51,-0.32703718697147555,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,-1.01,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.11452021476615418,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,0.012024218190243302,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.61,0.06208529470683413,-0.41,-0.51,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,-1.01,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3257344606409259,0.4095429486980782,0.5226182055961526,0.3887263836318727,0.32757262465145404,0.39670507584639736,0.5239261261032603,0.37205916142008616,0.29195983239676304,0.38724764096790243,0.5204859951932572,0.35712775793679896,0.3197169538158781,0.4107910246164285,0.531601161971027,0.3573458824556456,0.2879156997501607,0.2764334424808914,0.5183943776020374,0.28931523541177906,0.20879208728578602,0.28341554175852657,0.3236764758772267,0.4037455187824084,0.20368598378034375,0.41687658172359043,0.32526520335950504,0.30961591889524553,0.21314549070304292,0.24873100778941754,0.327936268159878,0.24457521194829446,0.3008799532991071,-0.07701095029396783,0.5266615461622455,0.3198476258360998,0.3138595444273638,-0.07183587233053339,0.5410413546638813,0.38366514426573955,0.25833619115404655,-0.09514692945188633,0.5217872458630578,0.28792516077956387,0.17236774775530522,-0.20695785221920224,0.5368813737604357,0.25127265149024414,0.2843558391858644,-0.11808365614177169,0.479414899925796,0.24449003539523853,0.18572983882205932,-0.15851031013240063,0.4730954322703539,0.21546360871193662,0.20570276023687395,-0.20139683170481562,0.5355412224602011,0.24242746096252613,0.083227226487854,-0.4375741148981255,0.535785460584452,0.08368110804297943,0.256423358956651,0.38750473216103226,0.5350705895989045,0.3748217771084541,0.2806131547246314,0.37411978617417874,0.5432927174875868,0.3831802538685493,0.2504114690028257,0.3881335093829046,0.5280621418307627,0.39193546451390426,0.16853909711694023,0.28637869790104076,0.542945890412704,0.32987642763938996,0.24698528346053122,0.28485856628260997,0.272002648542996,0.40297954035165856,0.2185288288139957,0.23128206171441307,0.21346133151146673,0.3917498063878619,0.18409348652219967,0.2978934367371824,0.4674068236632902,0.2973410848659069,0.05056953778780393,0.09673067543158928,0.4723669971267204,0.15121790629771437,0.3215570532429632,-0.14292852389842223,0.519929415193447,0.39023261104226253,0.13062144970132478,-0.2667044157479018,0.5355193520720468,0.3299616238220268,0.21340222398396028,-0.35781726097444505,0.5141948399819692,0.29029235136838183,0.010794822704803184,-0.4242464212213689,0.5237334434397709,0.028465784276772856,0.20153983027612848,-0.32436512740467055,0.515942732516928,0.21845752412869404,0.03720959937560015,-0.4265892151935107,0.21678490578434995,0.39043895726180805,-0.16152967575935823,-0.45814721583461526,0.5177001481156592,0.06394590943867372,-0.022370842669429396,-0.47243282975843087,0.47800166769087304,0,0.2615486724722834,0.2981869316190264,0.42704442839090656,0.28617244566446887,0.26001711858030124,0.33306607734491755,0.45978327823988563,0.274032379637954,0.2160863269559143,0.23372180285301622,0.4905585868968425,0.26106270272318743,0.20893318059162913,0.20414648884021155,0.33479565707564213,0.23205231939000656,0.17474847020862594,0.21991934261003787,0.22778239470669814,0.33244508155559055,0.05379263422981401,0.17095958216045326,0.17182351063486567,0.20624918240003134,0.19239449871097639,0.2195321555185632,0.19328169570211015,0.2497115991346792,-0.06906639323636628,0.12203639791306405,0.1868116866389956,0.25124005896337054,0.3008640340812274,-0.14105719116854615,0.49494923744714114,0.24789363522402527,0.22280964066438902,-0.20673301145032216,0.5025099663404065,0.2340293249545179,0.1474958830379269,-0.24750956034386976,0.30941807257691384,0.2769346795568674,-0.0245912770337222,-0.41781707553383785,0.22716706359183358,0.35703511032741864,0.15739227453768556,-0.269794376634192,0.2335415737526076,0.3464694078999237,0.16245636763400192,-0.40836978280178876,0.45923812004202014,-0.01,-0.4257287877402389,-0.4152067636841207,0.48383128449150475,0.10406174063947582,-0.11,-0.49021204548210584,0.3449052769439762,-0.01,0.2436279868152762,0.28226055730017696,0.39508732359430143,0.25003313339183125,0.13057754991860815,0.19905061101413987,0.4610570962717254,0.1595232246550523,0.19476808889347547,0.2084675657491069,0.4443806517052699,0.2129755813972641,-0.07688048628558289,0.1604135802031909,0.1511181598587008,0.2591305577151283,0.13828107686685734,0.18012704813599817,0.37242570723354473,0.15843528363828108,0.04733475510815389,0.08993121697956978,0.45202261722387743,0.08910932341947549,-0.02000732340711711,0.03189282373993219,0.4256322089661536,0.11069228935303128,-0.07009942644379516,-0.0017806106522616893,0.4385126384570624,0.017816985001153925,0.2701075484391247,-0.23414933684511782,0.44600374847154955,0.255255018438108,0.09448983300325209,-0.45811527902754734,0.39380416116894845,0.09991417393232278,-0.25623421538617097,-0.4038533220103996,0.2897327065191614,0.08330748619947366,-0.036799284095295495,-0.49562243031736997,0.3774356576553057,0.004646745999071476,0.03302846300234164,-0.47007228286532216,0.1982241481246871,0.06663957462077584,-0.06255840511259121,-0.51,0.2459844450821178,0.05616131992380912,-0.06579357927229487,-0.51068625,0.3870328482130072,-0.01,-0.51,-0.50335125,0.3733254953609096,0,-0.08601134092174191,0.3388658384946448,0.4802596202397696,0.26668463618695915,-0.04219330153631422,0.11470331354604318,0.4762150279878337,0.06878976507915824,-0.20627081794314386,0.21084835173913138,0.5165503304649378,0.15777736872615705,-0.61,-0.01,0.5350591511265632,0.030821706904378056,-0.18558102360219197,0.17091474774635462,0.4012844392870618,0.12789990476195418,-0.17945387448212316,0.033001830486251285,0.4698510518062986,0,-0.12734007814300904,0.06921566855544531,0.3864495182314604,0.06122043431088791,-0.11,-0.01,0.3529209973142951,0,-0.090815024925219,-0.33029073423838246,0.5349377029969511,0.2201160723591608,-0.06975163969040069,-0.51,0.5376011225684019,0,-0.933010636763367,-0.51,0.5349691644555323,0,-0.0710899723073807,-0.51,0.4729915736224624,0,-0.1915600239240597,-0.49203439114805286,0.4672276456488302,-0.01,-0.11,-0.4655806232029077,0.4967569663963519,0,-1.01,-0.51,0.28978166880089923,-0.01,-0.11,-0.51,0.13656039576105253,0,-0.014045262944155978,0.14975694553551724,0.5284751230754124,0.15230144137633453,-0.11,-0.01,0.535102668184365,-0.01,-0.8731346198548385,-0.020951870785430815,0.5395694916585956,-0.01,-1.01,-0.01,0.4244438230673656,0,-0.16107469453520284,0.020563986312101885,0.48259891294250185,0.02694893103025437,-0.48483823364354894,-0.01,0.3728752884883597,0,-0.61,-0.01,0.3951884272797936,0,-0.11,-0.01,0.1333934386691692,0,-0.978408381164318,-0.51,0.531047941036183,0,-0.11,-0.51,0.44739045685615253,0.031246148733695557,-0.11,-0.51,0.474500289788465,-0.01,-0.11,-0.51,0.18723253430901973,-0.01,-0.11,-0.48982242706180723,0.3418669915702096,-0.01,-0.11,-0.51,0.26284995738804406,0,-0.11,-0.51,0.1786758154012058,0,-0.61,-0.51,0.17576938855832341,0,-0.46519779269390765,0.10965346306598953,0.5241453018698436,0.07455095253889123,-0.61,0.10058801088147348,0.4391473608250575,-0.01,-0.11209132853396192,0.056163826600922846,0.28925362219970924,-0.01,-0.11,-0.01,0.18512754038049778,0,-0.11,0.01008686404601009,0.3059669728990968,0.031119117400032183,-0.6195404414458762,-0.01,0.3792742317340214,0,-0.11,-0.01,0.235711611804916,-0.01,-0.11,-0.01,0.14384850726470652,0,-0.08634875688076915,-0.4692992110478549,0.4972211681253474,0,-0.07203850053537977,-0.51,0.4792049755357392,0,-0.11,-0.51,0.4514158233381459,0.02729506657432488,-0.11,-0.51,0.2273204861021948,0,-0.11,-0.48811760113761465,0.24935041272129943,-0.01,-0.11,-0.51,0.3106210661203812,0,-1.01,-0.51,0.1905460920610034,0,-0.11,-0.51,0,0,-0.1784247954343554,0.024885519496417242,0.4324962785193933,-0.01,-0.11,-0.017021753261984646,0.285052329440254,0.029048594566120578,-0.11,-0.01,0.33994340478728585,0,-0.19233875,-0.01,0.36873902191422603,0,-0.11,-0.01,0.30660455578318035,0.02989004187970415,-0.8788277152399675,-0.01,0.1351131419264608,0,-0.11,-0.01,0.2487847823169137,0,-0.11,-0.01,0.09,0,-0.1368289753594686,-0.51,0.39358297043439144,0,-1.01,-0.51,0.20157765565168162,0,-0.11,-0.51,0.23761421196034188,-0.01,-0.11,0,0,0,-0.11,-0.51,0.17943488280701966,-0.01,-0.11,-0.51,0.128263436345586,0,-0.11,0,0,0,-0.61,-1.01,0.12317133225568504,0,0.19531302722963478,0.45489244715236815,-0.010449774625728133,0.3173906523889292,0.2707821383177781,0.44735101504282815,0.02885846529268206,0.3213002946523954,0.21385779137767652,0.4612205643124037,-0.05507630019120109,0.3191250392002181,0.10648908843826757,0.45028060057066455,-0.19053067996745035,0.26435218104156055,0.1942622873632863,0.35229397143246666,-0.050701644667206905,0.29620034636786186,0.18138786795920833,0.3978668256827611,-0.10755853991622255,0.2769888111746143,0.15312818485737814,0.39191170071234804,-0.211138064208629,0.23068402519475859,0.04807679321833189,0.41461153340878926,-0.3073468907645027,0.18298619611762215,0.004394709254323073,-0.060034643576903794,0.012213685232184905,0.1973386219362323,-0.008214050201756383,-0.11925773717074546,0.008281434829789517,0.1466925714876674,0.03354941842658987,-0.06617753438168018,-0.004739037160015878,0.20091208298027355,0.015652665176351097,-0.3111625028442539,-0.09618427402547644,0.08757092248193696,0.1735909358860476,-0.11687845518490411,0.0023212025015084724,0.10171408714891615,0.01725466631887061,-0.27759812449567517,-0.1225031822458686,0.08839585653348092,0.04160470978338368,-0.36811213816128974,-0.2566981345307052,0.23650530566755876,-0.010949843650895946,-0.4364945800741351,-0.2908188752510119,0.1577502705667888,0.26358328122277963,0.38822817695998113,-0.06439615798045753,0.1858478655277006,0.04670124236085073,0.03276620482767575,-0.017939556715694395,0.13799655886010168,0.0864934834568321,0.07844046267044838,-0.02823702336946253,0.21783127413258055,-0.12499911680750762,0.0175794515403168,-0.07855608191695389,0.09996360971754137,0.10032086819256922,0.09299959393077596,-0.08016693126348069,0.14960637262772938,0.04254079772151356,0.026141127840736945,-0.14218598246154684,0.11038403264398283,-0.002844194988506979,0.04870394386873891,-0.21009785447830218,0.11133074304104706,0.020665873472314866,-0.021941701676991644,-0.36137288007626683,0.16960727963746305,0.009108192876814365,-0.2767364293020517,-0.046270176166699636,0.15519786720213094,0.006473225760379592,-0.47978203161727084,-0.06804737635325936,0.19960377486632128,-0.23111079464096865,-0.46220577515271,-0.24548192367914137,-0.0044089643810235595,0.02578702321855144,-0.5138906193003793,-0.3648332985931647,0.12829717982663613,-0.0016209492045187492,-0.3861646207893525,-0.34995219685399526,0.10703826386319107,-0.13125826430031673,-0.51,-0.39448870224253463,0.144557836973872,-0.11,-0.4840669369705261,-0.381159414423024,0.15348959139281804,-0.11,-0.51,-0.41,0.10311257273741349,0.12305117639684188,0.3489345555812118,-0.03331159893105781,0.13273770442869579,0.1934134209396144,0.3535732779730592,-0.15157215007524855,0.12081039878263548,0.02249925228217868,0.07290567119495102,-0.12019953930216101,0.09287529504041002,0.06814194235948574,0.06395397375239796,-0.15158252082589208,0.13469652344051697,0.10597165303465238,0.12082340885708066,-0.041818458197625245,0.15171347941620408,-0.023185230669666147,0.09313942310477262,-0.14156814911297613,0.14619492755806904,0.07759608464541584,0.09195693514446084,-0.2354911227089693,0.11491652388103163,-0.07643872629541462,0.008294869760336545,-0.3447468288756558,0.12827937115104476,-0.019898640284396262,-0.24284761558335777,-0.06464328997674042,0.11738759314695685,0.17337343819679105,-0.32251186291425615,-0.07021717706668877,0.09377396295125247,0.05187225180028569,-0.40149979112636686,-0.21603499764094242,0.16260608789549852,0.012351110225863764,-0.51,-0.32300223970879244,0.13067269285011546,0.01769916225243133,-0.4460929843714322,-0.3291833811766468,0.07323852422179794,-0.016273379683278015,-0.51137385,-0.3981404258716283,0.15592830751446715,-0.61,-0.4936486281652931,-0.3724222252498387,0.13927260832953664,-0.07975748849114292,-0.5107190663031785,-0.41,0.14057554270479122,0.10016664523876405,0.34618851864634065,-0.17461786132362633,0.07375200056202816,-0.004055431157408786,0.008487802412225262,-0.2100079857396221,0.16743335428998013,0.02929017619833465,0.049317884862104394,-0.3010117214165914,0.10696833761508331,0.0022309384199412433,0.023284542018984285,-0.284102298607404,0.13453285707127027,0.05905253305916842,0.1497057971173275,-0.32134207520358055,0.060032542494844104,-0.041573470102678096,-0.036714684742100774,-0.38126299023432836,0.17793817795415787,-0.3715594675940952,0.025162121679030234,-0.41180831375,0.02383834374388999,-0.11,-0.012162214000000001,-0.39079733916718873,0.16405109338001725,-0.04174885794730244,-0.46317649750199613,-0.30906729412315076,0.20702197869605274,-0.11,-0.5064743012120686,-0.41,0.22615633233732252,-0.5227229762776983,-0.51,-0.34351466169690736,0.03751685287058819,-0.11,-0.51225479446875,-0.41,0.038967121169630185,-0.5300674102723792,-0.51,-0.41,0.1209607583717367,-0.07904574608190448,-0.51,-0.41,0.1039589198922947,-0.07677370972796879,-0.5124407952967869,-0.40301262499999996,0.126921811693841,-0.11,-0.51,-0.41,0.14726801550981877,-0.09510317560191843,0.45049721092165074,-0.2723092409646293,-0.003545991214740243,-0.621150394293071,0.44226918653276104,-0.28983459285145263,0,-0.13111452030847917,0.43510667749612164,-0.3510875861644317,0.02473107589062265,-0.1348170882442074,0.3184808638856209,-0.36290152242712664,-0.008184598235293276,-0.61,0.4208519556262393,-0.363463510197366,0.01622445163187479,-0.8846799710229327,0.3525492277332144,-0.41,-0.01,-0.11,0.34060990393254026,-0.4106975,-0.01,-0.11,-0.01,0,0,-0.11,-0.46539054107865374,-0.41,0.1692949437706927,-0.11,-0.51,-0.41,0.07945922320279793,-1.01,-0.51,-0.41,0.12212998424720098,-0.11,-0.51,-0.41,-0.01,-0.11,-0.4749801099244888,-0.41,0.11038701800377308,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.7143981579164638,-0.010135,-0.38084844090061915,0.1957546895487959,-0.11,-0.02189030157164544,-0.38061717124637384,0.13485713040538477,-0.8813177801757077,-0.024098124040629998,-0.41,0.14681577037533572,-0.07162274448847047,-0.021137500000000004,-0.41,0.09414464140730604,-0.11,0.10438891688524003,-0.41,-0.01,-0.11,-0.021137500000000004,-0.3717910844693483,-0.01,-0.11,-0.024598000898133,-0.41,0.0015144516809646848,-0.11,-0.029404009892910657,-0.41,0.03355882996936572,-0.11,-0.51,-0.3724828431146857,0.12559444990581806,-0.11,-0.51,-0.41,-0.013456817164869482,-1.01,-0.51,-0.41,-0.01,-0.11,0,0,0,-0.61,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,-0.09167390047350713,0.3453385930398749,-0.41,0.04462491047820196,-0.11,0.27831752914067504,-0.41,0.0190562108310542,-0.08515088471527243,-0.012104669003510569,-0.41,0.1491413191425069,-0.2009302682315828,-0.016008580169124556,-0.41,0.05418985360410705,-0.11,0.21504128197200834,-0.41,-0.0003212975609691981,-0.11,-0.01,0,0,-1.01,-0.013284841556567818,-0.41,0.11667319987951864,-0.11,-0.01,-0.41,0,-0.11,-0.51,-0.41,0.1209143407805654,-0.11,-0.51,-0.41,0.006338513609074841,-0.11,-0.51,-0.41,-0.01,-0.61,-0.51,0,0,-0.11,-0.51,-0.41,-0.01,-0.6472930154805694,-0.5040299566543124,-0.41,0,0,0,0,0,0,0,0,0,-0.11,0.2914430339281534,-0.34618948214783074,-0.01,-0.61,-0.029919440133945464,-0.41,-0.01,-0.11,-0.015274606689956598,-0.41,0.040179095155026656,-0.61,-0.01,-0.41,0,-0.11,0.04074516643591823,-0.4039630595169134,-0.01,-0.11,-0.022539777796532677,-0.41,-0.0005526338853585801,-0.11,-0.013073436794602706,-0.41,-0.008934034450971977,0,0,0,0,-0.11,-0.48836156897401684,-0.41,0.04732996545336561,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,-1.01,-0.41,-0.01,0.26172872592939256,0.2965031419446229,0.46049677108751463,0.2622221264959293,0.1569543536951216,0.4332823482473705,0.2356794680887343,0.22205594164132847,0.2814984057081277,0.2764842850365341,0.4675209875905201,0.28016304885322835,0.09716980729629347,0.2566275374715082,0.47179863757982127,0.1932018644077436,0.25050054064392907,0.26379415899479597,0.288307766005769,0.263223166203497,0.2083519404868659,0.19900040083046752,0.41675712168194146,0.20644313555891833,0.16006926166435687,0.1812758476470578,0.3298219353440251,0.18344769713501669,0.10580602280337716,0.1609052236273723,0.4354725542259368,0.0504506409535117,0.2257046718961387,-0.11610852310696267,0.46493420767713645,0.22955186287747809,0.24599427013014305,-0.15753629402934505,0.4457694989192438,0.2747333273711902,0.2977152800410955,-0.24198317217404117,0.4219150754392552,0.280196663775636,0.008430528782865786,-0.4251175375747944,0.45937640523361944,0,0.20146437529763056,-0.19460692260176388,0.3758815865883221,0.20774651591050874,0.08109550331876357,-0.3783905233373785,0.4512851512550503,0.12421195813898528,0.04999882595985695,-0.44048897727055614,0.39511062178274253,0.14557904386739307,-0.07187983995390587,-0.4674100965818593,0.32855760494080605,-0.01,0.19823089841348432,0.37284710858455195,0.0737210753226369,0.1901879506597673,0.07618165446682754,0.0742499779651336,0.07717724178710536,0.22670600511481256,0.019504991572027792,0.07862232374981959,0.06955794074977634,0.1906242513001386,0.2043116302721958,0.04357757933762722,0.06211517105382804,0.07969618907227809,0.07592751229454092,0.1047409322289406,0.07814988008897958,0.13835906682910912,0.04023560357932049,0.06330467032982344,0.04503397003458,0.2059258093146927,-0.06368047736690663,0.0033617963761855864,0.10214066553021589,-0.008665108348484198,-0.04135387480384581,0.0026454649371207375,0.1116715313583617,-0.01,0.03085866495958836,-0.21271833766984605,0.06605903121703094,0.04150369645385548,-0.058924285864540446,-0.4733172186712219,0.0775300603422039,0.10443870244608486,-0.055692495006906574,-0.46468112841857967,0.015016374769594628,0.2030121085026964,-0.07502236211235397,-0.51269775,0.06952193966955574,-0.01,-0.21399877325739278,-0.4655186365410288,0.05981384779082519,0.040458170751288346,-0.11,-0.5113019546424157,0.08571877138165515,-0.01,-0.06778044685241152,-0.51,0.0859708763440703,-0.01,-0.11,-0.51,0.11702785218827835,-0.01,0.21091498833585104,0.26690826129430756,0.2339945419741421,0.19764415393214552,0.014952349393674007,0.34958008752656033,0.20664028675665305,0.1683943164716185,0.3152842311242567,0.08924141571268927,0.08681520426880873,0.11414113053113574,-0.06779903889055257,0.040756280639135486,0.06124203771230256,0.13712658409552758,0.1851192138902284,0.0892813961627502,0.10583020254862587,0.10673608416933451,-0.019082895635126204,0.07582119940218335,0.12586805533763676,-0.004497635916762691,-0.252130164569039,0.018493741264663372,0.0716254358249952,0.011489636293924535,-0.5177610762263651,-0.01,0.08186399824211733,0,0.2083841397536703,-0.41345048380050353,0.3549498585231098,0.11938178447852432,0.027771967076161676,-0.42243761325482176,0.3994817028204071,0.09196264905678078,-0.042012773909934575,-0.4951997137984412,0.08382239799284373,0.05752426346841103,-0.11,-0.50290125,0.028346400701479882,0,-0.5001950721797824,-0.4772596372735359,0.1232634184585866,0.015637192529030404,0.04021585297515208,-0.5036279371103808,0.12237094660998704,0,0.04096660465457019,-0.51,0.08861816698737245,0,-0.11,-0.5056288725416827,0.06417648901611334,0,-0.05070536456786381,0.3478811134158068,0.04191978842826858,0.1414338413903053,-0.15638514548396307,0.03620492983215465,0.06462929316782295,0.009091696406414359,0.03756968701900386,0.016109965395062053,0.04057100319505139,0.18960038833709886,-0.028477315546322136,0.01763352767880237,0.08170267566862342,-0.01,-0.022470088166792516,0.08198210331697094,0.03683088324859575,0.11605994543239503,-0.06511503051692091,0.00988727191068642,0.08344627917357662,0.019548456722142372,-0.5123595986422893,-0.0004582576468000043,0.06235379132772764,-0.01,-0.61,-0.01,0.07234674165505005,0,0.06640149396520732,-0.33915673265377133,0.04254362838709424,0.12568932062590174,-0.11,-0.51,0.0613884508517039,0.03699224493249688,-0.02329147428552781,-0.491069015213606,-0.0011997089580874833,-0.007368031391457116,-0.11,-0.51,0.05254764018396748,0,-0.03701321316086563,-0.51,0.0011985072717885323,0.12012257835870231,0,-0.51,0.0832514219323748,0,-0.11,-0.51,0.015572913091196629,-0.01,-0.15051850216841994,-0.4973203745893506,0.055670993124696866,0,-0.12024057184721282,0.11593705199683427,0.37778929023403335,0.13661285355112449,-0.11,-0.01,0.43499933214704817,-0.01,-0.11,-0.01,0.44827706595035105,-0.01,-0.11,-0.01,0.3868407632125904,0,-0.10101619889657941,-0.01,0.3191332874934636,0.024318627868986878,-0.11,-0.01,0.26429520402760515,0,-0.5196527876406721,-0.01,0.2110546290873824,0,-1.01,-0.01,0.19000017309724032,0,-0.07087684561694971,-0.46800182189956846,0.46527537839428423,0.020846892920556602,-0.0696435680356065,-0.51,0.37680574072350714,0,-0.1700366920559968,-0.51,0.400520434700689,0,-0.11,-0.51,0.1582596634851787,0,-1.01,-0.51,0.3285361210287326,0,-1.01,-0.51,0.19615031855728376,0,-0.11,-0.51,0.15506117433019415,0,-0.11,-0.51,0.08466810666920184,0,-0.06715305295829066,0.02881368769415133,0.08712175279973648,-0.01,-0.11,-0.01,0.02869369165486736,0,-0.11,-0.01,0.03912349563036657,-0.01,-0.11,-0.01,0.07555830962894779,0,-1.01,-0.01,0.07339072810051737,-0.01,-0.61,-0.01,0.06642483272311331,0,-0.11,-0.01,0.0904784206768092,-0.01,-0.11,0,0,0,-0.11,-0.47585992050988,0.04416878224539799,-0.005445235612348563,-0.11,-0.51,0.05048259597832029,0,-0.61,-0.51,0.08054709716864034,-0.01,-0.11,0,0,0,-0.61,-0.51,0.0711525412876214,0,-0.11,-0.51,0.09,0,-1.01,-0.51,0.09363035777457522,0,-0.11,0,0,0,-0.11,0.031367803430396475,0.29977558525960324,-0.01,-0.11,0.02040387917220838,0.25492202360054644,0,-0.645574049904534,-0.01,0.07067503575059847,0,-0.61,-0.01,0.06384440126311214,-0.01,-0.11,-0.01,0.08453552143126972,0,-0.11,-0.01,0.09534478056126494,0,-0.06982649441272397,-0.01,0.06270750245793082,0,-0.61,-0.01,0.08646653044665355,0,-0.11,-0.51,0.18700689233860773,0,-0.11,-0.51,0.16566403061557217,-0.01,-0.11,-0.4989539974769356,0.08876982094350035,0,-0.11,-0.50346375,0.08277803101773723,0,-0.11,-0.51,0.0677167994064529,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09397100486105875,0,-0.61,0,0,0,-0.11,0.026507249590284665,0.04922428470255866,0,-1.01,-0.021047645929449417,0.08163434532010136,0,-0.61,-0.01,0.059803915558430114,0,-1.01,-0.01,0.06743586689971885,0,-0.11,0,0.05715225150027039,0,-0.11,-0.01,0.07846338435797168,0,-0.11,0,0,0,-0.11,-0.01,0,0,-0.11,-0.51,0.060067900757591136,0,-1.01,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,0.21397303091589415,0.44887900176566714,-0.12075243955440598,0.2682283747156551,0.23422774344865857,0.441842175650703,-0.1726589442558496,0.20749734778558607,0.21374979762170623,0.45138077843260743,-0.1912689540784578,0.20368846984630037,0.07976179607993178,0.4301675562280722,-0.3368759635894145,0.06961130783650069,0.21428127144703063,0.3999743054313034,-0.2286459583470923,0.22384133176693244,-0.06859993288143552,0.33852017703547965,-0.41105329712097144,0.0879961100078828,-0.2164081249498885,0.28486520420281486,-0.35762825928870123,0.17081414696604527,-0.13507983478124252,0.32490423060398954,-0.41,-0.01,0.19165602146032273,-0.18402838342962918,-0.18668520545672698,0.0598989137854812,0.03190190434835202,-0.3187679509918913,-0.22110749585817924,0.044197062285022695,0.06653743016652684,-0.3026832839501193,-0.32984805059811856,0.13542135245085118,-0.09077277963272685,-0.4501421238610549,-0.40414027329463004,0.06603528300361886,-0.06538126129734116,-0.38452755017959084,-0.309376493962537,0.07902170091379343,-0.11,-0.51,-0.4060009498127746,0.10921409442846232,-0.11,-0.51,-0.41,0.12528439153816517,-0.11,-0.51,-0.41,0.14468328117075513,-0.020079450155427794,0.3846062092341398,-0.4226522489848183,0.15105496824053588,-0.024857995517650878,-0.0009122830096792251,-0.41998358766284216,0.08405084583161036,0.010147420883321913,0.016012976555599145,-0.4241893532585524,0.04222855184833725,-0.07503300567096279,-0.010712495157424584,-0.4143818124895039,0.1740277057655892,-0.21671695105800126,0.012139237910017642,-0.4240841988140001,0.2159644376261705,-0.4567696356063413,-0.010484657828087105,-0.4155516264257579,0.1082161760524506,0.016579643973234463,0.029284390212888645,-0.41012374999999995,0.19500781045704907,-0.61,-0.012778276858492452,-0.4106975,0.16785381571815652,-0.3313204739068303,-0.43809274431070677,-0.41581604234544195,0.08276940889829643,-0.016515735925594056,-0.51,-0.4166929175101559,0.1348397614730066,-0.32008385569489434,-0.5006677192603137,-0.41538809791578435,0.13222381057073437,-0.11,-0.5106975,-0.41,0.15594347539237507,-0.11,-0.5062915727089756,-0.4112322793820597,0.19586328752925763,-0.11,-0.51012375,-0.41,0.10448023997692057,-0.04284258077798481,-0.51,-0.41,0.061025133575133825,-0.11,-0.51126,-0.41,0.08454097218353643,0.11279799202834467,0.33452574215590397,-0.31503909662534346,0.07829430966496548,-0.029484296061131142,0.31901998913079893,-0.36761992176234576,-0.01,0.06629709461588673,0.06544168832248189,-0.4082277508348961,0.11795675334249955,-0.011631757504048858,-0.008091004577176866,-0.4124824355504614,0.21656209338733978,0.2459942476841189,0.034480604571815184,-0.4111762146601299,0.00332431253393427,-0.5186793654258949,-0.0013226994851325393,-0.4053365414409958,0.15673704383339837,-0.012857877377298935,0.032984816493939834,-0.40476912215164057,0.16205755093175744,-0.10277753868007007,-0.014154699005349365,-0.4124765394325022,0.08824584473575714,-0.21460635197798564,-0.4075003285726536,-0.3588138426900811,0.167630017624462,-0.07342922934363127,-0.49762307833721053,-0.4086447440570902,0.12981097299528382,-0.376981613147864,-0.51,-0.41035240344981494,-0.005497416898110544,-0.11,-0.51,-0.41,0.15276936570872177,-0.042350468692340736,-0.51,-0.41,0.16689357772477914,-0.07498866003738058,-0.50290125,-0.41,0.022738993046240698,-0.11,-0.51,-0.4112338819533023,0.05089236610295056,-0.11,-0.51,-0.41,0.07522915806136023,-0.06910157175591408,0.3155010118667385,-0.4095438253068638,-0.01,-0.006370076835254299,-0.0204400118422223,-0.4109423946599832,0.09261624870888391,-0.0005922702072813993,0.020207261714767926,-0.4108402820411011,0.13664214646244754,-0.11,-0.012587500000000001,-0.4106975,0.09071486626361876,-0.12052489848000886,-0.040686418252067154,-0.41080887499999996,0.10443071448467223,-0.11,-0.014818118292808035,-0.41,0.13323372243460815,-0.11,-0.012091991394745616,-0.41,0.006610826479429569,-0.11,-0.010250336554628257,-0.41,0.007203744777544082,-0.04649071030963732,-0.49834477648295383,-0.4120984542440491,0.027843193011615443,-0.11,-0.51,-0.41,0.14684333511214206,-0.11,-0.51,-0.41,0.0853732535234193,-0.61,-0.51,-0.41,0.0670433397381086,-0.11,-0.51,-0.41,0.0853645314899055,-0.11,-0.51,-0.41,0.04622063747378624,-0.11,-0.51,-0.41,0.017375247485072326,-0.61,-0.51,-0.41012374999999995,0.0003263717954501968,-0.13101069114026465,0.4284467775455658,-0.41,0.01232692739633621,-1.01,0.35308838771826445,-0.41,-0.01,-0.11,0.2643071432558753,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,0.24407805914627068,-0.41,-0.01,-0.11,0.04522178981064439,-0.41,-0.01,-1.01,0.035459078404055024,-0.41,-0.01,0,0,0,0,-0.61,-0.51,-0.41,0.12573079492338182,-1.01,-0.51,-0.41,0,0,0,0,-0.01,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0.049980913229306895,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.08350161311303753,0.2942128405561436,-0.41,-0.01,-0.11,-0.021137500000000004,-0.41,0.030892755969999276,-0.11,-0.02418584291250785,-0.41,0.07019472612730843,-0.11069767468430931,-0.01,-0.41,0,-0.11,0.020239895852697795,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0.07124269556369726,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.10406602867773394,-0.51,-0.41,-0.01,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,0.26360546513116634,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,0.04580644840263022,-0.41,-0.01,-0.11,-0.011428696117804752,-0.41,0.01947673475087748,-0.61,-0.01,-0.41,0,0,0,0,0,-0.11,-0.0055757867359015586,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,-0.0034587721293013246,-0.11,-0.51,-0.41,0,-0.5266783998798514,-0.51,-0.41,0.0021972770514186325,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.5246100686070272,0.05245926691878593,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,-0.017149232790499437,-0.41,-0.01,-0.61,-0.01,0,0,-0.61,-0.010230758166574337,-0.41,-0.01,0,0,0,0,-0.11,-0.01,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0.3270604413499859,0.3758075962823521,0.5090462344182175,-0.14006834775897975,0.24243270038463308,0.39084632429056926,0.5146917010547808,-0.14975339630709733,0.3130754697163639,0.34725591708493875,0.5391383077762127,-0.14506892661867696,0.22133514586698005,0.2711579452550218,0.5425098110061598,-0.21695889537340401,0.2044129486545371,0.2114643236395166,0.506057951654953,-0.14604628817046844,0.09123849107507194,0.21593797589713828,0.44618231941888065,-0.2258323832169461,0.2141338647290365,0.2669791825251598,0.29738778153926854,-0.17825420010632287,-0.06395965212106225,0.09123013814413161,0.3531708829994983,-0.434509578163592,0.3397697201319553,-0.060987681480986385,0.5377614348773095,-0.14194596444412094,0.2556932190785131,-0.17576224130435272,0.4841373384922335,-0.2528137260880563,0.279813324114113,-0.15676835611525386,0.5268877227747881,-0.21247794434408296,0.13317115115536096,-0.31961143769763295,0.5390611950532751,-0.39768868515474304,0.26303794043287815,-0.24166228558814754,0.5350143270965508,-0.25089168783749133,0.02420203814554854,-0.38083736773273336,0.5206613378004824,-0.4220771517029267,0.10662934916459091,-0.4205323575774461,0.4983704257336441,-0.4028043986172656,-0.045614874157143284,-0.5106975,0.4985361395016401,-0.4714272538015283,0.30845097595671717,0.3871024403204389,0.5321779675057556,-0.1368025240365287,0.18507845180046825,0.3473648693299998,0.5305221190961188,-0.2662845734851167,0.2144471075844682,0.31925650533919403,0.5296500028139355,-0.18375549844205186,0.0842656669897391,0.166834309386433,0.5293794527689377,-0.41921505742633175,0.2169245697297135,0.2744602890471427,0.5290660744793539,-0.16077412842095212,0.10622238617850303,0.10175577730011941,0.5083819337410027,-0.4360987651180084,0.06946206820206277,-0.00034149035516576817,0.49322986837928895,-0.4333460485145091,-0.06593233435723954,-0.01,0.5299882580368961,0,-0.054414143272857714,-0.37281087977024724,0.5443873846630688,-0.36204220692086014,0.1269660825004878,-0.47954342182174103,0.5352127805021011,-0.4314381880926836,0.07321690979609267,-0.4646338834929918,0.5163892224449074,-0.51,-0.61,-0.51,0.5270807167968168,0,0.14703977190230996,-0.4860470531318838,0.5122881945391516,-0.4891287880253934,-0.06590148264940016,-0.51,0.5046363205343019,-0.51,0.010523750655208247,-0.51059625,0.5204164483163151,0,-0.11,-0.51,0.4617050578293074,-0.51,0.32091101891169527,0.3468657195210827,0.5143153990765701,-0.1884613857246699,0.26107609397276976,0.3113153396624443,0.5090786181534778,-0.26699721428052486,0.2094681828758236,0.21177720373386058,0.3894157017056593,-0.20875187825838368,0.0903317334141184,0.2975938030389548,0.1419562611744002,-0.42677568225634027,0.27990193079668124,0.21328563815211332,0.23148926239251175,-0.21850755140520137,0.13515225639863407,0.12474403103960709,0.4552012862806741,-0.40608818779440364,-0.0638453591590133,0.3240858253142473,0.057558061268681675,-0.45489052908458594,-0.61,0.00012506507510730812,0.43315010608353965,0,0.21301729317549126,-0.19044384012700905,0.5286787410450635,-0.323732452344477,0.016486747211181943,-0.4353349593062576,0.48285177832536536,-0.46161301465674925,0.25990251858560115,-0.4101560238027573,0.4419268318852821,-0.34861723236256786,-0.0655423768815913,-0.49800884323434486,0.43552800923781687,-0.4864561224887836,0.2609477061705551,-0.3174255337824511,0.30234391683117656,-0.3551080861013417,-0.11,-0.4996817278440568,0.424306676358725,-0.51,0.04277346540016623,-0.49990364779890184,0.3168051250359696,0,-0.11,-0.51,0.45756073217655024,0,0.1996159786824273,0.215957342857245,0.3894313883210142,-0.29744513987673227,0.11474401162626845,0.1440988842834934,0.4716033581512086,-0.38898055830265665,0.06382663674005293,0.046543135809437794,0.3771325273996353,-0.4311304022304925,-0.0654224914431565,-0.01,0.46179376329687793,-0.51,-0.2851275015214045,0.061031932859469146,0.3903459545517969,-0.45705329679037476,-0.07014616569778681,0.014777954412649992,0.3324774413094644,-0.499644209460609,-0.11,0.05539698331237995,0.39753871329732526,-0.4884961808557839,-0.11,-0.01,0.4224874099331079,0,0.04096799457046113,-0.37555363398912667,0.41872033777382656,-0.4515491222980476,-0.003945612892159181,-0.5106975,0.47155249690785717,-0.4801691548640559,-0.11,-0.5090787256215462,0.4495394572913886,-0.4972300842349289,-0.11,-0.51,0.2003806598341823,0,-0.026140696375382827,-0.510135,0.32279840877206184,0,-0.11,-0.5133226059215563,0.43400547638043624,0,-0.11,-0.51,0.3327672369548498,0,-0.07009034287307825,-0.51,0.2314580353944726,-0.51,-0.08668324835754965,0.11588801387515547,0.5173764467591598,-0.43735049747892246,-0.61,0.14314901479042258,0.49686714432785695,-0.51,-0.8072061484254395,0.035997301276958306,0.5090774614618803,-0.51,-0.61,-0.01,0.43745145231908267,0,-0.11,-0.01,0.3676689016706326,0,-1.01,-0.01,0.34476065430459857,0,-1.01,-0.01,0.3346325251938224,0,-0.11,-0.01,0.17280149830584157,0,-0.8487766775089687,-0.426004815536287,0.5210105051493966,0,-0.11,-0.51,0.3762900794175462,0,-0.11,-0.51,0.45185794973961807,0,-0.11,-0.51,0.15325753782829352,0,-0.61,-0.51,0.3607845439413127,0,-0.11,-0.51,0.28387465284059815,0,-1.01,-0.51,0.1785566631829765,0,-0.11,0,0,0,-0.07698261355345143,0.028298438854924036,0.5231993203503396,-0.51,-1.01,-0.01,0.4847690089825943,-0.51,-1.01,-0.01,0.44966258237251405,-0.51,-0.11,-0.01,0.2890408636328644,0,-0.0934325823913068,-0.01,0.4141347749092787,0,-0.11,-0.01,0.21047194890041176,0,-0.19233875,-0.01,0.2525734230045281,0,-0.11,-0.01,0.09,0,-0.11,-0.51,0.4446100065970161,0,-0.11,-0.51,0.23299941096728086,0,-0.11,-0.51,0.1364754022848844,0,-0.11,-0.51,0,0,-0.9340040119953142,-0.51,0.26223753827492197,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.6164331573215245,0.02832709320648647,0.4117632150233187,0,-0.8872281010715294,-0.01,0.34602401593129783,0,-0.14889943068860367,-0.01,0.2118668327919618,0,-0.11,-0.01,0.20118645850550865,0,-0.11,0.023985931629531526,0.26757545773763364,-0.51,-1.01,-0.01,0.2736474555754435,0,-0.11,-0.01,0.17164872784570123,0,0,0,0,0,-0.11,-0.51,0.4635218141965302,0,-0.11,-0.51,0.28401443448188524,0,-1.01113625,-0.51,0.09,-0.51,-0.11,-0.51,0,0,-1.01,-0.51,0.29401823138795524,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.61,-0.51,0,0,-0.5312342712048514,-0.01,0.3205016049019454,0,-1.01,-0.0374673436675946,0.1981458441346464,0,-0.11,-0.01,0.20970486774780187,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.08655965279412076,0,-0.61,0,0,0,-0.07714255002970935,-0.01,0.09,0,-0.11,-0.01,0.09,0,-0.11,-0.51,0.2549018771715841,0,-1.01,-0.5453969362093478,0.09,0,-0.11,-0.51,0.17483765198296636,0,-0.11,0,0,-0.51,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-1.01,0.10439001375339103,0,0.22228780792869154,0.4624227600288085,-0.014290832599396269,-0.3446995549027368,0.1510971086568652,0.4531723875459566,-0.16533569151818547,-0.4404531254975889,-0.029931394603715737,0.4575894618779205,-0.19026432777798538,-0.3951767508241537,-0.0801514580500623,0.4469013428274105,-0.36348699619655733,-0.49081512423532797,0.13106466521268648,0.4183746737525448,-0.28890238682956393,-0.4047985189389927,-0.5229487029067101,0.24130112453854413,-0.3046358419367287,-0.45908654359692347,-0.05388704620042944,0.40218850198381706,-0.3438985364121962,-0.49136541285501206,-0.08593061534226237,0.33264757975539483,-0.41,-0.51,-0.4080968308442515,-0.51,0.033711974262755066,-0.481969151068803,-0.3745969053968612,-0.51,0.0031234133694628204,-0.4884856959925754,-0.4300067252768564,-0.51,-0.10904781736576874,-0.51,-0.45523524109030894,-0.51,-0.1247412241387334,-0.51,-0.51,-0.47170004847977637,-0.01900984896485316,-0.51,-0.303256117398011,-0.51012375,-0.13324411428263633,-0.48769854417229236,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,-0.10085834681509154,0.3896244793393161,-0.3454362446706185,-0.43365184727734196,-0.28518390301047003,-0.10186983101757449,-0.03314967082729332,-0.444508768677913,-0.1930422409241894,-0.07579991330076384,-0.25367160122684784,-0.4324719412650492,-0.17096362596101178,-0.1285179322179321,-0.2986303287204505,-0.47418766351874736,-0.10291800861118192,0.0839187064690107,-0.33076304342553076,-0.4296520171496681,-0.14380075888023625,-0.12569281612637812,-0.35395486908549995,-0.4295072848873895,-0.11,-0.06614733513016705,-0.41,-0.4815103994418447,-0.5821220748489889,-0.10998210076811052,-0.3596170762793166,-0.51,-0.38666096981671605,-0.5133412500000001,-0.06062521804790978,-0.4937576816976492,-0.3885049325531878,-0.51,-0.09990305281723716,-0.47049008342783794,-0.09805635320849862,-0.51,-0.41,-0.4970734688685213,-0.61,-0.51,-0.41,-0.51,-0.11784425677350358,-0.48896892097906053,-0.30961052140001566,-0.4616723992548658,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,0,0,0,0,0.126701325202964,0.36065074691446874,-0.2596994647282562,-0.3615151458527768,-0.07084642982057858,0.35365046211598483,-0.34153492132329366,-0.51,-0.15976396313738642,0.060673365746812896,-0.32949245565395396,-0.48616006288998087,-0.11196676570246972,-0.0019965933872340743,-0.3578645290318724,-0.5111475,-0.013606390339958613,0.06549376161249806,-0.2143788463192271,-0.4287989696723931,-0.11,0.16180721229921607,-0.36090723123438523,-0.46137394764105677,-0.06785643941370326,0.047051943173980135,-0.3605189722408392,-0.4619084580758422,-0.11,-0.0793052123471327,-0.41013499999999997,-0.4729573744561801,-0.3948346430725181,-0.4614397427402716,-0.0633269080392291,-0.5052155214093476,-0.3406188364950977,-0.51,-0.25193557046816606,-0.48429393406503307,-0.51,-0.51,-0.2890729646908597,-0.51,-0.11891277395704798,-0.51,-0.41,-0.51,-0.14606582775372198,-0.51,-0.41,-0.49113322841881346,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,-0.11,-0.51012375,-0.41,-0.51,-0.07878146899180113,0.3120990881456997,-0.41,-0.51,-0.1843581244337539,-0.14089908508537247,-0.36827489094359256,-0.4748601537481775,-0.4290505765124206,-0.0908667148423323,-0.3964169635545725,-0.503239875,-0.17735084494893932,-0.14449058824246977,-0.3995982247596966,-0.51,-0.08004663068890304,-0.02352844428334342,-0.3707252951867043,-0.4787581220249944,-0.1524514332221265,-0.14557181481147238,-0.3730336969441073,-0.44881089794742035,-0.11,-0.06182763524108315,-0.4106975,-0.4894504494636084,-0.11,-0.01,0,-0.51,-0.10578432694776498,-0.47273598900021474,-0.41171127828125,-0.4995925526806308,-0.10870482387339686,-0.51,-0.41,-0.51,-0.61,-0.51,-0.38356570606477824,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.51,-0.41,0,-0.61,0.4275836996282,-0.41,-0.51,-0.61,0.2519784833074813,-0.41,-0.51,-0.61,0.3224853893731956,-0.3631150167479067,-0.51,-0.61,-0.01,-0.41,0,-0.11,0.32781988811181567,-0.3926101646587895,-0.51,-0.11,0.06937611989586365,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.41962141579879236,-0.51,-0.1707180429393339,-0.51,-1.01,-0.51,-0.2598610988652463,-0.51,-0.61,-0.48018853744102213,-0.41,-0.51,-1.01,-0.51,0,0,-1.01,-0.51,-0.3842017678488711,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-1.01,0.17389135762249464,-0.41,-0.51,-0.61,-0.01,-0.41,-0.51,-1.01,0.022316206858157335,-0.41,-0.51,0,0,0,0,-0.11,0.025624055906490077,-0.41,-0.51,-0.61,-0.01,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.40937245036308595,-0.51,-0.2975372899970508,-0.51,-0.12259072029919663,-0.51,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.11,0.2394126565959016,-0.41,-0.51,-0.61,0.05319277581168492,-0.41,-0.51,-0.11,0.02145264776669103,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,-0.007354309942596584,-0.41,-0.51,0,0,0,0,-1.01,-0.01,0,0,-0.11,-0.01,0,0,-0.61,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,-0.51,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,0.14136580920098507,-0.41,-0.51,0,0,0,0,-1.01,-0.022654217027212535,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.5311107612075057,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,-0.41,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.61,0,0,0,0.2109852064537001,0.3683768216264255,0.3038052026164198,-0.22703658891034612,0.22499104031797415,0.30087048446400877,0.45752893939508005,-0.3518002519212262,0.16437998302327156,0.451169551654543,0.2419533818191809,-0.32749439465858543,-0.0227100821511603,0.10864557573836574,0.469521913137007,-0.39700906069884223,0.16797268755427827,0.3627898066207609,0.20877167316382889,-0.280158795722117,0.09687950141114117,0.09465905902001767,0.37764883204650274,-0.4498693549124961,0.07496188774995183,0.07351977083823727,0.3808222957267473,-0.45495983485595826,-0.05153193370296724,-0.01,0.40061974830285335,-0.51,0.1864608608035069,-0.21944894841642568,0.44049770341109906,-0.3715479790972352,0.1038290298653305,-0.3689628966641674,0.4658046118743413,0,-0.21488024013928653,-0.3543302767402461,0.43707837518995674,-0.4078800541587652,-0.06583354347122361,-0.51126,0.3998704530704608,-0.4937642853367454,0.14765624280903247,-0.4731696138312236,0.4330519224016911,-0.4536208577685386,0.009510843086747482,-0.48267540942983533,0.3278981470099543,-0.51,-0.11,-0.49936457211469465,0.3394299801235562,-0.48528839711883087,-0.11,-0.51,0.2712873309361554,0,0.20346057860173336,0.39035321623360214,0.03575993439942356,-0.46431019525645645,-0.09707615037902179,0.016100017347807846,0.09160118428304485,-0.42645262630572084,-0.004121850550994309,0.03784132953921903,0.0585682844591437,-0.4746619402198197,-0.4371760229458323,-0.008175970794890536,0.06412991994250297,-0.48479652514336313,-0.01810983851412583,0.0398415685984195,0.0689659292254803,-0.4264178380625835,-0.11,-0.007559308472317318,0.07124057205921162,-0.46781626706888624,-0.11,0.016956343952303485,0.14157483623520756,0,-0.11,-0.01,0.08876488079722832,-0.51,-0.02394074636801474,-0.4788928369923954,0.0853298840145292,-0.4868894859151809,-0.05621989423592848,-0.5020206921602564,0.09623012573455847,-0.51,-0.04763115039984056,-0.5095623333458228,0.05963440135117278,0,-0.11,-0.51,0.07300728066825757,0,0.23111651987943488,-0.4533359570921452,0.03586456301134117,-0.466736285975505,-0.11,0,0.06861739656857767,0,-0.07667964422545986,-0.51,0.09257069630304773,0,-0.11,-0.51,0.0881348460270648,0,0.2074862013033567,0.31904246817937953,0.21531868848224772,-0.4225764755510217,-0.3505816677395757,0.1983060043027181,0.41891794328434373,-0.49363328808042245,0.04814025535604626,0.005490095270262712,0.08650731154080363,-0.4807686047294687,-0.06994278104356602,-0.004321699552108777,0.0769718012764613,-0.5042684388307691,0.037454293908689845,-0.01,0.10134531704704201,-0.4663702033363009,-0.11,-0.01,0.1174964834236064,0,-0.11,-0.01,0.08944984111243952,0,-0.11,-0.004279901693410086,0.07789309918013437,0,-0.06509317118366154,-0.42337227794269305,0.3468993126775878,-0.4863588984742563,-0.023560406392817458,-0.51,0.3655679446451615,0,0.0017046387966089468,-0.5050425118338686,0.07827130467895697,0,-0.11,-0.5053180653689714,0.08359633309373836,0,-0.026962061155068898,-0.50347275,0.1454131199658796,0,-0.0670043159158151,-0.51,0.1059200801022254,0,-0.61,-0.51,0.08007504805730575,0,0,0,0,0,-0.06563833921809085,0.3537253048565986,0.06849104706534917,-0.51,-0.07695686499224459,0.008600079901861093,0.058129436319173784,-0.51,-0.06781138091090365,0.018668644406061023,0.07878737051712817,-0.51,-0.5194359882431261,-0.0126748125849881,0.037323481063052805,-0.5037994370568608,-0.11,-0.01,0.0673544051467225,-0.51,-0.07414168305012764,-0.01115875,0.0642638763627803,-0.4910309007349139,-0.11,-0.0009996555844226525,0.007137395887232816,-0.48980422275474833,-0.11,-0.01,0.07003879952218732,-0.51,-0.06631019724066842,-0.512025,0.06549876541429807,0,-0.11,-0.51,0.030123579574869486,-0.51,-0.11,-0.51,0.059405952153221905,0,-0.11,-0.51,0.06547329783950218,0,-0.11,-0.51,0.08281575956389176,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09178410741345921,0,-0.61,-0.51,0.08773046980175517,0,-1.01,-0.01,0.4498572986880365,-0.51,-0.61,-0.01,0.2754192657050723,0,-0.11,-0.01,0.3372359924070939,0,-0.11,-0.01,0,0,-0.11,-0.01,0.21374354203755852,0,-0.11,-0.01,0.13018861733416554,0,-0.11,-0.01,0.08962378809874665,0,-0.11,0,0,0,-1.01,-0.51,0.40780710334007547,0,-1.01,-0.51,0.16380137466130207,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,-1.01,-0.51,0.14190647146472382,-0.51,-0.61,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.61,-0.01,0.07232584269505346,-0.51,-1.01,-0.01,0.06668569250635102,0,-1.01,-0.01,0.06825602165241333,-0.51,-0.11,0,0,0,-1.01,-0.01,0.07274696801675044,0,0,0,0,0,-0.61,-0.01,0.08931375,0,-0.11,0,0,0,-0.61,-0.51,0.08781134692440738,0,-0.11,-0.51,0.08519723702271226,0,-0.11,-0.51,0.059342459312447124,0,0,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.07524226553720473,-0.01,0.30476334967908697,-0.51,-0.11,-0.01,0.14549217988449195,0,-0.11504778819367335,-0.006037947255906352,0.07011398583221613,0,-0.11,-0.01,0.09,0,-0.11476811815567553,-0.01,0.09666121419243973,0,-0.11,-0.01,0.09255446254114087,0,-0.11,-0.01,0.0869653446153053,0,0,0,0,0,-0.11,-0.51,0.2250968232436865,0,-0.11,-0.51,0.12449902658190001,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.0700481542080749,0,-0.11,-0.01,0.09,0,-0.61,-0.01,0.08283107087411187,0,0,0,0,0,-1.01,-0.01,0.09927974233694785,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0.023313226741786455,0.44163066037019516,-0.31451926532036967,-0.43350306896115565,-0.008343245738782288,0.4350160685252759,-0.37115803728422514,-0.4832774328836489,-0.07977155205392977,0.4380591218661515,-0.41,-0.48398611218181947,-0.11,0.37027288933441277,-0.41,-0.4817063880165532,-0.3739647246377122,0.15619699067294454,-0.3752846110675025,-0.51,-0.61,0.28196710556518867,-0.41,-0.51,-0.09287459309285057,0.2307997094994732,-0.41209094329804813,-0.5036104202699709,-0.51,0.07163714111363889,-0.41,-0.51,-0.6351493724547695,-0.4175216549812721,-0.1577910404348008,-0.5041232724219895,-0.10067775097196373,-0.4210291697938664,-0.33858378291995517,-0.506854720225242,-0.4700322483900189,-0.51,-0.291339759271981,-0.5066982852096337,-0.51,-0.51,-0.38261210082371405,0,-0.10279914176071231,-0.51,-0.33882917052541656,-0.51,-0.61,-0.51,-0.3819311012019288,-0.51,0,0,0,0,0,0,0,0,-0.11,0.37392101447015996,-0.41035294615854195,-0.5024481000000001,-0.16484684690957874,-0.14060428777966502,-0.41486719789827,-0.47065645409555384,-0.1451544852958281,0.049856197920276665,-0.41535206063030705,-0.4573907735476865,-0.14683364228473597,-0.1494285012308507,-0.41734165982513605,-0.5003645560439925,-0.11,0.09334964785216973,-0.41,-0.498104412323081,-0.61,-0.05062160115958644,-0.41,-0.51,-0.4803031462172096,-0.08710831785416993,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11526155267258613,-0.51,-0.41,-0.5047208492323092,-0.42461898239803003,-0.51,-0.4150299742429162,-0.51,-0.11,-0.51,-0.41,-0.51,-0.17099886308507917,-0.5106975,-0.41382043874665736,-0.51,0,0,0,0,-0.1004774657945728,0,0,0,0,0,0,0,0,0,0,0,-0.03494820614087545,0.3674222873673006,-0.38476456393477765,-0.49620998570909136,-0.61,0.2972968786200401,-0.39529164790937094,-0.51,-0.03667775927471373,0.07267762501605862,-0.41303449766397154,-0.48658788337074876,0.13359748988045875,-0.08510603844142767,-0.41185383794647346,-0.4959005387259248,-0.5245115750704173,0.13641792842255246,-0.40461815848755045,-0.49114900942797707,-0.11,0.00036466082341005774,-0.41,-0.51,-0.11,-0.044580809234531275,-0.41,-0.51,-0.11,0.028513019045929084,-0.41115874999999996,-0.51,-0.41601746535607836,-0.50335125,-0.3303054138247289,-0.51,-0.09388883646801706,-0.487566524314796,-0.35462395643831013,-0.51012375,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.61,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0.23749570921568408,-0.41,-0.51,-0.09395158581049752,-0.1100085345426651,-0.41,-0.5023387500000001,-0.15237744576076423,-0.0751618029461406,-0.41,-0.51,-0.51,-0.01,0,0,-0.11,-0.019935698150851694,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.10258438128033573,-0.51,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.2785651331043584,-0.41,-0.51,-1.01,-0.01,-0.41,0,-1.01,0.02539533933257969,-0.41,-0.51,-1.01,-0.01,-0.41,0,-0.11,0.03265797627662474,-0.41,-0.51,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,-0.33942025575713214,-0.51,-1.01,-0.51,0,0,-0.61,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,0,0,0,-0.11,0.07419339258751131,0,0,-1.01,-0.01115875,-0.41,0,-1.01,-0.01,0,0,-0.11,0,0,0,-1.01,-0.01,0,0,-0.11,0,0,0,-1.01,-0.01,-0.41,0,0,0,0,0,-0.61,-0.51,-0.41,-0.51,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,0.08026766373506199,-0.41,-0.51,-0.11,0,0,0,-0.8932859715053025,-0.010494749738133566,-0.41,-0.51,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2750608215665987,0.44356266793587357,0.5141134530841138,0.3760581565967924,0.28327672738204146,0.43124035109618375,0.527626566425803,0.35783131914132194,0.25500655648704074,0.45437518971571955,0.5011968300041271,0.38096579073150877,0.12039404678177978,0.3273362832201646,0.5372360702499973,0.294777927723572,0.18056027357701704,0.36621744302262743,0.5019375635017672,0.3084011527350199,0.21537699963243423,0.24571124374983505,0.5092100815967727,0.29155992941993736,0.07207834889342861,0.3373644675027395,0.5172609466800362,0.29160614853293054,0.031107885545607415,0.21730001911798552,0.48938762310340966,0.1442981015663615,0.0915430019526377,-0.07330849037043899,0.5136846614765446,0.36110700487591024,0.19873212179779243,-0.12666741979114662,0.5408403303629912,0.3302693683574997,0.2642594354446129,-0.13025725138364067,0.5318788676072885,0.3156392377342758,-0.12391288651254226,-0.4090652691609846,0.5246369682180316,0.08988732058803497,0.27646226696417703,-0.15311133313593428,0.5243125865728606,0.26346488938982016,0.03463466012654508,-0.40783690674839135,0.445711123967028,0.17035002333499794,0.025058546838713634,-0.4343831553122754,0.5244417789469329,0.1460948272132073,-0.10215994458349203,-0.43485908247884064,0.4596084183786689,0,0.20721567004364694,0.3889434623721738,0.5175476705272996,0.37342924191549237,0.13301791591447046,0.32000049626948135,0.5259973945658959,0.24104979812588703,0.16705262539855592,0.3331371873837547,0.5276842927031317,0.3001118885804736,0.05266936077523828,0.11151680353319578,0.5256214156185317,0.07863229170906622,0.24396750759068025,0.3506255464663597,0.5017959856566107,0.3197519053303179,-0.3008846136513085,0.08373623284202823,0.5140542380832869,0.18626798914538484,0.09258148893079904,0.13422736457693807,0.5018506362759354,0.11286582323221296,-0.04919069874757898,0.020950056813588948,0.500907430137075,-0.01,0.19915844319976495,-0.2148270546683515,0.5006695355938333,0.30916257572540085,0.04097366052408376,-0.43476277030934934,0.5213242616803376,0.05548966236499526,-0.07489671222775413,-0.40232816596319687,0.4734688681056427,0.058730661894739924,-0.06647488793888948,-0.51,0.5282262742841917,0.01874910436607647,0.09324569241677519,-0.51,0.5031088072370216,0.0783377600395407,-0.42905212884310057,-0.5021168963710231,0.5114927307573485,-0.011548379137669209,0.009705407398397495,-0.4869615050002396,0.5145379843322477,0.02272242710825083,-0.08507247876037623,-0.51,0.41705157022890804,0,0.2879462241369608,0.3158810399922433,0.4803910093739024,0.2906980827301828,0.17862725234662505,0.35400853645967245,0.5279119883391686,0.18294148958379028,0.11943054285734434,0.23912800283348146,0.354962769824295,0.2436299483818724,0.041044993863892765,0.09896522011531037,0.4546880989983555,0.022817631860486874,0.19874883168090288,0.24454965261921818,0.4302634764731148,0.24164286962838868,0.1234275562500542,0.15955498529148268,0.4639686508254042,0.2030823543190063,0.12247683997329666,0.31059724003752603,0.13392928449907537,0.17333779654582912,0.1412936921163865,0.04138146373485601,0.02347210463257934,-0.01,0.24815788075255635,-0.1847378538301659,0.509874849473432,0.21209467523505462,0.09506498692327378,-0.3709109197856532,0.5156677315780348,0.0949688826348831,0.19072974797025066,-0.36967787103578775,0.4504927795003176,0.17880942090641913,-0.61,-0.49080560214404056,0.35979496985017173,0.019255333211764397,0.059101857243437084,-0.42501601343322637,0.39457202637936567,0.0887423282051376,0.07409067587442889,-0.48354581057496027,0.37885750553130176,0.06848666197531506,-0.03420324047876482,-0.4973686153301548,0.4219705679268572,0.0902984383441396,-0.11,-0.51,0.32982306225859404,-0.01,0.17770993596285684,0.3249011573611798,0.21191861649058047,0.18813587282955269,-0.044668548376621216,0.11122076125389681,0.42781285986608464,0.13928382494119979,0.11453318713052456,0.14419443503637233,0.37963668210940404,0.10822451909846278,-0.0010710686155174717,0.0017849701547788203,0.4560450680973719,0.017939250854024973,0.11356665669807259,0.055942195535874546,0.4121139258684652,0.11541852578818232,-0.11904044077258791,0.028154078447457653,0.4396395833924864,0.018829834471435478,-0.41423213067805037,0.009573405810557526,0.07862285552495504,0.13526385300140262,-0.11,-0.01,0.263602575925968,0,0.08411403621350323,-0.3426597903396874,0.38170689998252316,0.09876645723557775,0.0803959487459941,-0.4950180496878562,0.389297328130112,0.02954553709495452,-0.11,-0.51,0.40249796685477424,0.0199828162378261,-0.06953550524461836,-0.51,0.3659115308490617,0,-0.07873629164949733,-0.51,0.4001026068691313,-0.01,-0.11,-0.51012375,0.37024110409302874,-0.01,-0.61,-0.51,0.4107440300713604,0,-0.07278713653476708,-0.51,0.22194739470105182,0,-0.11,-0.01,0.5298748080936355,0.06859789422363113,-0.17024368747235605,-0.01,0.541671677385921,0,-0.11,0.027737400691705945,0.5270960522453612,-0.01,-1.01,-0.01,0.4069315001243113,0,-0.11,-0.01,0.5233842479515055,0.021836932801456016,-1.01,-0.01,0.4206637045221317,0,-0.9354901452479805,-0.01,0.4186775299383677,0,-1.01,-0.01,0.16962824827802206,0,-0.15574159421561348,-0.51,0.5288679401634799,0,-0.61,-0.51,0.4542165875020449,0,-1.01,-0.51,0.382857057172959,0,-0.11,-0.51,0.13779394300189868,0,-0.11,-0.51,0.3781785391529344,0,-0.11,-0.51,0.22861554640431098,0,-1.01,-0.51,0.16581402530273218,0,-0.11,-0.51,0.11096048687772568,0,-0.11,0.02892386882050183,0.511963838421951,-0.01,-0.08048182183931417,-0.01,0.429062611597024,-0.01,-0.61,-0.01,0.46098343929178337,-0.01,-0.11,-0.01,0.1681429683059859,0,-0.11,-0.01,0.4580608315517525,0,-0.11,-0.01,0.21204852029661253,0,-0.11,-0.01,0.22503913944281168,0,-0.11,-0.01,0.14283137000428392,0,-0.11,-0.508803287519418,0.42395057877864395,0,-0.11,-0.51,0.31157625217304735,0,-0.11,-0.51,0.21184414439800686,0,-0.11,-0.51,0.11809079645548069,0,-0.11,-0.51,0.2461343373467067,0,-1.01,-0.51,0.09,0,-0.61,-0.51,0.09,-0.01,-1.01,-0.51,0,0,-0.61,-0.01,0.47606350671756226,-0.01,-0.61,-0.01,0.38302128006678354,0,-0.11,0.06784300250319743,0.2624028339708605,0,-0.11,-0.01,0.20849295487159936,0,-0.11,-0.01,0.3146112675205666,0,-1.01,-0.01,0.09,-0.01,-0.11,0.07389076737827463,0.2244564793208433,0,-0.11,-0.01,0.09,0,-0.1346377844043838,-0.51,0.39912422098368255,0,-0.11,-0.51,0.2640350295653209,0,-0.11,-0.51,0.17071227031768216,0,-0.11,-0.51,0,0,-0.19290125000000002,-0.51,0.1702697853137575,0,-1.01,-0.51,0.09,0,-0.11,-0.51,0,-0.01,-0.11,0,0,0,-0.1808303343728977,-0.01,0.309281020324697,0,-0.61,-0.01,0.13276708692826822,0,-0.11,-0.01,0.17516556734219013,0,-0.11,0,0,0,-0.11,-0.01,0.22582994170975687,0,-0.11,-0.01,0.09,0,-0.61,-0.01,0.09715117921875,0,0,0,0,0,-0.11,-0.51,0.2118271393920147,0,-0.11,-0.51,0.13514365192744615,0,-0.61,-0.51,0,0,0,0,0,0,-0.11,-0.51,0.13242403214058537,0,-0.11,0,0,0,0,0,0,0,-0.11,-1.01126,0.08931375,0,0.24320405756650965,0.46384134986111814,-0.022361671362082645,0.3111544363526521,0.0796003173362313,0.45550074702052123,-0.11632266272284075,0.1964242540124291,0.10601434433570042,0.45890741793923584,-0.1708313263899298,0.17445941247759117,-0.04701759040398166,0.43176357332298976,-0.33588137267181534,0.14136927996435614,0.18630570236340938,0.4481072274788337,-0.2502688673840088,0.20393651113741157,-0.11,0.4261666520813091,-0.35105029275349336,0.06958468037217908,-0.033609524016911765,0.42936459709790104,-0.38734282037124546,0.07269871705740637,-0.08433415263297678,0.4061979641478378,-0.41,0.04501525127972879,-0.0427463875673748,-0.13436732210145277,-0.05674676249698958,0.017670379510750518,-0.048696645716425374,-0.2897615401586094,-0.11380384862550055,0.12049238245241095,-0.08490355832004771,-0.3251835366173305,-0.23990790377427365,0.0020831298918374827,-0.1448926097427869,-0.49676448342786034,-0.2844331076334465,-0.08055463882765414,-0.07584766148210279,-0.3952841896267141,-0.28506230010803063,-0.006166754129951846,-0.11,-0.47594523138838785,-0.37707601564095755,0.18108723845054292,-0.1294831761473325,-0.4488676737986515,-0.41,0.21474713358451367,-0.11,-0.51,-0.41,0.15131173325508715,0.08098975893401301,0.39129952772749327,-0.28437009795959645,0.05389540121057142,-0.07341493369985723,-0.04462827619312408,-0.13808933420629022,0.019156331413419686,0.010901202832002896,0.017385914423766812,-0.3306430984096428,0.07078373051297526,-0.12169373695823482,-0.05497557667716023,-0.2653296699553228,0.004611201425204054,-0.12739859395451764,0.09853415516820696,-0.3548539161102344,-0.009788333995314195,0.08981031361362019,-0.04848209279019708,-0.27124597587207494,-0.0024120555796977236,-0.13015730418917515,-0.04939786020677638,-0.3549181934930463,0.07133081440247445,-0.08288258288866744,-0.031501039468667405,-0.41,0.08695843407554042,-0.01912968254265817,-0.3577843306317316,-0.302402713816855,0.02445820775560415,-0.04297555945157519,-0.51,-0.41,0.11054563055805379,-0.14303693988729693,-0.510135,-0.41,0.07727703550240772,-0.16012375,-0.51,-0.3956303773076507,0.13272979887583178,-0.11,-0.501802525857362,-0.3788471242676122,-0.0031541848732900817,-0.04984538733615368,-0.5106975,-0.41012374999999995,0.015307302602520135,-0.11,-0.51,-0.41,0.13924129641644709,-0.11,-0.51,-0.41,0.019585547698092932,0.14129005908457265,0.36237858381787613,-0.19250958568302795,0.10285098931877605,-0.0801206274281914,0.3634214177468494,-0.41,0.08899289315311426,-0.029449610693480503,-0.0032760004889268272,-0.23487930761727877,0.1488488810411546,-0.3730886713061517,-0.02118737814786073,-0.29159956624772676,0.08157683072626978,0.04488583680861258,0.1991508671150322,-0.2837188391697865,0.031097670619495598,-0.04148579067069159,0.03153131242899308,-0.39869325543627704,-0.02472973861274327,-0.046581912994762,-0.007524767359128116,-0.3898853401996692,0.037881070642968674,0.15024249952994287,-0.012103741602454733,-0.3738541097067261,0.01019973922290819,0.13195662745685116,-0.37393517100818546,-0.41,-0.005445114771334317,-0.07914933929843276,-0.4294676396300438,-0.41,0.0844052315345045,-0.08777829640219861,-0.48276891452174236,-0.41,0.11951556636657215,-0.11,-0.5000777278309404,-0.41,0.054339933882834326,-0.0862036215528525,-0.51,-0.40233874999999997,0.021160191343849232,-0.11,-0.51,-0.37722614275507865,0.008395417970309644,-0.16,-0.51,-0.41,-0.010802051816994297,-0.11,-0.51,-0.40220374999999997,0.044680827626505715,-0.37577122891588843,0.3553467236207645,-0.41170999999999996,0.02281009989708145,-0.14104196006582806,-0.04718760615411736,-0.34839373198079243,-0.05389019674741481,-0.07727006120563451,-0.020993519286133005,-0.3907051914125563,0.07198648130232142,-0.46573156762418866,-0.06038670384392514,-0.4106975,0.14510770995518485,0.01053068212212404,0.03095978060097138,-0.39601434687088966,0.030770123709852736,-0.11,-0.019837976354050407,-0.41,0.14208297512834867,-0.11,0.017865819735911285,-0.41,0.14323276867271031,-0.11,-0.05555125706167093,-0.41,0.07144552587291257,-0.519535807445097,-0.5114625,-0.4049734260075007,-0.017852911521002084,-0.11,-0.51,-0.41,0.07540028701464772,-0.11,-0.51,-0.41,0.07938929332534463,-0.11,-0.51,-0.41,0.038834092646851094,-0.61,-0.51,-0.41,-0.06579386432420217,-0.11,-0.51,-0.41,-0.007479134259115495,-0.11,-0.51,-0.41,0.014698042985023719,-0.61,-0.51,-0.41,-0.00936478892133774,-0.05254009255530054,0.4342100745192173,-0.41013499999999997,0.01797012337698388,-0.11,0.31482079682474157,-0.38802164309249676,-0.01,-0.61,0.17241795977610624,-0.37418147335536567,-0.01,-1.01,0.17009494436450823,-0.41,-0.01,-0.11,0.3087737390399852,-0.41,-0.01,-1.01,0.09881454121276775,-0.41,-0.01,-1.01,-0.01,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,0.0779058287318128,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.01,-1.01,-0.51,0,0,-0.65068625,-0.51,-0.41,0,-1.01,-0.51,-0.41,-0.01,-1.01,-0.51,-0.41,0,0,0,0,0,-0.11,0.21168969089604583,-0.41,-0.011260000000000001,-0.11,-0.041771448460105734,-0.41,0.03739767668777156,-0.61,-0.01059625,-0.41,0.01568437669520272,-0.11,-0.01,-0.41,-0.01,-0.61,0.0815016027881782,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,-0.002166112512881707,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,0.02294709866269884,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0.25446536943082354,-0.41,-0.01,-0.11,0.0018781578869419453,-0.41,-0.01,-0.11,-0.012087839583136042,-0.41,0.05440587452038361,-0.11,-0.01,-0.41,0,-0.11,0.015894793829722684,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,-0.01,0,0,0,0,-1.01,-0.51,-0.41,0.030351484763910738,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.008951018837174246,0,0,0,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.012025000000000001,-0.41,-0.011789630963242188,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.61,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2598027990769839,0.291401363198392,0.42925651643772983,0.2846341237751835,0.24090765416699428,0.36622432910515174,0.23492948019992854,0.21636699284773073,0.15916457607677975,0.2357656488844373,0.45850490749256173,0.19634926240662823,-0.3634942837528613,0.03435476992427754,0.451192776309157,-0.01,0.18601584244883482,0.2382643259503838,0.41733986381221716,0.24015829229132155,-0.023999969004963644,0.1507844759133152,0.43871056049308976,0.0460441341036474,-0.009471890074446182,0.09469235765482648,0.35406944937818063,0.10025658849306908,-0.5236347345617574,-0.01,0.3177217429209429,0,0.15838499509558449,-0.21102094887275288,0.44901920336193357,0.20408371115102,-0.27963702520031897,-0.3828347268142522,0.455201593354171,0.07414084054872325,0.019211005146261305,-0.3818109913570462,0.3985664807369913,0.0462461872160699,-0.07916518228441904,-0.4758679670580487,0.46208411679644434,-0.01,-0.2225231862569108,-0.389308499380496,0.4101248602175474,0.1067856072338012,-0.05244637059722702,-0.49401997380026824,0.43455064626638207,-0.01,-0.13402802449572918,-0.4388864179746517,0.19646767281679414,0,-0.11,-0.51,0.32544320181702974,0,0.0717891953133229,0.386489328003135,-0.024331300182454538,0.11957147453377831,0.012097228601115749,0.030825265428095657,-0.005547157401321796,0.06619777308405682,0.1702927442399164,0.06264595517196334,-0.055849963985924955,0.08516567458441378,-0.03973586166874097,-0.0177554721959757,-0.04387266899333399,0.053167242107651794,0.24239170463163237,0.06366046862555483,-0.04107961154310071,0.08553647776076868,-0.040930739635823644,-0.028366566399468624,-0.07830879681743746,0.1427168053721806,0.01847876197544735,0.010176562350474892,-0.011315318343671124,0.12916152595842367,-0.06637753380182748,-0.01722746974331561,-0.021470860001019554,0.16716210658723168,-0.0695223457149948,-0.2930802417574998,-0.04075708542892148,0.0652039394734844,0.019013635675343178,-0.510939439864861,-0.04750168668722661,0.15852388692701477,-0.39217683278526383,-0.512343375,-0.03807072827872652,0.13436542507342036,-0.13253551405910577,-0.51,-0.035103283805353734,0.07299298630980935,-0.36465475279110504,-0.484526082404462,-0.045999584233726666,0.05183291923376945,-0.16126000000000001,-0.51,-0.04168122069684365,0.09478285072409197,-0.11,-0.5111697382413265,-0.007070944097658423,0.062384940331762645,-0.11,-0.51,-0.010884044403548447,-0.00023975434629980655,0.05723391041659561,0.13128875458350595,0.3680693061953384,0.0951364373036292,0.04802672742704088,0.05610238349077679,0.36834928668680933,0.019775833731898097,0.04259891731485519,0.06852809012579433,-0.021657701874964748,0.09577894570592992,-0.013168892049249058,0.00045682817039294265,-0.005879764643399511,0.08973251115236605,-0.03351821737812952,0.010405477070620452,0.13895159225197143,0.02037909716627087,-0.06867131271335418,0.008611280593458673,0.1005446230602968,-0.0028536393462778023,0.11359643801774988,0.015592362674652957,-0.01979652598656127,0.03290867961966644,0.011608012212313779,-0.007670644256393775,0.005741294385578341,0.11470491032918685,0.06354854751287436,-0.47524981219155865,0.3799512028445726,-0.004948371724878418,-0.4330241140812098,-0.4809656430427105,0.3727824903162877,0.02122649908177477,-0.034625107116134306,-0.4876716536018826,-0.030529446519993845,0.15722027244502612,-0.03413181318105333,-0.5059850914495717,-0.01495843218682256,0.11289054587828808,-0.06896916224283292,-0.5024463479953125,0.10420365175243479,-0.01,-0.0666782863521336,-0.51,0.09679790973430219,0,-0.06826264834046092,-0.51,-0.010669131721893437,0.05201863899715661,-0.06976185735150062,-0.51,0.07695953577969065,0,0.06726499172484424,0.26360461279840836,-0.048334328897694914,-0.01,0.042232210349053695,-0.001530998404095194,-0.06946114082658633,0.06342181458038322,-0.005111823298121886,0.0016726673976371897,-0.03913777623718422,0.04877264033097057,-0.496189616232202,-0.012025000000000001,-0.014197741693582861,0.12444810832907628,0.21706342266627424,0.1079681210465804,-0.004110812443601802,0.06790677906329441,-0.11,-0.009554313704043872,-0.015737159463818224,-0.006378084455667054,0.20164796795580814,-0.011493649356183997,-0.011870511429306608,0.0012072824458668476,-0.61,-0.011411751558951367,-0.010172753031749715,0.022434932190254487,-0.1811487876150212,-0.5028675507420044,-0.05097553681174877,0.18873519414319934,-0.11633169342020949,-0.5106716582069465,-0.027055445783613404,-0.020520616781967385,-0.0739991278032367,-0.51309339703125,-0.0192867340315671,0.10923586567304477,-0.11,-0.51,-0.000996383868268605,-0.01,-0.09193866020550835,-0.5114773269606117,-0.016837166436955875,0.004389495929342429,-0.11,-0.51,0.008607781351724287,-0.01,-0.11,-0.51,-0.01007690795937089,0.016097950834108234,-0.11,-0.5060083723893259,-0.013766883380289259,0.05228992700342791,-0.11,0.03590394017468905,0.42665360056492047,-0.01,-0.11,-0.01,0.34316373878685047,-0.01,-0.11,-0.01,0.31392634812718645,0,-0.11,-0.01,0.17761723090103984,0,-1.01,-0.01,0.25910131352008,-0.01,-0.61,-0.01,0.16331073269632496,0,-0.11,-0.01,0.1044384909430677,0,-0.11,-0.01,0,0,-0.1768000967716379,-0.51,0.34817728374695045,0,-0.11537593254458293,-0.51,0.3022539010824481,0,-0.11,-0.51,0.13600707509087187,-0.01,-0.61,0,0,0,-1.01,-0.51,0.09,0,-0.61,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.25089726180105604,-0.015564567073699014,-0.01,-0.11,-0.023134444915934006,-0.020804783994327045,0.009751944979431838,-0.61,-0.011600859003826885,-0.022506825183482064,0.016310953490437055,-0.11,-0.01,0,0,-0.11,-0.01,0.08930249999999999,0,0,0,0,-0.01,-0.11,-0.01,0,0,0,0,0,0,-0.8912930435387726,-0.51,0.005227291647439021,0,-1.01,-0.51,0.09,0,-0.11,-0.51,-0.019804631653967484,-0.013093024937500001,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.25587415383268886,0,-0.11,-0.01,0.11824874146007015,0,-0.11,-0.01,0.020639744849396367,0,-0.11,0,0.03987732692889526,0,-0.11,-0.01,0.06847059966943447,0,-0.61,-0.01,0.09789502975757126,0,-0.11,-0.01,0.05335635118278727,0,-0.11,-0.01,0,0,-0.61,-0.51,0.19035445595677306,0,-0.11,0,0,0,-1.01,-0.51,0.09,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0.07068682822126923,0,0,0,0,0,-0.11,-0.012561625,-0.017253235166685026,0.047609537624563686,-0.11,-0.021236395610007695,-0.011852129647265905,0.019157125559561096,0,0,0,0,0,0,0,0,-0.11,-0.01,0.08931375,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0.038020401810330895,-0.01,-0.11,-0.51,-0.025600568322952256,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,0.09,0,0.15493610877889807,0.45206343502653507,-0.30849903056224903,0.15117272773460103,0.02357529990929525,0.4387502934995631,-0.34098773362399304,0.04247170917201695,-0.37139961882382383,0.42575266064254536,-0.3961042033376399,-0.01,-0.11,0.39882452630454046,-0.41013499999999997,0.03340113769109595,-0.049726600957913994,0.2945044374925594,-0.4173149550300714,0.025063420617337726,-0.0725836557787736,0.3685819514628311,-0.41,-0.01,-0.11,0.30390367730079987,-0.41,-0.01,-0.11,0.19023224061497856,-0.41,0.020438633177163774,0.10068878642631941,-0.4319114563675217,-0.3417133090518922,-0.050737997348501,-0.11035836554979558,-0.3983666957928904,-0.38957646752840713,-0.03217049623543434,-0.1358846818945273,-0.51,-0.4084848820931731,0.07997701563116523,-0.11,-0.51126,-0.41,0.06817566519138808,-0.399970183411929,-0.486309399267305,-0.39401710312494753,0.021209245126579637,-0.61,-0.51,-0.41160874999999997,0.07508614018340733,-0.11,-0.51,-0.41121387499999995,0.0008064822144357876,-0.11,-0.51,-0.41,-0.01,-0.07509182459395952,0.3506627395085943,-0.4226907331029229,-0.01109467344694185,-0.3998134515840915,-0.05240728222711004,-0.46580783109460727,0.05704626231364436,-0.15148069350271515,-0.015617077704142807,-0.42124887499999997,0.09499813381253407,-0.07645011981307082,-0.043916931291355155,-0.43170948648483537,0.07011616804299975,-0.09415339262529954,0.10011857796138396,-0.41132525,-0.013207785514825036,-0.11,-0.06639912965719168,-0.4106975,-0.0157704650856658,-0.11,-0.01753566998895307,-0.41068625,0.05362906576932372,-0.11,-0.022690710225158617,-0.41,0.02704312497723883,-0.11197885079323608,-0.51,-0.41,0.016174263849964555,-0.10246978722940771,-0.5133329263636066,-0.41068625,0.0015244806015877709,-0.61,-0.4972116780619273,-0.41,0.1228977238558865,-0.11,-0.51,-0.41,0,-0.61,-0.5081199319161785,-0.41,-0.022443355962497247,-0.61,-0.51,-0.41,0.04584737679951798,-0.11,-0.51,-0.41,0.09008759488028834,0,0,0,0,-0.0004984106326504367,0.33149734346147874,-0.39287091912861244,-0.0021154733295250267,-0.61,0.3208333288575442,-0.41013499999999997,-0.011305177515466803,0.13538056707828097,-0.009840320808157626,-0.4170229952321314,-0.040467108336879866,-0.07797763711797723,-0.011752130581873209,-0.41012374999999995,0.055781356981605745,-0.004744153921592824,-0.013761932849853494,-0.4125875,0.12266680933566984,-0.14459433874171584,0.08933583739429764,-0.41,-0.011036054250674561,-0.51,-0.010907577430561487,-0.41011137499999994,0.018760165915604622,-0.61,-0.01176357843257111,-0.41,-0.009531923884081547,-0.1263641398124951,-0.4838173300436638,-0.41,-0.0148391023041018,-0.11,-0.51,-0.41,0.024128974653581867,-0.11,-0.51,-0.41059625,0.020932631069158356,0,0,0,0,-0.11,-0.51,-0.41,-0.05654447952740798,0,0,0,0,-0.11,-0.51,-0.41,0.04126584630417094,-0.11,-0.51,-0.41,-0.01,-0.11,0.33232698463071375,-0.41,-0.01,-0.61,-0.0649207737122066,-0.41,0.004813760779179811,-0.14832382050085202,0.014011522308487866,-0.43147790023267873,-0.01614296642686783,-0.08149367819395485,-0.06791364345946857,-0.41011137499999994,0.020295891960492956,-0.11,-0.0129194273698551,-0.41,0.0454420719307467,-0.11,-0.016595977287597943,-0.41,-0.014941554685904425,-0.11,-0.01,0,0,-0.11,0,0,-0.01,-0.11,-0.51,-0.41,-0.00007371508422119666,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,-0.001870638512663891,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41012374999999995,-0.010337764684362236,-0.61,-0.51,-0.41,-0.0114654109375,-0.11,0.3441831742673816,-0.41,-0.01,-0.11,0.20460557565628207,-0.41,-0.01,-0.11,0.11786362717134774,-0.41,-0.010809553234375,-0.11,-0.01,0,0,-1.01,0.05472788766173939,-0.41,-0.01,-0.11,-0.01,0,0,-0.61,-0.01,0,0,-1.01,-0.01,-0.41,0,-0.61,-0.51,-0.41,-0.022912738397064997,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.01,-0.11,0,0,0,-0.61,-0.51,0,0,0,0,0,0,-0.11,0.10998431904515887,-0.41,-0.012114326819664482,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,-0.01,0,0,0,0,-0.11,-0.01,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.021137500000000004,-0.41,-0.01,-0.11,-0.51,-0.41,-0.009807935718287432,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.027672418378475082,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.006262937828007523,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,-0.01,-0.11,-0.01068625,-0.41,-0.01,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3350334565777023,0.4176633657091571,0.5286460812270685,-0.17609904921426076,0.168450253597809,0.3161402112201201,0.5175015029101566,-0.33746833104029256,0.07008888534196192,0.37972313987253475,0.4965594041859548,-0.33418449115187593,-0.27915814597051863,0.10680039808548075,0.5278688493992924,-0.39552885654930786,0.17195793749797783,0.3005617084219812,0.530401192315308,-0.2714474573841185,-0.030480978973051617,0.072395707081793,0.5293252739089264,-0.47435147055272586,-0.007597871738853491,0.02818154866312108,0.5228247018282113,-0.3843356549863707,-0.11,0.06716533460952151,0.5145096322787626,0,0.18815479561961088,-0.17552176987005355,0.5376333808568525,-0.4032960661610125,0.010108473977382675,-0.3512977501945524,0.5452271878802676,-0.51,0.07310835503041907,-0.3785042762097126,0.4973280160644558,-0.4331562195714129,-0.14900218398943854,-0.51,0.5297790547222544,0,-0.06539098961990265,-0.4685633244622686,0.5345050211079184,-0.51,-0.11,-0.51,0.5146065781154973,-0.4875622433636915,-0.06535437743223448,-0.4792564772312605,0.5039358327277439,-0.4780177454525883,-0.11,-0.51,0.29109422674197744,0,0.06244434373856137,0.1431944301446363,0.5241383350521094,-0.43687288478615705,-0.10377066833201054,0.2042526163996151,0.5365644051103055,-0.4147052195259917,-0.01179098514652233,0.17678093182392257,0.518423004179477,-0.43576472772609937,-0.15290125,0.025952253672647363,0.5275741613149412,0,0.14490924471780406,0.22518957045342536,0.4903751267794867,-0.4211787876819095,-0.11,0.018052314399380286,0.5222793474057079,-0.4615356331946526,-0.61,-0.01,0.4904892917064607,-0.51,-0.11,-0.01,0.41507589211228296,-0.51,-0.009424912493342399,-0.48582385347781126,0.4910357859673077,-0.51,-0.11,-0.4935371145120901,0.5233836570002977,0,-0.08639706924335117,-0.5114834765295507,0.49838224556743377,-0.51,-0.61,-0.51,0.41131957999270363,0,-0.11,-0.51,0.47606778163070107,-0.51,-0.03511635960272546,-0.51,0.4485791340207845,0,-0.11,-0.51,0.2937672256268201,0,-0.51,-0.51,0.211975422710954,0,0.0014943545706371589,0.3688569515297323,0.20088888067292707,-0.47821078912938536,0.04553113331013501,0.11598056518655987,0.5269256172530242,-0.43876942859110757,0.0810417749281173,0.11672068693247527,0.42621430158588935,-0.48726953500979764,-0.06703071888174432,-0.01,0.2723170819838124,-0.51,-0.3510769112925636,0.040130736842235185,0.2957434294921273,-0.4788523179318327,-0.11,-0.01,0.4857646187487304,0,-0.11,-0.01,0.432874316573878,-0.51059625,-0.11,-0.01,0.3492201013507062,0,0.08421782058694481,-0.41622906625373374,0.4843711799804986,-0.5108078625,-0.06671667172519292,-0.47670486785636357,0.5306311365697604,-0.51,-0.51,-0.4949183881305782,0.359592863173857,-0.48957560240028986,-0.11,-0.51,0.387318111275914,0,-0.11,-0.50290125,0.47884249442550864,-0.48953125397002356,-0.11,-0.51,0.3289602462706036,0,-0.11,-0.51,0.25417054368106434,0,-0.11,-0.51,0.17488358183786853,0,-0.013228892159519882,0.06279745386605001,0.46805623491363274,-0.509653947729767,-0.04603460563159492,-0.01,0.4277321813510964,-0.5116457771285631,-0.08156297030628683,0.016562243432552408,0.22697213517303563,-0.51012375,-0.11,-0.0106975,0.42861691397044305,0,-0.07205911644367875,-0.01,0.4132866675666862,0,-0.61,-0.01,0.28754512299232887,0,-0.11,0.00488492985167622,0.35573151122864055,0,-0.11,-0.0120550066525,0.1341859108970183,-0.51,-0.07157328108178573,-0.51070875,0.38108293370847235,-0.51,-0.04687766871109087,-0.51,0.38877226867630765,0,-0.11,-0.51,0.2240253089988679,0,-0.11,-0.51,0.1350051507315156,0,-0.11,-0.51,0.19895159061993367,0,-0.11,-0.51,0.15697620921637562,0,-0.11,-0.51,0,0,-0.11,-0.51,0.10905916253909048,0,-0.07899568631467238,0.035618598350091554,0.4931436143299455,-0.51,-1.01,-0.01,0.3730528142894641,0,-0.11,-0.01,0.35126792409683016,0,-0.11,-0.01,0.09,0,-1.01,-0.01,0.2769229461906816,0,-0.11,-0.01,0,0,-0.11,-0.01,0.2076815689509103,0,-0.11,0,0,0,-0.61,-0.51,0.40173387443208447,0,-0.11,-0.51,0.4085471165338326,0,-0.61,-0.51,0.17357129744445984,0,0,0,0,0,-0.11,-0.51,0.12731341136429117,0,-0.11,-0.51,0.16147077891757777,0,-1.01,-0.51,0,0,0,0,0,0,-0.61,-0.01,0.3925842762489131,0,-0.11,-0.01,0.3069782239498269,0,-0.11,-0.01,0.13513020001823142,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.20287859224496022,0,-0.61,-0.026129882148250037,0.09,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.1571354157096292,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0.36734199784265936,0,-0.200135,-0.01,0.16871577052612236,0,-0.11,-0.01,0.23055667781515016,-0.51,0,0,0,0,-0.61,-0.01,0.20651979777623594,0,-0.11,0,0,0,-0.61,-0.01,0.10478437800965394,0,-0.11,0,0,0,-1.01,-0.51,0.2022649854003659,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.51,0.09,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.12278880250024185,0,-0.11,-0.01,0.18942138182916665,0,-0.11,-0.01,0.1595689837088251,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.1665467046816798,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,0.09,0,0.03170393182008564,0.4580400292308216,-0.18929174064741375,-0.3786481658099592,-0.07395930716904492,0.45103656710132417,-0.3496276697105526,-0.47179080046246624,-0.05641489792070843,0.44537141375006783,-0.375047418042044,-0.4828825050429734,-0.11,0.41777261067360705,-0.41,-0.51,-0.04539891747240695,0.43433943024213134,-0.3919296268594798,-0.51,-0.61,0.4102636769267379,-0.3655848870067811,-0.5033554498959395,-0.11,0.3860169884823266,-0.3924804665735238,-0.48399365263597954,-0.11,0.05144599168570365,-0.41,-0.51,-0.4511727684695156,-0.51,-0.09215625809040486,-0.51,-0.4539151871611749,-0.51,-0.14932412257623046,-0.51,-0.41412169273653493,-0.51012375,-0.3378078648249305,-0.5018664640756955,-0.10234946984375,-0.51,0,0,-0.61,-0.51,-0.3043566281548381,-0.51,-0.61,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.08183538929527384,0.38578500477437555,-0.33494292096162614,-0.51,-0.16183173570404272,-0.13404196440162147,-0.38646020325089486,-0.515897885414515,-0.603755485620475,-0.06445700069854556,-0.3433022707003006,-0.4812081691873611,-0.16903816374719985,-0.1507220007533931,-0.3652712247759458,-0.48679998319654766,-0.08105889158857554,-0.03405352652971553,-0.4106975,-0.49228195851331447,-0.51,-0.16196118267368925,-0.3583039035828609,-0.48836451365414935,-0.09346793251506486,-0.09149139676830989,-0.41,-0.51,-0.61,-0.01,-0.41,0,-0.203359265035528,-0.511999125,-0.41,-0.51,-0.18950103218012443,-0.51,-0.39278763182375875,-0.49660900297180166,-0.1800300316671243,-0.51068625,-0.41,-0.510135,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.04385761433963211,0.33946975112266575,-0.3790779530424178,-0.51,-0.07380872247789984,0.33024571018273535,-0.41,-0.5073558836087692,-0.08081469756638808,0.030473304969226216,-0.41,-0.51,-0.13258676858017351,-0.056531299957428796,-0.36018571742622013,-0.51,-0.049175865400541835,0.11555476703341504,-0.41,-0.51,-0.11,0.09660523629446312,-0.36867451607520235,-0.51,-0.11,0.03645516815661466,-0.41,-0.5114640325569284,-0.11,-0.012673498713573478,-0.41,-0.51,-0.44925374389422773,-0.51,-0.30846124285073456,-0.51,-0.09197598290351074,-0.51,-0.41,-0.51,-0.4299637866008448,-0.51,-0.38357851696845824,-0.51,-0.11,-0.51,0,0,-0.41585872697594717,-0.51,-0.38616372802110077,-0.51059625,0,0,0,0,0,0,0,0,0,0,0,0,-0.08217392199375834,0.3071757963587764,-0.41,-0.51012375,-0.61,-0.14763272050886272,-0.37120232616178717,-0.51,-0.15736665854215465,-0.06451738327689895,-0.41,-0.51,-0.11,-0.030523444543099833,-0.41,-0.51,-0.11,0.031063044844430145,-0.41,-0.51,0,0,0,0,-0.11,-0.057282792734084084,-0.39564153210516173,-0.51068625,0,0,0,0,-0.51,-0.51,-0.41,-0.51,-0.1176203946712472,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.51,-0.51,0,0,0,0,0,0,-0.61,-0.51,-0.41,0,-1.01113625,0.19778277019227344,-0.41,-0.5083831231412356,-0.11,-0.01,-0.3799771343767893,-0.51,-0.11,0.06607443620841982,-0.41,-0.51,0,0,0,0,-0.11,0,0,0,-0.61,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.51,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,-1.01,-0.04452053596284304,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-1.01,-0.05546467432213671,-0.41,-0.51,0,0,0,0,-0.61,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,0.08238894385278969,-0.41,-0.51,0,0,0,0,-0.11,-0.011742281903451697,-0.41,-0.51,-0.11,0,0,0,-1.01,-0.01,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.51,-1.01,-0.01,-0.41,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0.03870232591604897,0.42343201291589444,0.2751747824802106,-0.4315082229138478,-0.025060554217232786,0.16485383694212177,0.4159090267362501,0,-0.06169105579593701,0.4412884861765613,0.12597630265686832,0,-0.05251348827803931,0.03231331976750389,0.41957365505519156,-0.51,-0.034089912954145256,0.11232354479782436,0.42266225894394427,-0.51,-0.11,0.0011199138672454995,0.4139700279462862,0,-0.06894357131326882,0.010262498401633029,0.3547586460950464,0,-0.11,-0.01,0.21453639672293193,0,0.010491301513533405,-0.468812716633919,0.4484657731748943,-0.48689328986004565,-0.03151015261223514,-0.49977258496394944,0.47183662951690286,0,-0.06580096937251305,-0.51,0.4269729548848801,0,-0.61,-0.51,0.4064182169078663,0,-0.11,-0.51,0.3874493994493857,0,-0.11,-0.51,0.29360545127907206,0,-0.07030754048259201,-0.51,0.21443968796142213,-0.51,-0.11,-0.51,0.1312677922084313,0,-0.0375172490864509,0.37441460067272686,-0.0037243484318592018,-0.51,-0.09044440021723299,-0.08004137247530882,0.0036669931945350885,-0.51,-0.04353138427151963,0.17578642252705862,-0.045379839524028034,-0.4893252652495686,-0.3091507988776303,-0.08323519231004223,-0.07488701887718636,-0.482769263989172,-0.06305774640045979,0.1885856331033062,-0.04178314561176506,-0.5116427027532249,-0.13089588184228546,-0.0641959914319957,-0.11438883984603967,-0.4968324824003752,-0.08043934026119241,0.0709140520403115,-0.03199912112572181,-0.4973169317794976,-0.61,-0.03885233476990585,-0.03865973653425822,-0.51,-0.07656203791525965,-0.4598367582554265,-0.03315145357331262,-0.5108088749999999,-0.11,-0.51,-0.008246559282915723,-0.51,-0.10617399861872284,-0.4930005904518168,-0.07492448261666027,-0.5121178843620716,-0.11,-0.51,0.04085139341431925,0,-0.11,-0.51,0.022523221255324598,0,-0.03974189722622815,-0.51012375,0.019835886265164828,0,-0.11,-0.51,0.04988450465493123,0,-0.11,-0.51,0.03964144375445929,0,-0.029939206622834696,-0.01,0.33430313533740763,-0.5019318389225735,-0.06482681020793754,-0.01,0.3309717565332447,0,-0.30322702373865834,0.14336936245087756,-0.012029862174750255,-0.5120258303289711,-0.06853976665097175,-0.024503937123614167,-0.020720666962041633,-0.5080024862910977,-0.5175285836332942,-0.01,0.08905327614977925,-0.490821747655097,-0.06764859646131963,0.018569653094218423,0.10047824030000227,0,-0.5215763924034367,0.01138732001671415,-0.020981118791567152,-0.51,-0.11,-0.013727850831972078,0.00038475502373189977,-0.51,-0.06817082399731803,-0.51,0.3440111951898919,0,-0.11,-0.51,0.3034486760010823,-0.5114022267222158,-0.06726869735294017,-0.51,-0.005179764676873313,-0.51,-0.11,-0.51,0.0738332113844137,0,-0.06689972407364522,-0.49967052682073815,0.10461458113590298,0,-0.11,-0.51,0.08044308756914388,0,-0.07369845594066066,-0.51,-0.022765102647933737,-0.51,-0.11,-0.51,0.0640080632052108,0,-0.037756386032574064,0.33116414029274316,-0.012002758268956405,-0.5114625,-0.13533219500944138,-0.1049052370276869,-0.10965375182289172,-0.5136902166895075,-0.11,0.06626934161003453,-0.007406939930182467,-0.51,-0.08013747594807273,-0.01827610946493573,-0.02378472246544501,-0.51059625,-0.44154427736903856,0.10974114242396782,-0.024659120006659617,-0.51,-0.11,-0.05485251300227695,-0.054482404859094766,-0.5114625,-0.11,-0.01,0,0,-0.11,-0.01,0.09,0,-0.11,-0.5119462499999999,-0.06884256275681493,-0.51,-0.11,-0.51,-0.0407141057268902,-0.51,-0.045100062459342394,-0.510135,-0.03574614997105947,-0.5106975,-0.11,-0.51,0.06016296590966931,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0.3540326089772207,-0.51,-1.01,-0.01,0.12807678781133128,0,-1.01,-0.01,0.21045929787202095,0,-0.61,-0.01,0,0,-0.61,-0.01,0.13433028202466402,0,0,0,0,0,-0.11,0.008218376457780403,0.09,0,-0.11,0,0,0,-0.61,-0.51,0.24183804860268138,0,-1.01,-0.51,0.09,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.08946897397406477,-0.016538579490395798,-0.51,0,0,0,0,-0.9079993830011761,-0.002705221166257793,-0.03357057807595805,-0.51,0,0,0,0,-0.11,-0.01,-0.008480351291016288,-0.51,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.018525814631107706,-0.51,0,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.18378200982892742,0,-0.11,-0.01,0,0,-0.11,-0.01,0.07242617568616475,0,-0.11,0,0,0,-0.61,-0.01,0,-0.51,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,-0.01,0.08819584875,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-1.01,-0.012025000000000001,0.005537796926584501,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.07439210997616791,0.4240977924146209,0,-0.5027517863839595,-0.11,0.3984898761418127,-0.41,-0.51,-0.11,0.41228866449047397,-0.41,-0.49065559812396586,-0.11,0.20500477939413977,-0.41,-0.51,-0.11,0.36224949717292804,-0.41059625,0,-0.11,0.14367393832000347,-0.41,-0.51,-0.11,0.13412151253297194,-0.41,-0.51,-0.11,-0.01,0,0,-0.51,-0.51,-0.36090293981793264,-0.51,-0.4539151871611749,-0.51,-0.3426217383466991,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,-0.61,-0.51,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0.32383934842775897,-0.41,-0.51,-0.10788543198571882,-0.11298720452471755,-0.41116662499999995,-0.5103232765365309,-0.10634283691456707,0.008392514440999962,-0.411192725,-0.5114625,-0.11,-0.01,-0.41,0,-0.11,0.08766658754848314,-0.41115874999999996,-0.51,0,0,0,0,-0.61,-0.029452281854631557,-0.41,-0.51,-0.11,0,0,0,-0.51,-0.51,-0.4382325770608592,-0.51,-0.11,-0.51012375,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.07280697832641965,0.3294352535781894,-0.41,-0.51,-0.11,0.1785694486779556,-0.41,-0.51,-0.11,-0.04762403594815521,-0.41,-0.5102018456974626,-0.11,-0.06517893685595816,-0.41,-0.5123530282083265,-0.11,0.13168947829624794,-0.41,-0.51,0,0,0,0,-0.11,-0.002460249999999999,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.013086344114525701,-0.41,-0.51,-0.11,0,0,0,-0.1904499153560479,-0.06731265310976453,-0.41,-0.51,0,0,0,0,-0.0956133243556603,-0.01,-0.41,0,0,0,0,0,-0.11,-0.026104904149764938,-0.41,-0.51,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.17144155079506954,-0.51,-0.41012374999999995,-0.51012375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,-0.41,0,-1.01,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,0,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.0130375,0.010841454957588226,-0.41,-0.51,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3060287198676893,0.4261654053384051,0.5302577492761983,0.4349034680838549,0.2810454995794361,0.37404672051697746,0.5298840100517428,0.38908119376352623,0.2916112263665485,0.4337626204535469,0.5290471977777295,0.4308556831597995,0.3010979320039524,0.42966201217198435,0.5409106590839359,0.4290900360108894,0.309808093023254,0.3568988083905127,0.5187359673843976,0.3523850635054863,0.33688822756812425,0.40866513607842236,0.4175785023338584,0.4447474879775628,0.2747560648594397,0.3793033079504399,0.5427604005754842,0.37698851047590076,0.21979617057417195,0.24771493229709712,0.5325113529616419,0.28385926236328185,0.352285004110561,-0.05019622424865846,0.5265660947773932,0.4236285371023126,0.2661504683042529,-0.05528963624484237,0.5467936234745977,0.4283733561438783,0.3051138184635454,-0.05704390863012292,0.5175097423240719,0.3693880058747299,0.14247896598656634,-0.18889801150250496,0.5127143161136036,0.3355395418556898,0.3275629993958257,-0.06582567860965512,0.5124294325863024,0.392601211410958,0.24951358184692748,-0.16726518213985866,0.24897336164014403,0.30458662679703313,0.13394124854421358,-0.15582472422777643,0.31134727609891266,0.42684256428022865,0.07679763335181092,-0.46720698463848187,0.5439625156952315,0.07594721753718761,0.33359413626311635,0.3921086208006505,0.5328297032065145,0.4384134008820112,0.2903887234232227,0.34033176406159904,0.5094514178207988,0.3905148759504741,0.2702913733772219,0.34234063553376587,0.517150181195386,0.3541891776672022,0.23761545280852922,0.29351683903561643,0.5113613253583309,0.30565096512719875,0.26035819116906933,0.3752609797717973,0.5500489635628553,0.44238104794649785,0.07253648809367123,0.29575069748288063,0.5306277707058886,0.3341575537139597,0.06820432712411018,0.27457911187054346,0.5325053169491208,0.3162722654223534,-0.018862477544954306,0.20502402364526992,0.5159666268773465,0.066133782689524,0.3030729617678919,-0.12203682297060714,0.4259168035857508,0.4428826388310134,0.16092163436242013,-0.20403215787563272,0.552603361050004,0.2611885175158062,0.2017565694427871,-0.2253321194792299,0.5283240134860206,0.3649819224629806,0.06999019268952897,-0.4326247044333074,0.5340900568930421,0.03661109740303078,0.26536280692481107,-0.26812646617719993,0.5411447700677635,0.26903653912178194,-0.06347035432428381,-0.42856536287042735,0.5340372058516152,-0.01,-0.0764109100998276,-0.47157174818885705,0.5367773576333735,0.07006991851732651,-0.11,-0.51,0.5259114668260331,-0.01,0.29255369361129724,0.32440565532437454,0.5050906688609107,0.3243194497190628,0.2792757318847973,0.3629926087722198,0.5073930194707368,0.3528616454726997,0.2324221119003804,0.2957539747817248,0.5244959856094633,0.2688525056115868,0.16974279355020125,0.3050257000611538,0.3068410916524821,0.41251152346377284,0.156660118136055,0.40006360891289916,0.30782453361556344,0.3249477520027439,0.20969264339315627,0.2303552358165206,0.40590980287377365,0.20918058139941811,0.19260724041153532,0.3842916012704245,0.23584000086747625,0.27987798627582655,0.026739708985756585,0.10936872441844132,0.23520409635686346,0.16172969680076563,0.27888761311319893,-0.10338313360599835,0.49447400670538527,0.30164556553937044,0.25769387004700983,-0.21227989462658048,0.511730108592812,0.27031823548101214,0.20434135359203517,-0.20635838054028982,0.5130367794493199,0.1860586350469219,0.03283107873255095,-0.4716070617074021,0.5210867588255148,0.1543514384301462,0.17567825761451167,-0.18376463233327317,0.18031195659857183,0.37870953556039566,-0.09111592071703127,-0.36115664738264763,0.5213242132348617,0.03364703674699709,0.009755702143525564,-0.3220993694672687,0.24295684950349145,0.41250081080876755,-0.019737146634276614,-0.51001125,0.5270738734290042,-0.01,0.3429279120955603,0.35267364115565647,0.5061990202813655,0.3668542715691214,0.22703684377500813,0.25343740883784094,0.5097411351376406,0.24549162917201922,0.2446691159233471,0.27288854397039414,0.26849388337064106,0.3003114465142457,0.023472170091601408,0.11425136152275074,0.5007744233013159,0.160013526421206,0.23821400162626463,0.3298217847879141,0.3089256731352397,0.40472521967233377,0.09560190035983629,0.11680233300838876,0.5150033680396817,0.11335757021648049,-0.0370588456381776,0.11822247496960106,0.4789418755855685,0.0733792365634505,0.043626004109825325,0.07131086964647051,0.4763484337050426,0.032174545921991184,-0.2230816718062621,-0.3004550702960793,0.4921526434520293,0.2720594887024948,0.044055948872005826,-0.44247224311961497,0.5150501330863795,0.07599307668534636,0.015925988891516495,-0.44893812474097716,0.5291991664859088,0.12180886647112096,-0.11,-0.48080328988639875,0.49889327329340943,0.03511228576855343,0.04231865807751253,-0.4402787060631871,0.5416737002172015,0.03647819911622229,-0.11,-0.51,0.520313273406145,0,-0.06444137910016609,-0.51059625,0.4574192057382773,0,-0.11,-0.4951357074811863,0.4926166150829197,0,-0.03319834627397942,0.2935132725229801,0.5171837532995271,0.26119855334189984,-0.1602968528363393,0.11280120287506135,0.5282508637086343,0,-0.11844225739704037,0.033406626448612566,0.5110350196622503,0.03408873127297144,-0.08611250763219655,0.03494534777891236,0.5380674451406637,-0.01,-0.12060165276851807,0.036199393863403685,0.4468848265031777,0,-0.07612256942079251,0.036994560158938324,0.5013114609613709,-0.01,-0.11,0.03555419597560221,0.5052234594139914,0,-1.01,0.0332031222559915,0.44574057871297246,0,-0.12246708757069996,-0.38920695323490184,0.5177168720268777,0.07638845702490647,-0.11296220651558322,-0.4653109132800843,0.5091054337063647,-0.01,-0.11,-0.51,0.5166882358227178,-0.01,-1.01,-0.4657778271873001,0.45338994687844053,0,-0.4928141531701071,-0.51,0.3852228407502154,0,0,0,0.4986875777089194,0,-0.11,-0.51,0.3988265237594681,0,-0.11,-0.51,0.13566646624141598,0,-0.45150983000903155,0.02993023701388605,0.5202211684018822,0.10986129892256816,-0.05383253647422782,-0.015823078635761628,0.5415305506015915,0.03387265197140307,-0.06943483144302597,-0.01,0.5254364256856987,0,-1.01,-0.01,0.3447308470068478,0,-0.11,0.01952925891334225,0.5175406044439664,0.03774241877555099,-0.64290125,-0.01,0.4587813833594129,0,-0.16145834074334597,-0.004420598687917757,0.4687592065824789,0,-0.61,-0.01,0.24342323710811048,0,-0.071107691409885,-0.51,0.5224425167653116,-0.01,-0.10145220969001938,-0.51,0.4155377665458232,0,-0.10906193070169937,-0.47884383958781396,0.2992475209716383,-0.01,-1.01,-0.5247546327649543,0.17896432031154558,0,-0.11,-0.51,0.3472562983632428,0,-0.61,-0.51,0.13818742314863164,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11046125,0.02757728560698479,0.4925449315567524,0.07604058361732519,-0.11944949075822302,0.02899015927398238,0.49112090801099306,0,-0.18828637089320874,-0.01,0.3193804824713166,0.03286345789781837,-0.11,0.02104558342153054,0.3288656708433875,0,-0.04012807787563985,0.029370110982179537,0.3633151470139645,0,-0.12093568855519835,-0.01,0.3218458061602239,0,-0.9500896194169126,-0.01,0.39751154384588366,0,-1.01,-0.01,0.13714460686434912,0,-0.1543044326943991,-0.40051990411656563,0.503327389995787,-0.01,-0.11,-0.51,0.32660294702543424,-0.01,-0.11,-0.51,0.4238703885047817,0,-0.11,-0.51,0.15311506687952517,0,-1.01,-0.51,0.38605068589300134,0.03184562723416923,-0.11,-0.51,0.3296361410558532,0,-1.01,-0.51,0.1372274578022477,-0.01,-0.11,-0.51,0.18190352733220902,0,-0.16218613732094522,0.02180950289456679,0.4328909557339857,0,-0.11,-0.01,0.485979242862865,0,-0.11,-0.01,0.3853855934924685,0,-0.11,-0.01,0.1281029055701166,0,-0.5746649133767713,-0.01,0.42952040827841903,0,-0.11,-0.01,0.16358584220096373,0,-0.11,-0.01,0.16635607358032206,0,-0.11,0,0,0,-1.01,-0.51,0.36902512589102704,0,-0.07253577128558722,-0.51,0.21353268859325514,0,-0.11,-0.51,0.16213968588046898,0,-0.61,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,0,-0.61,-1.00408569640625,0.2420223444646701,0,0.13890997121176696,0.46128926011314264,0.0230085837525839,0.4323402078388496,0.24082600883686428,0.45324223514799206,0.020966723096891737,0.3884045740828287,0.2115336378908273,0.39011713698174727,0.009995721337407261,0.4497249780230592,0.02626967710261581,0.37508449937748023,-0.2005157654534506,0.23735348783922017,0.214997576424031,0.4464351348002476,-0.03635706390393918,0.39359656439061425,0.10224173039671726,0.2745788864692743,-0.19460244865071558,0.42587872728285964,0.11295246592366553,0.44008065077497427,-0.22632322753457115,0.3028156443044411,-0.03458838407918464,0.43632024168120565,-0.3915169827966699,-0.01,0.25541852303006773,-0.07758158502783548,-0.01312775030460418,0.44744841590780976,0.14405752501282892,-0.20031626638858466,-0.14285858533603502,0.4430431829356717,0.1486959886955614,-0.227090258653741,-0.11294597234548784,0.4486161235961323,-0.09235261804985381,-0.51,-0.224839349673584,0.4488546300932984,0.047050131941181406,-0.2188824790763198,-0.1930498758812917,0.45014463814092165,0.05127935704526139,-0.51,-0.25359022295649636,0.4558652422466576,-0.07057487301206611,-0.48452587263333186,-0.28502740774863783,0.44677199257240474,-0.07823471386509549,-0.47703412396886663,-0.41,0.4457511172736052,0.18498212697955893,0.3886253579607165,-0.029690710983094035,0.4566403819504632,0.026179068685669955,0.19121530849756824,-0.10243074489449194,0.45471947899812853,-0.06952020868831646,0.19378152193791168,-0.09237029392849608,0.45739896063810465,-0.13722398907770833,0.1429860616469178,-0.23941764888611644,0.4517135698714753,-0.17526198938625306,0.23778880795432053,-0.12483692272391497,0.4532069176466209,-0.2986391748013406,0.05676950667961898,-0.3250687349055363,0.45238232635539377,-0.11545511180078202,0.05204965835298865,-0.3277450067313719,0.4553746954111148,-0.07088954979195035,0.014295010910217346,-0.41,0.4493005311028462,0.0746380905503343,-0.4033863412532051,-0.2239165325583535,0.45301792752951875,-0.0056501062799796595,-0.39321647497256484,-0.33379488570221805,0.4439147169569725,-0.09139840747260064,-0.45253229719526683,-0.3702025095409001,0.44668895616847626,-0.10103960612900148,-0.4841291127399182,-0.41,0.4501320068468826,-0.31140488722305126,-0.51,-0.3367738724452091,0.44756526436808297,-0.11,-0.49272576525911954,-0.41,0.4448156685501861,-0.08166418898181131,-0.48873956999585955,-0.41,0.44090004074323785,-0.11,-0.48113118628917656,-0.41,0.39572846860520977,0.2795920781476615,0.31425094206144333,-0.011164983979582667,0.39627825075619577,0.08842857458557814,0.29967228806200497,-0.05826772269569111,0.4321985267796041,0.15043090326577765,0.2693684902624768,-0.09374991000769375,0.26036167530500964,-0.09909216007620475,0.12145017681983815,-0.2564537690053931,0.4431905666626501,0.10182923844260541,0.2530992982897372,-0.12532492553321783,0.24375550434907653,-0.07142030124991011,0.1264315313338319,-0.2132967620872564,0.41101882209222484,0.026644382152224092,0.16933356694722215,-0.3122438302646252,0.4461748855966526,-0.5188857507676935,0.07372400446213644,-0.41,0.41822095791590946,0.07023519241627733,-0.3505766001361188,-0.1495559060812165,0.43235785943657856,-0.04673391549417773,-0.48958919461317013,-0.32683993394760114,0.42314107647363086,-0.04135811965702855,-0.510135,-0.35393687636464205,0.42921697572502576,-0.11,-0.51,-0.36678663316087673,0.43896266505934434,-0.12342515496218748,-0.47439807203908435,-0.3269632697332901,0.4295941236770858,-0.11,-0.51,-0.3651722585127777,0.42695809888592934,-0.11,-0.51,-0.375442322751545,0.41721809647719305,-0.07297135101218225,-0.51,-0.41,0.3536686265743769,0.15905585448050547,0.3063371015056135,-0.23465428473423042,0.44578616156079237,-0.01675631482697037,0.07473519525553372,-0.2912047485256796,0.4453374278730735,-0.027413827684775113,0.09908274702250862,-0.2798467295587289,0.44543387014948066,-0.07144345638267274,0.0533086030753744,-0.41,0.4313353606307818,-0.008276197913197982,0.047730779994828304,-0.35881658732982635,0.44356588336266484,-0.4314197185687038,0.018036929632003734,-0.4065544393097135,0.43250199335398476,-0.09811010226119782,-0.011586509146130481,-0.41,0.44050188026885817,-0.61,-0.011330915595006315,-0.41012374999999995,0.3139599833203631,-0.008151317580322767,-0.3668527514425056,-0.388261887730324,0.4326614265856392,-0.11,-0.4942985137143454,-0.3300508761745626,0.40682550248883104,-0.07663802616575258,-0.51,-0.41,0.40807640145509205,-0.11,-0.51,-0.41,0.33502956926495187,-0.5265949645981487,-0.5015129592820873,-0.41,0.4045123714775033,-0.11,-0.51,-0.39393615586094893,0.32988313338351316,-0.11,-0.51,-0.41,0.22445210295108084,-0.11,-0.51,-0.41,0.07684365522699976,-0.16114862858034312,0.42011442545717603,-0.28781318650959825,0.07041361846282354,-1.01,0.44938611443850074,-0.3273663656469494,-0.01,-0.16286254361045782,0.4463076409668449,-0.3276498055256478,-0.01,-0.11,0.34785461981485577,-0.41,-0.01,-0.6111649378911614,0.4523819925587,-0.36369927261077245,-0.01,-1.01,0.24010700304669202,-0.41,-0.01,-0.11,0.2523802689616186,-0.41,-0.01,-0.61,0.1644019763001454,-0.41,-0.01,-0.7729096295819505,-0.38885152255753497,-0.36639010295977237,0.4280509447042424,-0.11,-0.51,-0.41,0.2676723122262656,-0.11,-0.51,-0.41,0.35332979510593876,-0.61,0,0,0,-0.11,-0.49205560396380094,-0.41,0.3064473361916381,-0.11,-0.51,-0.41,-0.01,-1.01,-0.51,-0.41,0.11030468958104399,-0.61,-0.51,0,0,-0.1422910139844924,0.38509240149824553,-0.41,-0.01,-0.11,-0.01500254723118492,-0.41,0.28713695212267154,-1.01,-0.02058964934895751,-0.41,0.33565697853937126,-0.11,-0.01,-0.41,0,-0.11,-0.01057375,-0.41,0.36066303458136195,-0.92115875,-0.021137651875000003,-0.41,0.07143927621539886,-1.01,0.019873063857578685,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,-0.51,-0.41,0.1716557379716076,-0.11,-0.51,-0.41,0.10071293409819317,-0.11,-0.51059625,-0.41,0.1715861334497361,-0.11,-0.51,-0.41,0,-1.01,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,0.34637438697479805,-0.41,0.03581910061761636,-0.11,0.2432177806415226,-0.41,-0.01,-0.11,-0.017205232777693855,-0.41,0.3330200098586289,-0.11,0.0024663019676204015,-0.41,-0.01,-1.01,0.14412495003917145,-0.41,-0.01,-0.11,0.046261464293496,-0.41,-0.01,-0.522205168586166,0.044236638387299715,-0.41,-0.01,-0.11,0,0,0,-0.07323419653204295,-0.51,-0.41,0.31903998340893286,-0.11,-0.51,0,0,-0.19858556270425717,-0.51,-0.41,0.12794917187683913,-1.01,-0.51,-0.41,0,-0.11,-0.51,-0.41,0.030564851352165946,0,0,0,0,-1.01,-0.51,-0.41,-0.01,0,0,0,0,-0.11,0.2760683522594788,-0.41,-0.01,-0.11,-0.04075824848758206,-0.41,0.10669566380840081,-0.11,-0.007515839060845097,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.61,-0.01,-0.41,-0.01,-0.11,0,0,0,-0.61,-0.01,-0.41,0,-0.11,-0.01,-0.41,-0.01,-1.01,-0.51,-0.41,0.026201668130915352,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.004898302885597529,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0.34665795620252454,0.4155585886496144,0.48318010804700023,0.38903421813262823,0.247914370758113,0.3483457247125571,0.48649049420722057,0.38528690651046615,0.28447750657187665,0.3653928404895847,0.47585488009661847,0.36016552999238605,0.19199736977591383,0.3043131635581545,0.46876451903613325,0.23095316099899435,0.2321344486905635,0.23562657665256992,0.2670113900743183,0.3634634145817153,-0.13505656370789318,0.3214829413903733,0.3135943026953515,0.3480132882640532,0.16294342841332302,0.3108795944371011,0.43921568022298463,0.24655273157667093,0.034724184648367636,0.06806718079565202,0.4439509567910195,0.1976840774180569,0.3114444926928716,-0.061616005192245464,0.4909521640263423,0.33714576586548595,0.18239949067637534,-0.12144101027554483,0.48252672543776304,0.3709324113837858,0.22948578871643457,-0.2518103280392021,0.4634411533851875,0.3269305171818633,-0.0622565020067022,-0.42432083279726845,0.46617160026106835,0,0.1292250975554492,-0.28371439540232224,0.23391901268844117,0.38578295372855037,0.1606987498834112,-0.3439291041904471,0.378101047967782,0.0648332466669399,-0.0780119734671833,-0.39713190021008216,0.43544017801146817,0.12366444239259052,-0.11,-0.51,0.3949186039937313,0,0.29417236927024354,0.3920659190488552,0.3443315874978333,0.33440053141709575,0.13730539814631512,0.2049794929703413,0.20368979958935726,0.27325955555320397,0.23056670944092947,0.22347034083229725,0.3798872578354775,0.15485233989805114,0.08779814155129778,0.17033045808971523,0.3406191586363896,0.17960202650296545,0.16060958361667715,0.21534878601562527,0.3123019830482373,0.1904577235483451,-0.08930028762813123,0.10588765558578343,0.10635768166246351,0.19404729300536896,0.051174063299994216,0.06894708078657681,0.38018377982344864,0.16766930323457915,-0.15030352770886557,0.043575216129098426,0.4463545756530697,-0.01,0.1291674055138491,-0.18263412956968814,0.4540183540280588,0.18707938597436322,0.11698760607317266,-0.4242434468176979,0.4030386554033051,0.03450530269530931,0.04192439212040262,-0.3391193570668977,0.4206157006485867,0.09014488810135357,-0.065266186627621,-0.5011305848901506,0.39363290350799135,0.018060831839727426,-0.024044147794097796,-0.4693645755544497,0.4291588707894945,0.11168097573520591,-0.06659039765390315,-0.4569950952209168,0.3964082396505469,-0.01,-0.12258565335235808,-0.51,0.39305135834607746,0.029683935529912955,-0.11,-0.51,0.3084890415680603,-0.01,0.2845862604173715,0.36694913254758993,0.33642699784909735,0.30055341239706257,0.04137066997448102,0.368235888742342,0.25216758666347083,0.27639261541599,0.17066630575627767,0.2203538888989129,0.18079650039900289,0.1809519604039729,0.04018938698818746,0.22465816346359727,0.16630376228221608,0.19442679642069088,0.16004577528635197,0.21916281737382837,0.21047092226852812,0.21959054179126558,0.06367391912959561,0.11294126286461258,0.4469590363258675,0.09222942837272768,0.011757891587364934,0.09185088644999467,0.17960993398954905,0.12223072450773922,-0.0636431971147016,0.07973893580263068,0.38192785569216803,0.07898909373253996,0.14103462661878136,-0.30419064906955673,0.42620500312716436,0.21673211540794263,0.039029476896690625,-0.4011195713118305,0.461414471157901,0.06648053971410778,0.06673885184290211,-0.3664952676694292,0.08991815089933104,0.34082797164046524,-0.06548248203502985,-0.4502183696354815,0.4311607786934794,-0.01,-0.11,-0.42090955478280273,0.39470782136193305,-0.01,0.006822285583170065,-0.4762189168023178,0.311096498735371,-0.01,-0.42477117419592003,-0.51,0.41222472920989234,0,-0.11,-0.51,0.3675276609902844,0,0.026699037403064174,0.2794282684396171,0.425824793357643,0.2401745541798905,0.001385084913976443,0.11401854628363568,0.43430615556796226,0.1230910834997341,-0.03370458732364367,-0.01,0.3920366743992061,0.10444114976997756,-0.11,0.00418376603356259,0.3909493858313099,-0.01,-0.5178811955396027,0.05237390572400765,0.369309687021669,0.07922713673174542,-0.04232329050675295,0.09440069472314819,0.3391673104847492,0.07273548570024485,-0.11,0.007005533893292925,0.35975700277686157,0.03477813681304873,-0.11,-0.01,0.36918243159881214,0,-0.04078996493830612,-0.4333052148222098,0.39211706127536683,0.09556978083583904,-0.11,-0.4937574425198126,0.3820467758283712,-0.01,-0.08394778577761774,-0.48392252980539097,0.41346689966833033,0,-0.11,-0.5075931047069253,0.22546025211207688,0,-0.06885525185412107,-0.51,0.35957127030257363,0,-0.11,-0.51,0.37288630222073843,0,-0.11,-0.51,0.3069911537034439,-0.01,-0.11,-0.51,0.20638794069213606,0,-0.07007507237412657,0.11743244676716963,0.4832583192556682,-0.01,-0.12309717081984754,-0.01,0.4524507864111867,-0.01,-0.12131521585424053,0.03018779772431706,0.4666433665145467,-0.01,-0.11,-0.01,0.3777045680442467,0,-0.44077599502964,-0.01,0.3509017101946911,0.012614838750170549,-1.01,-0.01,0.32956176876610377,0,-0.06945850563417721,-0.01,0.30490842365270543,0,-0.61,-0.01,0.09,0,-0.20446239817871548,-0.51,0.4833177485898666,0,-0.11,-0.51,0.4045936136238234,-0.01,-1.01,-0.51,0.4191748909944247,0,-1.01,-0.51,0.17701675553073967,0,-0.61,-0.51,0.36094819820844687,0,-0.5199798174947567,-0.51,0.31277173252480583,0,-0.11,-0.51,0.16376781121793385,0,-0.11,0,0,0,-0.06959944969864043,0.06421880962098851,0.35481067105361913,0,-0.11,-0.013248493721851638,0.26595545911306073,0,-0.17221406829148378,-0.01,0.3055695467039296,0,-0.11,-0.01,0.1623433295235976,0,-0.11,-0.01,0.239620283623677,0,-0.11,-0.01,0.21310851936814218,0,-0.11,-0.01,0.16371889927272276,0,-0.11,0,0,0,-0.11,-0.51,0.3084769988718817,0,-0.11,-0.51,0.1828107895908339,0,-0.11,-0.51,0.1322930741876496,0,-0.61,-0.51,0.16007817266681215,0,-0.11,-0.51,0.17002871221419072,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.01,0.45744249609001275,-0.01,-0.11,-0.01,0.3302835979618266,0,-0.11,0.007492426312170232,0.21331537483619384,0,-0.11,-0.01,0.20006487778470528,-0.01,-1.01,0.023749662679868243,0.2190099896621259,0.035447925227669465,-0.11,-0.01,0,0,-0.11,-0.01,0.15415451552611956,0,-0.11,-0.01,0,0,-0.11,-0.51,0.33993574681364086,-0.01,-0.11,0,0.19289464700200196,0,-0.11,-0.51,0.256874534560316,0,0,0,0,0,-0.11,-0.51,0.12803220214460062,0,-1.01,-0.51,0.09,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,-0.006206555779501629,0.1855495425843645,0,-1.01,0,0.1408872791695245,0,-0.11,-0.01,0.21704242488795478,0,0,0,0,0,-0.11,-0.01,0.20210190339034195,0,-0.11,-0.01,0.09,0,0,0,0,0,0,0,0,-0.01,-0.11,-0.4967485513386184,0.12723099209388572,0,-0.61,-0.51,0,0,-0.61,-0.51,0.09,0,-1.01,-0.51,0.09,0,-0.11,-0.51,0.11315538434915783,0,0,0,0,0,0,0,0,0,-0.61,-1.01,0.08931375,0,0.2592451307340083,0.3332733240227863,-0.10667488915771241,0.4143601695685388,0.045105861279584644,0.4408644903342863,-0.23663348861601297,0.24107599916554182,0.019638478061655064,0.4509028001191554,-0.26089114243315736,0.12901348925468986,-0.06962516803916335,0.4413436370191931,-0.2933388610076201,0.10483277282701818,0.1344979998625878,0.2572607933872348,-0.16765809030022608,0.405561409120835,-0.03050093193060433,0.3178926325038087,-0.37228100830097066,0.08985109000024193,0.11783248534838836,0.1718057387597288,-0.338428589036574,0.3639609821352645,-0.07050557511655017,0.02753757841753047,-0.3632483344907169,0.3071529133112443,0.08463069930588533,-0.27409618976771194,-0.23285759742317386,0.40859640052062585,0.052856865005616926,-0.37292253313429047,-0.26972743034776275,0.4204804934828965,0.018284388433587706,-0.4514651196972664,-0.3145189461251992,0.3905910444263323,-0.11,-0.51,-0.37791053239862915,0.38109924073440105,-0.007524523775674679,-0.46517248109038384,-0.3711722795215794,0.25063525588162244,-0.03787056579907137,-0.48734820197427475,-0.34673924768200154,0.40480719283519917,-0.07089575393928199,-0.51,-0.372401182655804,0.41486285244466276,-0.11,-0.51,-0.41,0.2911890510309645,0.032495586662096426,0.3780833330179982,-0.24806650291416116,0.2631202270081613,-0.02030547405567771,0.09417659663358714,-0.35218587790577743,0.327205224042755,-0.00640157458058483,0.10177828865249601,-0.36146679458282205,0.4046976505395728,-0.04005369107280513,0.001892891249270739,-0.387227238679617,0.3686361167712665,-0.0055072979670278965,0.09017767864746394,-0.3713788762385002,0.38918945076718237,-0.5107598140789924,0.0375185381357915,-0.40939321570370873,0.14055080730043712,-0.11,-0.011603483396561245,-0.3837743550924814,0.3806163795153042,-0.61,-0.011994573049014126,-0.41,0.28203499319602604,-0.006419735920499561,-0.49222571151302635,-0.3727148013712426,0.3969469373602111,-0.11,-0.48722335492879293,-0.41,0.38875845729458014,-0.61,-0.51,-0.39526289003508497,0.36550198658235805,-0.61,-0.51,-0.41,0.3250683314146189,-0.11,-0.51012375,-0.3830555476112785,0.3341796181122414,-0.11,-0.51,-0.3746977548227381,0.10764289176770775,-0.11,-0.51,-0.41,0.2997245803651137,-0.51,-0.51,-0.41,0.027521686475847844,0.1637081614657068,0.30453385509296066,-0.2667769216346723,0.2438880394126263,0.02265834415587673,0.26640146054516795,-0.2864434378599109,-0.01,-0.0018160089734760437,0.08913615451424864,-0.3497052159974766,0.3871284486986769,-0.06971771287315136,0.046244765138381216,-0.4086924331977347,0.35705043704913586,-0.2772150280274446,0.08613005012542482,-0.2829493553227042,0.38627760483228624,-0.06901452373844996,-0.010641237127824272,-0.3649764352342965,0.27559459155459276,-0.07303458260363718,0.0341636663458565,-0.40881348383755706,0.2880936724851954,-0.05553223587782905,-0.01071862811495898,-0.41,0.3274897394326998,-0.4394910494592778,-0.39723586404756267,-0.3852382097179445,0.34973118200123654,-0.08362250996120857,-0.51,-0.41,0.3344213351727919,-0.07171120050101668,-0.4875535668372954,-0.41,0.3381160490365187,-0.11,-0.51,-0.41,0.2995404556484305,-0.11,-0.51,-0.41,0.3593238447161606,-0.51,-0.51,-0.41,0.2452875708701756,-0.11,-0.51,-0.41,0.2755143006560986,-0.11,-0.51,-0.40239566669128307,0,0.047195259635525455,0.3137948722547139,-0.41330046972174395,0.10480176318062336,0.012995640961863522,0.017812585665939944,-0.41,0.3380953392772539,-0.11,0.03429112777613469,-0.41062775,0.373712895932709,-0.11,-0.005916688505960446,-0.39380247681291913,0.13460772266093504,-0.61,0.012139322732561275,-0.41,0.3568186325467782,-0.11,-0.0127141890625,-0.41,0.23238807527468772,-0.11,-0.01048724799881276,-0.39453300392093893,0.18335913457515524,-0.11,-0.01,-0.41,-0.01,-0.11,-0.4889107383301376,-0.41,0.3285232655397375,-0.11,-0.51,-0.41,0.2681153751220384,-0.11,-0.51,-0.41,0.16904992488971063,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0.13195158909290167,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0.10495831041139612,-0.11,-0.51,-0.41,0.03609959945402262,-0.12101104507098001,0.42653693164632744,-0.404370723148694,0.024915611985640032,-1.01,0.19342300564348194,-0.41,-0.01,-0.07589094878901706,0.34783565321210963,-0.41,-0.01,-1.01113625,-0.01,-0.41,0,-0.11,0.1313649798740849,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.61,0.0326837638736873,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.51,-0.41,0.27395582583783695,-0.11,-0.51,-0.41,0.10333509064571982,-0.11,-0.51,-0.41,0.07621439047969625,-0.61,-0.51,-0.3880979179924138,0,-0.11,-0.51,-0.41,0,-0.61,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0.25271262275185524,-0.11,-0.017263909412986667,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-1.01,-0.01,0,0,-0.11,0.030319441903020213,-0.41,-0.01,-0.20012375,-0.023459604343155777,-0.41,-0.01,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.51,-0.40440515455091275,0.08047011943266379,-0.11,0,0,0,-1.01,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-1.01,0.26739417876492505,-0.41,-0.0106975,-0.11,-0.01,-0.41,0,-0.11,-0.009844910645163291,-0.41,-0.01,0,0,0,0,-0.11,0.026078872482258562,-0.41,-0.01,-0.11,0,0,0,-0.61,-0.01,0,0,-0.11,-0.01,0,0,-0.61,-0.51,-0.41,0.051779755737226096,0,0,0,0,-0.11,0,0,0,-1.01,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0.14606951470491453,-0.41,0.032593115387223745,-1.01,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0.027449412678861793,-0.41,-0.01,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.361839035374925,0.4206945878001148,0.5255259810987781,-0.07461981899738981,0.34347622030836955,0.42642655979740174,0.5290138724651321,-0.06756853066776006,0.35691454581174614,0.3683515516569241,0.5113819924030818,-0.07175970467250976,0.2663690495284488,0.3254964435423588,0.5436622120818266,-0.2807511646661864,0.35342804049887655,0.39715902466858927,0.515912437059998,-0.0662532440010706,0.29212489852559725,0.36328112854900163,0.5113807237607048,-0.15264061495483502,0.28309578121225654,0.35832765078440926,0.5207544379968129,-0.12577257939363806,0.012751953232526522,0.20682400283184524,0.4994115178168561,-0.46620500142612153,0.3486058700635466,-0.053429307218256374,0.5465861592225241,-0.08462378624520416,0.2502722798617475,-0.11412100339121081,0.5394116225640172,-0.16626729126496698,0.2814192993205675,-0.1121893077668638,0.5512575694672336,-0.16406560544681115,-0.0030059725385721825,-0.29316386143404743,0.5163890601746589,-0.32564338522112396,0.1894492195592962,-0.1189509178053047,0.5314147047878391,-0.1399893122764087,0.04878174843993375,-0.25032803408043725,0.4430327671453416,-0.3614600729213612,0.012016683235151565,-0.29199497688318793,0.5254401783130974,-0.4754899565600171,-0.11,-0.4731580770056762,0.5233992122260582,-0.51,0.3126209608128102,0.3875146190546293,0.53352565422377,-0.07884131939262959,0.2999492409004263,0.3180978871281452,0.5211989873465882,-0.08496685007018318,0.20418947339016408,0.3530416865210568,0.4961071558006988,-0.14920117381339054,-0.07727775548307632,0.12081780183210651,0.5379111868633796,-0.36894675264855736,0.3119163612039458,0.3389938173360486,0.5409278470953113,-0.11607722063977,-0.081191365517115,0.17866500050355127,0.5408986293319175,-0.3907757564732008,-0.28064235835098406,0.1912263047758821,0.5360641061427135,-0.3896540199030756,-0.07760237559099831,0.062008345767696676,0.5422920690774089,-0.51,0.14052349014914756,-0.22694590609078258,0.5111572433808645,-0.22661773637961485,0.13927576222488378,-0.426832975781059,0.5500315242182069,-0.4144724697945682,0.09988556733509231,-0.36029500207073684,0.5369306720907091,-0.39630562994367197,-0.05203230147446496,-0.5050730843575866,0.5211078861476701,-0.47521614462325396,0.01470789710352017,-0.4724438878148562,0.5264153873025262,-0.4163391137575548,-0.11,-0.4842765508621922,0.5120601999811595,-0.41400194191684825,-0.05943745353324168,-0.47876917193956664,0.530460334538602,-0.4028312063919093,-0.07553203727454842,-0.51,0.48602774933522297,0,0.3512094946233677,0.4058999937758237,0.4813781762474346,-0.13228973322225399,0.15335665117225256,0.2952023305750631,0.5257071339180082,-0.14403971803653898,0.2842626699623099,0.2820644865488465,0.49814644320795404,-0.17956852453453478,0.07293637529047708,0.18164296666931926,0.503284106606757,-0.32065478616810217,0.16075161037228458,0.3568596760527684,0.30462254105960906,-0.1660809185154443,0.06977900582547701,0.1470349235851388,0.5310290826363637,-0.37948372800826363,0.01367554354925292,0.09059567732101569,0.5310806715269969,-0.494839151326482,-0.11,0,0.5274701995925802,-0.4777838280209099,0.18049046909935615,-0.26305276622542517,0.5320254435814487,-0.3213383508506524,0.0873242814879934,-0.3750474752920623,0.45856531361895575,-0.4080056559632307,0.07925219984618775,-0.3396415186107114,0.43213491909728735,-0.44566630926728235,-0.024838390448971237,-0.4742207938282885,0.47395376317423193,-0.4211538810375702,0.12728854933248354,-0.345296697760989,0.5309099863314678,-0.461611195362983,-0.05558480139898158,-0.4532580874126715,0.5126985143195966,-0.4747956835167729,-0.06267912073322562,-0.47636862605236563,0.5446338266888018,-0.47009227985231994,-0.06803870359066409,-0.51,0.48841412945809043,0,0.24755843816570267,0.337733600898564,0.5062621586001128,-0.32664361566086586,0.04601436134377028,0.14041967862383198,0.501761675971933,-0.42038726060496456,0.09965039507980807,0.1961541581550707,0.5053126014746283,-0.51,-0.36135195885237076,0.042763321166988964,0.4906097690230209,-0.49219455582083665,0.17000515881903627,0.01709975334142927,0.49970125364453255,-0.42297818624512007,-0.11,-0.009998768852573316,0.533716299680605,-0.51,-0.07488616912891538,0.1476001972912059,0.48612074028564906,-0.48265196570084984,-0.0953986869642318,-0.01,0.45185312374450287,0,-0.02426659205816733,-0.39174157558138933,0.48262416146712134,-0.42528658600790836,-0.08509524295884824,-0.46718416388418205,0.5509057046062855,-0.51,-0.07625993215271336,-0.51,0.5109317653916655,-0.49925065746226027,-0.11,-0.51,0.4931624920034637,-0.51,-0.11,-0.51,0.5205178650618351,0,-0.11,-0.5068513505355212,0.4827689795770444,-0.51,-0.11,-0.5082369163213235,0.32120276270597864,0,-0.61,-0.51,0.3951480958036411,0,-0.0796542350100972,0.21913108254183908,0.5095040658393748,-0.36619838620226247,-0.0717175567806638,-0.01,0.5140349879783117,-0.51,-0.11,0.45328177035889405,0,-0.51,-0.07130585755633273,-0.01,0.4642700044326556,0,-1.01,0.14501361068087715,0.5030867344295299,-0.4267949222207029,-1.01,-0.01,0.4347721650579075,0,-0.11,-0.01,0.33786871022940496,0,-0.11,-0.01,0,0,-0.17945058283788068,-0.42326011511946066,0.5144829190872402,-0.51,-1.01,-0.51,0.5223507058737901,0,-1.01,-0.51,0.42680572662825333,-0.51,-1.01,-0.4689740296801504,0.32614940833404654,0,-0.11,-0.3933234179888745,0.49205898243906643,-0.51,-1.01,-0.51,0.3519716386045035,-0.51,-0.11,-0.51,0.13664729483592616,0,-0.11,-0.51,0.17950003786144336,0,-0.45835173200371665,0.028893955954286114,0.5014697862746857,0,0,0,0.5006411543757179,0,-0.11,0.02351285575556511,0.4778748862307306,0,-0.11,-0.01,0.4093402232467117,0,-0.0800090992925756,-0.01,0.4472717914933831,0,-0.61,-0.01,0.3377974607610272,0,-0.61,-0.01,0.29678693823319213,0,-0.11,-0.01,0.22450000980157772,0,-0.11,-0.4453205129576198,0.44974323317614395,0,-0.11,-0.51115875,0.410230420129291,0,-0.11,-0.51,0.09,-0.51,-0.11,-0.5297254421859859,0.09,0,-1.01,-0.51,0.28184007691124735,0,-1.01,-0.51,0,0,-0.61,0,0,0,-0.11,0,0,0,-0.9687216848036002,0.03231878517647521,0.5272318105050082,-0.49062990529003103,0,0.3666078504424575,0.09,0,-0.11,0.02756015789525771,0.39565878979983315,0,-0.18135411731117573,-0.01,0.24214391731944268,0,-0.0705458444309701,-0.01,0.4327953804578069,-0.51,-0.11,-0.01,0.12788892117302036,0,-0.11,0,0.1658062152210185,0,-0.61,-0.01,0,0,-0.11,-0.51,0.49188254784008834,0,-0.11,-0.51,0.299925492802056,0,-0.11,-0.51,0.28292100328804015,0,-0.11,-0.51,0.1367572781163445,0,-0.11,-0.51,0.2848738382329602,0,-0.11,-0.51,0.09034980514135213,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.01,0.3576745440721478,0,-1.01,-0.01,0.2913582381939147,-0.51,-1.01,-0.01,0.3056737918182472,0,-0.11,-0.01,0.1728995226838706,0,0,0,0.28022586849893943,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0,0,-0.1122791409031415,-0.01,0.09,0,-0.11,-0.51,0,0,-0.11,-0.5391803858439173,0.09,0,-0.11,-0.51,0.1697873484736672,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0.23573513016162173,0.4461204527688676,0.021924390951498004,-0.13599695260310496,0.20373834915459454,0.44914409762001284,-0.17181606085795004,-0.2327772140923278,0.11805625777429289,0.4517792348055704,-0.15043326129743678,-0.3095891187567653,-0.05575463245089188,0.4505162988308798,-0.36628427419954046,-0.51,0.1160558349288876,0.4425346124634555,-0.07929013142190541,-0.17378230074311038,-0.003351042278592814,0.4475015344853035,-0.36261161421149585,-0.43412522395045544,-0.0192275822901806,0.44745384811135014,-0.41,-0.4649216174612998,-0.11,0.41776341922286947,-0.3858686612928939,-0.4268845972925591,-0.31015109780930117,-0.3299986243630545,0.028620820287608092,-0.4038765232531849,-0.399227539317173,-0.46447404941940196,0.0006202952644651552,-0.503925,-0.3541853376914911,-0.4837474329250992,0.011206607840064789,-0.48799736361742396,-0.14773176773279967,-0.42557545893000315,-0.327307555982667,-0.3924935984637899,-0.4542892872816072,-0.434888990160748,0.009402636131091848,-0.4496826684467261,-0.39112095991272355,-0.3666279492515402,-0.0729865180757372,-0.49380944830763845,-0.60239819640625,-0.51,-0.09501845257412136,-0.51,-0.1224858993839962,-0.4467364375409809,-0.3761343856599748,-0.51,-0.1242891529826386,0.39083717114087413,-0.22101694270510008,-0.34211553694861685,-0.08695510182832529,-0.08267265861320874,-0.003238660418162494,-0.175801596180928,-0.133373875757461,-0.002688542524117347,-0.16590455870290652,-0.20792047805820826,-0.25784156150137444,-0.1077607287497088,-0.27392730637211277,-0.32226826364416605,-0.03806272143786331,0.09110944197340104,-0.19656967118873542,-0.23131343459549186,-0.206607181434659,-0.04754726960905713,-0.3128387782657889,-0.35016036567423364,-0.44300187979751104,-0.033536118969712876,-0.41,-0.4089411061059377,-0.12916236511994716,-0.15677456407726673,-0.3441636275729003,-0.4405716568646869,-0.32331420619508067,-0.42674484036943194,-0.02459322686140885,-0.48586520511653075,-0.51,-0.51,0.005868477219001746,-0.510135,-0.4168067875984252,-0.51,-0.14300082188742017,-0.51,-0.4024437414063223,-0.51,-0.28460472897363526,-0.4986383901259047,-0.13515825555958277,-0.4984567373432655,-0.4106975,-0.51,-0.1509144278656636,-0.51,-0.40391374999999996,-0.51,-0.11744099963421663,-0.508313915439026,-0.41,-0.51,-0.61,-0.51,-0.41,0,0.09125579876966619,0.302913326617406,-0.12348266499047815,-0.2787283214125225,0.04193034906261768,0.3428150108677286,-0.3684762111779837,-0.43421588257187166,-0.03453224764434558,0.07210402763724107,-0.19478148543615217,-0.24412689448826483,-0.06494143714703055,0.0035645235296013792,-0.38756146176249906,-0.48962837403401094,0.02016559729736145,0.19561256879484082,-0.1733577750040835,-0.4076544693698665,-0.04599703710234592,0.10904815116359814,-0.3941959985347709,-0.4783081618134624,0.12744352358807012,-0.017654157300755306,-0.24730354162893312,-0.3715088622437163,-0.46147305081375445,-0.04279383490027469,-0.3659728908648428,-0.4652176135085273,-0.38961539130686185,-0.4279576895666764,-0.04134922554662823,-0.4720878298980381,-0.09234166839249833,-0.3931215962179137,-0.2694737531277985,-0.4116820893309855,-0.3911888120323149,-0.5098838402757285,-0.09655449106278521,-0.51,-0.12603439734730698,-0.5048104045454708,-0.41,-0.47678881444153476,-0.06333267977589274,-0.4802646246446578,-0.2871582266493956,-0.47324237924775325,-0.3308682038655707,-0.51,-0.41,-0.51,-0.20485863550780303,-0.51,-0.41,-0.49528324532202483,-0.11,-0.51,0,0,-0.0826634146185108,0.25241352190961447,-0.29292884015543497,-0.45815360380977,-0.2276937253041791,-0.1119906594454272,-0.20140800624589014,-0.41061422820837,-0.09785585450435692,-0.05485930395263803,-0.2726120494523374,-0.48324625246721065,-0.4581378447331186,-0.16171170587893985,-0.36519621014654097,-0.4867249432542065,-0.07139806151407894,0.10452611195321869,-0.37054005087502406,-0.47963492294537863,-0.20032006067865593,-0.14341171722720858,-0.3649544526631677,-0.44481514082207146,-0.11,-0.04374753907852015,-0.41,-0.4889253071894776,-0.51,-0.01,-0.41,0,-0.558059115065132,-0.51,-0.14196680211393187,-0.51,-0.44539276074695944,-0.5197199724229414,-0.40290125,-0.51,-0.11,-0.51,-0.41,0,-0.13734234142562612,-0.512025,-0.41,-0.48522017228950054,-0.11,-0.51,-0.41,0,-0.1087533313535483,-0.51,-0.41,-0.51,-0.4539151871611749,-0.51,-0.3818630542815308,-0.51,-0.5111475,-0.51,-0.38798985917358475,0,-0.12578459631960415,0.44573527835779164,0,-0.4669121262000032,-0.11,0.31569743567284864,-0.41,-0.4710864788230613,-0.61,0.3142436368842141,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,0.22582709007152146,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,0.07164945331182855,-0.41,-0.51,-0.11,-0.01,0,0,-0.470889745775311,-0.51,-0.2945977488735148,-0.51,-0.4576121414982945,-0.51,-0.32186984554881437,-0.51,-0.61,-0.51,-0.12783074374184666,-0.51,-0.11,-0.51,0,0,-0.11594291298840231,-0.51,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,-0.61,-0.51,-0.41,0,-0.11,0.2779023275140531,-0.41,-0.51,-0.11,-0.03723450495517419,-0.41,-0.51,-0.11,0.0128941723575332,-0.36477489598796164,-0.51,-0.11,-0.029732753438331663,-0.41,-0.51,-0.0783331976145843,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.4360504878749631,-0.51,-0.29152593511225605,-0.51,-0.61,-0.51,-0.29083240093438273,-0.51,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.9243412205748367,0.27756209779394164,-0.41,-0.51,-0.11,0.019115374114621858,-0.41,-0.51,-0.11,0.021733498112438333,-0.41,-0.51,0,0,0,0,-0.11,0.02706506086908509,-0.41,-0.51,0,0,0,0,-0.61,-0.01,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,-0.12398766858227961,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,0,0,-0.51,0,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,0.08200613948144508,-0.41,-0.51,-0.61,-0.07804310768012639,-0.41,-0.51,-0.11,-0.012604120349425301,-0.41,-0.51,-0.11,0,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-1.01,-0.51,0,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.34900466796960994,0.42370900844331505,0.486630170144891,-0.07923120067703049,0.25152568637430345,0.4549067541580177,0.30193312426463736,-0.25735327769393146,0.07467502935262321,0.3410568393238633,0.487185382818875,-0.2865643152562822,0.129143380483978,0.035687637789765955,0.45695217136985367,-0.40187349597222566,0.28187805249379594,0.2827985193923194,0.42555713934318923,-0.1517624950844241,0.15639850077512382,0.1896458999091621,0.35383570983049056,-0.3382128211940841,-0.176218687802796,0.07199308396561796,0.4479209366103608,-0.3272652304965061,-0.06766147781612354,-0.01,0.4639066014594752,0,0.23960757462364057,-0.16936075276813878,0.48119911548106287,-0.1794967121441526,0.1903714530649774,-0.3744403738729309,0.4811145912926205,-0.3181813511398291,-0.2450582054539172,-0.2662098574189915,0.4726929920804236,-0.43524492537372045,-0.11,-0.4362400308319366,0.48041729864567295,-0.434908220793618,-0.10512500012348167,-0.378581378009307,0.4717537104340075,-0.45051527004432335,-0.06968752968990762,-0.4027656297769226,0.2992580467971579,-0.43320742420635366,-0.030107413836746005,-0.4289587221308727,0.45596770416000826,-0.5106975,-0.11,-0.51,0.34473443641580415,0,0.16659940935913864,0.3862293851773308,0.26339652711427197,-0.2954316987815036,0.1372166175628251,0.182163564704053,0.3176455068745241,-0.37911818015799403,-0.1656093961521693,0.16212076119582342,0.2903714798561708,-0.3588989445461109,-0.11,0.04581926934367277,0.4184266234377513,-0.44530641278820243,0.18212476011449094,0.21740027295927655,0.39534403715575045,-0.3562828525773399,-0.022921665195651197,0.0615254544461811,0.38825155183549687,-0.4719242614723108,-0.11,-0.01,0.37251211811768303,-0.492294321939144,-0.08056338241429511,-0.01,0.39780067910304606,-0.51,0.14645052031132214,-0.3605168478926026,0.3786439400155273,-0.476891658676463,-0.030867439114510654,-0.48015797909077024,0.3733605598850638,-0.44034186551220705,-0.11,-0.4993702675350956,0.2821048527331563,-0.51,-0.030468762946392343,-0.5106975,0.4100455388221879,0,-0.06538519433522007,-0.45680434044373996,0.3529326447220331,-0.51,-0.06889463487901779,-0.5064875903145873,0.2888125622928278,-0.51,-0.11,-0.51,0.3735965732507951,0,-0.07910504434139141,-0.51,0.26692902648232997,0,0.2579620096937661,0.33004616244289303,0.465678948141614,-0.29901650941479024,0.04377177791268186,0.06547045440082905,0.4726494723234724,-0.4544985412434813,0.1308159228073389,0.28579400638237484,0.15922786382859533,-0.39500811982399586,0.03465648714513092,0.06860379438969844,0.39080580802510906,-0.49435388529476676,0.0312415376178544,0.07773168632374304,0.41622604475533254,-0.4163735753794724,-0.11,0.07038044006898089,0.4299153154901206,-0.48765899221210135,-0.023683699889034057,-0.01,0.42259851911626534,0,-0.11,-0.01,0.3191377815373524,0,0.01621532000016125,-0.42191721223168377,0.4273408950873812,-0.4678696754599471,-0.06447489742261295,-0.47203623225105656,0.369497286739174,-0.4833039907705068,0.042300740636869935,-0.4777907160973373,0.42527457857011275,-0.5102331,-0.03411149765523326,-0.51,0.4267599206405738,0,-0.062473216595156,-0.46120224241359586,0.43456759876274853,-0.51,-0.11,-0.4788885505064019,0.34427767546982174,0,-0.11,-0.51,0.31633265283257705,0,-0.11,-0.51,0.08612719937018824,0,-0.025393174842507915,0.15118289927838446,0.3883633129908799,-0.466643205990525,-0.3554106212838395,0.040378937600897814,0.3796211257197374,-0.51,-0.11,0.07218420808759428,0.3922993587488542,-0.51,-0.11,-0.01,0.41835592984172243,-0.49261165833374176,-0.031035119030106632,-0.01,0.3818163377119973,-0.51,-0.11,-0.01,0.34275212292340274,0,-0.42582068155004293,0.015867077368827746,0.31640235846313675,-0.49600800011347473,-0.11,-0.01,0.09,0,-0.06677867391743741,-0.51,0.34411342636564013,-0.51,-0.04689107341481596,-0.51,0.3475387445078516,0,-0.61,-0.5058912994568263,0.3077882839588937,0,-0.0330629740067273,-0.51,0.16497307696831975,-0.51,-0.11,-0.51059625,0.32674185847523485,-0.51,-0.11,-0.51,0.09,0,-0.11,-0.51,0.12989816145295888,0,0,0,0,0,-0.07008045817523698,0,0.48283443510392954,0,-0.11,-0.01,0.40619951520405784,0,-1.01,0.03411998581537666,0.38197356447748504,0,-0.97059625,-0.01,0.13111498101671504,0,-0.12327673861602942,-0.01,0.34734658969153376,-0.50296069640625,-0.61,-0.01,0.16551026791283585,0,-1.01,-0.01,0.20165466062669837,0,-0.11,0,0,0,-0.11,-0.51,0.40191427260956547,0,-0.11,-0.51,0.3205255382207643,0,-0.11,-0.51,0.3644097093531706,-0.51,-0.11,0,0,0,-0.9446613639321343,-0.46495828509473885,0.27824507349129174,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.121034814786425,-0.01,0.273175701611725,0,-0.61,-0.01,0.24490139394734417,0,-0.11,-0.023118994661467357,0.16342812325933365,-0.51,-0.11,-0.01,0.09,0,-0.11,-0.01,0.21972708866342663,0,-1.01,-0.01,0.19663135735161535,0,-1.01,-0.01,0.1285371125591272,0,-0.11,-0.01,0,0,-0.11,-0.51,0.196299346223215,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,-0.11,-0.51,0.12896991342646627,0,0,0,0,0,-0.8794981167711426,-0.01,0.4267500561980385,0,-0.11,-0.01,0,0,-1.01,-0.01,0.18799562097589198,-0.51,-0.11,0,0,0,-0.11,-0.01,0.14238542988031655,0,-1.01,-0.01,0.1280266573966451,0,0,0,0.11765187442825846,0,0,0,0,0,-0.9201669005067205,-0.51,0.2673340083345711,0,-0.11,-0.51,0.0916566842873029,0,-0.11,-0.51,0.09,0,0,0,0.09,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0.1288153658390067,0,-0.11,-0.01,0.16151007128490985,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.1278946781625692,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,-0.51,0.12919534796595744,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,0.09,0,0.12735999468315032,0.42246830963326104,-0.19298436255757967,-0.3696458061001293,-0.06299403016089769,0.4239341937028503,-0.29849280399108785,-0.3884795362877906,-0.11,0.4510094783611609,-0.38471157265525374,-0.42717519126513603,-0.11,0.4167896677811405,-0.41146249999999995,-0.4570441022421676,0.03887645698934031,0.37076151577403116,-0.3592346260788927,-0.51068625,-0.11,0.3021804721664155,-0.41,-0.51,-0.11,0.2513129796773849,-0.41,-0.45111582124452293,-0.11,0.21881424912961248,-0.41,-0.51,-0.391514652239282,-0.47619473428528575,-0.08490137737470249,-0.4772285918507064,-0.13548841051142196,-0.3832077300670411,-0.32663226903423065,-0.40351919802605724,-0.3995212531696083,-0.51,-0.2506135527607657,-0.51,-0.1172815539352457,-0.4932696429641543,-0.41,-0.4973479496284052,-0.61,-0.51,-0.186918423235295,-0.51,-0.13380474569677564,-0.5002005195564686,-0.41,-0.51,-0.10284249338578573,-0.51,-0.41,-0.51,-0.11,0,-0.41,0,-0.0823579669939471,0.3830554620713557,-0.36342751556003217,-0.51,-0.17184670019849946,-0.09307738006498197,-0.312769655729576,-0.510135,-0.13266364043782042,-0.04515040595966303,-0.33004951298597185,-0.49075307904861704,-0.5162010809343954,-0.14814481027456264,-0.41,-0.510236995865851,-0.1036081979274023,0.14117718077466784,-0.39019012528346425,-0.46986758769475856,-0.08128501544342645,-0.11119051154857276,-0.41,-0.49751569337052337,-0.1458141842634766,-0.022066791062155443,-0.41,-0.48586363815159783,-0.1081644263380589,-0.1088072601948918,-0.41115874999999996,-0.4782064004849707,-0.12932283740344835,-0.4346086215643843,-0.37924039790127845,-0.4792245081932417,-0.4492954190219312,-0.51,-0.37339424037607366,-0.51,-0.51,-0.51,-0.3472682235871607,-0.51,-0.4524875414354845,-0.5197737253211738,-0.34731242100453646,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,0,0.04822704564319573,0.35043751444857557,-0.33891688478442916,-0.476908929031553,-0.04128361120342033,0.3670134013679398,-0.41,-0.51,0.13242458333724955,-0.012680207755899852,-0.3541722503321955,-0.4408472511695545,-0.11,-0.03623380463231037,-0.41,-0.510135,0.011431628993614152,0.22509579533060048,-0.41,-0.4791654309744156,-0.11,0.09533057473594003,-0.41,-0.51,-0.11,0.016981872599431774,-0.41,-0.51,-0.11,-0.03412387902993672,-0.41,-0.51,-0.09628345258927122,-0.42622496263570797,-0.3806988381580307,-0.51,-0.61,-0.51,-0.26829320854489114,-0.51,-0.1525777746853558,-0.51,-0.40719835446313085,-0.51,-0.11,-0.51,0,0,-0.07416056673729103,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,0,0,0,0,-0.13270452273203442,-0.51,-0.41,-0.51,-0.11,0.335631108900447,-0.41,-0.5100977921575656,-0.61,-0.14285305484908872,-0.3408369197433435,-0.5102763797006885,-0.15229847066640947,-0.06149503981597848,-0.41,-0.51,-0.11,-0.01,0,0,-0.18950654870879197,-0.014737223189605589,-0.41,-0.51,-0.08357227346061662,-0.11026705107469338,-0.41,-0.510135,-0.11,-0.01,-0.41,-0.51,-0.11,-0.023258849560474443,-0.41,-0.510135,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.08840304689819668,-0.51,-0.41,-0.51,-1.01,0.32739915826488597,-0.38668972656988826,-0.50290125,-0.11,0.07099788867162286,-0.41,-0.51,-0.61,0.034507922449514505,-0.41,-0.51,-0.11,0,0,0,-0.11,0.07558061303894764,-0.41,-0.51,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,-1.01,-0.51,-0.3250540122061137,-0.51,-1.01,-0.51,-0.41,-0.51,-1.01,-0.51,0,-0.51,-0.11,0,0,0,-0.12337786776119598,-0.51,-0.41,-0.51,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.08773167196505938,0.11548237998239907,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,0.048894093130287766,-0.41,-0.51,-0.61,-0.01,0,0,-1.01,-0.01,-0.41,-0.51171,-0.61,-0.01,0,0,-0.11,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,0.03698880283796042,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.27540542426861314,0.44294586881669334,0.5317134419618137,0.3822349190894159,0.3021119107650686,0.43338420209057943,0.5314958454351246,0.37732942821667653,0.14789454333125598,0.4400160638731799,0.5243542452293155,0.3845628539892633,0.12725978464544646,0.304434689566192,0.5398910650521535,0.30297613915452754,0.22679349778179594,0.38644765756280436,0.5440067440881545,0.3665438041852569,0.2542431926006985,0.38037805157429333,0.535157458973241,0.3430788189446626,0.08667218757525685,0.3649921621258219,0.5002102461211182,0.3219616184995807,-0.06885575862925143,0.13060409202003406,0.5058920845013954,0.09391984382299794,0.26388930134144234,-0.053395460166279426,0.5317685486031768,0.34923020667457216,0.1493896686972133,-0.08372476874766271,0.5387796877366151,0.33245807764431,0.19819102210275616,-0.10391590804411519,0.533774883257845,0.32031491672720236,0.09466112911925934,-0.359978387626952,0.5270353101547876,0.12199802733853757,0.21001119839367222,-0.16049171085303635,0.5243999518228476,0.33483594426702323,-0.11338786388107172,-0.3608137862901567,0.5398327565319996,0.2115317638655014,0.10476684035150995,-0.3872081091208677,0.5105679654805505,0.14423976942786024,-0.06795707010863285,-0.4945684711564468,0.5311031906380356,-0.01,0.26751566761264073,0.3832258319497447,0.5370453112456799,0.37657645486731633,-0.03779796405686556,0.3212396952137149,0.5338902382489962,0.32369879374337046,0.08552048414210545,0.3434102301164644,0.5444946077610163,0.33483926542755266,-0.06843566114511661,0.1475162850481688,0.5191594995960505,0.14800914617635746,0.17245549787707753,0.355875413674934,0.5298058586659949,0.32956765162618606,0.06905765091872168,0.17032454479003314,0.5163972616557867,0.09416800870650954,0.04079645454836121,0.13321268145969595,0.5304614099028174,0.159095154912954,-0.10234946984375,-0.01,0.5264838261157875,-0.01,0.022317299009034827,-0.2057894214855519,0.5372953198268633,0.31466619109305344,-0.00968475528298237,-0.41085649132802227,0.5197658366338115,0.1586788536259019,-0.09312383405631883,-0.43334132907455875,0.5134862797340766,0.16589684823297587,-0.0923342546144676,-0.4887518272179848,0.5328299136654621,-0.01,0.025251908498288785,-0.4038140394500358,0.5333720246312182,-0.01,-0.03766880252027212,-0.45185516696074923,0.5305017988280805,0.092418962586349,-0.0820562998901969,-0.5002926412423039,0.5252294031204203,0.028323548470622947,-0.08435443788284396,-0.51,0.46776351364052027,0,0.2683595496236383,0.3485436828603552,0.5059527091617134,0.2848224658606909,0.16338705593799144,0.40848539256107574,0.2550919194122302,0.23611486087628814,0.19392461296267233,0.2836209963547879,0.5171146922012138,0.2397713119451947,-0.020464040816405654,0.11161284373965916,0.4713683108536536,0.12201561191572007,0.2386122590407301,0.2942780363190705,0.509409389814903,0.2737395975209739,-0.021127532223254267,0.35154792046538275,0.191121050232123,0.13614461870976335,0.08650879618098807,0.14370854018686766,0.5218476257483147,0.15422760587900752,-0.07132555736695825,0.027743034597929664,0.5242473149168567,0.024936396894747248,0.225510822501292,-0.3191430261970082,0.5161197423691247,0.25779645051169287,-0.008868967416342764,-0.23325659849690356,0.5376468969757858,0.12914030788510888,-0.004756210818041312,-0.4003425456281606,0.5287111186030334,0.15311146560097885,-0.11,-0.4396195930681565,0.5232171374278979,0,0.043013531270492886,-0.2811940141198986,0.42158676164613507,0.16144771990574944,-0.06702988771650013,-0.51,0.5182679989928838,-0.01,-0.11,-0.457740237075754,0.5399880662908786,0.023666925507164954,-0.11,-0.51,0.49224390405873514,0.024852827438663544,0.11065751414991402,0.27920119336657745,0.513159035655874,0.2771947519925764,-0.016389628499965843,0.1496838044813096,0.3743338442828786,0.10070463785981305,-0.14523452472639814,0.16178933938482912,0.522010361701704,0.10103995881547023,-0.13818087265685725,0.08743248172242919,0.5199058778519755,0,0.02800952085205813,0.10624800506935882,0.4890084226754768,0.023302761461528133,-0.07677807108256482,0.05857464869376832,0.4691876215395598,-0.01,-0.0759294861728925,0.026448001056073492,0.4604786589642088,-0.003808565845050073,-0.11,0.009305069096028651,0.4258832376693778,0,-0.1492516261002089,-0.39106042823106923,0.3653050676023172,0.04553272280544998,-0.11,-0.4993150465330001,0.5075188036888978,0.043685914444997295,-0.07303019314849915,-0.4974134688964344,0.486748217629497,0,-0.11,-0.51,0.44892141649046563,0,-0.61,-0.4843667055075007,0.5273922616381225,-0.009379492961449265,-0.11,-0.51,0.43143643604021387,0,-0.11,-0.51,0.36923189276900736,0,-0.11,-0.51,0.36456894231404025,0,-0.9920328056889978,0.18245304791163705,0.5412007018974117,-0.010321781225008419,-0.61,-0.01,0.5258803712137695,-0.012588906736628649,-0.11,-0.01,0.5295696592760095,-0.011765060635491027,-0.11,-0.01,0.3280512055649866,0,-0.17906486837301178,-0.01,0.5374489873145389,0,-0.06970460131990236,-0.01,0.4021336757499727,0,-0.61,-0.01,0.4401054848602395,0,-0.11,-0.01,0,-0.01,-0.11510971427629649,-0.51,0.5486881586021856,-0.01,-0.14989614354524528,-0.51,0.5357945941104831,-0.01,-0.1020791120089579,-0.4638702466136453,0.49682175722597866,0,-0.61,-0.51,0.30019668595003496,0,-0.5505276110039172,-0.51,0.46824082685083585,-0.01,-0.11,-0.51,0.348898866805636,-0.01,-0.11,-0.51,0.1364513709343459,0,-0.11,-0.48185616857765146,0.13742790533664867,0,-0.18393024980344214,-0.01,0.5384396519484472,0,-0.5549273196158054,-0.01,0.5225490918078863,-0.01,-0.11,-0.01839489797636404,0.5079490617759371,0,-0.11,-0.01,0.3797179614937297,-0.01,-0.08042395525697012,-0.01,0.4557692498482493,-0.01,-0.11,-0.01,0.3318112832364554,0,-0.11,-0.01,0.23905057533048524,0,-0.11,0,0.24609718654748006,0,-0.11,-0.51,0.43948404499433785,0,-0.11,-0.5168396068617734,0.3915430990222667,0,-0.11,-0.51,0.24744738059910276,0,-0.11,-0.51,0.13459565140207091,-0.01,-0.11,-0.51,0.24813502965850373,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.9699714105898847,0.06835468988192786,0.5113468493278397,-0.01,-0.11,-0.01,0.4063968739458074,-0.01,-0.11,-0.01,0.3116519938474601,0,-0.61,-0.01,0.16398995519400003,0,-0.18380829093720663,-0.01,0.413750544398825,0,-0.5661226832888344,-0.01,0.19789799899926785,0,-0.61,0.028141326192219644,0.26752855854629604,0,-0.11,0,0,0,-0.11,-0.51,0.41582956045055985,0,-1.01,-0.51,0.37985511077701334,0,-0.11,-0.51,0.41446488317767904,0,-0.11,-0.51,0,0,-0.11,-0.51,0.17698662164899798,0,-0.61,-0.51,0.17787461675335564,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,-0.632381276283277,-0.01,0.3893876169982349,0,-0.11,-0.01,0.1754636134739018,0,-0.11,-0.01,0.32775276896712163,0,-0.11,-0.01,0.17493046500681572,0,-0.11,0,0.36754378657079617,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.1727861177294205,0,-0.11,-0.01,0,0,-1.01,-0.51,0.2431138868235872,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,0,-1.01,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,0.15789108130952648,0,0.2236453831181413,0.4603801887035341,0.01502986573480252,0.31752051170171136,-0.12962847407165562,0.4567220310747555,-0.10792380772598048,0.23258162600208143,-0.04506972321837603,0.45531354096584964,-0.19194396860362686,0.26866176153815685,-0.10789411442911981,0.45025278344593717,-0.258761484314101,0.10263422230784547,0.09163257058596122,0.4608887218460695,-0.1539513924570314,0.21399364480554617,-0.4103398107454185,0.44994568807581986,-0.3561705613520647,-0.01,-0.08703762501975978,0.4421406589295728,-0.3737939690346259,0.0818343813335493,-0.11,0.43126847871417495,-0.41,0.021580252268337985,-0.26511383141162825,-0.12812193720481438,0.023467891198566113,-0.1294781792603893,-0.2804645236472976,-0.28798184784426756,0.007417775700407128,-0.14112359841395772,-0.1794509689725605,-0.12713541192743916,-0.09667792675935591,-0.11704292546118752,-0.15832839608946914,-0.39110719108743275,-0.26631771509702373,-0.10504317081179262,-0.20617353711487008,-0.25135480516292236,-0.06815258567763997,-0.11691955079189364,-0.4298983139651391,-0.45974412358318345,-0.2608186743465555,-0.11277495598692136,-0.1342781320119272,-0.4294955021390257,-0.3085046521682052,-0.11621651614161503,-0.11520228481421085,-0.51,-0.37859424587597107,-0.0937292423448604,-0.00705221304920723,0.3906806716173642,-0.2777039005796941,-0.008643615529584939,-0.2580604059343489,-0.06830746438999077,-0.020322501585363365,-0.08157168739836934,-0.2116563419779296,0.015153377404093699,-0.12471217133113255,-0.03566030373291704,-0.2423892092652364,-0.08480413786553338,-0.10223809146401351,-0.04759706830838256,-0.03271469812312341,0.13008728770122535,-0.17697580122604026,-0.03374974616566564,-0.23423040979908105,-0.033352243982726265,-0.12291541773079333,-0.07465832942288089,-0.09573199455398217,-0.024189367443314392,-0.2747602857193357,-0.047863603258351275,-0.12030631299507792,-0.05521085552303031,-0.3277519836767357,-0.04192737217754437,-0.23157017349218076,-0.2457337110597319,-0.01418888304088269,-0.13406518434951312,-0.17895019960272396,-0.5374940179692421,-0.14528870452342993,-0.15392806777332224,-0.37264226718435844,-0.4409843558509387,-0.2592177173332203,-0.14960749096003076,-0.15729712862009398,-0.5158145045054418,-0.3189751651504308,-0.1515612410176935,-0.2695236145200626,-0.4794567823542524,-0.3707744155363651,-0.14473297750363834,-0.2425274587494008,-0.5043299957704515,-0.33432302879695447,-0.1550787254373893,-0.20407465913159745,-0.51059625,-0.41012374999999995,-0.15437808830456418,-0.19584244320327832,-0.51,-0.41,-0.12150082411886248,0.18628536166851353,0.24951688066275593,-0.10127713111946882,0.05065259608805629,0.022062467546988394,0.3700225002508005,-0.3774088408507612,-0.01,-0.0010142034271459072,0.09975233175011944,-0.08421097822939783,0.011946409787434435,-0.11886018943940264,0.026388428667893433,-0.08999599066477809,-0.046817292412081796,0.01991608222694507,0.17494426596071883,-0.10960310583757403,0.023221409134123905,-0.07182744958201018,0.09427219002572317,-0.35171495325095803,0.007376247946676922,-0.03612771752514284,0.03426191685823021,-0.2729322634881368,0.0037777061486934426,-0.10615325703772828,-0.029671873764554418,-0.29644629125660105,-0.00021268650176292582,-0.17214873163065786,-0.2766293283377402,-0.1709869086134154,-0.12888624350372313,-0.14329594682577346,-0.42376221163448313,-0.27994411452407614,-0.1119565669797499,-0.1761122546236552,-0.46604401263384987,-0.28437443486468295,-0.13885048543647777,-0.13225513785483578,-0.49949633379125224,-0.35823412574131275,-0.13134166751992873,-0.14537297532897656,-0.504388325361129,-0.2968651208592911,-0.1281142427210517,-0.1960219756804389,-0.4914577866785537,-0.39559734525698786,-0.1314105768842923,-0.027754746969991827,-0.51,-0.37827058041233347,-0.11584004251861801,-0.51,-0.51,-0.41,-0.03762109863334924,-0.05580149886532751,0.34558579711185083,-0.3690156668033536,-0.018607585228755327,-0.11821703946822124,-0.07166571208348724,-0.15123227065923275,-0.06637647707076476,-0.1552249977611876,-0.03815871423540858,-0.23668367748210034,-0.07713576425334301,-0.08223547545044842,-0.08687693039182257,-0.34827042641327793,-0.08712597975769658,0.004767962980842747,0.07014918676198295,-0.2903388221139592,-0.04978075844310182,-0.1516714165917086,-0.09395984789621317,-0.36548062804243403,-0.06994023486624242,-0.23015855823670722,-0.08829271147271683,-0.3684978387088528,-0.08790892230148183,-0.22975342222286785,-0.05553027433069561,-0.41,-0.05555181581766422,-0.15451828400819256,-0.45012663359659266,-0.3389087626576663,-0.1182804419258715,-0.11,-0.51,-0.365344321067843,-0.06357431494419138,-0.126100689403876,-0.49196356420991383,-0.3896113554186421,-0.11267209552563316,-0.11,0,0,0,-0.51,-0.4906137115680532,-0.3990123554186904,-0.044487399993149046,-0.10490475257975979,-0.5150919177849609,-0.41,-0.07910048652809333,-0.11,-0.510135,-0.41012374999999995,-0.0703008453939781,-0.12087005930728044,-0.51,-0.40532112499999995,-0.12020673734865896,-1.01,0.45846692363705877,-0.36988866360686307,-0.01,-0.11,0.2724104831627223,-0.3641776191314751,-0.01,-0.5343004301718582,0.37056410083565955,-0.41,-0.01,-1.01,0.14636551971158746,-0.41,-0.01,-0.11348512793470945,0.2758785195271264,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,0.18992347971799717,-0.41,-0.01,0,0,0,0,-0.14505576176832674,-0.51,-0.41,-0.09762865232976918,-0.61,-0.51,-0.41,-0.09846689471114564,-0.61,-0.51,-0.41,-0.09616392128624471,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.61,0.30246045936646243,-0.3787403699750383,-0.01,-0.5549225561158978,-0.032055866496670526,-0.41,-0.03364434332012709,-0.11,0.05941235701557625,-0.41,-0.05746087786366576,-0.11,0,0,0,-0.11,0.03767773116086659,-0.41,-0.01,-0.11,-0.027297612761022022,-0.41,-0.01,-0.61,-0.01,0,0,-0.61,-0.01,-0.41,0,-0.11,-0.51,-0.41,-0.09064139039192975,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,-0.029381339343398684,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11647607292749501,0.27505705903198824,-0.4012845093570129,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,0.013844402719271492,-0.41,-0.0380546632681139,-0.0911910884687503,-0.014657723629202828,-0.41,-0.021539736374925518,-0.61,0.05514790829606564,-0.41,-0.01,-0.61,-0.01,0,0,-0.11,-0.015361222959150534,-0.41,-0.014172309989370371,-0.61,0.008676512481092179,-0.41,-0.01,-0.16059625,-0.51,-0.3796726587801211,-0.056467524661280015,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11112788748945845,0.028047223365688226,-0.41,-0.01,-0.11,-0.01,0,0,-1.01,-0.024023944985581375,-0.41,-0.01,-0.11,-0.02320519271393527,-0.41,-0.034135590828131814,-0.61,-0.01,-0.41,-0.01,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,-0.41,-0.01,0.24097338378921315,0.26149556328299073,0.35767125633189917,0.26078013425250196,0.10373753838261887,0.23903441332582123,0.4374277796102411,0.26143161438392265,0.1491004641174666,0.3471229404850053,0.46533491559529294,0.18393972090585267,-0.1329994476560656,0.13800028650146276,0.46093344310135936,0.07010082122280492,0.18788249005528543,0.18175562603984066,0.40627094950815484,0.24044994724823637,0.1575508670870884,0.1668915846057836,0.3875281430614527,0.1784762656210964,0.1194064714635735,0.11488442323453468,0.3881548713779101,0.12180643725029822,0.06356287475560467,0.18607654452648392,0.13835491957191876,0.1393716963813738,0.14511851439851617,-0.16598114729042324,0.437056991364122,0.18183859909411387,-0.1300926613690336,-0.2741051149603153,0.4551868135597033,0.12431611439000737,-0.2396486985327991,-0.3515591412451625,0.42987583021452275,0.03950884206005803,-0.06420983245779553,-0.46685853916222386,0.41421824938435564,-0.01,0.06654888827789837,-0.35007081087679803,0.4645311446975911,0.13386195751776492,-0.35377460097212965,-0.3723856725628839,0.39314649203790364,0.11865991781447108,-0.06412078497747462,-0.48337946198456405,0.30560147265610643,0.03831763818694348,-0.11,-0.4750911559654618,0.28984379922861986,0.03902488497155956,0.19109079882712265,0.3788651413347821,0.0427432170764597,0.037173181146950535,-0.02242492460235273,-0.0010282357830082053,-0.008214295473863781,-0.006932899423924842,-0.05392927391143098,0.050254060537395985,0.006683155616062145,0.015897931671579504,-0.017525592135752305,0.003131443046757598,0.01609713955439932,-0.009470930033160607,0.054221394680577864,0.07222666029102488,-0.00982915736758009,0.03577783712868957,-0.0019268225601811531,0.0012751829471607905,-0.0010460737262326623,0.0019544415022217237,-0.015049256729325633,0.012063016010289515,-0.027512876795151988,-0.006109307590247697,-0.07116844152306781,-0.0577003953040341,-0.013158029834138784,-0.058383854912124236,-0.09140880464998985,-0.21136069961766257,0.014921369467476459,-0.04039561719491798,-0.11098270654010542,-0.49294791368255614,0.028183636028116688,-0.09059659701838937,-0.1984711127264963,-0.43165108015586656,-0.02385435341320069,-0.0786781439534853,-0.08163831392818935,-0.5009334838143208,-0.035977663052536794,-0.08226789415565615,-0.11059177694231671,-0.483224238117906,-0.02891143009053521,-0.061521608111522984,-0.09687772347444634,-0.519021907121307,-0.05540245519257622,-0.06709985371977421,-0.4126710904011665,-0.4834978639316612,-0.04535322562619587,-0.05873678207018435,-0.11,-0.5106975,-0.05010829393801819,-0.04942477988933748,0.20330848885934705,0.2279985773240179,0.38571722087029137,0.08036091529920879,-0.0313649454009716,0.05501288333813238,0.3681257901331562,0.0029251600062159665,-0.05771227069798861,0.08588900815572928,0.036000870126043555,0.07854804309918431,0.006129172392907632,0.03809444902909854,0.006737698983479664,0.007137209634296819,-0.12853391225757574,0.05197616383152792,0.09123509203128746,0.04266090382288945,-0.027065486426516724,0.0049565822600195365,0.07612668688768386,0.014277098588323137,0.07484045983695366,0.04395618620552453,-0.026980864994051633,0.04683999746077927,-0.09150494706679342,-0.017663651937921552,-0.028944705062638576,-0.019771743947301683,-0.4109586025475224,-0.34277258326122867,0.37521370101514506,0.03583811557706949,-0.06576690704504132,-0.4750186530068911,0.33764896796464006,-0.01,-0.3017791505478564,-0.5115771797296541,0.02445056235706495,-0.018600705386202714,-0.11,-0.5041762022957671,0.025546491758184617,0,-0.11832050208288092,-0.51,0.08039052441744726,-0.011045335546699299,-0.11,-0.5024045772292587,0.0346560249770614,0,0.07875733191738518,-0.4898241554592242,-0.03597547040490823,0.014970612728200041,-0.1307655633156525,-0.51012375,-0.005128469512379989,-0.0026935213419135426,0.053967917278663284,0.35732868331987994,-0.039197288902434346,-0.014364712618726372,-0.06608075914457055,-0.039963830448540766,0.013068320755621029,-0.041857773938522996,-0.11180462883548478,0.011020763518712852,-0.03883342321518445,-0.0350062980106268,-0.10553356309138397,-0.04539133534806579,0.01132448569332655,-0.0369086095537275,0.003788125138915341,0.17345213450816177,0.011598941719135683,-0.016521427306101927,-0.06654359118989978,-0.054723139229542944,-0.06265951111992911,-0.054958986126993424,-0.04874849658195649,0.02953042376280983,-0.013896825850224179,-0.007303128344423075,-0.05782147653087864,0.004321348903307009,-0.04048783720923478,-0.03840121247888879,-0.08974195387567507,-0.3746838624724375,-0.06946555094163749,-0.09063269420197109,-0.11,-0.51,0.029995410961485947,-0.05910683926200816,-0.10196136835311759,-0.4867514489031527,-0.031242421099228618,-0.07605173805036006,-0.5379237926569858,-0.5128575000000001,-0.09017130088434562,-0.09064486211024247,-0.11,-0.486531205006961,-0.021170469428985345,-0.03822243886303281,-0.11,-0.51,-0.02554096632523018,-0.03588901020692671,-0.08832934535505892,-0.511584,-0.038687953246088605,-0.04898549192503181,-0.1193684741520196,-0.5307495552460042,-0.11742482624075805,-0.11319921524330467,-0.07011128776609322,-0.01,0.4507116678997126,-0.01,-0.11,-0.01,0.3909081564324511,0,-0.11,-0.01,0.34927406535439065,-0.01,-0.11,-0.01,0.18060049792370722,0,-0.11,-0.01,0.24379004056175643,0,-0.11,-0.01,0.19802185600786829,-0.01,-0.07125307620301877,-0.01,0.15779870266978882,0,-0.11,0,0,0,-0.11,-0.46554119462814003,0.3732108260524685,0,-0.61,-0.51,0.09,0,-0.11,-0.51,0.31086694474864107,-0.01,-0.61,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0.1646678044085316,0,-0.11,0,0,0,0,0,0,0,-0.8983944057005658,0.25474184573399933,-0.01724154355038186,-0.01,-0.11,-0.022920827784358125,-0.009795742370060196,-0.038560941916328265,-0.61,0.03019601393548015,-0.01103899152305765,-0.01,-0.11,-0.01,0,0,-0.61,-0.01,0.07978071172693507,0,-0.11,-0.01,0.09,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,-0.0110732007326684,-0.021730572131492217,-0.11,-0.51,0.09316460945131266,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0.26303291931357203,0,-0.61,-0.01,0.15246934546326288,0,-0.11,0.0011058942744075727,0.04701458654342875,0,-0.11,-0.01,0.03978046552046441,0,-0.61,-0.01,0.0824376298409475,0,-0.11,-0.01,0.09,-0.01,-1.01,-0.01,0.07563290248106733,0,-0.5972532056257515,-0.01,0.058322449458228044,0,-0.11,-0.51,0.2837641136426424,0,-0.11,-0.51,0.15012782705606076,0,-0.61,-0.51,0,0,0,0,0,0,-0.11,-0.51,0.09,0,-1.01,-0.51,0.09,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,-0.02392733896132667,-0.01,-0.11,-0.01,0,-0.01,-1.01,-0.02103107091276114,-0.023261751139184064,-0.01,-1.01,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0.14061075658569117,0.3965236669140015,-0.2872686511858729,0.1966469989125035,-0.0034518784318872606,0.386458862467015,-0.3726534828089788,-0.01,-0.08420401381364412,0.4352488434147121,-0.38423440014177823,0.0155319632414245,-0.11,0.41866984954243486,-0.41012374999999995,-0.01,0.017218059565127126,0.28087956936933733,-0.33280649367911935,0.05945059317314037,-0.0319333120600562,0.38496377230780776,-0.40492161595126247,-0.01,-0.5213495004658925,0.31637472864604366,-0.41013499999999997,-0.01,-0.61,0.20141553919423402,-0.41,-0.01,-0.170499184504046,-0.16792010678269567,-0.10291227970862706,-0.13939965470718726,-0.2680712818938322,-0.3995886314701994,-0.23865125485240174,-0.13698795049258347,-0.20010754642160042,-0.3302875904383586,-0.40602323582331296,-0.1328431884179684,-0.11004198630569566,-0.51,-0.41,-0.0862507261892114,-0.23205874619747385,-0.43928251612609187,-0.3264971671710255,-0.13834428953420982,-0.51,-0.4451688898668331,-0.3709860233334381,-0.13013814309065241,-0.5179716548127207,-0.51,-0.40557946365721476,-0.12027071403808891,-0.11,-0.51,0,0,-0.015522333314186582,0.3851462047627615,-0.45001095719412476,-0.009397460344908723,-0.22672534730004318,-0.09468731089895333,-0.47569970334351785,-0.08964466345984322,-0.06734329396471055,-0.05293922607170561,-0.5008282358385968,-0.0884607434650291,-0.18929280381155025,-0.07050613100273094,-0.46798692521515806,-0.10557777677645454,-0.057299688100354906,0.02491880359934295,-0.42145830538067525,-0.044805748616950025,-0.143719372701605,-0.10497999628179006,-0.4655980479022091,-0.09531995662724302,-0.10258690779523606,-0.07495183599241333,-0.41115874999999996,-0.07445711082470724,-0.10026984733515816,-0.053097488367226796,-0.41132525,-0.07342719333200058,-0.22915014179042786,-0.4418664208870483,-0.442113239995235,-0.13935786992080562,-0.5181942778717847,-0.5137035162858343,-0.41489756524953314,-0.14894979104634584,-0.18285117071510318,-0.4420150157266953,-0.41068625,-0.1449508233617362,-0.1158029356998582,-0.51,-0.4264230974770129,-0.11695494311064358,-0.10448637189397031,-0.51,-0.4318242854295093,-0.10810566980218847,-0.12847411859037097,-0.508904638564132,-0.4370874419305667,-0.1276797329442037,-0.24908439156046544,-0.5111475,-0.4106975,-0.087787187938202,0,0,0,0,-0.024836747916536003,0.31797321795279176,-0.3852653257068295,-0.01,-0.51,0.36340735115873124,-0.38107356057002073,-0.01,-0.05023066438195939,-0.04956117322722676,-0.4343059198133312,-0.020150981206934204,-0.31541376286157824,-0.05761232506505924,-0.4386251032405609,-0.027595032931053587,-0.019240447645600754,0.21105612624191983,-0.41022173749999996,-0.020519299915490216,-0.04089476755332215,0.03553206905171735,-0.4065381071081783,-0.0059158112766965355,-0.61,-0.020704549028780793,-0.41071775,-0.0248980904250256,-0.11,-0.04278042167093729,-0.41398773498726543,-0.043297527769119264,-0.24194250696856778,-0.43847300998253697,-0.3122554594877931,-0.14645123346613007,-0.18920503843405445,-0.4797758844787058,-0.35537978172844586,-0.1423701420882137,-0.6090678158615863,-0.48725670922555125,-0.41012374999999995,-0.14642890732150426,-0.11,0,0,0,-0.61,-0.51,-0.41251263322795034,-0.14216517958759933,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.06219926426899519,0.33456787235108937,-0.41,-0.01,0.01569085068347205,-0.10668897526002077,-0.43258803099073617,-0.12255631669690438,-0.21033679701766017,-0.039326798585461314,-0.4316996117355385,-0.08823764306377771,-0.11,-0.07530641506511557,-0.42126418906249996,-0.0760769005995382,-0.07876220418014093,0.048064174839755155,-0.41188775,-0.048276650903835705,-0.16853661697948868,-0.08704008113875816,-0.430859919875,-0.0855729524579392,-0.10086089984071912,-0.059279091984691085,-0.41012374999999995,-0.07625825407923961,-0.61,-0.018321780219358062,-0.41,-0.02069240968671417,-0.61,-0.51,-0.41,-0.010135,0,0,0,0,-0.11,-0.51,-0.41,-0.016672451645251923,0,0,0,0,-0.61,-0.5114625,-0.41,-0.06994558792206977,0,0,0,0,-0.11,-0.51,-0.41,0,-0.1096770180767913,-0.5201875971793954,-0.41,-0.11485125270534498,-0.06955387513606467,0.3675897987064435,-0.41,-0.01,-0.11,0.21368045380311526,-0.41,-0.01,-0.11,0.1365457627533825,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-1.01,-0.01,0,0,-0.11,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-1.01,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,-0.0106975,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0.15889896572937506,-0.41,-0.0222299875,-0.11,-0.024634968593511986,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.61,-0.01,-0.41,-0.01,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.01132525,-0.11,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.07788206721790972,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,-0.02510381942549955,-0.41,-0.025488900713611873,-0.11,0,0,-0.01,-0.11,-0.012949468225503556,-0.41,-0.0212933860356202,0,0,0,0,-0.11,0,0,0,-0.61,0,0,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,-0.11,-0.01,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01012375,-0.41,-0.01,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.24760942879282385,0.39471680521799035,0.543417879086223,-0.16264333610035134,0.18498511380122162,0.31269176265600673,0.5178083178235068,-0.24175998379950375,0.20524964063285656,0.31325561128795654,0.5456773325724353,-0.32946314235878243,0.0022674412041100572,0.1146683333439954,0.5372322705925936,-0.51,0.18387066630291304,0.32280435948243863,0.5071905486737399,-0.31036942193017,0.03700990640517963,0.14435503528682225,0.5390429870020336,-0.45382366673752883,0.11679677898154132,0.3146867824868458,0.27259685581736237,-0.4028399237527712,-0.10748585324094309,0.016411796092829972,0.5242954586504506,0,0.2377777369204382,-0.16742592289914673,0.5246410135086358,-0.4091335270532228,0.0843627346026058,-0.32402579357888994,0.534993833561094,-0.51,0.03246891841976045,-0.3907299663648308,0.5254233481771143,-0.44913979492659156,-0.11,-0.51,0.524815852239439,-0.4772561339323618,0.04196855887217922,-0.3061563485820136,0.5403070038000863,-0.4835783712276135,-0.05382165109168709,-0.45754225241817525,0.5364500147213824,0,-0.11,-0.4675871345755536,0.4455066730769065,0,-0.101733468640625,-0.4824356989146384,0.467026243131755,0,0.01581899268679466,0.3708390488628634,0.5205864505417228,-0.31698562343720427,-0.13385904878581628,0.2530501866856048,0.5326424489583013,-0.45614512606390406,-0.3831387463837097,0.09134535341728484,0.5235845486448606,-0.3978723788434434,-0.04839485162776168,0.05254305371586378,0.5307095409855047,-0.51,-0.01581219974598166,0.14866856302031106,0.525899745948748,-0.40201695153296557,-0.14555213197005676,0.004837670109267804,0.49845669336639115,0,-0.5167409109824469,-0.01,0.5301389034753657,-0.47672137078064475,-0.61,-0.01,0.48056349305997803,-0.51,-0.030301206929945916,-0.41169051417774627,0.534929106387076,-0.4585716339327133,-0.0806454386646609,-0.51,0.5308596054639223,-0.4852241775093972,-0.09627925599659118,0,0.5378542191975713,0,-0.11,-0.512025,0.5025023300963096,0,-0.11,-0.4907822455946787,0.47354743488945156,-0.51,-0.14536017530872436,-0.49887473088266326,0.5032089410583586,0,-0.11,-0.5114625,0.43949756283558655,0,-0.11,-0.51,0.21367256454317457,0,0.19676670836121196,0.268851744967619,0.5170186063284232,-0.3901367130384687,-0.024027273613551337,0.15510132666036883,0.4807138752233927,-0.40432673427124255,0.008176264916789584,0.3633710469434436,0.17968927502917384,-0.4366571623501764,-0.51,0.0285215325965646,0.4607213559265648,-0.4606047811460839,0.1599887741336601,0.11512788165259419,0.5203214360098195,-0.42702716829060605,-0.07529906565865095,0.029749609095987103,0.5027801529483129,-0.51,-0.07405642619498025,-0.01,0.528240253724976,-0.51,-0.11,-0.01,0.4203029589045406,-0.51,-0.025064817760774696,-0.3846200915580392,0.5263969429363929,-0.4999907766159969,-0.11,-0.458274753348609,0.5410765855963728,-0.5026703149733703,-0.06377418910016101,-0.4985321075701143,0.5396690937863494,0,-0.11,-0.51,0.4745074577763605,-0.51,0.06476739466401141,-0.5023387500000001,0.5154954859089472,-0.51,-0.11,-0.51,0.49475726995311997,-0.51,-0.197450125,-0.51,0.3852044871509599,0,-0.0721199935615073,-0.51,0.26476002965226253,0,0.0651223104946379,0.007707066212649138,0.5042670699678107,-0.4705297718016271,-0.5269302446982931,-0.01,0.5239454919043373,0,-0.11,-0.01,0.523953294091983,-0.51,-0.11,-0.01,0.43942634470283526,0,-0.3815369465697034,0.02480207266566324,0.47231208361728233,-0.51,-0.61,-0.01,0.3854569696616296,0,-0.07469844475165771,0.02147519070795814,0.4593211481605338,0,-0.11,-0.01,0.28360316321975504,0,-0.0063768888052986306,-0.47536320917031044,0.38635521634072784,-0.51,-0.036368306921229866,-0.4889556598688697,0.4773309146924838,-0.51,-0.11,-0.51,0.4733726968697242,0,-0.11,-0.51,0.1261201501492915,0,-0.11,-0.49550610275024193,0.3513810620405707,0,-0.11,-0.51,0.241533762742101,0,-0.11,-0.51,0.13491830914627975,0,-0.10328642809609669,-0.51,0.15360853317369533,0,-0.11,0.07842445154820152,0.5088798060762421,0,-0.170367590007405,-0.01,0.4328001834802234,0,-0.11725936795519123,-0.01,0.38817651273061,0,-0.11,-0.01,0.17528742777600587,0,-0.11,-0.01,0.49401358027415415,-0.5308775472331917,-0.11,-0.01,0.17401526062610903,0,-0.11,0.1738225671905045,0,0,-0.11,0,0,0,-0.9263514872061069,-0.51,0.4678655710306777,0,-0.11,-0.51,0.34733623923552975,0,-0.11,-0.51,0.2642906486551777,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.17309301927597695,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0.4171784595468263,0,-0.61,-0.01,0.4309238374637493,0,-0.11,-0.01,0.26315840610959856,0,-0.11,-0.01,0.20651750682270734,0,-0.11,-0.01,0.1660170304590083,0,-0.11,-0.01,0,0,-1.01,-0.01,0.18174881439258392,0,-0.11,0,0,0,-0.11,-0.51,0.30605214085066934,-0.51,-0.61,-0.51,0.09,0,-0.11,-0.51,0.133623355042861,0,-0.11,-0.51,0.09,0,-1.01,-0.51,0.24699395010489414,0,0,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,-0.01,0.49493876028620354,0,-1.01,0.02793636036126034,0.21619981341632616,0,-0.11,0.028233056813053402,0.16803069266473245,0,0,0,0,0,-1.01,-0.01,0.17628303195638137,-0.51,-0.11,-0.01,0.09,0,-0.11,-0.01,0.09,0,0,0,0,0,-0.11,-0.4760420714321657,0.33007729740022207,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0.17534265653263564,0,-0.11,-0.01,0.1364280970835785,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.1235969755139428,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0.08703410111971799,0.4569939324027454,-0.16162585734099963,-0.35364221152243464,-0.08410112079774482,0.4530738534792627,-0.21901939400933496,-0.491395789598052,-0.0364878019997722,0.45432235374226154,-0.31287959452864633,-0.4851663690272223,-0.11,0.44617872047025603,-0.3594133058204716,-0.51,0.009113477083181078,0.45434555208408545,-0.3257566283398462,-0.42592700268653483,-0.11,0.4431345721148267,-0.41,-0.51,-0.07794166347957131,0.43769036373047765,-0.41,-0.51,-0.51,0.3003628069549503,-0.41,-0.51,-0.4177952556477921,-0.38720865841177116,0.03333490765608656,-0.51115875,-0.4560386403663415,-0.51,-0.008863694409140808,-0.51,-0.4151833841456048,-0.43781406333904344,-0.14261516796285484,-0.51,-0.12708947796537007,-0.42647851051301655,-0.3623546588719042,-0.5292956899015814,-0.4471885336143952,-0.51,-0.15595955428155733,-0.514213030452517,-0.14771976171793172,-0.51,-0.3995313806078302,-0.51,-0.0865751821282955,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.1019645010633848,0.3879677429049017,-0.26364838084539055,-0.515179896828061,-0.16600692642609385,-0.09736916227229789,-0.41,-0.505301566220275,-0.10058798280125807,0.04760876074848136,-0.27999562946793866,-0.512235653681396,-0.14231545497199002,-0.1024090058373065,-0.39940631921420333,-0.51,-0.05489098858999053,0.04235360364273662,-0.41,-0.5083655533811825,-0.1617108000641873,-0.14013559316143703,-0.34330001542031724,-0.5104075490350013,-0.11,-0.006039136210791801,-0.39637654390287697,-0.5122126185372355,-0.11,-0.01,-0.41,0,-0.3603419069571666,-0.47665822387617496,-0.19552928908055178,-0.5149851506211034,-0.4125880008280605,-0.5460395427426802,-0.2611240875623545,-0.51,-0.4164815993838578,-0.49605047671984437,-0.32586829200791834,-0.512025,-0.51,-0.51,-0.40290125,-0.51,-0.4371232375408499,-0.51,-0.382273477758603,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,0.042880629749181574,0.35956841858021327,-0.37180357243067474,-0.5156073202059003,-0.07412419557432522,0.31694778465501194,-0.3362926178440844,-0.5090123302522546,-0.06919255822898289,0.07468149078963349,-0.3921363137382716,-0.5129606380000977,-0.10249814482264356,-0.017580617539129005,-0.41,-0.51,-0.07184425200591604,0.0486699832251041,-0.35896723175392176,-0.512025,-0.11,0.0803562638625314,-0.34198322559779765,-0.51,-0.11,0.06910117910552854,-0.4002177678692295,-0.51,-0.15233875000000002,-0.11223084351823315,-0.41,-0.51,-0.3825822021119564,-0.4723307033210178,-0.1783753201627929,-0.51012375,-0.21698364626160124,-0.51,-0.41,-0.510135,-0.1687290266545999,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.51,-0.51,-0.23365222850569028,-0.51,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0.3211390423647695,-0.41,-0.51,-0.2520630518936763,-0.14608068740666522,-0.365440506542688,-0.5151799094197492,-0.10703543508987536,-0.06876534658695763,-0.39707807140624996,-0.5139893744367846,-0.11,-0.10376855980837585,-0.3848628481866162,-0.5169476817548393,-0.08367052057619595,0.1107068522446189,-0.41,-0.51,-0.11143126480826819,-0.11153759415790702,-0.39845451198788745,-0.5159661853648811,-0.11,-0.03268231714878468,-0.41,-0.51068625,0,0,0,0,-0.11,-0.51,-0.41,0,-0.51,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,-0.11511241128531735,-0.51,-0.41,-0.51,-0.61,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.51,-0.51,-0.41,0,-0.08517837868114068,0.35344637022301684,-0.41,-0.51,-1.01,-0.01,-0.41,-0.51,-0.11,0.06985081756585956,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.61,0.033548733799600286,-0.41,-0.51,-0.11,0,0,0,-1.01,-0.01,0,0,-0.11,-0.01,0,0,-0.61,-0.51,-0.20268250803267432,-0.51,-1.01,-0.51,-0.36394034486833454,-0.51,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.11634659958269791,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0.14805380897268083,-0.41,-0.5106975,-0.11,-0.01,-0.41,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.51,-0.61,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,0,0,0,0,0,-0.5065058438394796,-0.51,-0.3435209779538,-0.51,0,0,0,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.039819032174517606,-0.41,-0.51,0,0,0,0,-0.61,0,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.61,-0.51,-0.33602537458063897,-0.51,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-1.01,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.10231796819637598,0.2809206794849409,0.4008011785535519,-0.34781513530785935,0.04524669157205444,0.036539345631934776,0.46006292618241756,-0.4755941980405254,0.05447435308012853,0.15593410871185934,0.427289453789356,-0.4930531209118743,0.005565804475089725,0.13480180103068193,0.4138191747548269,0,0.05179190106014239,0.08164168734747401,0.35247823248686133,-0.4844362928783249,-0.0659506812933296,0,0.343585821077701,-0.51,-0.126171198447548,0.3272913723844052,0.10529666300675807,-0.48949780341436444,-0.61,-0.01,0.2742062408048815,0,0.007981735528847705,-0.3955845529478438,0.45063489241617327,-0.49494262133230144,-0.06619187040943382,-0.4563641800676942,0.4676280741831901,-0.5002031312262517,-0.07088356112264904,-0.39558101889154573,0.4430647581311488,-0.51,-0.11,0,0.3948544729274578,0,-0.51,-0.51,0.41010767423321387,-0.5094414265742389,-0.07079623414681904,-0.51,0.23985921560038748,0,-0.11,-0.51,0.31851898587819744,-0.51,-0.11,-0.51,0.27989500700490955,0,-0.015059653577748737,0.37632779209464257,-0.008775337886595964,-0.5067168058079374,-0.13157885433186423,-0.0545830467325694,0.02503888730741265,-0.5021163986559227,-0.28403044225236174,0.030775389833869994,-0.006362057373097205,-0.51,-0.10871323753176107,-0.0900615004721811,-0.008258643016169482,-0.510246375,-0.031047818574067944,0.031195935529046644,-0.006786004224514268,-0.51,-0.5279322210134806,-0.05957458744791274,-0.05401784786726176,-0.5078723405089042,-0.0898061949573773,-0.04451770221566516,-0.02394915541306584,-0.5117941703687848,-0.11,-0.016512008138537496,-0.012716476137479811,-0.51,-0.11,-0.51,0.06026933264487162,-0.51,-0.07888632522475084,-0.5155655546230042,0.027787812770207053,-0.512025,-0.11,-0.51,-0.005220835286516411,-0.51,-0.11,-0.5125262416523231,-0.0014616654663358463,-0.51,-0.11,-0.51012375,-0.02322442315793073,-0.51,-0.04291977451164224,-0.5101579940394194,-0.07474567051707957,-0.5131955741725763,-0.11,-0.51,0.09008242061947201,0,-0.08806244090037492,-0.51,0.028365978356902726,0,-0.04121318519638546,0.05451815152015559,0.36293836543244445,-0.5026831145916256,-0.11,-0.01,0.32203103020242374,-0.51,-0.44528793679007744,-0.012997894125779324,0.03451080354676421,-0.507597122648298,-0.52297530448254,-0.010382396091378206,0.009000347846057254,-0.51,-0.11,-0.01,0.059610556522877264,-0.51,-0.06702175132790661,-0.01,0.08435932338349675,0,-0.04409313245993507,0.1291183064575242,-0.03137086731262958,-0.5021571556824002,-0.11,-0.01,0.07646629188742828,0,-0.06592234821495091,-0.4897118607502815,0.31348385831998443,-0.51,-0.11,-0.51,0.2601606004731244,-0.51,-0.07028035990586562,-0.4882131775941776,0.03416477892988947,0,-0.07429726523130523,-0.50290125,0.008006761313979378,0,-0.11,-0.51,0.08487574914746923,0,-0.11,-0.51,0.07971419372532745,0,-0.11,-0.51,0.06286617644029445,0,0,0,0,0,-0.03960231926122792,0.3477642267501809,-0.008656801977181905,-0.51,-0.5282038315184265,-0.07265605855029945,-0.02506199528357992,-0.5118779807912254,-0.11,-0.005502569438338063,-0.00851169434463678,-0.5100103721265481,-0.07760159419259698,-0.026061632051686656,-0.01354141505503307,-0.51,-0.11,0.03816600668626553,-0.008263027314209043,-0.51,-0.11,-0.014733218060769271,-0.006512745016173455,-0.5111955777635259,-0.11,-0.024574925174314092,-0.049738824094112684,-0.508642552465291,-0.60352319640625,-0.01,0.014546208054348132,0,-0.11,-0.51059625,0.02724058241693836,0,-0.11,-0.51,-0.029284993211666655,-0.51,0.04468645422428755,-0.5111480209305495,-0.09232344972161613,-0.5102239875000001,-0.09364738437586757,-0.51,0.06503075419734747,0,-0.11,-0.5003166514073948,0.03678761395781704,0,-0.51,-0.51,0,0,-0.11,-0.51,0.04636016624503317,0,0,0,0,0,-0.9367470354132265,0.02580768781408612,0.4462896773385202,0,-0.9099899391624358,-0.01,0.23894373585083392,0,-0.11,-0.01,0.19552187803169807,0,-1.01,-0.01,0.09,0,-0.11,0,0.16039403100078722,0,-0.11,0,0,0,-1.01113625,-0.01,0.08440626442692968,0,-0.11,0,0,0,-0.5691001163688578,-0.51,0.17875417548128852,0,-0.11,0,0,0,-1.01,-0.51,0.1863640420275549,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.01,-0.006714880672920795,-0.51,-0.61,-0.01,0.09245080969425988,0,-0.61,-0.01,0.07097553070803783,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11631097331228442,-0.51012375,0.003550577178787878,-0.51,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.17368759479051268,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.01,0.09,0,-1.01,-0.01,0.09,0,-0.61,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,-0.51,0.11779644264273524,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.61,0,0,0,0,-0.51,0,0,0,0,0.05312086988516186,0,0,0,0,0,-0.61,-0.012025000000000001,-0.022584647580898096,-0.51,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.015115814636686584,0.4360112398192096,-0.4030236368488824,-0.4968713342823904,-0.11,0.4357824235722774,-0.41,-0.5111260077998134,-0.11,0.43386682583592295,-0.3879461113107209,-0.506604850363224,-0.11,0.2705628837053968,-0.41,-0.51,-0.08806650687660529,0.3559624902707791,-0.4003606075284202,-0.5096123930266424,-0.11,0.2642937949947683,-0.41,-0.51,-0.11,0.21678757576452581,-0.41,-0.51,-0.11,0.12703500051767994,-0.41,-0.51,-0.14317803728029194,-0.3897259975691933,-0.341630659287706,-0.5184932009988574,-0.4186899563883708,-0.4354216002228019,-0.3683589032137173,-0.512025,-0.61,-0.51,-0.35990177991371824,-0.5111475,-0.1411680296263524,-0.51,-0.402761808154968,-0.5172237462357394,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.3305556178807363,0.35514816826322404,-0.43774421710504946,-0.5103133403575105,-0.43344750141561267,-0.1415904367783476,-0.41,-0.5116087500000001,-0.5541111313749546,-0.05672733680196195,-0.4106975,-0.51068625,-0.11,-0.037397120699590884,-0.41,-0.51,-0.054237582318801006,0.11168446353464298,-0.41,-0.51,-0.09970540678798645,-0.01,-0.41,0,-0.4662031707307597,-0.03574603881689701,-0.41,-0.51,0,0,0,0,-0.3893588871146752,-0.51,-0.4663110824205825,-0.510135,-0.11,-0.51,-0.41,0,-0.07875081522323837,-0.5052469947556613,-0.4106975,-0.51068625,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.07138389297911218,0.36070833669286934,-0.381430720628111,-0.51,-0.07587263991833407,0.231738047820558,-0.409389051829272,-0.5125875,-0.05667797817353816,0.03773633931409502,-0.4172261701096693,-0.5133953697657327,-0.160135,-0.08354284096900687,-0.41013499999999997,-0.5124840650097919,-0.07110136459891006,0.08466722312628315,-0.4083420385999448,-0.510135,-0.11,-0.007878673453205455,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.61,-0.0506547412232346,-0.41,-0.51,-0.51,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.51,-0.51,0,0,-0.11,-0.51,0,0,-0.5395298838879071,0.11745628471625165,-0.41,-0.51,-0.11,-0.03835794718027022,-0.41012374999999995,-0.51,-0.61,-0.01,0,0,0,0,0,0,-0.11,-0.01176990944439852,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0.1698541440120052,-0.41,-0.51,0,0,0,0,-1.01,-0.01,0,0,-1.01,-0.01,0,0,-1.01,-0.01,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.022057445611513758,-0.41,-0.51,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,-0.41,-0.51,-0.61,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2383401063491041,0.33962479740798734,0.3019517071636301,0.30372385228950183,0.31095505150383657,0.30768644563478853,0.48880180183075317,0.33646814191877583,0.31551809247463525,0.4350839852769321,0.5397713849762139,0.3765595665930333,0.05590938581157564,0.3332661689274965,0.48805560304104284,0.22022760355503412,0.16453409015831574,0.304665424266238,0.48639150501337763,0.26991779788079157,0.14347948896269305,0.2510756681042181,0.5301252696687649,0.20280757770651003,0.27011652775837647,0.34628022852339646,0.5396524966193498,0.31840506204915087,0.0815203353568793,0.22481272827182117,0.23018479402332492,0.3019034582652715,0.3270452504280892,-0.0806304105982429,0.32659157609660816,0.36368817934960684,0.12634555325552263,-0.1419337536332977,0.26874010092919587,0.36469131720971193,0.26397239593656147,-0.2127875109192787,0.5373438610599136,0.2811900228452235,-0.023490899352824217,-0.4120655586411478,0.5448816453405873,0.08438282662027548,0.14969760419539244,-0.21112549264058803,0.5410531426239132,0.18096603449553733,0.10557063544368134,-0.37766200665518523,0.5262009068035841,-0.01,0.08139068638613846,-0.3602139955439355,0.5437789589885589,0.0682568107337616,-0.021013189582554485,-0.51,0.5315313479319395,-0.01,0.3115460631256081,0.3807278760935198,0.5323457485935308,0.37935409499268624,0.19414279530876039,0.3129382259547108,0.5416588143271928,0.32344094055299777,-0.06843461504478955,0.2966843938507794,0.5343789132659169,0.22921906327367342,0.03081383574942269,0.09522549556851082,0.543176894247441,0.09245080128396958,0.17886066241871304,0.20251645989536526,0.5240428917933039,0.2442751570814647,0.1320198400919247,0.18869378351425634,0.4322500785110253,0.15214481428711846,-0.012707978400992942,0.11315436169678394,0.4846167193783306,0.09854706057826958,-0.06332647329180967,-0.01,0.5091061521250398,0.02862007630554258,0.09776438793593002,-0.28458609528968076,0.5320176174844018,0.20871618864817792,-0.10526427348336548,-0.40111394366735675,0.5300067714595498,0,-0.06357735780476241,-0.42410568220066325,0.5309618053169377,-0.01,-0.13369166547577926,-0.51,0.5518281916017054,-0.01,-0.06226232163215671,-0.45632153353745275,0.5339779028478782,-0.01,-0.11,-0.48187380567537247,0.5004423614793913,0,-0.0656173386096862,-0.51,0.506267141430314,0,-0.11,-0.51,0.41808374485689337,0,0.20464994566776026,0.3945607441153788,0.3205048342719056,0.29853425430668545,0.21229475518907528,0.23480822785129557,0.5018341390456627,0.1862760362260567,0.22707546688299624,0.2480252184107154,0.4930631066563799,0.21121932594798387,0.17053655461605863,0.20144998297442376,0.49733579256618143,0.2038520533126345,0.13062948003640645,0.17066470272713224,0.4587516942372764,0.1706145502986915,0.13251292867675857,0.1845000597505816,0.2051118935878342,0.31151614592098326,0.1252613382553904,0.32726753862777636,0.20831598182022526,0.009388427890959348,-0.07366515202144822,0.016724662953668555,0.16898496259393606,0.01444450716869425,0.23119527607252868,-0.28166385835750934,0.2628132277828153,0.3557961437690465,0.049289442752406806,-0.4762407979414271,0.5333843885991247,0.10671570392943719,-0.07068677761013462,-0.41965902017163675,0.4260170286492985,0.1431504801334985,0.014611420635386625,-0.45042592669208403,0.5232379903912104,-0.01,-0.06438640925837284,-0.4163567073236217,0.4110226923250509,0.05636230379142058,-0.06408697142756523,-0.4532322696432145,0.44235939467074903,0,-0.1159539004448426,-0.4669776147991147,0.3313451438654979,-0.01,-0.11,-0.51,0.404442116851383,0.02248174135208468,0.004118418769187473,0.2827397702948149,0.5036664852636937,0.2140747668940188,-0.27319886586411224,0.0493017539503856,0.40365982418736446,0.07736233772547468,0.050876144933433516,0.13435816385987137,0.47653504999681484,0.13872831473034064,0.03791058212263337,0.14550640707734702,0.1429826967827278,0.26589573958121526,0.13368124712069496,0.15673450499549865,0.48636966646189017,0.17063373031546886,-0.11605791644492719,0.01840064557907095,0.33723565123698296,0.11496260498107516,-0.06514632380032634,-0.01,0.3969901941154236,0.0040626538403181044,-0.11,-0.01,0.33415285632490693,0,-0.4320037264462953,-0.45583240340093945,0.40968955941022106,0.04528472175574965,-0.06735758776417619,-0.47898551177325593,0.28869169017505436,0,-0.1094933747608781,-0.4846955467335667,0.21194379035732813,-0.01,-0.03000366125349898,-0.51,0.3306200353279991,0,-0.11,-0.49251751888431283,0.4339943117178404,0,-0.04234747987602919,-0.51,0.3571296416364081,-0.01,-0.0347800471148984,-0.51,0.42600116312385106,0,-0.11,-0.50290125,0.22767620006728156,-0.01,-0.07483305425289674,0.10702572023790152,0.48147364228570755,0.19818705276159984,-0.16085168488901186,-0.01,0.5229367690393788,-0.01,-0.09265072567972096,-0.01,0.5141407117616067,0,-0.162025,0.03551773730839204,0.43802554052570014,0,-0.87963635371261,0.060376828129214875,0.48822341842880906,0,-0.5752002726857421,0.03410479243918196,0.3851138444845095,0.0702578055940718,-1.0111475,-0.01,0.33402044288928806,0,-0.11,-0.01,0.19275277150434447,-0.01,-0.11,-0.424185806282244,0.5347312559104028,0,-0.11,0,0.44972917922706673,-0.01,-0.11,-0.51,0.4142165498803151,0,-0.61,-0.51,0.2072461259458737,0,-0.61,-0.51,0.42916629884562907,-0.01,-0.61,-0.51,0.29474002744563876,0,-0.11,-0.51,0.27310849205491333,0,-0.61,0,0,0,-0.08285143131808423,0.06444717194001542,0.47921189264583264,-0.01,-0.11,-0.008973588281926438,0.4817489952777658,0,-1.01,-0.02335583049624665,0.44442636604522173,0,-0.11,-0.01,0.09,0,-0.61,-0.01,0.43628797231664723,-0.01,-0.11,-0.01,0.1435429927116335,-0.01,-0.11,0.016680231464481582,0.09,0,-0.11,0,0,0,-0.11,-0.51,0.49622945512161326,0,-0.11,-0.51,0.2678404011655145,0,-0.11,-0.51,0.2728022455867638,0,-0.11,-0.51,0,0,-0.61,-0.51,0.1369961664171171,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.61,0.05949416811778722,0.49503381471826974,0.06266161549053004,-0.11,0.031073573770114694,0.47117792627817523,0,-0.11,-0.01,0.24241445407018808,0,-0.11,0.027130369406338783,0.2661807535657292,0,-0.11,0.01930534619147939,0.33549522769395357,0,-0.11,-0.01,0.14088802086575303,0,-0.11,-0.01,0.29891161498287744,0,-0.11,-0.01,0.0841589164686659,0,-0.11,-0.51,0.3721423166525035,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.17815637463668801,0,-0.11,0,0,0,-0.61,-0.51,0.246923139263495,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,-0.01,0.28482640286190924,0.026054006617276346,-0.11,-0.01,0.24778277770069432,0,-0.11,-0.01,0.2560364069771617,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.22852983711484248,-0.01,-0.11,-0.01,0.08606464096185491,0,-0.61,-0.01,0.1345597621992573,0,0,0,0,0,-0.11,-0.51,0.21333386322911935,0,-0.11,0,0,0,-1.01,-0.51,0.17652167222145404,0,-1.01,-0.51,0,0,-1.01,-0.51,0,-0.01,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,-1.01,0.10583165329274442,0,0.13559444590171482,0.46713315413918655,0.03292360660711364,0.3166813707794124,0.14859979909961676,0.45675978524157373,-0.056682405024146926,0.25425441979188423,0.17337400678736317,0.46306396787290677,-0.13916504130916965,0.2591633532875798,0.02510155212795554,0.444038641504903,-0.314809866749968,0.04930252430574189,0.23825287889910496,0.43074055504865266,-0.18667493774037786,0.25617748959020814,-0.018954574797309356,0.41755905632529977,-0.20644336708016267,0.07617456274858514,0.07729361879004819,0.4169461232505262,-0.3564441828151907,0.11958579251632817,-0.11,0.41846957011222563,-0.37607785558948664,0.02284205941276611,0.0836969396677527,-0.13271560741548455,-0.13219909268584054,-0.010724786577174034,-0.005978062174389703,-0.26461945036871654,-0.20068135097173329,0.04065972510803468,0.009585570588221497,-0.25505818208042663,-0.23854437953288132,0.12139138655596499,0.09100109830542029,-0.40667913021862695,-0.32252097017964204,0.007246977318138033,0.013897195352451243,-0.3175058414032781,-0.33607019735185706,0.15493298191139399,-0.07339223588169541,-0.46897222525146537,-0.3450042717620721,0.033485348395864756,-0.018848522991904423,-0.51,-0.3550779422047494,0.10065948829579743,-0.11,-0.51,-0.41,0.16505359914279227,0.09252038454234393,0.38910022155947294,-0.19023745949996074,0.027439276006114115,0.006383541618867027,0.02445529496061496,-0.017817950972881608,0.05440209266200025,0.1147810213385482,0.04107500120041363,-0.1026913070930408,0.05935530391273178,-0.26633883755505294,-0.0347653911750732,-0.4106975,0.14690967296122676,0.05829151469426832,0.11603838075739646,-0.14047551318477816,0.06931614305570026,-0.18740072545721612,0.011044042502326708,-0.22559263424757692,0.03239075119134811,-0.006421180648207021,0.023499426375720136,-0.3349284286624528,0.09726032701056338,-0.11,0.003912260640515792,-0.41,0.05595089644689245,0.005488648977998372,-0.33565542834037493,-0.24487741767087984,0.13376300791467247,-0.023831398040327228,-0.498919709323833,-0.30535831237524785,0.08285392398557612,-0.07688757036111842,-0.5116009717813951,-0.3537902232111852,0.10677604920608996,-0.07614633570124074,-0.51115875,-0.3502810314185492,-0.02320047432779287,-0.12754674275379452,-0.51,-0.37815989367911834,-0.024655244842771876,-0.11,-0.51,-0.41,0.15364714952298392,-0.07705791714579341,-0.51,-0.41,0.07499009804711758,-0.11,-0.51,-0.4106975,0.07882190431110492,-0.11978065113339839,0.2037073178842571,-0.09237216034689455,0.1575911444608272,0.05441097619317588,0.37503277374972405,-0.34040710347139447,0.057347419791994404,0.024613773969779734,0.028476638747439213,-0.13816947480731748,0.0572865533252868,0.010055357598237835,0.028442957687703836,-0.26690988541546184,0.04290797981535997,0.05818266692342376,0.1536310683867658,-0.14014299732562782,0.06180425051843031,-0.036101763576860776,0.041687386244565694,-0.41,0.07406613853434123,-0.004118048511975579,0.0372311428179345,-0.38770891680829456,0.1366248456049446,-0.46834416590638495,0.02816669601536842,-0.35738783150749365,0.11961089509068994,-0.020837708482051333,-0.4363484523053109,-0.2627399050753296,0.029954007257298226,-0.051146795351322695,-0.4543359204751099,-0.3319228922703692,0.09924720631703886,-0.039199477637662745,-0.4919578188346424,-0.364876604183719,0.018042324205253275,-0.07811105730104005,-0.51,-0.41,0.1597474193524574,-0.11,-0.47776096874648794,-0.3734148260475711,0.040947193455664437,-0.07476640421101377,-0.51,-0.41,-0.004542319594146398,-0.61,-0.510135,-0.41,0.0974954312434348,-0.11,-0.51,-0.41,0.016313019711828216,-0.13664414821320336,0.31498327734459103,-0.41,0.0024311236045363206,0.01682409648180295,0.08419920759425813,-0.14826761874277394,0.029656932326892028,0.009858627705000025,0.03579280463218601,-0.33441276969021433,0.0740552676615602,-0.04052829198697449,-0.00443749127271398,-0.40301262499999996,0.06081107318690839,-0.49758978062039627,0.10166809346063017,-0.40290125,0.052344990489156,-0.11,-0.012119693822239114,-0.41012374999999995,0.035889624528416,-0.07486345654350932,-0.011163306301109269,-0.39348545187218753,0.023312308176518144,-0.11,-0.012178315335099476,-0.41,0.023278540770487237,-0.11,-0.46747324393016654,-0.33970273659292693,0.09844888366737536,-0.07563675207210561,-0.5069850661088633,-0.37746675436255694,-0.019686088299764343,-0.11,-0.51,-0.41,0.0643782313076027,-0.09482065867016515,-0.51,-0.41,0,-0.097896359396651,-0.51,-0.41,0.09065401254006848,-0.11,-0.51,-0.41,-0.004528038943609073,-0.11,-0.51,-0.41,-0.010819,-0.11,-0.51,-0.41,-0.01481739431140869,-0.11,0.4405341112081654,-0.41,-0.005970576058978094,-1.01,0.3204817090090649,-0.3639323283539577,-0.01,-0.11,0.39319186093057534,-0.41,-0.01,-0.11,0.14422130686323395,-0.3658724201751707,-0.01,-0.0723319954447888,0.34082510882617034,-0.36619552896063556,-0.01,-0.11,-0.01,-0.41,-0.01,-1.01,0.24181416337904466,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,-0.51,-0.41,0.13930628293011446,-0.11,-0.4750532543073557,-0.41,-0.0054197257850562555,-1.01,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,0.20832671905639488,-0.41,-0.01,-0.11,-0.02462076511560663,-0.41,-0.012955887604901864,-0.11,-0.023231746390629894,-0.41,-0.011920350916553276,-0.11,-0.01,-0.41,-0.01,-0.11,-0.015984254394932215,-0.41,0.01678884407122478,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.61,-0.51115875,-0.41,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.5229452644332953,0.27781596857418345,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01519535363374638,-0.41,0.05137785546096062,-0.11,-0.01,-0.41,0,-0.61,0.04970507373065256,-0.41,-0.01,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.61,-0.51,-0.41,-0.01,-0.61,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,-0.01,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.10499179937817078,0.15691649995650384,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.61,-0.01,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.01132525,-0.61,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.187382530072693,0.27212660488753515,0.47528004072088514,0.2646375728057169,0.14309721339100206,0.40038825049497856,0.243166525405214,0.23619705624475362,0.04776475850371768,0.25231167038855695,0.46564061710787397,0.20378154119951894,-0.06391913579554881,0.13265147047923323,0.44915994559031314,0.07854958490805894,0.18379130154681816,0.22657116421537501,0.3689365945454486,0.2121974039605758,-0.022164178101020837,-0.01,0.309127169138259,0.12080769132407959,0.013727082619526952,0.2891457340205771,0.1303075669040975,0.027163026127438705,-0.11,-0.01,0.27521406817629845,0,0.05081362816112473,-0.26984516348052645,0.3879279936918662,0.1882887826486827,-0.16163389028495997,-0.3519732492489369,0.35063320306228196,0.0718783545055114,0.10527375973267836,-0.3417627094418939,0.45928215526611366,0,-0.066722619953814,-0.51,0.44121689408594444,-0.01,0.04600451968684126,-0.40120788652918293,0.4430600428760897,0.070901240642374,0.011628247075664594,-0.45729825199717905,0.3405708765497032,0,-0.02322601664637869,-0.51,0.29013540313631503,-0.01,-0.5188611827672269,-0.49262856864114896,0.28799092863444814,0,0.19000221913887225,0.38830537800033893,0.04200612354040805,0.10840725051627109,-0.0400477703790728,0.015004062684979818,0.09796145485017711,0.0283231466109729,-0.0331296249818415,0.04990474245261873,0.03483199777601168,0.12500619034765742,0.12437477256282467,-0.008417428351253954,-0.009489949952260933,0.043824266064758394,0.033714721115561265,0.10680826388220234,0.019798085873747366,0.08105860354174449,-0.11,-0.0005010788234109196,0.08371376576083453,-0.01,0.01983387012267712,0.01970441431172188,0.025854587356400227,-0.0013604312014161134,-0.03123268800270993,-0.01,0.10076098140992612,0,-0.29283990145189104,-0.4305771937027048,0.05058537562348286,0.1607481967722293,-0.06929883131483804,-0.4948365092713938,0.026446455506764093,0.11937948008460612,-0.029731118035996554,-0.51,0.06939671728633585,0.013812764761734339,-0.11,-0.51,0.07841196378797624,0,-0.07027513015190073,-0.45839616566153896,0.06859603601098925,-0.01,-0.11,-0.5041459105904607,0.09196118724619075,0,-0.11,-0.51,0.09834593072874233,0,-0.11,-0.51,0.10656575012296506,0,0.19058574062699643,0.19994183301124807,0.26585519737527546,0.14210267597514134,0.15062619597086174,0.024158078711639004,0.36930911293242313,0.0253125859194661,-0.06985951720143255,0.09370666709451528,0.06352733398760228,0.011119497737114056,-0.0698157333697801,-0.01,0.06955862518352557,0.025807072936338014,-0.11,0.011171639716422786,0.11858036776497533,-0.0027645972370284383,-0.4360961221476479,-0.01,0.11549384533576765,-0.01,-0.11,0.0014584788812835175,0.05037395072855045,0,-0.11,-0.0060189246642989,0.0791558697807822,-0.01,0.014129565133400676,-0.39342820554741176,0.31031020270216475,0.048625885450934256,-0.06392696364638267,-0.51,0.3498678376503003,-0.01,-0.11,-0.51,0.07863459518838387,0,-0.06848252075245838,-0.50346375,0.0332770724675312,0,-0.06729354636852856,-0.4879174573050618,0.10244333258475014,-0.0005830013626662457,-0.11,-0.51,0.10708839995116368,0,-0.5163243116310879,-0.51,0.08045351537859724,0,-0.11,-0.51,0.0736406258164905,0,0.013761018216380382,0.3577815747986599,0.06333801072868546,-0.001575931688195125,-0.06683400074225516,-0.01,0.05023855762595903,0,-0.42792008698619,-0.01,0.076914511090009,-0.01,-0.12474937850129907,-0.01,0.0801710266253463,-0.01,-0.06719191886393348,-0.006635854810579848,0.0932520943436036,0,-0.11,-0.01,0.0763963613333918,0.020963025976995932,-0.06219284199770165,-0.01,0.027599557943754197,0,-0.11,-0.01,0.08423524996873855,0,-0.032708053991875166,-0.47555364465596506,0.052857427433898714,0,-0.11,-0.51,0.07177151466556607,0,-0.44061470048352636,-0.4932960054004945,0.05908480048733751,0.009750876234845074,-0.11,-0.5106975,0.0833742279005518,-0.01,-0.11,-0.5087558803366544,0.04340773928688345,0,-0.07410600020633011,-0.51,0.08799880051232645,0,-0.11,-0.51,0,0,-0.11,0,0.08452400439160505,-0.01,-0.11,0.03623677553736196,0.4001098302684817,0,-0.61,-0.01,0.34796269219534903,0,-0.16498874957776963,-0.01,0.27380167573541403,0,-0.11,-0.01,0.14612244292378568,0,-0.0779151823512361,-0.01,0.18125706073419867,0,-0.61,0.015945361124577458,0.1375993431500404,0,-0.11,-0.01,0.17648041662155917,0,-0.11,-0.01,0.14213357381845731,0,-0.11,-0.51,0.3906230586134208,0,-0.61,-0.51,0.21692020510846055,0,-1.01,-0.51,0.21258576598616052,0,0,0,0,0,-0.61,-0.469676792302151,0.1303592315453493,0,-1.01,-0.51,0.12959052706169544,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.01,0.051073016720829895,0,-0.11,-0.023967100730980094,0.07347068327143466,0,-0.11,-0.01,0.07878453356344955,0,-0.11,-0.01,0,0,-0.61,-0.01,0.05869528562340888,0,-0.11,-0.01,0.09,0,-1.01,-0.01,0.09334339670178377,0,0,0,0,0,-0.07129219712380304,-0.51,0.05264364271299328,0,-0.11,-0.51,0.079279776941516,0,-1.01,-0.51,0.09,-0.01,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.02891975935573679,0.23030226898231534,0,-0.11,0.019160277425354602,0.16535352247619137,0,-0.11,-0.01,0.06679846998376071,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.08602960530224842,0,-0.61,-0.01,0.09,0,-1.01,-0.01,0.0830199108111963,0,-0.11,-0.01,0,0,-0.11,-0.51,0.20512216041602113,0,-0.11,-0.51,0.12031874616309764,0,-0.11,-0.5062347901537866,0.076515046128551,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.08550954779216562,0,0,0,0,0,-0.0708175119375489,-0.51,0.07625179221804924,-0.01,0,0,0,0,-0.11,-0.01,0.05010569965724901,0,-0.11,-0.01,0.08173523814185643,0,-0.11,-0.023223040293783054,0.0901412897078557,0,-0.11,-0.01,0.08318611701565684,-0.01,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0,0,-0.11,-0.51,0.089948476560541,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.15776625216243842,0.45247621101842433,-0.19197564693194288,0.18875363891178698,0.08611919916559155,0.4481788566526723,-0.3980524843331982,0.114540931491043,-0.002158782936539049,0.44953490035089766,-0.33180094273557037,0.1311876708621036,-0.06843937027581572,0.4318690581100852,-0.41,0.018280238756591682,-0.3428132686652763,0.3657205697602419,-0.3788829127407102,0.014763933422167955,-0.11966551087036502,0.40286926631459397,-0.41146249999999995,0.041916072134134244,-0.11,0.3129446208176883,-0.41013499999999997,0.015472252989494959,-0.11,0.24517132727104513,-0.41,-0.01,-0.08749413247296242,-0.43646287621315244,-0.31881821674197675,0.13794167461907386,-0.05435110924060569,-0.42393689796886813,-0.3607714870478361,0.08727085839277382,-0.04190361646505553,-0.51,-0.39253639395820034,0.031456266448433634,-0.11,-0.504362126765625,-0.383812673507519,0.005120440289096218,-0.07558996969288109,-0.4973487741015767,-0.3824391058403219,0.0899251440078583,-0.11,-0.51,-0.41,0.10730548162599728,-0.11,-0.51,-0.41,0.0959364847187586,-0.11,-0.51,-0.41,-0.005646563211516417,-0.07363564939852019,0.38407318286467235,-0.41830607446838936,0.00922759911416843,0.0026718457828490798,0.030155898317416784,-0.4280379773305578,0.06730165208319852,0.005593482001553383,0.025224157849316343,-0.4165120458442496,0.11715158919060986,-0.05378343455324597,-0.03494459493254866,-0.4139851616941448,0.06666323373090705,-0.5639139272747175,0.036502211541162254,-0.4300619919113341,-0.007869400218156648,-0.4465415031260718,-0.017072851159535232,-0.43204488757643456,0.03311774421791557,-0.11,0.022707824570315997,-0.41,-0.007489418182715393,-0.11,-0.02463996680389044,-0.41,-0.022374277075961103,-0.15343109679925349,-0.4758967729074593,-0.4189841699771699,0.06564183685085084,-0.11,-0.51,-0.41,0.1037722598881252,-0.11,-0.5074139270564376,-0.41,0.010325575671989277,-0.61,-0.51,-0.41,0.009513768831620176,-0.11,-0.51,-0.41,0.13577992972501207,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0.03171715953282217,-0.61,-0.51,-0.41,0.016201991654746645,-0.08270311657519375,0.36476260819731815,-0.3487366448240551,0.001111137410023546,-0.004164796778372264,0.3425036258433491,-0.41,-0.01142060070807691,0.03316848211073346,0.06044155919713332,-0.4106275897670333,0.12405347214163147,0.1454817779902583,-0.0058698352588632775,-0.41462103447044063,0.02365871078040968,0.21500778961069117,0.05697005821845435,-0.40780982951770345,0.07238508883221097,-0.06802982458254304,0.017336637889537772,-0.41,0.07033496996549206,-0.61,0.11375505478456599,-0.4106975,0.0206607566575178,-0.11,-0.01040746489299404,-0.41,0.016515647217411625,-0.03925054634733456,-0.4920695467614562,-0.358033133474336,0.0033893922688900723,-0.11,-0.51,-0.41,0.13119405083094063,-0.11,-0.51,-0.4088496899788793,0.09203596253816712,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0.11285972183852577,-0.11,-0.51,-0.41,0.014501558510570058,-0.07788398910443525,-0.51,-0.41,0.02194366832671186,0,0,0,0,-0.07205193368557673,0.3474334592030672,-0.41,-0.01,-0.07049337531362425,-0.02317184914803128,-0.41,-0.01203267689655842,-0.61,-0.010188120585576178,-0.41,0.02163767719904184,-0.11,-0.016198056922000582,-0.41,0.015356877976479848,-0.07548346308327453,-0.0138766228640206,-0.41,0.11173561887783115,-0.11,-0.012122258218750001,-0.41,-0.010129269544035825,-0.11,-0.015599778162195637,-0.41,0.05457443376231367,-0.11,-0.01,-0.41,-0.01,-0.11,-0.51,-0.41,0.0609386575654005,0,0,0,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,0.007556330196253816,-0.07953779015049302,-0.51,-0.41,0.010230874308763948,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,-1.01,0.35846731339858945,-0.41,-0.01,-0.61,0.034751434571756716,-0.41,0.017284274971913274,-0.11,-0.01,-0.41,-0.01,0,0,0,0,-0.11,0.07906828312446726,-0.41,-0.01,0,0,0,0,-1.01,-0.01,-0.41,0,-0.61,0,0,0,-0.202025,-0.51,-0.41,0.035561349681858055,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,0.09467362756549291,-0.41,0.007950631518643477,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.0106975,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.07290498711467744,0.09293990723405632,-0.41,-0.01,0,0,0,0,-0.11,-0.01,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.017118892825776624,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.61,-0.01,-0.41,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.26938254714735854,0.3510590566503304,0.5233739825886844,-0.14072796837737947,0.2880849287573746,0.43568898545321005,0.5187849204682596,-0.2224713971131696,0.2412151921681901,0.38588105935132755,0.5092766888296897,-0.22827030624497602,0.00594313988094608,0.07499642757499335,0.5408019550034715,-0.4360645004876592,0.19968275610597702,0.29244704203045674,0.4737687824297778,-0.18737919403015146,0.0668311577454615,0.14083955754773678,0.2752366615410422,-0.42052619361933924,0.0054237937328087404,0.1464528181941397,0.39163243740620346,-0.4139973005745233,0,0,0.5254466369923668,0,0.2891012596734838,-0.15783431752079508,0.5384372743235983,-0.3326071186756874,0.011513025679364741,-0.4356463496373606,0.5266173328433055,-0.3997369721712297,0.12753583371999033,-0.47776450239816537,0.5296199453753515,-0.4684781213240786,-0.03961308754510312,-0.51,0.5173975123067719,-0.51,0.08104297080183838,-0.3638210820217931,0.3143979665542771,-0.4044775283599821,-0.11,-0.46605026634920454,0.5128368700118391,-0.51,-0.063595352805979,-0.4800924983825626,0.5474829313711558,0,-0.61,-0.51,0.5098377530125744,0,0.18516175659589879,0.282607863954206,0.5245185076625147,-0.27911306533217833,0.03443656455820791,0.1373858498248595,0.5425006096596807,-0.429430416706146,0.07241444030611367,0.180673520525348,0.532785171675364,-0.4044220513394486,-0.4402417751543274,0.013612294560865981,0.5263538909236675,-0.49248741427015064,0.19746469195985075,0.11719140477503326,0.5317145014827444,-0.33144008605555025,-0.03046925184891789,0.02694839631290468,0.5310007564632189,-0.4703116078089649,-0.06778316892961747,0.023869833664031732,0.5090468964143697,-0.51,-0.11,-0.01,0.48531224763623104,-0.51,-0.045989667063151066,-0.39626576416691317,0.5343342401856386,-0.47743168747113174,-0.11,-0.51,0.541019286452499,0,0,0,0.5338362460897949,-0.51,-0.11,-0.5051941635200935,0.48723674377252707,-0.51,-0.03261824276801504,-0.47924110479962007,0.33563761968877226,-0.51,-0.11,-0.51,0.5168402099618508,0,-0.03776878128325926,-0.51,0.40800230002210264,0,-0.11,-0.51,0.2099987547368136,0,0.212019795232895,0.3388711235339226,0.2838540201680606,-0.25944416708051304,0.04457263227822315,0.08723030330796912,0.5307692242278592,-0.4417198544103499,0.1660909306273714,0.16619146654393094,0.40063708857672486,-0.4193736996420397,-0.06919510085211612,-0.01,0.4045513451733197,-0.4990714975971937,0.04983719294418762,0.11747634149185107,0.514664903726286,-0.44797875416209004,-0.5192343606767456,0.025986281199529615,0.3341528930792214,-0.44272688116883335,-0.02102256664055816,-0.01,0.39983516122294605,-0.4448734240210505,-0.11,-0.01,0.30022037621761505,0,0.10025528310414691,-0.3472112542601525,0.32025971665604025,-0.44984462909752937,-0.06419944892596717,-0.51,0.5078686011963307,-0.510135,-0.025834646020500042,-0.452349116330437,0.4757606154139274,0,-0.11,-0.4800083720359161,0.31112166253499096,0,-0.11,-0.46783195145908857,0.47614103936736346,0,-0.06938537179862848,-0.51,0.3990080282594302,-0.51,-0.11,-0.51,0.36345896266805433,-0.51,-0.11,-0.51126,0.24685935217973734,0,-0.028891314679755906,0.1475190623631517,0.4628279756677112,-0.4662659009425128,-0.02542704399530265,0.08199412099838874,0.41909883550095767,-0.4885689343996043,0.010410826721371662,0.05630002619634647,0.455620580470882,-0.4849468358431576,-0.61,-0.01,0.31213531596177707,0,-0.031288122894378614,0.06621867850368217,0.44072526714398574,-0.51,-0.51,-0.01,0.3566516883733325,0,-0.5144001302669156,-0.01,0.4126955646096324,0,-0.11,-0.01,0.2065705336484388,0,-0.025405018031528087,-0.47386227160833305,0.3181564347787008,0,-0.06802737538050817,-0.5076200601180806,0.4738395276872249,0,-0.11,-0.51,0.41582259191545856,0,-0.11,-0.51,0.2439370377522883,0,-0.11,-0.51,0.21674987512762933,-0.51,-0.11,-0.51,0.20647087921714485,0,-0.11,-0.51,0.162155249116251,0,-0.11,-0.51,0.19666051435122472,0,-1.01,-0.01,0.5051241672627396,0,-1.01,-0.01,0.4497295326187243,-0.51,-0.07368664917349302,-0.01,0.48408519352452806,0,-0.11,-0.01,0.13644914620861512,0,-0.03631570885634039,-0.01,0.46954967334863734,0,-0.11,-0.01,0.17115545484068087,0,-0.11,-0.01,0.17110182866074997,0,0,0,0,0,-0.9219214610013438,-0.4668258818382504,0.5313018311199587,-0.51,-0.9225746666289822,-0.51,0.39364623187254294,0,-0.61,-0.51,0.3145980829246444,0,-1.01,-0.51,0.1577696284853571,0,-0.11,-0.51,0.32528836650655146,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0.49806973082311085,-0.51,-1.01,-0.011121507440601123,0.2631863822771314,0,-0.11,-0.01,0.29791425812760036,0,-0.11,-0.01,0.17876323492463486,0,-1.01,-0.01,0.26297092331891503,0,-0.61,-0.01,0.20457744863624525,0,0,0,0,0,0,0,0,0,-0.61,-0.4735927792904535,0.28105421498574873,0,-0.61,-0.51,0.21020425176928112,0,-0.61,-0.51,0.09,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-0.11035372512619415,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.44530938380033186,0,-0.11,-0.01,0.1344392318915572,-0.51,-0.11,-0.01,0.18962879326170826,-0.51,-0.11,0.008777812746618348,0.09090036854232021,0,-0.11,-0.01,0.09,0,-0.61,-0.01,0.09,0,-0.11,-0.01,0.08537478790924913,0,-0.11,0,0,0,-0.11,-0.51,0.1359439576869304,0,-0.61,-0.51,0.13663844314757717,0,-1.01,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0.21084440931642734,0,-1.01,-0.01,0,0,-0.10166299186756479,-0.01,0.13498111089860348,0,-0.61,-0.01,0,0,-1.01,-0.01,0.16652889714385052,0,0,0,0,0,-0.11,-0.01,0.12806719513417333,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1526318354259708,0.4646544106838092,-0.19882351411748503,-0.4159274469942638,-0.02103066701981382,0.4530073068390327,-0.41,-0.4814803855910273,-0.11213553620958164,0.45702035641651834,-0.3224133503990285,-0.47803308306955244,-0.11,0.44092745199786326,-0.41,-0.48435907317148286,-0.11,0.43468104797107543,-0.41,-0.42584757075146595,-0.07517899562028121,0.2909509603533912,-0.36545376656603784,-0.49962600150653597,-0.4551436719551856,0.38535001594669865,-0.36571962962070376,-0.51,-0.10344145943421876,0.23475766964614508,-0.41,-0.51,-0.4689963055420654,-0.51,0.016025195315443122,-0.49256052733105987,-0.39798741332078247,-0.4836460052214443,-0.1078883259833934,-0.51,-0.3690020328080953,-0.428608384988207,-0.3218762693567896,-0.510135,-0.14311333256711883,-0.47809488860098814,-0.41,-0.51,-0.450548628930224,-0.51,-0.22000188906540646,-0.4895723018938297,-0.14748260696091484,-0.51,-0.36473217043492717,-0.51,-0.11,-0.4836958545616678,-0.41,0,0,0,0,0,-0.0529268792784838,0.38690707293117654,-0.41,-0.4951658713767068,-0.1314351304759209,-0.11497677308030695,-0.2665587705476368,-0.45765130807760923,-0.08260042735071872,-0.07058443827464503,-0.3008861160777834,-0.48489415713594036,-0.12224169445186836,-0.12495125281167851,-0.32328695109012456,-0.5035569475783254,-0.11,0.10478403550299925,-0.39272201056142053,-0.49752162667750177,-0.08226851197553878,-0.1290510531127032,-0.41,-0.4821056718975155,-0.11,-0.028427364393461215,-0.39825509206133397,-0.49102915549589976,-0.11,-0.01,-0.41,-0.51,-0.1621534510568518,-0.4363205995466604,-0.34833329216524267,-0.51,-0.18314110739758702,-0.5106975,-0.36640171907545094,-0.51,-0.11982000426728899,-0.5116201665,-0.4106975,-0.51,-0.4539151871611749,-0.5162080251711378,-0.3655934553682995,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.0031548865335468378,0.3182712296969178,-0.368097710264169,-0.49208594768707314,-0.4458654758921159,0.35658664158934417,-0.41,-0.4840977771665429,-0.07884944638956563,0.0015526007719920381,-0.3462888583597958,-0.51,-0.11,-0.020570817234080704,-0.38357840803622556,-0.5068426414199609,-0.08021258210628623,0.17283769177917963,-0.37695615395313153,-0.51,-0.11,0.14224933366723483,-0.41012374999999995,-0.51,-0.11,0.10278333653503678,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.43106293243811167,-0.4919409943587287,-0.11286334076976001,-0.51,-0.51,-0.51,-0.36953478699812,-0.51,-0.121316071516795,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,-0.10351033696865992,-0.51,-0.38181387031656944,-0.51012375,-0.14525526889265108,-0.5106975,-0.41,-0.51012375,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.3345660011216743,-0.41,-0.51,-0.1485677060835251,-0.12270969876186799,-0.41012374999999995,-0.503802375,-0.12627058426307386,-0.09456383963938184,-0.41,-0.50290125,-0.11,-0.01,-0.41,-0.51,-0.11,0.045592040061183614,-0.3805373197441964,-0.49461940846676555,-0.11,-0.01,-0.41,0,-0.11,-0.03753221521647121,-0.41,-0.510135,0,0,0,0,-0.61,-0.51,-0.349148495462843,-0.51,-0.11,-0.51,-0.41,0,-0.10815258384767377,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0.30564798121381576,-0.41,-0.51,-0.61,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,0,0,-1.01,0.061410785078545936,-0.41,-0.51,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.61,-0.51,0,0,-1.01,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.09625154610040115,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,-1.01,-0.01,0,0,-1.01,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-1.01,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0.21417436120019165,0.327527476067575,0.47067515870131604,-0.36802018437168627,0.014146724156230153,0.14201708808989122,0.4456429043700546,-0.44175499213865344,0.049307238934970736,0.19962609779235815,0.45764982725964076,-0.469680439408448,-0.11,0.03532760606173441,0.4220884501347195,-0.51,0.07752609038826212,0.08757698169092382,0.23813200249231214,-0.39865826950065786,-0.06461123830161197,-0.0007518041456668137,0.456187067390169,-0.51,-0.06816133558168899,0.02876323776971467,0.242696060344029,-0.48778019675535794,-0.11,0.18004868269963076,0,0,-0.16211294663474843,-0.36594676918359625,0.44928336874396896,-0.45469748385769293,-0.514195362750729,-0.4639290669370807,0.47610664731739877,-0.4589230163781047,-0.024094534008728803,-0.4699090581713578,0.4394172198604445,-0.5023387500000001,-0.11,-0.47403585238073953,0.4215096314488217,0,0.012804867832193444,-0.4600759098534957,0.3872288543082161,-0.485652143276171,-0.11,-0.4743720078693181,0.21274297614782048,0,-0.11,-0.51,0.37709078832350185,0,-0.11,-0.51,0.08750137438336184,0,-0.0737028763116189,0.3819425452671224,0.04166381688761324,-0.5073704916682898,-0.11,0.005104886164433569,0.0818766282082601,-0.48890765854516927,0.02493786611368208,0.023989911458310323,0.057746957492534834,-0.4916582072732264,-0.06567952445955307,0.008837978347018868,0.06488079062114038,-0.5033379974252274,-0.02139062431105608,0.0182040879646018,0.10540215871175337,-0.5044536485326775,-0.11,-0.01,0.0712291249706583,0,-0.11,0.10665403569587635,-0.009964385760365735,-0.51,-0.61,-0.007736544510606419,0.12137244963097557,0,-0.3554502837629037,-0.48703744970304047,0.06644027008363139,0,-0.07230787115636453,-0.51,0.0676055911339998,0,-0.61,-0.5129296853002239,0.004175092875616072,-0.51,-0.11,-0.51,0.08389423746556704,0,-0.11,-0.51,0.0669038239890662,-0.50335125,-0.11,-0.51,0.07553704303762523,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.08912472604475756,0,0.03346797006933832,0.0915126770142276,0.3678133150431411,-0.4658065265867416,-0.06449044270130938,-0.01,0.39758693877720724,-0.4548784826375335,-0.11,-0.01,0.08801186180353583,-0.5018678603088934,-0.11,-0.01,0.09065271703334456,0,-0.11,0.015162242134338902,0.09992217573596415,0,-0.11,-0.01,0.0905571092994847,0,-0.06585044059175361,-0.01,0.041450961263596944,-0.5008621031347484,-0.11,-0.01,0.07695597520232848,0,-0.06401496648099614,-0.44758829344033346,0.3381494362576184,0,-0.11,-0.51,0.3174894628488538,-0.51,-0.11,-0.51,0.06655581036849571,0,-0.11,-0.51,0.07840904145390251,0,-0.06565015413447277,-0.51,0.10414461624555993,0,-0.11,-0.51012375,0.08872105734395128,-0.51,-0.11893183446718653,-0.51,0.08828941851739111,0,0,0,0,0,-0.07315127764865686,0.16539134932915106,0.025824418765789812,0,-0.11,-0.01,-0.0060050948571288496,-0.51,-0.11,-0.01,0.09413713891909334,0,-0.11,-0.01,0.07552679577048244,0,-0.06659147932971243,0.02384297697010787,0.008902401017608762,-0.5032094657877593,-0.11,-0.01,0.07220519351493675,-0.51,-0.11,-0.01,0.08129716147338593,0,-0.11,-0.01,0.08997993487391324,0,-0.11,-0.51,0.06350287641133615,0,-0.11,-0.51,0.07207811858729761,0,-0.11,-0.51,0.08136684416360038,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09424212684350654,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0.08848693086357752,0,-0.61,0.0357830770123388,0.35216626688333835,0,-0.11,-0.01,0.27478835623193437,0,-0.11,-0.01,0.1657420061391159,0,0,0,0,0,-0.11,-0.01,0.2507704008090085,0,0,0,0,0,-1.01,-0.01,0.09,0,-1.01,-0.01,0,0,-1.01,-0.51,0.31009443922546914,0,-1.01,-0.51,0.09,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-1.01,0.04990571463448988,0.07101257388837756,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.61,-0.01,0.09,0,0,0,0,0,-0.61,-0.01690911112912158,0.09,-0.51,0,0,0,0,-0.11,-0.51,0.08447297801518878,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.17044618515529328,0,0,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,-0.01,0.08663613254002633,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.61059625,-0.51,0.08361186997589498,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.07681195744543533,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.01919396620343649,0.4469015172007215,-0.3791926054177434,-0.5029966017463727,-0.11,0.40612602513346036,-0.3736705396773541,-0.5029119069018695,-0.11,0.43041195595062226,-0.41,-0.51,-0.07987668518149646,0.28869438118203544,-0.41,-0.51,-0.07578556694557258,0.30721245074161685,-0.3754688505712944,-0.51012375,-0.11,0.24099789427535268,-0.41,-0.51,-0.11,0.16770977513488017,-0.41,-0.51,-0.0928434725397336,0.09754209556254584,-0.41,-0.51,-0.4678218500737157,-0.47575692429577615,-0.2154575931981929,-0.511315125,-0.12581028592514035,-0.51,-0.41,-0.51012375,-0.61,-0.51,-0.37925773419997355,-0.51,-0.11460124579933757,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,-0.11797366634598165,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,0.35316647459823297,-0.41135807700117427,-0.51,-0.3606728698336291,-0.14013682506171377,-0.412025,-0.5035223625,-0.10352417380783543,-0.046765170224984186,-0.41080887499999996,-0.510111375,-0.51,-0.01,-0.41,-0.51,-0.11,-0.024251875888075716,-0.41,-0.49786191966516374,-0.61,-0.01,-0.41,-0.51,-0.11,-0.04227861800127624,-0.41,-0.51,0,0,0,0,-0.13887114356673158,-0.49228389601683914,-0.41,-0.51,-0.11,-0.51,0,-0.51,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0.365566395209423,-0.41,-0.5003595409828153,-0.11,0.17581161896513023,-0.41,-0.51,-0.11,0.03515395042759528,-0.41,-0.510135,-0.11,-0.005776495535913998,-0.41,-0.51,-0.11,0.08362329295627638,-0.4075969864959856,-0.51,-0.11,0.007417391745868054,-0.41,-0.51,-0.11,0.030452616036020588,-0.41,-0.51,0,0,0,0,-0.51,-0.51,-0.3834131102632612,-0.51,-0.18831799991089304,-0.51,-0.3823713361708081,-0.51,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.20854113015138945,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.10853091230703257,-0.04886529385495725,-0.41,-0.51,-0.11,-0.018894354810119446,-0.41,-0.51,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.1101019258358768,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-1.01,-0.01,0,0,-1.01,-0.02406351039912205,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-1.01,-0.0472375,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29409240959957356,0.4060330316277752,0.5223544814134944,0.36868711013113,0.15267832479894636,0.29773155631164877,0.5178339446663602,0.3191906753530529,0.19448953950931197,0.38840504068087645,0.5111647722971308,0.27028894060633923,-0.011950196696054675,0.19364074512427892,0.5312533969886031,0.08955608749997375,0.25385769053973845,0.3424165612441088,0.4752444140676901,0.2516618952468035,0.044967799985706,0.23564782001736273,0.5159201672430611,0.1182398409476362,-0.1859355504091774,0.1055710241101406,0.4529597285554493,0.14005830331873087,-0.12873687574229523,0.03372906493949216,0.5087575200878403,-0.01,0.09466815484153451,-0.12160517001459982,0.5162097803565138,0.27422541182312643,-0.030638305682526082,-0.32217055364656205,0.5440079654366865,0.13892925364910297,-0.057066473532297615,-0.3065983891234737,0.5347206252657284,0.13154776803082313,-0.11,-0.4295980527749532,0.5359377320751991,-0.01,0.08757831940523522,-0.4932135445576043,0.5287573797598929,0.19094320444684945,-0.02087753804924706,-0.46382728286117125,0.5191478472858404,0.024211371453103918,-0.06345028693848119,-0.42011173454489636,0.48249734072861317,0.05506728271504097,-0.11,-0.51,0.46001799889621076,0,0.0649444415531155,0.27281041748828305,0.5167168751222213,0.2704510356536751,-0.06404098666521958,0.11195805418355154,0.5233844258292519,0.037698522579478026,-0.2563418882830851,0.2150987099663173,0.5212005953990582,0.20827034721627313,-0.0700493039969056,0.039795926919603805,0.528623852824527,-0.01,0.06104208906822413,0.1693786287434155,0.5345610380829013,0.1551184482698694,-0.11755589315387124,-0.01,0.5082426412250913,0.057629552233066844,-0.11,0.02501113454591549,0.4856244318439081,-0.01,-0.5242375318611334,-0.01,0.4648042464656063,0.02638970125875928,-0.05499651050047595,-0.4065086055710804,0.5172008232756496,-0.01059625,-0.10955212351062285,-0.46560969541158514,0.5473132644098709,0,-0.11,-0.47937897080515235,0.5201117698175706,0.10860080831090824,-0.11,-0.508178694294064,0.49744749671475613,0,-0.16972159937695733,-0.46827802438508315,0.5066413989773733,-0.01,-0.07960429099988917,-0.51,0.37230903857820963,0,-0.11,-0.51,0.39712455399850055,0,-0.11,-0.51,0.2537636407255738,0,0.1860325901611579,0.29505227141330254,0.47997103610118863,0.22416639991492807,0.03292785269614383,0.3945553252815959,0.16899591272824863,0.12676133964417324,0.08544218204477977,0.24176759799306502,0.09460233336420422,0.08679058532037827,0.018048145531349955,0.04603573272812495,0.4156474664814276,0.06742326152381306,0.22877366833943352,0.11200374893558543,0.11808999615362731,0.10787679253756181,-0.1104056846264307,0.02339443930194697,0.46734149916228396,0.01510617520105491,-0.43160500846464733,0.015922642803663185,0.33164810849975107,0.05865711144166993,-0.10234946984375,0.015385944043639481,0.3729594757962498,-0.01,0.06263871419628778,-0.4232100001832425,0.5060485070658324,0.042949678469437855,-0.06541854371893409,-0.51,0.5099165587388327,-0.01,-0.11,-0.4523607339113859,0.5033803093416012,0.07043372756954006,-0.61,-0.51,0.41456389927225945,0,-0.514356643749671,-0.48184394143048437,0.34772696047374274,0.05105907359376873,-0.1147457347168145,-0.468689758776112,0.40645417836570136,-0.01,-0.11,-0.472729080514627,0.18799458895690313,0.04609519562196916,-0.11,-0.51,0.20704518209397293,0,0.038401750180130936,0.27561639835885055,0.12358044617914954,0.0561026935254968,-0.44470813085862937,0.07663116241887427,0.4380179584284099,0.048580039431418295,-0.13372113000355298,0.10493789108961138,0.22249581011193542,0.026542991937883093,-0.5365696143801709,0.020027361339763967,0.051590348725293576,0.009339004033550832,-0.08339251294193173,0.029565276244413158,0.43091995337783356,0.009938203008058406,-0.051316614592743,-0.009128329949409722,0.40175026207276837,0,-0.10237778924508456,-0.01,0.32580865136996784,-0.01,-0.11,-0.01,0.2349961452222786,0,-0.11,-0.51,0.4756746925382077,-0.005376393888707215,-0.13656249836259077,-0.51,0.3029322376709171,-0.01,-0.08266177294042858,-0.51,0.2534490998110006,-0.01,-0.61,-0.51,0.31922565474450937,0.00464068037434156,-0.61,-0.51,0.36420389323786817,-0.01,-0.61,-0.51,0.16365703431178935,0,-0.11,-0.51,0.21354831626496762,0,-0.11,-0.51,0.17421947570294408,0,-0.12108018647744201,0.03601817321449608,0.5002714221162045,0,-0.97115875,-0.01,0.47408517086878776,0,-0.6361437832954614,0.032356824942303276,0.4525796921325079,0,-0.11,-0.01,0.27007913401530653,0,-0.9826109165496849,-0.01,0.36179193257733655,0,-0.11,-0.01,0,0,-0.11,0.03210846163715617,0.11511226152090391,0,-0.11,0,0,0,-0.16514701326952905,-0.430539953960041,0.48701871969822197,0,-0.11,-0.51,0.4501474056204793,0,-0.61,-0.51,0.3127062167718526,-0.01,-0.11,-0.51,0.13519885017196365,0,-0.11,-0.51,0.2405879135305902,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,0,0,0,0,-0.07811344781810406,0.028068215770931097,0.33956904112005243,0,-0.11,-0.01,0.32922352572662233,0,-0.11,-0.01,0.31552061032618134,0,-0.11,-0.01,0.17453899382299928,0,-1.01,-0.01,0.30778210276664825,0,-0.11,-0.01,0.09,0,-0.61,-0.01,0.09,0,0,0,0,0,-0.61,-0.51,0.28388333920005904,0,-0.11,-0.51,0.12835447521380378,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.23842679631284094,-0.01,0.4996000102664154,0,-0.11,-0.01,0.17894046260006857,0,-0.19233875,-0.01,0.2146720783042189,0,-0.13953307696401696,-0.01,0.16189719422522647,0,-0.11,-0.01,0.13530600865967954,-0.01,-0.11,-0.01,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.61,-0.51,0.24527873335605885,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.51,0.13606856689669225,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0.24332147049397043,0,-0.11,-0.01,0.1614938795140458,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.09,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0.08800206482696704,0.46072777752797406,-0.1477061167419708,0.23199588964964388,0.0408613660959239,0.45270050465131445,0,0.08476319123681172,-0.07922709295547548,0.454257143107579,-0.40233874999999997,0.11218733311843003,-0.07989180340394597,0.44229518263232787,-0.41,-0.01,-0.24023548523759056,0.4384539718695273,-0.4106975,0.046503273505387875,-0.08249370319115468,0.42416649240007426,-0.3674151618416243,-0.01,-0.11,0.4235170266883813,-0.41,-0.01,-0.51,0.2589564702497183,-0.41,-0.01,-0.208852650583322,-0.296933502915996,0.010278141861434602,-0.13671293179550031,-0.16092757901684399,-0.27853839515824236,-0.13613074097814407,-0.12207683788092992,-0.23524624266742064,-0.426834580131479,-0.27065966450457835,-0.14360081329722688,-0.1488143682380123,-0.4631406709536054,-0.3778710441585907,-0.13929402945340705,-0.211523637652686,-0.3924192376461027,-0.33391556771389247,-0.1507134926300246,-0.16450378759978385,-0.4746082791421085,-0.40196703731652494,-0.13624240935137927,-0.1637100613433089,-0.4406297672400975,-0.40245012499999994,-0.13819743550390837,-0.51,-0.51,-0.41,-0.058792914239394325,-0.07109346576504086,0.3835132688050525,-0.2708754507745401,-0.02948059772686038,-0.3040961532662814,-0.07344360856470326,-0.23376697876574648,-0.09179542072208874,-0.14784224367949056,0.060398269972868276,-0.3092818996756929,-0.0804317844268996,-0.188033216318733,-0.07492575712236312,-0.33801708369938993,-0.09067737767497641,-0.08772090634248836,-0.013976547003540904,-0.3918001240903648,-0.027413429661152733,-0.11235686167825115,-0.10532714098586671,-0.28385940271634197,-0.09058452374676729,-0.08360386895457597,-0.07293870079944852,-0.3340659898426963,-0.08565726787072693,-0.4694205159410602,-0.11419202312640597,-0.3916401229952653,-0.08192396788507673,-0.15531305997436215,-0.37465683529321026,-0.2847728569848476,-0.14412512320847717,-0.20667084712787254,-0.5150065503536618,-0.3549118016446912,-0.15651642849168215,-0.11590886779412864,-0.5114625,-0.40290125,-0.1251274655934861,-0.11,-0.51,-0.41,0,-0.12412683367411537,-0.51,-0.3695025011461512,-0.12561870221643265,-0.11,-0.51,-0.3934028403594675,-0.01,0,0,0,0,-0.09930685005747898,-0.51,-0.3761451089408389,-0.11009216986691729,0.00352051449276828,0.3631619626944676,-0.3387449254020435,0.004859326607838799,-0.11,0.36111519052780766,-0.3983128805622535,0,-0.04794616119140492,0.084764390364267,-0.283153423765478,-0.03614691069204262,0.013634024825466239,-0.036293028992877244,-0.28816920119741585,-0.03792928431892296,-0.014569438164347245,0.008413957860491391,-0.39201633509708217,-0.033177348081296035,-0.07419287313968416,0.1454328087893154,-0.41012374999999995,-0.011858966495412189,-0.04881772612225974,0.034637134965679994,-0.3654978669891793,-0.04466694791321897,-0.09160858552495182,-0.036958807171403735,-0.41024637499999994,-0.07005205729329023,-0.21426791603398757,-0.4304268342043266,-0.3221981408323994,-0.13092771815412363,-0.07465382948351973,-0.4824266460415192,-0.3384261553208503,-0.11132121848288647,-0.11,-0.48590998886200554,-0.36735614824192364,-0.0941749412253807,-0.11,-0.51,-0.41012374999999995,-0.08128628767906056,-0.11,-0.51,-0.36799701866712253,-0.058176565230664425,-0.11,-0.51,-0.41,0,-0.20494235692562124,-0.510360648977936,-0.41,-0.12272100553639055,0,0,0,0,-0.08382861508654543,0.33376457922813774,-0.41,-0.009280209552368936,-0.1627596688876901,-0.08064585136862054,-0.3560306404677702,-0.09332187571056942,-0.11,-0.01247329251899639,-0.40290125,-0.047467564741820796,-0.19856687892931907,-0.09050584892971927,-0.38534041668666874,-0.08281653679655343,-0.11,0.014977535294362817,-0.396512375,-0.01,-0.102357988339173,-0.05851012253678584,-0.41,-0.06242684693043443,-0.14119473163020058,-0.06601528997288093,-0.3925778905668814,-0.06895806241561107,-0.10898344054067478,-0.07291441352167508,-0.41068625,-0.09542254565260198,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.06099517550746164,-0.11,-0.51,-0.41,-0.01081135,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41012374999999995,-0.014357519931937953,0,0,0,0,-0.09924771588260553,-0.51584937236882,-0.410235125,-0.08507091018395557,-0.11,0.34676066531000915,-0.41,-0.01,-0.11,0.07705421122965042,-0.41,-0.01,-0.61,0.10234698922048974,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,0.19131808195300504,-0.41,-0.01,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11083330933291456,-0.51012375,-0.41,-0.06879102487539945,-1.01,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,-0.03610889266211323,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.61,0.2057442391284908,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,-0.015572223414008927,-0.41,-0.043918900129701254,-0.0986025425673195,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.028420507892468347,0,0,0,0,-0.11,-0.01,-0.41,0,-0.61,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,0,0,0,0,0,-1.01,-0.01,-0.41,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.61,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.21845069315029156,0.3081794308404341,0.3620568776436372,0.17736957214966098,-0.42505948530560894,0.17603013840580006,0.46886143192274904,0.08871158252230095,0.003956194898469219,0.11438855437696317,0.4628986623849898,-0.01,-0.11,0.0342449570393942,0.4548191998554047,0.02178895052224672,0.012397860002616903,0.11364357733587302,0.4378944326354988,0.08418137967801494,-0.11,0.12198799285468881,0.41693779647248297,0.021582751218375495,-0.61,0.023939244606193663,0.31894573008172256,0,-0.11,-0.01,0.2886590813048994,0,0.10255796317530289,-0.23406080560751313,0.4500062010448727,0.08200355048896416,-0.06649165547158814,-0.51,0.4183483506370656,0.019535669438769505,-0.11,-0.51,0.4172500411510793,0.01787179257990252,-0.5173201235408403,-0.5106975,0.4098343800714738,0,-0.06522091217724263,-0.46201287846467437,0.4140589296515764,0.018521573893758983,-0.11,-0.506032221595842,0.3251600269183562,0.0009281336513355023,-0.11,-0.51,0.306302727816936,0,-0.11,-0.51,0.13942478732591024,0,0.007943909211681553,0.376080494983686,-0.012369928353080303,-0.008533016814354269,-0.044442820263604486,-0.022404984053783977,-0.027680810780989613,-0.025325242320577094,-0.05562711883787837,0.020201039974919247,-0.07096785873145987,-0.03272579135289954,-0.019467212009909703,-0.02939344142107244,-0.06327152312632496,-0.03587766209464102,0.04140417235669431,0.10333698341889139,-0.06229132285485779,-0.026170856008231335,-0.10003618556962869,-0.06575939474892498,-0.052614044071907645,-0.06515143541006845,-0.15233875000000002,-0.011850744196562171,-0.021375758376719116,-0.011336825043716327,-0.08157453842547689,-0.016135206456339878,-0.018155318720350623,-0.012640793767500382,-0.5890213177566709,-0.51,-0.012389423577214538,-0.09258152035649869,-0.4848803610869076,-0.5116881313419319,-0.005387767824803906,-0.07615101682463898,-0.017299752336649474,-0.460976917877659,-0.0989673616910532,-0.07180495989903928,-0.016051537275973478,-0.5139891995586572,-0.11292227759073216,-0.0944130154035029,0.11210914400351683,-0.4285377376843445,-0.0781275648114181,-0.07788697436719087,-0.04956467172236795,-0.51068625,-0.04120641366231477,-0.048344174564409946,0.032607059889399465,-0.51,-0.032433656744789735,-0.04769588021115778,-0.11,-0.51,0.09,0,0.025342272497996116,0.012729364024999823,0.37244273984022,0.048929245701447376,-0.11,-0.01,0.30976088432040016,0,0.00630480886778307,0.16344483493483972,-0.026228153741310052,-0.0000718179985227229,0.20600975615122966,-0.016948812386341383,-0.02726685047455257,0.03287001994009375,-0.06967790299438704,-0.01,0.1385549958783088,-0.0016175838611367076,-0.11,-0.01,0.08322220306574783,0,0.014275226102133012,-0.004978942947588359,-0.015560934654273946,0.03880520706673736,-0.5174479615074545,-0.00963305210645001,-0.009651599429220671,-0.01,0.03821981217313328,-0.51,0.3520668782951333,-0.01,-0.11,-0.51,0.3102519085499303,-0.01,-0.07077961726550636,-0.51,-0.019469637550953208,-0.02519089912986848,-0.06781203784282096,-0.51,-0.009448891213664127,-0.00536464009298397,-0.06274639798366508,-0.5086490701150964,0.011179264347070977,-0.010930138808152252,-0.11,-0.51,0.0753766342262671,0,-0.11,-0.51,-0.007889060634311326,-0.01,0,0,0,0,-0.11,0.3172348907955638,-0.00885825975342385,0,0.11453535197731321,-0.04906205018650409,-0.05691840669360938,-0.051845665758269814,-0.14767886101688774,0.023681917811142702,-0.05105539706751863,-0.03835328631656875,-0.06703171215338222,-0.04803108389538635,-0.03390012205955088,-0.05343693144214685,-0.06698028581101727,0.09587060763148864,-0.03885206044474597,-0.01,-0.61,-0.01,0.09,0,-0.14515476947143618,0.017928588215579952,-0.010446555559282061,-0.015288233200465386,-0.11,-0.05120534590929238,-0.05097650853204541,-0.05057165275207501,-0.08026620207953603,-0.4381343689511269,-0.08650118244054822,-0.07629922827699945,0.11835680605857739,-0.51,-0.07018847407320175,-0.06321816619117243,-0.0827741333283651,-0.507703977270791,-0.04690746740984742,-0.028844508706581177,-0.51,-0.51,-0.010110489028821822,-0.013038656921103524,-0.10290138921875,-0.4933236489865631,-0.06421947776547107,-0.05470167864559697,-0.038638282996289325,-0.51,-0.0006144576904655733,-0.01,0,0,0,0,-0.09180488678049198,-0.51,0.015194547729615215,0,-0.11,-0.01,0.299146298223519,0,-0.61,-0.01,0.09,0,-1.01,-0.01,0.2874327297259801,0,0,0,0,0,-1.00335125,-0.01,0.20503192042485763,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.61,-0.51,0.16223661800166334,0,-0.11,-0.51,0.26028264537913254,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.61,0.12598729672270204,-0.029019403387079003,-0.01,-0.11,-0.01,0,0,-0.11,-0.01,-0.007023518309022602,-0.01,-0.11,-0.04566573653993887,-0.015636479222434455,-0.037655718134774634,-1.01,-0.01,-0.019853403115450294,-0.01,0,0,-0.000641052419996218,-0.01,0,0,0,0,0,0,0,0,-0.61,-0.51,0.09,0,-0.11,0,0.09,0,0,-0.51,0,0,0,0,0,0,-0.61,-0.51,0.07244222277595073,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.030027743291654786,0.1226460304039006,0,-1.01,-0.01,0.09,0,-0.11,-0.01,0.06281824261546995,0,0,0,0,0,-0.61,-0.01,0.09,0,-1.01,-0.01,0.09,0,-0.61,0,0,0,-0.11,-0.01,0.07844294693698099,0,-0.61,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0.07199686657226217,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,-0.01,0.05915541932457389,-0.01,0,0,0,0,0,0,0,0,-0.11,-0.51,0.07183458472490455,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.06831577777039527,0.4492167148612146,-0.37776831674524475,0.09055346218452984,-0.5237328401553969,0.44216416452383234,-0.4019836831155863,0.015336250518326827,-0.11,0.40902924531649715,-0.41,-0.01,-0.11,0.27044264929445855,-0.41,-0.012354392865214857,-0.11,0.3668911292042735,-0.3789293327134505,-0.002343035790137205,-0.08142220382843024,0.23861021893844178,-0.41,0.004362524397679469,-0.11,0.2767866996290761,-0.41,-0.01,-0.11,0.06959027406268034,-0.41,-0.01,-0.14825301737258614,-0.40174593497662714,-0.3967205184893168,-0.11366359452937132,-0.09918165899535963,-0.48789574224822796,-0.39934630861246045,-0.09496040505161221,-0.09617288631547714,-0.51,-0.3827334845619246,-0.1102882151778179,-0.10803714567161392,-0.51012375,-0.41,-0.1106933693792799,-0.61,-0.51,-0.4075919005809143,-0.10804887062645173,-0.1114828562084896,-0.51012375,-0.41,-0.09250030456153582,-0.09433251790827221,-0.51,-0.41,-0.08372939549548995,0,0,0,0,-0.11,0.37427590068769767,-0.41,-0.01,-0.006924559290174123,-0.09761224144891852,-0.5033969745014638,-0.09352211774129994,-0.09779299614933538,-0.07638646589764116,-0.41,-0.08852017558689733,-0.10703401344936637,-0.1015722005813609,-0.4440830437385532,-0.07917490106179169,-0.11,0.028409200727417164,-0.41,-0.02117173520054916,-0.23611903238668536,-0.11536423579333319,-0.41259219124999996,-0.11548151815321055,-0.51,-0.015434314322868379,-0.41012374999999995,-0.014268315145889452,0,0,0,0,-0.46872456379050964,-0.51,-0.41,-0.010819,-0.11,-0.51,-0.41,-0.10017190258962702,-0.61,-0.51,0,0,-0.61,-0.51,-0.4106975,-0.0729703282176998,-0.51,-0.51,0,0,0,0,0,0,0,0,0,0,0,-0.51,0,0,-0.03922998079829804,0.35103767245243783,-0.41,-0.01,-0.61,0.2262488749571755,-0.41,-0.01,-0.11,0.05386648232533199,-0.41012374999999995,-0.04256660744273018,-0.18133202534050083,-0.045108673310890655,-0.41,-0.044831451387414505,-0.12864999116275463,-0.025107574527379002,-0.41012374999999995,-0.024229995457366347,-0.11,0.05913293643349869,-0.41,-0.012648100596759793,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,0,0,-0.505769595345266,-0.47612604146525367,-0.41012374999999995,-0.12082422066797438,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.2591610864202953,-0.41,-0.01,-0.42431995779037346,-0.09324469713904453,-0.4219324100633358,-0.12030275923164259,-0.10195027184763182,-0.020961925426760026,-0.41,-0.020445230053603273,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,-0.11,0.06512010125243661,-0.41,-0.01,-0.11,0.1589781821458343,-0.41,-0.01,-0.11,-0.01,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,-0.41,0,-1.01,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,0,-0.61,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.19447152373269622,0.36266260825510777,0.4831611297179973,-0.42633153424881337,-0.03130007190388039,0.09801562390198723,0.5209346380595316,-0.51,0.004942305849646056,0.028224228751124368,0.5340313493935165,-0.44274225995776123,-0.11,0.03483356735525159,0.5150517176715305,-0.51,0.06254590316450323,0.11728326083472404,0.5096385301673498,-0.43846729279466967,-0.11,0,0.49510124339864897,-0.51,-0.06762413377247,0.06571458901013405,0.42932685878935795,-0.4899420409027278,-0.51,-0.01,0.26568997551007756,0,0.042748682488819176,-0.4637048191060219,0.539788287013073,-0.49099208158325763,-0.61,-0.51,0.5314126633391757,-0.48706230529134564,-0.06586034700394906,-0.4838822446403272,0.5172593048098136,0,-0.11,-0.5106975,0.5183639137180622,0,-0.06653320140278657,-0.51,0.5018175060181712,0,-0.11,-0.51,0.4811658911780292,0,-0.07583571742956913,-0.51,0.439935839986046,-0.51,-0.11,-0.51,0.22386645296051963,0,0.02355749846781937,-0.01,0.5269144811567076,-0.49294478183340407,-0.11,0.02639769811076543,0.5161785956039059,0,-0.0736103366767568,-0.01,0.5241164822623443,-0.4954445933466875,-0.11,-0.01,0.42276754779028447,0,-0.07284055516006255,0.02559648447090806,0.4919958600113254,0,-0.160135,-0.01,0.43469223554479125,-0.51,-0.11,-0.01,0.4358915410764899,0,-0.11,-0.01,0.197577094075541,0,-0.0566942863053432,-0.51,0.5248228798215616,0,-0.11,-0.5071468219062328,0.40507745741527423,0,-0.11,-0.51,0.4091098153337551,0,-0.11,-0.51,0.15373979757466943,0,-0.51,-0.51,0.37432666108021906,-0.51,0,0,0.20751375517814022,0,-0.11,-0.51,0.343776382687053,0,-0.11,-0.51,0,0,-0.037637236428157785,0.0650833227148247,0.486539484384384,-0.51,-0.06765816423476487,0.06315947860057675,0.5010056896283649,0,-0.11,0.19081781424058283,0.03731680895950768,0,-0.11,-0.01,0.3752777803349052,0,-0.06896772948740376,0.04774346038117977,0.3961914945628249,-0.51,-0.07036337796679609,-0.01,0.21229113685485793,0,-0.51,-0.01,0.32756508331872425,0,-0.61,-0.01,0.26953607395090273,0,-0.06552220515513718,-0.51,0.5015922186251598,0,-0.11,-0.51,0.4345433828736353,0,-0.11,-0.51,0.3704338630814443,0,-0.11,-0.51,0.1363030041674364,0,-0.11,-0.48701317216230267,0.3881786076750396,-0.51,-0.11,-0.51,0.3072834472531928,0,-0.06891632613032245,-0.51,0.17193176384996817,-0.51,-0.11,-0.51,0.09,0,-0.11,0.026887073772170908,0.44286418351900964,-0.5076894229900438,-0.11,-0.01,0.3240339872712245,-0.5069295312758555,-0.0700249634273334,0.044542240082823405,0.35594632338578164,-0.5055935165481956,-0.11,-0.01,0.28187877026145114,0,-0.11,-0.01,0.3213646913571711,-0.51,-0.11,-0.01,0.23557546027221202,0,-0.14671052746448193,0.0025837377407446436,0.21017219207871737,0,-0.11,-0.01,0.09,0,-0.11,-0.51,0.3334339116006166,0,-0.11,-0.51,0.2712475038512505,0,-0.07895299144089993,-0.51,0.20382067552008687,0,-0.11,-0.51,0.13450750452300328,0,-0.11,-0.51,0.0969003256921875,0,-0.11,-0.51,0.17376305402760592,0,0,0,0,0,0,0,0,0,-0.1714150682388087,-0.01,0.4832613950723815,0,-0.11,-0.01,0.21483652043080095,-0.51,-0.61,-0.01,0.16822981974079795,0,-0.11,0,0,0,-0.11,-0.01,0.1328817090231434,0,-0.11,-0.01,0.09,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,-0.51,0.2714224714174179,0,-0.11,-0.51,0.1795735533013705,0,0,0,0,0,-0.11,-0.51,0,0,-1.01,-0.51,0.17615979806609755,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,-0.01,0.14383585851691585,0,0,-0.01,0,-0.51,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.17387554596001434,0,-0.11,-0.01,0.09,0,-1.01,-0.01,0.13411124498321117,0,0,0,0,0,-0.11,-0.01,0.09,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.09,-0.51,0,0,0,0,0,0,0,0,-1.01,-0.01,0.09,0,-1.01,-0.01,0.08931375,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.062258309245127486,0.4636821936183303,-0.3296278770909252,-0.49096375174417506,-0.07376146333558922,0.44479241170490136,-0.3913866937481863,-0.51,-0.11,0.44707915349685845,-0.41,-0.51,-0.11,0.2662581819368896,-0.41,-0.5097861544969327,-0.11,0.40310995864232246,-0.3245808644756385,-0.4848902047394363,-0.11,0.32475966647750715,-0.41,-0.51,-0.11,0.24912333674724085,-0.41,-0.51,-0.11,0.04505644339575228,-0.41,-0.51,-0.35238288719817706,-0.4128605826988929,-0.2263861973153844,-0.5258991648474064,-0.14436610816093076,-0.50391375,-0.36561704971728903,-0.51,-0.51,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.1611375,-0.51,-0.372226154005302,-0.51,-0.1364240817528672,-0.51,-0.41012374999999995,-0.510135,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.04747121029504491,0.3759904659260429,-0.41,-0.51,-0.61,-0.1432917253277886,-0.41,-0.51,-0.0817730431111447,-0.06736158286267836,-0.41,-0.51059625,-0.61,-0.10645319629046213,-0.41,-0.5122491421875,-0.08672607834223173,0.15623612409977353,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,-0.51,-0.1388460314848646,-0.51,-0.41,-0.51,-0.11874684283537616,-0.51,-0.40061054638470317,-0.51,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.07625834616537569,0.3601568251603182,-0.41,-0.5119954696111729,-0.11,0.3152138467116411,-0.41,-0.51,-0.11,0.04559113878087415,-0.41,-0.51,-0.09211229910647438,-0.039769638655017876,-0.41,-0.51,-0.11,0.054107562821317394,-0.3984565498673785,-0.51,-0.11,-0.0075388662646991384,-0.3903821722957047,-0.51,-0.11,-0.01165895476932779,-0.41,-0.51,0,0,0,0,-0.45639805232309116,-0.51,-0.27897131777230516,-0.51012375,-0.11,-0.51,0,0,-0.11619621125644439,-0.51,-0.41,-0.51,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.16343223282607114,-0.41,-0.51,-0.11,-0.044690786210944355,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.11,0.05400253885384173,-0.41,-0.51,-0.51,-0.01,-0.41,0,-0.11,-0.01,0,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.07926602538686675,-0.01,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,-1.01,-0.01,-0.41,0,-0.11,-0.01,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-1.01,-0.01,0,0,-0.11,0,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.61,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.41,0,0,0,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.02482808978266081,0.11252592197817178,0.45457252107928864,-0.510724341897905,-0.11,0.11311492175127755,0.4515960279416085,0,-0.031366736041969705,0.007111019960786278,0.1897559766567679,-0.51,-0.11,0.10885731002453658,0.3256753947180238,0,-0.07520894334640642,-0.01,0.40214190004677514,0,-0.11,0,0.28957063538411454,-0.51,-0.11,-0.01,0.2827680610416579,0,-0.11,-0.01,0.19904757607517565,0,-0.06798727784665999,-0.46626115792385614,0.462822729509265,-0.51,-0.016980716785084497,-0.51,0.36535089689198536,0,-0.11,-0.51,0.3992031600711839,0,-0.11,-0.51,0.12902219292136524,0,-0.07308048481836565,-0.49836859005086526,0.19070334042579362,-0.51,-0.11,-0.51,0.20384073946652134,0,-0.11,0,0.2575591661224642,0,-0.61,-0.51,0,0,-0.04567615367758168,0.36445222192637405,-0.013259226798518285,-0.5114774467179435,-0.10276093244889821,-0.06663580766579659,-0.0020923103435527817,-0.5132661383326953,-0.11,0.0724953468223015,-0.024138704281788013,-0.5129061967179435,-0.07581005902997509,-0.07454429091663826,-0.08963610039002463,-0.51057375,-0.11,0.04106130362922233,0.004545765430381033,0,-0.23628876283800745,-0.09373712808642953,-0.09312722783789674,-0.5277321255025363,-0.61,0.016941261874231117,-0.04461899697132755,-0.5149072722975752,-0.11,-0.028300992839185267,-0.02868318420510674,-0.5106975,-0.08894909384375665,-0.51,0.02320852431398571,-0.51,-0.11,-0.51,0.08504650321361648,0,-0.027995267867998844,-0.51,-0.06843425140210621,-0.51,-0.10290125,-0.51012375,-0.04980478426311338,-0.51,-0.061476674431695494,-0.51,0.04444983666916644,0,-0.11,-0.51,0,0,0,0,0,-0.51,0,0,0,0,-0.11,0.042536739196789145,0.34740926922533083,-0.51,-0.11,-0.01,0.3058654702067249,0,-0.51,0.15447486270646563,-0.011116170314510515,-0.511315125,-0.11,-0.019453167504721834,-0.02076682948165498,-0.51115875,-0.04725578703887015,-0.01,0.06727613032313581,0,-0.11,-0.01,0.08808964222611981,0,-0.11,-0.01,0.07812604044888886,0,0,0,0,0,-0.06826250473857695,-0.48662809252905753,0.28277997402426885,0,-0.11,0,0.1786796830553854,0,-0.11,-0.51,0.08696105848415997,0,0,0,0,0,-0.11,-0.51,0.07567975553245583,0,-0.11,-0.51,0.09340599443734554,0,-0.11,-0.51,0.02856078285568587,0,0,0,0,0,-0.11,0.23857969679034727,-0.011637099112842941,-0.51,0.007948289179682641,-0.07142516318108748,-0.06563981338166215,-0.5123167728172878,-0.11,-0.01,0.007661260915753556,-0.51,0,0,0,0,-0.07532867128096475,0.0124587571668066,-0.011836288415353178,-0.51,-0.11,-0.01,0.025223251190351174,0,-0.11,-0.01,0,0,-0.08178841341005624,-0.016650687743714702,-0.011468662091354264,-0.5120853627577819,-0.11,-0.51,-0.0004829965572337334,-0.51,-0.11,-0.5120854209375,-0.018689044048509663,-0.51012375,-0.11,-0.51,0.04100397491731706,-0.51,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0.2207192099265233,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.01,0.09,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,-0.110585,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.007215277926875534,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0.15276705125557974,0,-0.61,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.08721348336223209,0.429795957393038,-0.41,-0.510135,-0.13881203640413597,0.2708034016142861,-0.41,-0.51,-0.51,0.2670570716852073,-0.4019379695320356,-0.51,0,0,0,0,-0.11,0.23144843090857803,-0.41,-0.51,-0.11,0.06607284783655283,-0.41,-0.512025,-0.11,0.07121468412677417,-0.41,-0.51,-0.11,-0.01,0,0,-0.51,-0.51,-0.4110058558563235,-0.51,-0.11,-0.51,0,0,-0.15479558764039508,-0.51,-0.4049122090542103,-0.51,0,0,0,0,-0.51,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0.18961204364421508,-0.41,-0.51,-0.11,-0.06331124651912953,-0.41,-0.51,-0.11,0.018867858791828375,-0.41,-0.51,0,0,0,0,-0.11,0.05813558064118715,-0.41,-0.51,-0.11,-0.0292858940232831,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.61,-0.5114625,-0.43363454925067224,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.21887930911252634,-0.41,-0.51,-0.07099137547223885,0.10297900515154974,-0.41,-0.51,-0.11,0.022501982304909268,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,-0.003556261653378705,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,-0.021372579757002005,-0.41,-0.512025,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.051031170373859666,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.51,-0.11,-0.02222588896745951,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.29013624599255244,0.3970767724487371,0.5271084781594899,0.3996092490570814,0.29488442666312864,0.4131240296867164,0.5250618975693129,0.36665004227495157,0.3014020566649776,0.38495028251903884,0.5372603670241024,0.4021819936924047,0.25687252632994534,0.4004111767763231,0.5388155363815286,0.39922133408603516,0.28946489592658425,0.39370701541212866,0.5325815541042676,0.35932134695314066,0.3176626176508388,0.3670394549183243,0.5077522453769484,0.38217810075626485,0.2496292873442036,0.35715501800386285,0.34294505163058414,0.4152015029802481,0.08191861915280292,0.33812095951074156,0.2920303893271451,0.4045822753641728,0.30875994457677053,-0.049679066769498924,0.5287836512176389,0.4062107941003419,0.2509917914695754,-0.056664395123593954,0.5253921955078207,0.37225864588834756,0.31515884192040006,-0.054089708928869176,0.5342016011082398,0.3968682894566203,0.18094145443964274,-0.16772920976728475,0.5292924741619525,0.3063900481969161,0.20922033943960316,-0.06405264883693595,0.5024768855367155,0.33706475495236254,0.1963715263691949,-0.17991908489250932,0.5028738719172493,0.38608105806374043,0.18556246406512428,-0.2568874926803808,0.5235813827589677,0.23568372758826683,0.04283552480006985,-0.36013388711290956,0.5288412394252535,0.10466102706447449,0.2878768105185441,0.3849507711598557,0.5043384893278722,0.3961784812555566,0.0854821944878319,0.36639053725543413,0.5146282842607708,0.3916221108181377,0.024642738125330573,0.39133200681761793,0.5217113269132087,0.41340094133781524,0.11791794940996535,0.35723521399824293,0.5381061815729448,0.3229732998833767,0.3327299473071025,0.38182311088088217,0.518811704287627,0.40942849469743936,0.05672847428178801,0.27943893286867205,0.5075747343435969,0.29429927613318846,0.13798710605170594,0.30138115848982666,0.5270154619069569,0.3582597110910694,-0.012493837535935227,0.1244274823009525,0.5094748165023247,0.07547516888656364,0.2897560149355418,-0.1264623318832328,0.52166757529845,0.43139936937986234,0.01246036942598687,-0.18440267805162536,0.49907945516208896,0.2000493467577738,0.20921031184664934,-0.2539340770623756,0.5377635190398941,0.3226094007706838,0.02700248277517961,-0.42478233706024027,0.5248368298294361,0.06602167149942238,0.17997914720847225,-0.31274788945799764,0.5379244698857492,0.32931726617460466,-0.08859592785117233,-0.399667599372574,0.5226476638721835,0.07076092012793408,0.00192620320692366,-0.4435357139647591,0.48187795283899215,-0.01,-0.03043087817380572,-0.49598023934418717,0.5334790278730288,-0.01,0.33124121617797486,0.39551668389134376,0.36833785122990265,0.3767903104010974,0.3144392350749578,0.4101642034025927,0.39015110988773477,0.3803653068312586,0.17949261405746542,0.316988603570987,0.30837985597183193,0.38664713043163673,0.126427413994134,0.27287927437538895,0.5318234549259354,0.29176582254987987,0.2218109422661439,0.301733079123884,0.42840342082714195,0.29158552719039943,0.2074312466435646,0.30172379308894676,0.3407728476217358,0.31920288882487013,0.1977843726533017,0.3086607937163363,0.5048033470195378,0.3128597710564577,0.0423371725730651,0.10410500754176734,0.5043849478222976,0.06883281093771734,0.2714112851713126,-0.10833458918242726,0.5410642186728923,0.2860260804341139,-0.048679192568586764,-0.1690279375350277,0.5321559281479944,0.2526884482797126,0.15559073607360574,-0.20006254526968473,0.22192490098210904,0.4232327621112692,-0.11905329602701863,-0.40349189691650933,0.521471644216774,0.01992825673174372,0.21459249993177648,-0.19972944420435554,0.23308186627806696,0.4337169897161542,0.05019483102364933,-0.4590882825982509,0.29561486697521744,0.24231302234899388,0.16435994168373474,-0.3817859475919103,0.467236261840852,0.13042017540644413,-0.029234801252385784,-0.48845621635435094,0.5146163346472001,0.02336898601673948,0.31302603513365307,0.32745148128979096,0.3943043859859251,0.36085309397519205,0.17699312222706273,0.29930105118721473,0.32727421645591814,0.3835594224609456,0.10867662870148909,0.2861449556022636,0.4439215558492454,0.3342667612345556,0.02222761094472917,0.0758880624180253,0.5023925261348416,0.10560035170587488,0.23620445994650915,0.26664695509103314,0.5185180328629555,0.33316740017626895,-0.03820705323510079,0.15788885414747209,0.5227301614577663,-0.01,-0.09283261970140619,0.1628961707631795,0.503391745167821,0.06967918999432882,-0.11,-0.01,0.49640041347753056,-0.01,0.17340289204488396,-0.23868488000541488,0.47035204591374813,0.2321978884820812,0.021251343706394053,-0.42376546707559754,0.2978813934056585,0.07624787643788758,0.13074913124196433,-0.3406186035267196,0.13740013369135373,0.41911327211253546,-0.11,-0.4500243721894288,0.4807879734671715,0,-0.025959772442076805,-0.4611979732257758,0.5246776294728294,0.10670337182878403,-0.11,-0.51,0.5222241052676192,0,-0.08155242182448916,-0.485886480746166,0.5141420526628848,0.03559798757262843,-0.5180862237173123,-0.51,0.3931016352864382,-0.01,0.028764587962717553,0.27828085069457414,0.527295154207496,0.29478597932995504,-0.22981519097558098,-0.01,0.5043610945382414,0.036807637959465914,-0.23974433717766094,0.23391612335084644,0.5322204930129196,0.11342996442574452,-0.15736812449150625,0.03625012528559307,0.48144029818220585,-0.01,-0.4227263235186149,0.18264434645761624,0.50176496093549,0.17918225902644525,-0.1754810240044724,0.11276660750784531,0.4964246402364555,-0.01,-0.11,0.07088520183718891,0.5226978987348873,-0.01,-0.61,-0.01,0.37789871888059223,-0.01,-0.19866657439519886,-0.51,0.5091816999180708,0.03477219508154348,-0.11,-0.51,0.5100212020982008,0.0353325331239343,-0.1603456618177172,-0.4645074573374771,0.5104313535688578,0,-0.11,-0.50290125,0.44561562381796804,0,0,0,0.48713343297424366,-0.01,-0.11,-0.4701616709758356,0.3682749137995283,-0.01,-0.9750106763996712,-0.51,0.42326960493558297,0,-0.11,-0.51,0.25776175628554765,0,-0.1376459962489686,0.11291606917541981,0.5049446210996386,0.078847207623232,-0.08005719534007633,-0.01,0.49720548922746083,0.03341304756552916,0,-0.009089640077960464,0.5052747537157263,0,-0.11,-0.01,0.40625345315261313,0,-0.11,0,0.5387002920811048,0,-0.11,-0.01,0.38874281233167635,0,-0.11,-0.01,0.5235250229571552,0,-0.11,-0.01,0.18006871055980203,0,-0.0718282651587266,-0.47378590763265005,0.5315183484453504,0,-0.11,-0.51,0.4386508310971497,0,-1.01,-0.51,0.3946488044934542,0,-0.11,-0.51,0.23128278544690936,0,-0.11,-0.51,0.37139954868221026,-0.01,-0.11,-0.51,0.09,0,-0.11,-0.51,0.13652759723428964,0,0,0,0.13707957310459357,0,-0.08418560092430896,0.030650534447680462,0.45023254538496127,0.09147976390280584,-0.07896708703931382,0.0011818417048963404,0.4394448768962422,0,-0.0700475613851576,0.02988373414026936,0.4196306334269056,0.03178792830168468,-1.01,-0.01,0.2932102997267573,0,-0.03626235705732505,0.06222466022192886,0.3621731779194427,0,-0.11,-0.01,0.31540427283954586,0,-0.11,-0.01,0.28610967275800475,0,-0.61,-0.01,0.2486975761676631,0,-0.11,-0.470696949834366,0.4324022335516386,0,-0.11,-0.51,0.43296027914483703,0,-0.11,-0.51,0.3543724322352072,-0.01,-1.01,-0.51,0.26825857411185866,0,-0.11,-0.51,0.31311332413501974,0,-0.11,-0.51,0.21375330904179,0,-1.01,-0.51,0.19858097784968776,-0.01,-0.11,-0.51,0,0,-0.04167952448705735,-0.01,0.4715159988731909,-0.01,-0.11,-0.01,0.4366683196322225,0,-0.11,0,0.37111420972802667,0,-0.61,-0.01,0.09,0,-0.11,-0.01,0.38905994045943776,0,-0.11,-0.01,0.17660388998146448,0,-0.11,-0.01,0.1759015991019579,0,-0.11,-0.01,0.19778918420052644,0,-0.11,-0.51,0.42586372827770835,-0.01,-0.61,-0.51,0.21485957916105308,0,-0.11,-0.51,0.23126691152717593,0,-0.11,0,0,0,-0.61,-0.51,0.13705053038436454,0,0,0,0,0,-0.11,-0.51,0,0,-0.61,-1.01,0.16999211680789747,0,0.2974146281221427,0.4552284163140444,-0.0426627936864824,0.36958430721588614,0.25192500995154615,0.4246561754776362,0.015688331543741593,0.4501292537423221,0.17690210311488969,0.38534859502330093,-0.11055268542667664,0.44656512141863597,0.11020857637983951,0.4495485334809725,-0.2306497790476776,0.1636790401247987,0.2776830155826311,0.44968902633112695,-0.014118565886536025,0.3869276107499997,0.1202688342265485,0.21480807548171368,-0.1393363391152318,0.4421455996262014,-0.3662817744454987,0.44777381466166266,-0.23304923594491828,0.17163004031433515,-0.11,0.43790711984135366,-0.36387316009456744,0.03259610478996433,-0.02492180059634063,-0.07918672994093247,-0.045903732600601384,0.4494282225578579,0.05445092816932963,-0.25552686690363025,-0.12386991543136987,0.4508116100777736,0.022088338134088153,-0.1899481140496,-0.19975491723086114,0.4501149337666745,-0.019254235471666173,-0.38982881523006163,-0.36344632186253034,0.44107946677001586,0.018071016437606374,-0.33144916685856896,-0.3292362846583049,0.4439119083796273,0.01021122324693802,-0.426763968422427,-0.3658099249952192,0.4467395680087579,0.0287422087340519,-0.46716371518534644,-0.38082859366910954,0.44815371853481467,-0.11,-0.51,-0.37199794930025554,0.44434105796114054,0.24441618852127084,0.3913281339332749,-0.11575790806043668,0.44781394871231894,0.006448414105733873,0.17807255758990706,-0.19312192028902364,0.4463904164117517,0.056982522139090525,0.22915334834016066,-0.2967656771152552,0.4431574269624277,-0.12256066401890148,0.13653334519140445,-0.327512636974064,0.4385576032179135,0.10780121431245196,0.25436109319482897,-0.15510448465229273,0.4477308791960098,-0.2326484854190578,-0.012243955210999666,-0.36598922356885816,0.44228457705473057,0.03520407892852923,0.1453550204481877,-0.35698143058363097,0.4384420389125007,-0.08109694214645854,0.019428157096541422,-0.41,0.43782053248776986,0.05321897016440362,-0.3012257061667045,-0.14900946269497245,0.4338098566392439,-0.0508158594501807,-0.4376910854925383,-0.1470888437895226,0.43898143918855476,0.03731999315865424,-0.43088723034204046,-0.31212991524774547,0.4388080201547746,-0.08353561749296962,-0.4805406461816535,-0.38112985012141914,0.4356972942422697,-0.026008985012414707,-0.47972175259086175,-0.35422466828704235,0.43389823772031977,-0.43721452152420465,-0.51,-0.41,0.43197733827240525,-0.07803278644032884,-0.51,-0.40117991629630045,0.4361605607692176,-0.08174819342258087,-0.49615677801719443,-0.41,0.25781502078549917,0.10800402969930167,0.34046227378348815,-0.02515975309427198,0.4459809457155592,0.05399214247859485,0.3023024787410036,-0.15490000582234734,0.4432739881017615,0.07343860146826123,0.22453518623303592,-0.12401751529109785,0.4450947796559717,-0.11362087338991317,0.15300047852679516,-0.306576266003885,0.44290824688253794,0.2177445374164998,0.26031201839144874,-0.1155633872593711,0.4398542571189601,0.0014918333630374453,0.10227923035178342,-0.39013759416227034,0.4429902371450839,-0.058111925686338176,0.1528029284917247,-0.37249377802601585,0.4396241437939006,-0.07591570922561153,-0.008798541246207839,-0.3828922935077746,0.4405755274219899,-0.4414190542883859,-0.43771511827367426,-0.34775858080138783,0.4293345240093066,-0.05246240137904147,-0.4949915053260374,-0.2749336095713612,0.4274776944635266,-0.008635124040176148,-0.509276794043227,-0.34010394376454894,0.42639027710824995,-0.11,-0.51,-0.41,0.40924990306405673,-0.11,-0.4808061187896591,-0.3723734354139553,0.41601745121015005,-0.11,-0.5098267269859603,-0.41,0.4236904308206728,-0.07814438795923578,-0.47895751225179994,-0.41,0.41518732403181585,-0.11,-0.51,-0.41,0.27125109455674373,0.02857122326797379,0.1306687161123455,-0.2849656805548737,0.42387615715590504,0.014482292591699114,0.07017985416820215,-0.3630472010332867,0.4200652226680416,-0.05786517327728174,0.11761457424696797,-0.3942193764237927,0.4263745312654804,-0.5990222860367735,0.016287766630954385,-0.3990143020199725,0.4283450291696117,-0.37811853135688056,0.04101794329877,-0.4106975,0.4194199139346389,-0.11,-0.010984511776527588,-0.41,0.4056033974438886,-0.5354921826999386,-0.011454669087695313,-0.41,0.42161894089024204,-0.09192295642891707,-0.010797666075404687,-0.41,0.35221431535566217,-0.08258798312952265,-0.3916353689595878,-0.3260589882117423,0.4063666902893146,-0.07371851551793149,-0.49133088674431796,-0.41,0.40401943192147327,-0.11,-0.51,-0.37613586599876603,0.3967267174033987,-0.16,-0.51,-0.41,0.3452653709921871,-0.61,-0.51,-0.41,0.3949417705971,-0.09017588322352224,-0.51,-0.41,0.1266916512469164,-0.11,-0.51,-0.41,0.32472617070969356,-0.11,-0.51,-0.403475,0.10300402144619449,-0.047584228605142095,0.4406012663934364,-0.2843240016981272,0.11123449914237447,-0.11,0.44592833318247577,-0.41,-0.01,-0.11,0.4505789405978776,-0.3306157102965157,0.07668241895388565,-0.11,0.2947443045811783,-0.41,0.035970959312205196,-1.01,0.4470830351995659,-0.3721583303268262,0.0350322048945895,-0.11,0.3709122921101183,-0.3989956899266564,-0.01,-0.11,0.2426260715342312,-0.41,-0.01,-0.11,0.03370702614158176,-0.41,0,-1.01,-0.51,-0.41,0.42479457016806615,-0.11,-0.51,-0.41,0.3912268379700164,-0.11,-0.51,-0.41,0.23373895153863095,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0.3270203158079975,-1.01,-0.51,-0.41,0.06937154026519055,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-0.07936485374640409,0.37903177470829447,-0.41,-0.01,-0.1787488890258394,-0.03330534843564193,-0.41,0.36808479555806467,-0.11,-0.012718040681145452,-0.41,0.36612963646035246,-0.11,-0.020722793847527315,-0.41,0.17525254798765744,-1.01,0.1378619643995108,-0.41,-0.01,-0.11,-0.0456574093179937,-0.41,0.10638564671332504,-0.11,0.04029397771643024,-0.41,-0.01,-0.11,-0.01,0,0,-1.01,-0.51,-0.41,0.2543727571016278,-0.11,-0.51,-0.41,0.10433642260951581,-0.11,-0.51,-0.41,0.03366082601356001,-0.09359672463075573,-0.51,0,0,-0.11,-0.51,-0.41,0.13610266060141038,-1.01,-0.51,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.1023013664235713,0.3309074402790519,-0.3291737310797693,0.030537521332621366,-1.01,0.28287826282974987,-0.36612094293571806,0.033471189266495976,-0.11,0.09413878432466777,-0.41,-0.01,-0.11,-0.01677649073172732,-0.41,0.1533519720210756,-0.61,0.15224890385326356,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,0,0,0,0,0,-0.61,-0.4956027283930196,-0.41,0.28942220775512484,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-1.01,-0.51,-0.41,0,-0.11,-0.51,-0.41,0.16220056208145409,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.61,0.2899458241263156,-0.41,-0.01,-0.11,-0.02541833807564446,-0.41,0.031141930631780876,-0.11,-0.011662762834094662,-0.41,0.019553683163748517,-0.11,-0.04717507536680632,-0.41,0.02879882357204154,-0.61,0.03336652625331564,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.51,-0.41,0.1180510866809832,-0.11,0,0,0,-0.11172125,-0.51,-0.41,0.06641791460220012,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-1.01,-0.41,-0.01,0.27921038611052607,0.3603963927777231,0.48514948131056373,0.3769409078063432,0.1546234990952659,0.3632882658471968,0.4742600707475693,0.3125821872822965,0.30195289783647705,0.40876304215517767,0.4557691221278966,0.3480973566067026,0.13188572529249837,0.4497434779813432,0.20715617960732746,0.23288053479250068,0.2151604406833105,0.2536641961887882,0.3112727106356955,0.3738898874409155,0.1715490686210941,0.21808802824875712,0.1835942356834392,0.4117713596756403,0.2750109981907154,0.2744799637455744,0.4173801701126002,0.2730130561678993,-0.03560386802790277,0.15537703732648858,0.15915237662613813,0.372031940339026,0.3102977956927722,-0.06131199712069968,0.47619055654340076,0.3457546743608931,0.24697063435556385,-0.13461525911383934,0.4620053024605058,0.3071069969985479,0.21571945652425512,-0.27709080337269676,0.46766177905812384,0.31438937048029386,0.008696287293329143,-0.3604796897035094,0.46254984435798985,0.09732910248835148,0.2608202895912281,-0.14554463006070667,0.47389753420310937,0.2824596997425327,0.07929893042491834,-0.38649318713884273,0.43024530976785824,0.10266057727800901,-0.07618840599587895,-0.33221401475881795,0.4485546748713683,-0.01,0.028625989493319064,-0.47413628108353956,0.42274036707293494,0.02542690244126975,0.2527267437026052,0.3854322122642656,0.3514912404066044,0.27768909310024026,0.21421633570385207,0.18970489205967156,0.272209259583583,0.20999168733527995,0.122355334235871,0.21359047191396785,0.3265314990712444,0.22289198947014596,0.002478008666511884,0.10120566086570364,0.38762407345026323,0.15601639027034758,0.17773210999371325,0.18674976684037198,0.3194179821954396,0.18950047809048717,-0.006461207914704153,0.11014277244515965,0.4293159277533761,0.11197565617328603,-0.004341124718851615,0.06799903198057616,0.36185669249864183,0.18516172794565236,-0.041091153165681626,0.005580283037241918,0.3351591328163379,-0.01,0.19161861108339076,-0.23197759529309125,0.20243520877255622,0.29764815258041705,-0.17664909056560008,-0.42379429200007673,0.07664250113510801,0.274620918155452,-0.18827506047816137,-0.3470328909699693,0.2955671950776769,0.09583982260324841,-0.10457978008410648,-0.4766719937174147,0.36827822061426435,-0.01,0.14938087778492126,-0.3912605834863311,0.24675498300776738,0.08902832186756804,-0.35263094662877903,-0.4819011111807648,0.22312596260963888,-0.01,-0.11,-0.49066101779511334,0.2742603874737517,0,-0.11,-0.51,0.2415751893968717,0,0.26270081880878704,0.32028557608125185,0.46512476917307277,0.2551846059029628,0.1959213891905406,0.2334154545844994,0.33266216853993225,0.23774430277234296,0.11197486655816882,0.2118015006729476,0.09436613770588058,0.11041043803633921,0.0018043992571136792,0.12670061237276428,0.1104846775737588,0.20537077448638139,0.16083576196133828,0.17927704771403716,0.32881046371282213,0.178179452176931,-0.2711125427089344,0.04918414202690582,0.3355131849156124,0.047318531645591196,0.05628276882627119,0.2725274038422762,0.16689857324146862,0.08338769840447252,-0.5180996617830026,-0.01,0.2700750917120636,0.029297625761437594,0.12181023835260907,-0.23167523942591786,0.31487138946848153,0.16990460199557333,0.07824258584982247,-0.4347993441427759,0.4279253559503597,0.10581563154283441,-0.06687734123791139,-0.3654674263519884,0.4012061325907374,0.1512335633588418,-0.11,-0.51,0.4080141349957041,0.046007056682640726,0.03802958983253546,-0.4610894529960224,0.3863602103506146,0.09998963318313175,-0.024680598682337573,-0.51,0.3829544589038747,-0.01,-0.11,-0.51,0.35978331158021204,0,-0.03142764991200737,-0.51,0.26882238771633926,-0.01,0.1703531327405828,0.2178903946759577,0.29410190086736415,0.18739378938654574,0.0008455947437649679,0.17613901987033195,0.4026894547689878,0.17077686072700937,-0.0755874680770485,0.1019662758142102,0.3114374150790592,0.06952456756241304,-0.14313305735739512,0.03803529310835739,0.39042736212530293,0.008580470005272315,-0.05815942871167992,0.15892447850372077,0.3725278688408059,0.06808335355620267,-0.11,-0.01,0.33270889172264784,-0.01,-0.350426587187685,0.01887434551469592,0.25382424157022776,0,-0.11,-0.01,0.286919369316828,-0.01,-0.07109261422563051,-0.476396293250814,0.3523205154127075,0,-0.038461418774971924,-0.51,0.3135257233069226,-0.01,-0.08109386005648331,-0.51,-0.006649205009741466,0.07432030102809031,-0.11,-0.51,0.23625334575087187,0,-0.06156091346720971,-0.48323614861318037,0.0978558657444672,-0.006419049977950795,-0.11,-0.51,0.2822570494007974,0,-0.11,-0.51,0.22197797786525508,0,-0.11,-0.51,0.08493988806357512,0,-0.09665152134910127,0.10174501617867221,0.46062869463762857,-0.01,-0.5612943960384239,-0.01,0.4729445623174618,0.03280905727764067,-0.5223714929333976,-0.01,0.45653760818786737,-0.01,-0.11,-0.01,0.3375713360478397,0,-0.0004262898191971856,0.07872523461368919,0.29519672277903286,0,-0.11,0.03511772784494706,0.312086504955396,0,-0.03268949377049082,-0.01,0.25585001787400813,0,-0.11,-0.01,0.12984100422005435,0,-0.09987570356817999,-0.51,0.45789150641528836,0,-0.18950013532847693,-0.51,0.38974497207594416,0,-0.11,-0.51,0.3325880945130078,0,-0.11,-0.51,0.19045138930437053,-0.01,-0.11,-0.51,0.34715253544722197,0,-0.11,-0.51,0.2267490051458715,0,-0.11,-0.51,0,0,0,0,0,0,-0.12990581953110542,0.05675330767201441,0.26572981592965667,-0.01,-0.11,-0.01,0.3528298675569725,0,-0.61,-0.01,0.2525963033225252,0,-0.19197504926162853,-0.01,0.13243803904722176,0,-0.11,-0.01,0.38019188714974744,0,-0.5212971460165396,-0.01,0.17531055767358866,0,-0.11,-0.01,0.17807806123875378,0,0,0,0,0,-0.61,-0.51,0.32269561761317095,-0.01,-0.11,-0.51,0.1285564918658965,0,-0.11,-0.51,0.1460251569128374,0,-0.11,-0.51,0.12767954519760202,0,-0.11,-0.51,0.16062613117483932,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,0,0,0,-0.6585246185901376,0.020618378624675512,0.3550509144781532,-0.01,-0.11,-0.01,0.2853600665362315,0.002116404457206393,-0.13586839663713413,0.020402649722978533,0.154482340836067,0,-0.61,-0.01,0.12147976768952305,0,-1.01,-0.01,0.24977944092166393,-0.01,-0.11,-0.01,0.17927218674134693,0,0,0,0.1873108590305267,0,0,-0.01,0.10230112791326135,0,-0.11,-0.51,0.3033046524021255,0,-0.11,-0.51,0.12659115283190142,0,-0.11,-0.494875363908007,0.1525297079991405,-0.01,-0.11,-0.51,0.08718996003351241,-0.01,-0.11,-0.51,0.08811765914397371,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.1900503202188547,-0.01,0.18886120026612813,-0.01,-0.11,-0.01,0.20263615027424312,0,-1.01,-0.01,0.17673800364998526,0,-0.11,-0.01,0,0,-1.01,-0.01,0.19677160656918652,-0.01,-0.07674647537519996,-0.01,0.14355926529683533,0,-0.11,-0.01,0.10967353000008177,0,-1.01,-0.01,0.09,0,-0.61,-0.51,0.25452563259815075,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.61,0,0,0,-0.11,-0.51,0.16043509776606335,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0.1620635768112989,0.4228089987479555,-0.12027556023404742,0.26546116403389186,0.12232486141491503,0.4375826033439679,-0.19330117746019818,0.2482771903388878,0.13323365288058556,0.4486482307418191,-0.31310022949697586,0.1947826818574458,0.02590057154633217,0.43811841336732926,-0.3702875729731683,0.04231891027798674,0.180607185315944,0.36910068317193556,-0.16682312385736953,0.25472409487705394,0.0001759730719624944,0.25673210147399994,-0.2991691757583122,0.010276530801626679,0.02514153367996693,0.24090809698569118,-0.3777446078791533,0.18935636555146473,-0.06250714262851942,0.10047375186130668,-0.36738862595668814,0.22834734387647043,-0.09696328649364216,-0.27454403994220317,-0.30484285461149835,0.33356973051061267,-0.39514242923872034,-0.3945636672098422,-0.35615939557251264,0.3105184064816987,-0.04182187448367156,-0.3798699964564055,-0.396326759112103,0.3270317639224405,-0.07173480988122351,-0.4909593151832878,-0.41,0.33988178956736004,0.018709022530442945,-0.4081913278060241,-0.3606578045730752,0.32913559433902245,-0.11,-0.51,-0.3686305377750192,0.3312818995216612,-0.11,-0.47240266743101683,-0.41,0.3044094456257668,-0.11,-0.51,-0.41,0.16163523181097592,-0.10703733078426841,0.37376450368390446,-0.3032573321048506,0.20156494891844653,-0.28289518071995756,0.08384270660624205,-0.3930797151155094,0.3466331151821587,-0.11174083216215201,0.12380156809928985,-0.3890669413224606,0.21833698130988516,-0.049923716522846835,0.06391270664674793,-0.40281265516209047,0.3128464692061545,0.05303365382484214,0.08517641573997112,-0.34709561974596165,0.31404563048218687,-0.08827755981710465,0.016288885665844466,-0.381730321232326,0.32864719658183167,-0.05371189724168515,0.041933569418048856,-0.4036918659704819,0.14659833458467214,-0.5269239824610042,0.02900861796735191,-0.41,0.1652858168975644,-0.3791953945070601,-0.41393913074711514,-0.38774071642668617,0.37873269160421225,-0.09455912258978766,-0.48524924597246016,-0.38900916395932655,0.36266381036316553,-0.11,-0.51,-0.41,0.3501540846441685,-0.11,-0.51,-0.41,0.30159526157862193,-0.11,-0.48314055433375375,-0.41,0.35719583585032083,-0.11,-0.51,-0.41,0.29003676511403453,-0.11,-0.51,-0.41,0.241753161377945,-0.11,-0.51,-0.41,0.09522794148462675,0.1812583520090385,0.3043997113539593,-0.29484721079753223,0.19180233174829214,-0.031851187247751926,0.2474687711146083,-0.37389243481504436,0.05678436953765316,-0.37523919299611086,-0.0101734409398357,-0.4115401209873496,0.294020245563962,-0.007812927791195759,0.07512825976648406,-0.39143041598519146,0.19576046905791888,-0.43987902191432543,0.1713417207672539,-0.37125877873854,0.22875911964451326,-0.05317798584252927,0.015535940701120026,-0.4048071858064309,0.28445229752742746,-0.13173289870439203,0.051404943707583285,-0.4121114510365529,0.2552329373909467,-0.447857427220205,0.014184086162365096,-0.41,0.2650993857598656,-0.06596747654713689,-0.51,-0.3771363840246526,0.23328487716710325,-0.048362814569995034,-0.4813454992813966,-0.35269348685027696,0.2781606342496383,-0.20512375,-0.5112249134676145,-0.41,0.2486492515264046,-0.08286294367243507,-0.51,-0.41,0.16144156465970133,-0.11,-0.46674105452888637,-0.41013499999999997,0.25684876864818107,-0.11,-0.51,-0.41,0.1845964475410089,-0.0755874196474085,-0.51,-0.41,0.15323490555226654,-0.11,-0.51,-0.41,0.023322096068018862,-0.11,0.0123136462108564,-0.4072184637633226,0.23635823208261836,-0.08049309218252759,0.03163542037235503,-0.41,0.2247801932503119,-0.11,-0.010265701022336537,-0.4118181618661238,0.21960670271709715,-0.11,0.006682358772468398,-0.41,0.21533368067628628,-0.08781623270219459,-0.010471753407539407,-0.41,0.18671478424418708,-0.11,-0.01216594324746548,-0.41315229978124995,0.1760911004565683,-0.11,-0.010892989427621885,-0.41,0.1778828773195342,-0.61,-0.012261999522036384,-0.41,0.05822092275737645,-0.6020885207209256,-0.47070375925262953,-0.41170999999999996,0.20891134104838588,-0.51,-0.51012375,-0.3880431330769015,0.16414096733348038,-0.11,-0.51,-0.3990395818778043,0.19815154661739343,-0.09181078637857952,-0.51,-0.41,-0.01,-0.5356394459859164,-0.51,-0.41,0.09669846243803014,-0.61,-0.5068938502604974,-0.41,0.09157659157730319,-0.07577294761328571,-0.51,-0.41,0.03943389797076114,-0.10286175860229552,-0.51,-0.41,0.050233069028856735,-0.21068351989418047,0.4241521115455722,-0.41,0.08514884794636399,-0.11,0.35058680422350413,-0.3746930439732284,-0.01,-1.01,0.32361325763828086,-0.41,-0.01,-1.01,-0.01,0,0,-0.11,0.2818823796675837,-0.41,-0.01,-0.11,0.09979690139897197,-0.41,-0.01,-1.01,-0.01,-0.41,-0.01,-0.11,0,0,0,-1.01,-0.51,-0.41,0.2547785883856605,-0.11115875,-0.51,-0.41,0.16015791098660748,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-1.01,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.2887553892248149,-0.41,-0.01,-0.11,-0.03903654957500868,-0.41,0.10288756803957651,-0.11,-0.01621827870332679,-0.41,-0.01,-0.61,-0.01,0,0,-0.9546454851070938,0.04608815764186547,-0.41,-0.01,-0.11,-0.01,0,0,-1.01,-0.01,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,0.011829310519319923,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.23013053872801167,-0.41,-0.001418181270892542,-0.11,0.16065552987199058,-0.41,-0.01,-0.10734323285928889,-0.015737432120407444,-0.41,0.07902369257052853,-0.11,-0.01,-0.41,0,-0.11,0.06563412786071274,-0.41,-0.01,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0.038188195609403106,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.011260000000000001,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.08050771069375653,0.1487520567369622,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.61,0,0,0,-1.01,0.01874349371013402,-0.41,-0.01,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,-0.41,0.006262457649797297,0,0,0,0,0.28580456674121646,0.43449454341632265,0.519925651628991,-0.07455353679715623,0.3372413179414672,0.419107030839228,0.5025699247772917,-0.07738201502000866,0.32407747080055604,0.436135327808212,0.5442831630105445,-0.07114345433293158,0.28120037020642974,0.3557754784119017,0.5205453309112578,-0.2639608133737467,0.310597290684165,0.36351362734904646,0.5338908148686239,-0.08891932780291134,0.19963640779267633,0.45146096391640933,0.3191319293651938,-0.11663830034710705,0.22707141753090895,0.3323906497495016,0.50323989076639,-0.2114561178017123,-0.029559427697661643,0.15455480611020622,0.5184607254869306,-0.33746842800405397,0.34380026446388956,-0.05063168089020537,0.5194038751931354,-0.08375652915265062,0.27355233341957774,-0.09724945986221097,0.5355274779495839,-0.19836329782372972,0.2190821450952721,-0.12827868879918847,0.5413924100584298,-0.17242480340091948,-0.035488258182939325,-0.3878163401606716,0.5395002768233114,-0.32358902944446516,0.2636615301344742,-0.17244281914505585,0.5163155623610599,-0.2064503746664143,0.11435117173234365,-0.3935687781200534,0.5270580169687208,-0.4290649745774281,-0.14999343366219936,-0.25907731896992175,0.5115840265685265,-0.4278772192277527,-0.11,-0.51,0.5166367413533359,-0.51,0.32359071712614906,0.38394189029562115,0.5009427918598617,-0.08289508447244648,0.17732902255035893,0.34060442199991536,0.47824005395398134,-0.1268990281461565,0.1097544705269721,0.34692494738287233,0.5396350494740239,-0.18537099920095773,0.040647557849816475,0.04436799165416646,0.5323760036831859,-0.39769246654850543,0.09653880242573218,0.35273654814518773,0.4829840892535048,-0.12791345684718744,-0.06797971004079505,0.18222606219618645,0.539061405955534,-0.31581090556895797,0.04156912757219888,0.1559648562912237,0.5130866193110662,-0.28087309455539655,-0.03179738637671928,0.060598848175153014,0.5024745680133613,-0.51,0.25278385697080197,-0.16348047254042383,0.5327940952556519,-0.31527885670240585,0.06921870378136333,-0.42505134646413845,0.5233524081374383,-0.4648822446777618,-0.03025165380795955,-0.35989143437614857,0.5275276884106324,-0.38790734504725416,-0.11,-0.47285070742581914,0.5356666604665542,-0.4697738408291961,-0.06560639649503983,-0.4057515250443565,0.5188822490545953,-0.47264437191037995,0,-0.477084308757281,0.5375477289512187,0,-0.07193556670130954,-0.47704304987753027,0.5334491463383368,-0.51,-0.06444230694511591,-0.51,0.4769411715440766,0,0.338167023064934,0.35917750212103977,0.5354170174330466,-0.11852487802492756,0.3279683597644245,0.32051544177603253,0.5243865894161971,-0.2540736459678886,0.19665240572426027,0.33244123000874554,0.26644333752443455,-0.19637118073876544,0.06622493949479503,0.10716200090209463,0.5327295805067855,-0.44651279053977944,0.15612012295380426,0.4045746884816875,0.25036487110336225,-0.2322366848603739,0.105590105969093,0.17733559653723457,0.48634614186312713,-0.353192080023664,-0.016860707399759922,0.1481369676665312,0.4932769804328073,-0.43520473047302605,-0.02139936584624593,0.091937839148264,0.5109557467144755,0,0.18941898458327866,-0.1642789331939951,0.5369707914405297,-0.35045004865152973,0.0052301845115867995,-0.3482069684589286,0.5216127922036704,-0.4309889550776621,-0.18289565571154284,-0.35371607822269674,0.2546820097526378,-0.435414195169809,-0.06363964736422924,-0.4839933262168662,0.5310939263537501,0,-0.2524716755331737,-0.3741432916299886,0.35221168098401334,-0.43473148078215024,-0.0631036131674425,-0.51,0.47092324187570095,0,-0.06573829334850849,-0.51,0.45855904743881903,-0.48960809749576917,-0.11,-0.51,0.45252437232061593,0,0.2810735621302111,0.28397162177937996,0.48608863749233394,-0.22563578760710135,0.05352486336617143,0.06109623331723376,0.4799775889768533,-0.40309908372629527,-0.06614761787724334,0.11778658851258506,0.4916985397721014,-0.34640354827123104,-0.06584757494270559,0.025602201468987056,0.48396606808766196,0,0.016346065981840213,0.19812957975686055,0.5198579191878836,-0.3863240341950933,-0.1146304309267194,0.059686396739451496,0.5181932943044767,-0.4699246061935466,-0.013512400535820306,0.0801785107589767,0.4820930839050118,-0.51,-0.11,-0.01,0.44792412847563623,-0.4735775109157664,0.00984279456722987,-0.4201663926895923,0.5057242037810115,0,-0.06531694832144387,-0.51,0.49917582210539674,-0.4887873055597408,-0.10678500115159324,-0.51,0.47882970765284577,0,-0.11,-0.51,0.48232893596411464,0,-0.06825724563624343,-0.51,0.5110089181281897,-0.51,-0.09969608110589866,-0.51,0.48179764905516553,0,-0.5219269550924597,-0.51,0.39020728717210806,0,-0.11,-0.51,0.3583612874555438,0,-0.15352812116621778,0.20011284649730313,0.5501099143215498,-0.42594273238118335,-0.11,-0.01,0.4891597888912937,-0.46970783680108225,-0.034821851783262366,-0.01,0.5284232511530413,-0.4664534041468412,-0.11,-0.01,0.3673656639228217,0,-0.15937155193701652,0.03470993680899443,0.5106220598292135,-0.51,-0.61,-0.01,0.3814325494403559,0,-1.01,-0.01,0.4040491797639462,0,-1.01,-0.01,0.09,0,-0.61,-0.51,0.5360500718300271,-0.51,-0.11,-0.51,0.4887162223446211,0,-0.11,-0.4641845364273102,0.48781772473242807,0,-1.01,-0.51,0.21564389145095217,0,-0.977500219040419,-0.51,0.4171671891523735,-0.51,-0.11,-0.51,0.21126661436637972,0,-0.11,-0.51,0.21180216494801327,0,-0.11,-0.51,0.22931022635605217,0,-0.61,-0.01,0.5136806392164476,0,-0.11,-0.007320112932187314,0.43925063740127407,0,-0.61,0.02384427502804389,0.4273754759043404,0,-0.61,-0.01,0.36388771728312425,0,-0.61,0.01742035370419604,0.35573504650406673,0,-0.11,-0.01,0.2659972027838519,0,-1.01,-0.01,0.17784588443402177,0,-0.11,-0.01,0,0,-0.11,-0.51,0.2107850936450462,-0.51,-0.61,-0.51,0.1750570075470525,0,-0.11,-0.51,0.2135988298534,0,-0.11,-0.51,0,0,-0.61,-0.51,0.35059864265318014,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.8795237186805407,-0.01,0.5181761162364747,0,-0.11,-0.01,0.406749086732316,0,-0.1772397483631335,-0.01,0.33227197684664994,0,-0.11,-0.01,0.16912712954638193,0,-1.01,-0.01,0.4799953758423269,0,-0.5204116968835087,0.029679635393224386,0.09,0,-0.11,-0.01,0.1772556965366265,0,-0.11,-0.01,0,0,-1.01,-0.51,0.4251938540002801,0,-1.01,-0.51,0.20920118956137057,0,-0.11,-0.51,0.18243605707721341,0,-0.61,-0.51,0.2168274218401381,0,-0.11,-0.4705083904063,0.10099207464971853,0,-0.11,-0.51,0.09,0,-1.01,-0.51,0,0,-0.11,0,0,0,-0.61,0.015688661197669172,0.29124836356583894,0,-0.11,-0.01,0.3236579116533539,0,-0.61,-0.024509024285412313,0.09,0,-1.01,-0.01,0.20263006233184255,0,-0.11,-0.01,0.31994138474408373,0,-0.61,0,0,0,-1.01,-0.01,0.09,0,-0.61,-0.01,0.09,0,-1.01,-0.51,0.18431821740137805,0,-0.11,-0.51,0.12126855737966646,0,-0.11,-0.51,0.16887862114626773,0,-0.11,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,0,0,0,-0.11,-1.01,0.13133670427805902,0,0.23856619889010647,0.44582534862820317,0.013770410546410206,-0.08614132260063098,0.1266600887407151,0.4432567480053828,-0.12074200609640695,-0.18361937655180002,0.03440539102453993,0.45538560355372953,-0.19960056461613085,-0.2560797491311324,-0.09085438353640311,0.4526945452919797,-0.41,-0.46438939256243617,0.16943957787920474,0.43967175668431113,-0.1167759030915055,-0.23865654000365846,0.05797863272105609,0.4432266227590795,-0.2911938024263079,-0.40489465678886916,-0.08149560712240121,0.4483148964242138,-0.298174504695104,-0.3976989239489129,-0.07810443690013782,0.42150256465707975,-0.41,-0.46926087092592794,-0.3507111755773475,-0.3422832534825571,0.016655106391455683,-0.510235125,-0.4126730029334793,-0.3725258897682616,0.02627448022275267,-0.4295441894000139,-0.38446824817353636,-0.11657428748149533,-0.28551572173095385,-0.45491724671577,-0.4249757313757416,-0.51,-0.20380730528634916,-0.51,-0.3877609934682047,-0.51,-0.02130986336071349,-0.51,-0.18346192258377136,-0.51,-0.28682549558454107,-0.4646535460889518,-0.16102980591989108,-0.44030648664471445,-0.3663917353282621,-0.4095662030990162,-0.61,-0.51,-0.3452563460215533,-0.51,-0.015639308271722316,0.3911358819795028,-0.22852430031839213,-0.29958232488089187,-0.19581410933842286,-0.06896491468245142,-0.15572492249555553,-0.1987462320559025,-0.17756581403126273,-0.008607914107612191,-0.1864523904831447,-0.31515754937999096,-0.10726418988269593,-0.12240530582029824,-0.3955002279339409,-0.4754404135622096,-0.033354412637368026,0.06514006165248953,-0.20241834556853136,-0.3388090067463452,-0.15153385266377276,-0.10132297139599734,-0.3504753538375675,-0.4315826490813154,-0.09055214800344667,-0.021920495449911225,-0.3910195983137402,-0.386192649506819,-0.2473590405592691,-0.1461673302359772,-0.37147659747272405,-0.41185668693065275,-0.3770458605895923,-0.4224493801646272,-0.038674959579792514,-0.49984187263950375,-0.3649824170532954,-0.51,-0.19588133325366583,-0.47524033653496384,-0.17848600562140676,-0.5165750803206544,-0.40290125,-0.4534002384585466,-0.09962199473964525,-0.5260863946735014,-0.3673799128213792,-0.45485815810633023,-0.14659024076189348,-0.51,-0.41012374999999995,-0.4700971713202523,-0.51,-0.51,-0.3644242007106274,-0.51,-0.33586499742849985,-0.51,-0.41,-0.51,-0.61,-0.51,-0.41,0,0.14145547060450797,0.3433634999226178,-0.1609701258380147,-0.2966276453320112,0.05114629791368576,0.3132935904559779,-0.3263909835860493,-0.4887136221262887,0.0015446549948201944,0.1953230949712431,-0.2904133989170394,-0.31825727911799206,-0.10393412848783673,0.0344936759791396,-0.36674044131236194,-0.30019077108291115,-0.09375683143983943,0.12534827382415212,-0.2778142903392086,-0.32577949872777046,-0.04636790894296615,0.16029796665648194,-0.41012374999999995,-0.47235854709212977,-0.057618154373939745,-0.02341097543508467,-0.3584216953216121,-0.40808620040408955,-0.61,-0.05921789763573266,-0.41012374999999995,-0.510246375,-0.3846096606323494,-0.4732695813685919,-0.06732446864535326,-0.4985902829785327,-0.12373747067222246,-0.43631545964698953,-0.3641467683512986,-0.4198171091634974,-0.420421780487244,-0.5076989359159721,-0.36818411549138397,-0.4712621393674226,-0.12319632221389029,-0.5045804684879853,-0.41,-0.51,-0.16172081212117345,-0.5040452133312935,-0.3653533156640194,-0.51,-0.17240668332858883,-0.51,-0.3396109403015607,-0.51,-0.51,-0.51,-0.41,0,0,0,0,0,-0.061336957963189574,0.3439445301280335,-0.41,-0.4836567994855466,-0.14071931198825383,-0.10059769194514814,-0.27841559861816756,-0.510111375,-0.1536519861942044,-0.026603870672809674,-0.3956715412958618,-0.44443091572826465,-0.10489529334941256,-0.1143350026821965,-0.41012374999999995,-0.51,-0.2992511982920575,0.04116762837233917,-0.3477130679900318,-0.4520998804926545,-0.19720994443393627,-0.1423554410687287,-0.35652834027832975,-0.4828908713318713,-0.09591740898766703,0.039913786251941225,-0.41,-0.4943539993767391,-0.10772748928737524,-0.10737457728926053,-0.41,-0.4947738797320979,-0.4157358523773106,-0.4787757719344294,-0.34026514229992333,-0.51,-0.45649181869763494,-0.51,-0.24032275817919116,-0.51,-0.11,-0.51,-0.41,-0.51,-0.17739058785022893,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,-0.15191362771590144,-0.51633318905314,-0.40290125,-0.51,-0.11,-0.51,-0.41,0,-0.1472895792582691,-0.51,-0.3984494675107261,-0.51,-0.12214788954844062,0.4463672427682934,-0.41,-0.51,-0.11,0.3178067548311984,-0.41,-0.51,-0.12565533164521958,0.33805080864697884,-0.41,-0.51,-0.11,0,0,0,-1.01,0.3464392831071382,-0.41,-0.46703123202083413,-1.01,-0.01,0,0,-0.07898196142334964,-0.01,0,0,-0.61,-0.01,0,0,-0.61,-0.51,-0.1559647684496289,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.11,-0.47834313935989137,0,0,-0.11,-0.51,-0.41,0,-0.5065058438394796,-0.51,-0.40233874999999997,-0.48520369789887546,-0.11104625,-0.51,-0.41,-0.51,-0.11,0.14200993806883994,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.9238131251491358,0.01716800651927589,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,0.06926041139989277,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,0,0,-0.11362716887974521,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,-0.1181406774052412,-0.51,-0.41,-0.51,0,0,0,0,-1.01,-0.51,-0.41068625,-0.51,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0.17180469507177995,-0.41,-0.51,-0.11,0.0939354537349647,-0.41,-0.51,-0.11,0.004467973790090625,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,0.025396575693202954,-0.41,-0.51,-0.11,0,0,0,-1.01,-0.01672902967434721,-0.41,-0.51,-0.11,0,0,0,-1.01,-0.51,-0.268436332144063,-0.5106975,0,0,0,0,-1.01,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0.027105891606852957,-0.3663025438090669,-0.51,-0.11,-0.01,-0.41,-0.51,-0.61,-0.01,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0.21659374310997143,0.3127987845995389,0.47343228509161894,-0.1323943542901892,0.23535700710588922,0.32800344342393795,0.4818928419056114,-0.23254385771349953,0.22934370707225513,0.27226929481415674,0.4730154456992154,-0.22988661910210895,-0.020104391971862694,0.036803202032734565,0.4748604457031295,-0.4656525638819403,0.22807235217244173,0.3106069433030257,0.21422382563211928,-0.20748459198607458,0.07866814606600342,0.1594300280052745,0.46741228367283094,-0.3916917394315518,0.016525370169453518,0.1436992463811687,0.45996600846186453,-0.35430520034039686,-0.08723194469592462,0.07182674901905453,0.42820060864502524,-0.51,0.22158090618191958,-0.18949521135474925,0.47507757520025073,-0.35914154825940936,0.02487999987438133,-0.28097633759391377,0.4695499725751737,-0.4199131590028795,0.042299734785169796,-0.3029376291204799,0.4481124161974375,-0.3790025497973022,-0.032989073691846095,-0.4650853859835249,0.47168846565975825,-0.4978275256129713,0.1562337821469965,-0.3372968812842285,0.4515034514723246,-0.39192044383173974,0.044592852270797394,-0.4831703134620966,0.44605941142831673,-0.51,-0.07580691521252733,-0.4767677919138294,0.442625509641794,-0.47827252685858096,-0.07564297629583158,-0.51,0.40350601861148044,0,0.12905490572430983,0.3891168030934691,0.24924799002410744,-0.41913844616225804,0.02438044830467698,0.16405015968143524,0.4099007666857753,-0.4147905721696963,0.14677644887685326,0.2146089877650527,0.33727388829753774,-0.3913432606873835,-0.09819934382091493,0.04676619664312705,0.4262116904950721,-0.51,0.10001225599264171,0.1869802930799171,0.4243267082590603,-0.3514999166825716,-0.11,0.06445373488134494,0.43539524776909594,-0.43169815019090046,-0.06597975653591995,0.04800070816371191,0.3968960170728965,-0.510135,-0.11,-0.01,0.3398576623276768,0,0.060229000893665396,-0.36276660469076377,0.3480123954542698,-0.47969525490208503,-0.028640241672838546,-0.5087826114633968,0.22602433784974613,-0.51,-0.11,-0.49176633050385543,0.40362382164705984,0,-0.11,-0.51,0.34757372367497613,-0.5000904555448397,-0.04762237508910999,-0.4379390806722009,0.20790148066605585,-0.51,-0.06992154105439473,-0.51,0.2692986435176906,0,-0.11,-0.4936508661220021,0.20893917764440612,0,-0.11,-0.51,0.23914016652088052,0,0.15779256965341804,0.3195119603466679,0.23862987912267097,-0.27943815966564295,0.046792837027471244,0.09634173146751217,0.4523361973514501,-0.46062224383698674,0.14506205622265822,0.11433790409449164,0.3759568421399137,-0.42110921701841814,-0.3542325929062039,0.07458611072426392,0.29070681983753527,-0.4728324778697253,-0.06341579772290283,0.08683783304740572,0.3835232141210967,-0.43748704632400687,0.014347932501814292,0.007534318029721236,0.28767843680866073,-0.51,-0.34999967408633026,0.037287385019778796,0.2922947234050636,-0.47730193285980715,-0.022688647650018517,0.0001916885845441984,0.2942157492386888,-0.51,0.05331729106273841,-0.2941634661072579,0.4579498822443809,-0.45214940641355833,0.04633686229870805,-0.51,0.43766698961842665,-0.51,-0.03046348463916898,-0.4906516231300979,0.42545992680184364,-0.4751049273424187,-0.11,-0.51,0.3588707824654067,-0.51,-0.06369539449827849,-0.47566755928071436,0.4059411489965529,0,-0.11,-0.51,0.3117602510035921,0,-0.07009199225516193,-0.51,0.36300931115894974,0,-0.11,-0.51,0.11267805501719283,-0.51,0.013194088299953784,0.12659688700050614,0.3830626323914394,-0.4846975340526756,-0.08984929553420748,-0.01,0.40084650645432424,-0.49308070048937946,-0.160135,0.04911509580143611,0.36768841391593277,-0.47404812580031336,-0.11,-0.01,0.4075527538165604,0,-0.02605277750716943,0.010774191205536557,0.31572147831358915,-0.51,-0.03265133523597419,0.0172021736230425,0.34179825466540953,-0.4896884739400977,-0.51,-0.01,0.21625417494790164,0,-0.11,-0.01,0.1551441258058376,0,-0.0306812420564248,-0.47393464784429856,0.3382609842600042,0,-0.11,-0.5106975,0.3246849816458267,0,-0.11,-0.51,0.29062933887608156,0,-0.11,-0.51,0.2549700614946573,0,-0.11,-0.51,0.27673821601599335,-0.51,-0.11,-0.51,0.18662643297825815,0,-0.11,-0.51,0.1691936916275574,0,-0.11,-0.51,0.11969322641960743,0,-0.16433815924700854,0.07733138713591856,0.4763618594898519,-0.46023572098554616,-0.61,-0.01,0.25867096325926,0,-0.11,-0.01,0.38676675211549955,0,-0.11,-0.01,0.2121598264383498,0,-0.11,-0.01,0.37363017662656595,0,-0.11,-0.01,0.09,0,-1.01,-0.01,0.24887716600800944,0,-1.01,-0.01,0.09,0,-0.61,-0.466516755584966,0.23407796484767077,-0.4866035192267548,-0.11,-0.51,0.1338353716222766,0,-0.11,-0.51,0,0,-0.11,-0.51,0.1297369309091198,-0.51,-0.61,-0.51,0.17055674114178407,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.61,-0.01,0.25137027561239345,0,-0.11,-0.01,0.1855080487936593,0,-0.9083965234355275,-0.01,0.15794942634926556,0,-0.11,-0.01,0,0,-0.5750344589993429,-0.01,0.1275474918820259,0,-0.11,-0.01,0.09,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0.11166330900878374,0,-0.11,0,0,0,-0.11,-0.51,0.12525499576824947,0,0,0,0,0,-0.11,-0.51,0.11824276327564054,0,0,0,0,0,-1.01,0,0.09,0,0,0,0,0,0,0,0.3594988955645677,0,-1.01,-0.01,0.18496585675154073,0,-0.11,-0.01,0.21204009544779173,0,-0.61,-0.01,0.09,0,-0.11,-0.01,0.1544286789027695,0,-0.11,0,0,0,-1.01,-0.01,0,0,-0.11,-0.01,0,0,-1.01,-0.51,0.12989353971131828,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0.12888619408393784,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.19273523219326033,0,-0.11,-0.01,0.1953859304191417,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,0.07457038113286144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.17761153524744366,0.4272481542177364,-0.25900459669788123,-0.3302799026548509,-0.07200973806745116,0.42012734743708524,-0.2993032201036577,-0.4142748382799702,-0.05717293856458162,0.4149299826653024,-0.3751898223661578,-0.45112748143345477,-0.11,0.43222360943049815,-0.41,-0.51,0.043311144268462824,0.36255845387882013,-0.3027692276787059,-0.46666997514063724,-0.11,0.36531811787143526,-0.38731656275762105,-0.51,-0.07866490567934575,0.2600992128489969,-0.41,-0.51,-0.11,0.23380715003053204,-0.41,-0.51,-0.16594501122658417,-0.32889365563126094,-0.3762990986630212,-0.44644613704684716,-0.34624093491856506,-0.47267195668352013,-0.1580278659128445,-0.51,-0.4145121472175102,-0.22531098888291798,-0.41,-0.51012375,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.38380345048506354,-0.51,-0.11,-0.51,-0.41,-0.51,-0.13824400085888186,-0.51,-0.41,-0.47403701080140065,-0.11,-0.51,0,0,-0.08201584643899473,0.38089952143951744,-0.34702649656432866,-0.4897843044227753,-0.22870153585784217,-0.08967315430176248,-0.3968506744273721,-0.4060039727088346,-0.10629028291215861,-0.03310423874478552,-0.3638701669901998,-0.495507251765625,-0.11472323684772547,-0.10990187740837588,-0.41,-0.51,-0.11,0.06413784124696316,-0.4074034073050184,-0.46471927211497144,-0.11,-0.08360369635379757,-0.41,-0.4984786892365543,-0.0866975005798553,-0.10075370358099721,-0.40655209673996073,-0.4858767295572818,-0.51,-0.01,-0.41,-0.51,-0.41468200682182044,-0.51,-0.37357180474552376,-0.51,-0.4489158685837157,-0.5156855459187097,-0.32875091438444903,-0.51068625,-0.41944806770492365,-0.49549874490922474,-0.3883197981152401,-0.51,-0.12712259302703216,-0.51,-0.41,-0.51,-0.12056863843316727,-0.51,-0.4081112774042633,-0.51,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.07186971024942124,0.34750900155572834,-0.37805158328825816,-0.5035265469587965,-0.07064402639720464,0.3441792977777884,-0.41,-0.5005579016868968,-0.035189131001715446,0.1378340410185729,-0.40813872229471315,-0.4706464097914595,-0.13824334616842482,-0.017169455132776446,-0.41160032355794457,-0.49272651219927355,-0.04921362751133531,0.12550548361747488,-0.41026775,-0.49048055305950433,-0.11,0.11711886255245739,-0.4055870848325381,-0.4925600597050545,-0.05757964867546353,-0.025109134550779854,-0.41012374999999995,-0.4887110436992985,-0.11,-0.04069363087538673,-0.41,-0.49855709566571077,-0.11792251151318923,-0.45793958937611307,-0.41,-0.51,-0.18908109980346757,-0.51,-0.41,-0.51,-0.2068794833461038,-0.51,-0.41,-0.51,-0.10246890271602829,-0.51,-0.41,-0.51,-0.61,-0.51,-0.411999125,-0.51,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,0,0,0,-0.11,0.3428116945076407,-0.41,-0.51,-0.15982812676112929,-0.12493181430649955,-0.40360999704223366,-0.49777901249999995,-0.11,-0.10246923864285168,-0.41,-0.51,-0.51,-0.01,-0.41,-0.51,-0.61,0.043488060925954294,-0.41,-0.51,-0.11,-0.0993324822536821,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.51,-0.01,0,0,-0.51,-0.51,-0.41112671754805713,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.13268390715486714,-0.41,-0.51,-1.01,-0.01,0,-0.51,-0.11,-0.01,-0.41,-0.51,-0.61,-0.01,0,0,-0.61,0.046000055889196215,-0.41,-0.51,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.15645611034105325,-0.51,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.61,0,0,0,-0.10884641966299806,-0.51,-0.41,-0.51,-1.01,-0.51,0,0,0,0,0,0,-0.11,0.09444829732079643,0,0,-0.11,-0.01,-0.41,0,-0.1611475,-0.01,-0.41,0,-0.61,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.02103958196256129,-0.41,-0.51,0,0,0,0,-1.01,-0.01,-0.41,0,0,0,0,0,-1.01,0,-0.41,0,0,0,0,0,-0.11,-0.01,0,0,-0.61,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.61,0,0,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.27101957559624906,0.4002476917421192,0.5391119783488152,0.38408036319160976,0.2386349205890221,0.4413784064969987,0.5473421865047904,0.3938896777408176,0.15247983236181956,0.45386691854062944,0.5242533258012022,0.3890522232873884,0.20516900911126676,0.36816340742090564,0.5421477643795294,0.3211254464398697,0.3047024683837606,0.37963866089149073,0.5449619364798641,0.37972453445802107,0.08988554804036189,0.36853487525690587,0.5288510116564356,0.2912430650528116,0.13563142255441052,0.36379851143363456,0.5208265496015416,0.33637100327694114,-0.328072386270324,0.03369089098106006,0.5411139737865241,0.12474244785515302,0.28634023041469525,-0.05553772243699781,0.543802263673086,0.36492047120763604,0.27690142031684695,-0.0757716241336475,0.5505477145524496,0.345220527066581,0.21335371260132924,-0.0808910937487873,0.5246972376096346,0.2998842646020778,0.09462476329473832,-0.24794697754758205,0.5325936922006059,0.17322794918157783,0.244770193295936,-0.14129583345482913,0.506086981276225,0.3528636154441218,-0.002234807836255674,-0.36229011338257616,0.5156363501797955,0.028939121330666347,0.009989750049412618,-0.3454933645700241,0.5236005318805215,0.1261043563772621,-0.11,-0.47554142860918325,0.5133378103746307,-0.01,0.19891176109056077,0.38680627498082953,0.5460807859905441,0.36313491882224036,0.0026683298294282107,0.31323025259577,0.5290455048352651,0.3378984136085805,0.026603755331042946,0.34099276648177357,0.5191071469976095,0.3497438555159623,-0.02619983853123158,0.1297687896808597,0.5134499456459329,0.24277906418162104,0.12187927123503846,0.3485877111221653,0.5358034368342592,0.3649381928892725,-0.005479623561427501,0.1898619153284758,0.5284459562312868,0.16337190395191126,-0.07162501079546665,0.19189251528502713,0.5137375309751151,0.14886562700750683,-0.11,-0.01,0.46131688062510756,-0.01,0.05496879190614009,-0.233660773755956,0.5225496328681174,0.3095539273106094,0.005312412575062712,-0.32344242289778113,0.5348794161987456,0.08717134837281827,-0.07190833997751753,-0.39993845361521096,0.52156737215478,0.06190924269500703,-0.11,-0.51,0.53556005168952,0.06242183782847985,-0.000017870481250899933,-0.4525564420439637,0.5194810284542115,0.12678693139406355,-0.11,-0.5006805648915964,0.49963617863432735,-0.01,-0.61,-0.4645164406198537,0.4393855063860516,0,-0.61,-0.51,0.49351894578998695,-0.01,0.2059590698633944,0.3854494659941693,0.5255319257782133,0.35238445810552854,0.15377137071044839,0.33305141602140975,0.5425577102553167,0.30314653553413995,0.2020096849637546,0.33568412875420217,0.5192974012209978,0.2973678865078976,-0.06865158344146544,0.1396849032623267,0.49138045328307584,0.08973839302532377,0.16650681118893074,0.2607805430801534,0.46758716968629394,0.2425571393124294,0.06757670356115486,0.18944501798424887,0.4607147625357809,0.06078629881200442,-0.31102064166417737,0.11906283482095842,0.48876631158561923,0.04840498496626658,0.03394312718268563,0.03584130860610422,0.514402498294981,-0.01,0.11946265976814027,-0.1853062074042365,0.5154141702858235,0.3066410939406619,0.04972700623107137,-0.28563630380580096,0.5322635996264191,0.16311190164458805,0.023281570517804495,-0.3310730296483945,0.46689841713040525,0.02760163236375049,-0.018911596333656147,-0.5106975,0.5048393960767938,0.02580538791142381,0.13031987227135394,-0.3564794111261567,0.535292896561586,0.16296031563715416,-0.065724359686878,-0.4350279046898259,0.5119573071072532,-0.01,-0.0612408435665206,-0.46417548737719805,0.4361981223547519,-0.01,-0.037892647958290775,-0.51,0.46723290770606035,0,0.19468055402968648,0.3126140098278228,0.518621303133731,0.2880677414470068,-0.03471419301882275,0.17334357830128852,0.5201472863464938,0.19019721416944033,-0.07190043461579138,0.18961991739834055,0.49319391152101466,0.17487717670789915,-0.11,0.10506081344770224,0.45501512265598937,-0.01,-0.046129863132409625,0.12561531346918411,0.46961642442997276,0.17195462228030156,-0.11,0.022446829564300413,0.5145784913197569,-0.01,-0.023137287466921577,0.1068774352976427,0.44358231927278957,0,-0.1318016835764049,-0.01,0.4050006104196283,-0.01,-0.08606813000228096,-0.3945835548356935,0.5138199063361217,0.022364774482508162,-0.5302743182987544,-0.4773572567592825,0.5329209837231078,-0.01,-0.11,-0.4796861188031024,0.4766836877915561,0.010547537843967789,-0.11,-0.4845286779117989,0.4478040483879341,0.01601391911705702,-0.039161742404798354,-0.47876269877061417,0.41590338271379507,0.053384001916446724,-0.11,-0.51,0.3289018335869175,0,-0.11,-0.51,0.3801041503645836,0,-0.11,-0.51,0.27549417294770884,-0.01,-0.1597023485951029,0.1513991578136883,0.5457044174581179,0.008310981818629756,-0.07150933891850764,-0.01,0.527698834533852,-0.008462564842107695,-0.11,0.035828544648889446,0.5295052438443857,0,-0.07519928163787198,-0.01,0.4182299680148346,0,-0.1132314158713922,-0.01,0.5108070186648371,0.011973578441728484,-0.11,-0.01,0.38572185675813153,0,-1.01,0.03385077337314146,0.49182930398290386,0,-0.11,-0.01,0.17745815254609498,0,-0.21270022208375722,-0.510135,0.539075779131033,-0.023941071674137872,-0.61,-0.51,0.5180672537804466,0,-0.61,-0.51,0.48536270995054004,0,-0.11,-0.4312496587946217,0.43980909335603513,-0.01,-0.11,-0.51,0.4631688643001898,0,-0.11,-0.51,0.213619123335812,0,-0.11,-0.51,0.13406898214692856,-0.01,-0.61,-0.4936320664253055,0.09,0,-0.14972192491173164,-0.01,0.5260688117887494,-0.01,-0.18930810074761908,-0.012638696940521969,0.525777288252137,0,-0.17850418001804447,-0.01,0.4456138833765238,-0.023157343843990416,-0.11,-0.01,0.3238735055389919,0,-0.0847582087983256,-0.01,0.4771250344308375,0,-0.61,-0.01,0.36108663123533896,0,-0.11,-0.01,0.29574356206614294,0,-0.11,0,0,0,-0.11,-0.4874984638191889,0.5133408983417701,0,-0.11,-0.51,0.2527920098741018,0,-0.11,-0.51,0.27662526180269154,0,-0.11,-0.51,0.09,0,-0.61,-0.51,0.3595161247951622,0,-1.01,-0.51115875,0.17804355561619714,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.61,0.02870761313635585,0.5019464143679297,-0.01,-0.61,-0.01,0.4403806388073275,0,-0.11,0.0282303546316386,0.4612387746289888,0,-0.61,0.02985667500562112,0.27802206006290525,0,-0.07169864378243646,-0.01,0.40220009030277976,0,-0.11,-0.01,0.2506228354018476,0,-0.8810977592805543,-0.01,0.2464882008105377,0,-0.11,-0.01,0,0,-0.11,-0.51,0.462789934355468,0,-0.61,-0.51,0.3987467662086897,0,-0.11,-0.51,0.22535991886509926,0,-0.11,-0.51,0.13007169899916826,0,-0.11,-0.51,0.2562923815546604,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.14429951474514308,-0.01,0.4608734325521638,-0.01,-0.61,-0.01,0.379158898625654,0,-1.01,-0.01,0.3242331300082598,0,-0.11,0,0,0,-0.61,-0.01,0.283562913822578,0,-0.11,-0.01,0.095344875,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.51,0.2189083081419576,0,-0.11,-0.51,0,0,-0.11,-0.51,0.08912309212182579,0,-0.61,-0.51,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-1.01,0.09625721853619305,0,0.216072597281316,0.4628411813808684,-0.012107004374459149,0.32299919921054343,-0.06632615233405899,0.4566080492115402,-0.11734318051779856,0.27629631016752193,0.087678446228553,0.45103333037848414,-0.16734785131146854,0.22813150132958102,-0.08268228343218241,0.4529216596547918,-0.29244385516930677,0.14479985536041193,0.13293615308957654,0.4563846102419957,-0.28035925367489045,0.27776345276502223,-0.05977838026631289,0.44823543138753547,-0.3683670045014707,0.023260866601300452,-0.05111575108287915,0.44247459660143695,-0.32983040577260125,0.0813599697928816,-0.11,0.4290978311230691,-0.40335125,0.0214388503291294,-0.2390121802193997,-0.10667409110492121,-0.07594145170793418,-0.061861640920129704,-0.12369251649802658,-0.21935147165972851,-0.1316411001082317,0.05601959240696952,-0.23026547588973995,-0.2443178985925689,-0.192945546516428,-0.09338383340476311,-0.13800779836700666,-0.3544596959717829,-0.41024637499999994,-0.04997770182254382,-0.17971073983660185,-0.36324571282897006,-0.18478987700557137,0.0006434277902203052,-0.18306137076757723,-0.4739119265078148,-0.3764577299371634,0.03204707636896288,-0.32849757902304605,-0.4117158465053244,-0.410235125,-0.1018930588174551,-0.10208694872705289,-0.51,-0.41,0.13360210208184906,-0.33998537028235076,0.3917319837666036,-0.12481154744601358,0.019813852260789636,-0.16356255820497598,-0.03808215613744713,-0.11495467213825293,-0.040578347548830225,-0.11028481163070047,0.05862871727056655,-0.16109990574719185,-0.02578184498508457,-0.08275848217299545,-0.057673698945087115,-0.1701553824473184,-0.08314145236297518,0.006814621762309896,0.11548710269291389,-0.2060513037675839,-0.004060633203237,-0.13773052389223794,-0.03305692920180586,-0.2672691344852448,0.016221865817277286,-0.14289475108751998,-0.0320966069556032,-0.3655440676023797,-0.03784517675625792,-0.23269664677584304,-0.049481544610331996,-0.39916670176481767,-0.03013792167971222,-0.21347792893815518,-0.30599884711218917,-0.2550293903973702,-0.04000160666583444,-0.11007470992741487,-0.5203340388638786,-0.3232678174519111,-0.09093270016978482,-0.0965756325704736,-0.5041586178490437,-0.3214482506432327,-0.08033600557146489,-0.08703107755203095,-0.5113781767414811,-0.29270138120788886,-0.03403561364635697,-0.1284406021667731,-0.4126138125705099,-0.36806180819697015,-0.01860223579449479,-0.10322894171425909,-0.51,-0.41012374999999995,0.006221491007689433,-0.5536747288460906,-0.511573875,-0.41,-0.00839579624546712,-0.11,-0.512025,-0.41012374999999995,-0.01291310823088709,0.07539930249780617,0.34534448817918895,-0.16465693180203334,0.12012276393379277,-0.05040224951649559,0.35279537657588633,-0.36012903156459974,0.01832803796727305,0.051535196841260206,0.03821323591770512,-0.18963145567320897,0.03850202458507333,-0.09515440166591116,-0.006944845017926865,-0.1889991788122862,-0.014612009970567583,0.031294640855743586,0.18571088738226513,-0.25848616139210756,0.03372912445119566,-0.1247246078815258,0.15974182624885475,-0.31984342413635053,0.05860144783510331,-0.027191299064827652,0.016520841530690944,-0.30683043651079944,-0.009707282979304819,-0.09279576949969706,-0.030250042275456815,-0.3972449945337359,0.01275165459491647,-0.1414540524938129,-0.3263352807633916,-0.30452576680415333,-0.09005192263354332,-0.13805396998453937,-0.4627950629438902,-0.35519522734119086,0.015130153261308947,-0.10364955332819824,-0.4857794243879974,-0.3584377213934084,-0.04725154297623434,-0.10179345652559586,-0.51,-0.41,0.09592243853136609,-0.11883014568864149,-0.4668836352153395,-0.3487339067083106,-0.0737710331206639,-0.10245490688696246,-0.4965670605473546,-0.41,-0.06755686696689991,-0.11,-0.51,-0.41,0.0035992269846362585,-0.11,-0.5028666400410282,-0.41,0.015312557253834212,-0.039176269339769296,0.34212971871367454,-0.29703852089721783,0.0055941625317594765,-0.13357686316366557,-0.021417816865663023,-0.300799096882607,-0.08055893708665318,-0.10371679609099499,-0.0720275686004668,-0.3968863011056099,0.056163439390886846,-0.1491977471348011,-0.07065120685258439,-0.3854809982998239,-0.06954752867660705,-0.4403833267970049,0.0738595582024416,-0.4107977374999999,-0.00793249828142813,-0.14010834257482935,-0.07408360628625865,-0.36067605547267784,-0.07232387187240606,-0.09627852844643935,-0.015937519765173137,-0.41,0.036945425184565214,-0.11,-0.014927301204608787,-0.41,0.06590996047065897,-0.1452572784741038,-0.51,-0.3314331010222767,0.07507417353219893,-0.10346271491022097,-0.5113418855093348,-0.38460524272170094,0.06851124121130583,-0.11,-0.51,-0.41068625,-0.03786983604072075,-0.1653745886911337,-0.51,-0.41,-0.11281825437295491,-0.11,-0.511720125,-0.40290125,-0.006977906362173502,-0.11,-0.51,-0.41,-0.007683400084617448,-0.11,-0.51012375,-0.41,-0.06014946579985933,-0.11,-0.51,-0.41,0.008905562290858168,-0.04503746666825043,0.4530910040119038,-0.38009180247619523,-0.01,-0.07136906575713661,0.3703627066969817,-0.41,-0.018061489125024914,-0.10498779571794992,0.37263433803443474,-0.41,-0.016082038638298893,-0.11,0.035332572185303855,-0.41,-0.01,-0.11,0.38284889955615087,-0.40290125,-0.01,-1.01,0.16841210629037123,-0.41,-0.01,-0.11,0.10425298695554283,-0.41,-0.01,-0.11,0,0,0,-0.14671963715028297,-0.4664818384552544,-0.41,-0.10285021578846941,-0.918920829913289,-0.51,-0.41,0.027674440861222015,-0.11,-0.51,-0.41,-0.05271974282402393,-0.11,-0.51,0,0,-0.5551553536545852,-0.51,-0.41,-0.01,-1.01,-0.51,-0.41,0.027145856288037867,-0.61,-0.51,-0.41,-0.01,0,0,0,0,-1.01,0.3342182024031165,-0.41068625,-0.01,-0.11,-0.02351324146474553,-0.4106975,0.04135153594733948,-0.11,0.010968166598176447,-0.41,-0.02424502188790387,-0.11,-0.01,0,0,-0.11,0.07340243528873144,-0.41,-0.01,-0.11,-0.021137500000000004,-0.41,-0.01,-0.11,-0.024490478198884308,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,0.021176682190854387,-0.11,-0.51,0,0,-0.61,-0.51,-0.41,-0.019072953435862048,0,0,0,0,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,-0.11,0,0,0,-0.61,0,0,0,-0.11,0.30153136321907564,-0.41,-0.01,-0.11,0.0642614248678269,-0.41,-0.01,-0.11,0.03429120196377769,-0.41013499999999997,-0.01,-0.61,-0.0009995294335181561,-0.41,-0.01,-1.01,0.13130407207829728,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.61,-0.01,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,-0.04946656398127588,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0.015631998422341205,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0.07641832110294447,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,0.012230132443085327,-0.41,-0.01,0,0,0,0,-0.11,0.06258747245256804,-0.41,-0.01,-1.01,-0.01,-0.41,0,-1.01,-0.01,-0.41,0,-0.11,-0.01,-0.41,-0.01,-0.11,-0.51,-0.41,0.005648529238557349,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0.27740954249938427,0.3106126597903825,0.46875746863993123,0.29527533663233957,0.2010555060159435,0.2343837742313027,0.39633865333486357,0.22743145087411154,0.18381099596597544,0.4356664950512799,0.2647662875710717,0.2283960328961408,0.09639464706595918,0.28068797512713867,0.43970499080005976,0.16445805530078153,0.19104423351113253,0.23303406348187802,0.3751163962148379,0.23910810673706795,0.028057064831562093,0.16794468484501912,0.4135841651604232,0.0473123175477284,-0.007170035132917987,0.1087501597474053,0.34923453629928874,0.04501757152890461,-0.11,0.011171063509834553,0.32924788018493795,0,0.2695342598845539,-0.15169594251269136,0.44256848817502203,0.2401747336634862,0.016674017521407597,-0.30955000932314614,0.44279309661630306,0.1299163016153548,0.07223749039778793,-0.28664463108866345,0.45992315566235664,0.12853873552950437,-0.3660944813995879,-0.39418544552215745,0.44610530406884275,0.047265114424018255,0.1078126578195253,-0.39010483331198115,0.36541831852345485,0.12321020113299241,-0.04097233401235433,-0.51,0.4092513629045305,0,-0.019380884297590363,-0.4705622903463067,0.387149055189558,0.06592188823849376,-0.06443199906967936,-0.499036634772163,0.20681030256101451,0.019587574487969946,0.18581503029857366,0.378364644573723,-0.05054847035280352,0.0633851558948446,0.13694193924484266,0.04113604162287543,-0.02080013028632611,0.05392826987813988,-0.007045183575081455,0.01771867852051997,-0.05945891640863557,0.01606127175629902,-0.02021072733551462,-0.014824196522269595,0.014630101331497496,0.004125175198302534,0.004959807096251538,0.12901861214356314,-0.022997274365464497,0.04264156929854102,-0.07586167961187132,-0.005498087006249163,-0.03385723644551087,0.00009169907115392725,-0.07674466692205614,0.03482160866063713,-0.05906937073260111,0.004628959796738462,-0.2307758900099277,-0.03730911978441151,-0.03662462071988374,0.06458281037593276,-0.03787872330870995,-0.2661088215716005,-0.043997538440557815,-0.0028858079174367245,-0.020289151682248326,-0.4707230516838318,0.03174480523170023,-0.03991402636774728,-0.3335194292468153,-0.5021612660654842,-0.06019400441054855,0.031112541716835813,-0.5497387991970671,-0.51,-0.03757790750546944,0.06530298437176148,-0.07767140273498427,-0.48342120008009193,-0.03481725785448867,0.026686846973178233,0.10199309581260549,-0.5149993171703868,-0.04969941569154267,-0.03595657615955349,-0.11,-0.5119575,-0.035598641451968595,0.07116993108071862,-0.11,-0.51,0.09,0,0.1288947948952039,0.2004661909369169,0.38704943556914084,0.09383470291980736,0.008347731334121776,0.06644122983210021,0.35916185044326143,0.019883162466995806,0.05436948544644846,0.08473624877044755,0.0272422371125274,0.12449006081533404,0.1178024241159004,0.013309609882065612,0.00394901954062628,0.022856980855024037,-0.04508545600598945,0.2074254244713964,0.01653525602317414,0.004808752749919605,-0.03274337307906979,-0.014619648970209636,0.051719192262423726,-0.0148015092723972,-0.06190353233010254,-0.03583673322206515,-0.027413819147327486,-0.03630618236045788,-0.025131176044183134,0.029330998154656708,-0.008902254694424145,0.03132639541542238,-0.02494368652934178,-0.3897022860469185,0.3668187923520099,0.024750301441334308,0.07151695617923395,-0.4571740334890976,0.36675399740305215,-0.01,0.11217148045536693,-0.3771386510519195,-0.003141256706788344,0.0751779952535923,-0.11560611924641531,-0.5100507517272937,-0.004031124281103584,-0.01659913975876576,-0.0675875077457343,-0.51,0.09247371998683386,0,-0.11,-0.5069392093240919,0.06937878133059042,-0.01,0.23804748988584276,-0.4615188379585597,-0.022833404852177715,0.006494422252369972,-0.11,-0.51,0.04960434796142022,0,-0.040837237884844696,0.31571196938204016,-0.01215613385874092,-0.01162735538278241,-0.24695698618042625,0.06266357390490594,-0.06754021071948337,-0.02086359504102,-0.157084818945285,-0.00215456595784871,-0.018389334368467705,0.06395469676673234,-0.12864366269319377,-0.043552210831656814,-0.0550204407525938,0.010635080526377454,0.00542924815054404,0.07820789361018478,-0.035602298831622754,-0.004304995032331984,-0.056486687441792506,-0.04820599048803479,-0.05538012019533133,0.03232168062631293,-0.434976765598061,-0.03378666816990246,-0.033426675247493945,-0.0279144891521234,-0.1315306804086799,-0.0004892829397282261,-0.010550904353171409,-0.011630111864724776,-0.5892795691836632,-0.4287856647472996,-0.07489310910299281,0.05172279041333224,-0.08978406975521523,-0.5111330632469069,-0.03592889044479961,-0.0326373361202756,-0.08129802940792098,-0.51,-0.050239931978046944,0.023509531030128986,-0.11,-0.51,-0.029380537144596895,0.0039803183881230745,0.0732656562905884,-0.51,-0.04034417660540946,-0.04025610164333919,-0.11,-0.51,0.03910582088577599,0,-0.11,-0.51,0.05072513719244032,-0.01,-0.10228891115333985,-0.5103170696796772,-0.01352922024065668,0.010088101076895926,-0.06983361458441037,0.018379816038960953,0.4717657990061197,-0.01,-1.01,-0.01,0.4116888114269642,0,-0.18923435257908558,-0.01,0.3077898232028749,0,-0.11,-0.01,0.14967207620709536,0,-0.11,-0.01,0.18471490935279458,0,-1.01,-0.01,0.19453712870197384,-0.01,-0.61,-0.01,0.23793002286962062,0,-0.11,-0.01,0,0,-0.11,-0.51,0.40996446391211017,0,-0.11,-0.51,0.1760735882849544,0,-0.11,-0.51,0.2797003042403722,0,-1.01,-0.51,0,0,-0.11,-0.51,0.21124235207223915,0,-0.11,-0.51,0.09,-0.01,-0.11,-0.51,0.08346055106602158,0,-0.11,-0.51,0,0,-0.16012375,0.3390121855422414,-0.023699543817959304,0.016602233834355176,-0.11,-0.03457056633253106,-0.005512987269895499,-0.04004082923494555,-0.11,0.05010699260270002,-0.018136815807378085,-0.01,-0.11,-0.01,0,0,-0.091983850745473,0.06357157639794078,-0.003167923620374699,-0.01,-1.01,-0.01,-0.0015720834321800263,-0.01,0,0,0,0,-0.61,0,0,0,-0.11,-0.51,0.04658896934256318,0,-0.1114625,-0.51,0,0,-0.11,-0.51,0.0800749981731517,0,-0.11,-0.51217125,-0.042379238314512874,-0.048336979678628406,-0.11,-0.51,-0.01582662921033336,-0.01,-0.61,-0.51,-0.0026949667571827957,-0.01,-0.61,-0.51,0,0,0,0,0,0,-0.11,-0.01,0.2916777545942905,-0.018174917347412497,-0.11,-0.01,0.09350710437350818,0,-0.11,-0.01,-0.0004322819296059162,-0.01,-0.61,-0.01,0.09,0,-0.11,-0.01,0.09008745617071742,-0.01,-0.61,-0.01,0.07632006255903788,0,-0.11,-0.01,0.05729885985924327,0,-0.61,-0.01,0,0,-0.61,-0.47139885584699104,0.1484502203793525,0,-1.01,-0.51,0,-0.01,-0.11,-0.51,0.06572106097095373,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-1.01,-0.51,0.09,0,-0.11,0.11089995350317042,-0.02831101468004735,-0.020884318380124313,-0.11,-0.020440737914440947,-0.030182222916614192,-0.01384449292857611,-0.11,-0.018089659364230404,-0.012461593989363685,-0.01,-0.11,-0.01,0.025279766890454497,0,-0.61,-0.01,0.09,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.04012431862712271,0,-0.11,-0.48976712024293473,0.027925274415539127,0,0,0,0,0,0,0,0,-0.01,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-1.01,-0.51,-0.020737658418194176,-0.01,0,0,0,0,0.08354575597528421,0.44142740263463953,-0.30627607595539574,0.15772314766110904,-0.026297943458655104,0.4357943169188136,-0.3476711753190846,0.03853504970306691,-0.026085311153091074,0.42911506763803076,-0.37801876585158817,0.031291571273102455,-0.11,0.4281097476475169,-0.4087925306960458,0.019283770574367864,-0.0014633495627833226,0.31110961024878264,-0.3948720378468008,0.07081362437464077,-0.4915218986317486,0.40136645230048107,-0.41,0.06539951318651731,-0.11,0.31882569978723935,-0.40473041744211746,0.043360400650436226,-0.61,0.26883722539267907,-0.412025,-0.01,-0.1641630354774903,-0.20896554335598372,-0.326130323700164,-0.07725062722391869,-0.10592058661197043,-0.4341485683463977,-0.32985131616479946,-0.060374655377679276,-0.10923947670004541,-0.42435019473974755,-0.4047784422316718,-0.0758540531748833,-0.11,-0.49056295186978904,-0.3891832240147698,-0.04187543397347438,-0.14462356126698714,-0.4430757291391034,-0.41,-0.005743181937808588,-0.10400186170264467,-0.49977969268658196,-0.41,-0.05854725414735339,-0.09720119981384862,-0.51,-0.41,-0.10728704415340432,-0.16171000000000002,-0.51,-0.4084438952216406,-0.09046891081509674,-0.11,0.3835697853689717,-0.4447712464004676,0.016775006796479315,-0.11442842091396989,-0.07712106577922237,-0.5004712504851404,-0.053603650497325996,-0.23385764910846596,0.1279399713722625,-0.45376210302243847,-0.026590535074117322,-0.10432521331948137,-0.04362517963008571,-0.42084274999999993,0.05988914873976492,-0.12220960633410799,0.04045607191032625,-0.4386032493879739,0.08707931186162429,-0.38166821035508514,-0.09156474048697666,-0.41741868874999993,-0.0914609714522824,-0.11,-0.017854647433807883,-0.41072798749999995,-0.00008226315388912015,-0.11,-0.03362786689109014,-0.41,-0.03154887879617988,-0.10902203223137412,-0.4160626134878476,-0.4347503864762247,-0.05975689059443835,-0.12466481926591637,-0.5113187604191592,-0.46826585179959607,-0.0255322903421816,-0.14491438406777002,-0.5120578302314674,-0.43434640302194094,-0.06689609986619593,-0.61,-0.51,-0.41012374999999995,-0.09443942113495524,-0.5478769368971999,-0.510135,-0.41,0.013409354434103557,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,-0.05359075463412845,0,0,0,0,-0.08254430988384978,0.33015891916613593,-0.40956585874924967,-0.00538719254137143,-0.0727767171070594,0.3458112992062562,-0.41,-0.01,-0.008133413680740643,0.05332044692124766,-0.42649734418864016,0.015576437345318366,-0.054163677783959294,0.020438460136502547,-0.412655811125,-0.007564129590930738,-0.1378138341240227,0.023307795795463826,-0.41012374999999995,0.016427689257983692,-0.0031122490937160532,0.029138472259944925,-0.41,-0.01,-0.06879214620328922,-0.041297517887725156,-0.41398666108823345,0.012872684876651297,-0.055041412559034525,-0.038237905559666316,-0.41062775,-0.02349751996546842,-0.15326644900087222,-0.4878814059714511,-0.40285162678067693,-0.10147711010686851,-0.11,-0.51,-0.41012374999999995,0.02874622855298804,-0.11,-0.4922349572457707,-0.4142906613204452,-0.022104439601657047,-0.11,-0.51,-0.41,-0.08673809067445755,-0.5260515676591433,-0.5023387500000001,-0.41013499999999997,0.0007503204774420395,-0.11,-0.5106975,-0.41,-0.07111630349500606,-0.11,-0.50239819640625,-0.41,-0.08316548057014761,-0.61,-0.51,-0.41,0,-0.61,0.3389563297943277,-0.41,-0.01,-0.18901781926448064,-0.07319377283707808,-0.41,-0.0552830456280973,-0.10346327251325321,-0.06712503777381612,-0.4102116125,-0.025435894756564853,-0.09712110910462522,-0.06867716607972878,-0.41080887499999996,0.052687326850297964,-0.08234754693381091,0.05977648494712641,-0.41,-0.01,-0.11,-0.03149104209390223,-0.41012374999999995,-0.029858266845744993,-0.11,0.012772399710320658,-0.41,-0.01,-0.5062202968077956,-0.08997942230638821,-0.41,-0.0902740617242506,-0.11,-0.5053527965022191,-0.41,-0.05640282017186507,-0.229689699043326,-0.51,-0.4312777878185434,-0.051327089459909166,-0.11,-0.51,-0.41,-0.06055805895880056,0,0,0,0,-0.11,-0.51,0,-0.01,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.07165738532038302,0.3681129769331486,-0.41,-0.02247791807816085,-0.11,0.1356173732544751,-0.41,-0.01,-0.11,0.1125235990694386,-0.41,-0.01,-0.11,0,0,0,-0.11,0.053561616710064194,-0.41,-0.01,0,-0.01,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,-0.51,-0.41,-0.007854518386795153,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-1.01,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0.09470460231829542,-0.41,-0.01,-0.11,-0.030746280308091276,-0.41,0.011717453651117675,-0.11,-0.01,-0.41,-0.01,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.029831508505741008,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-1.01,-0.01,-0.41,0,-0.11,-0.01040753115836295,-0.41,-0.01,-0.11,-0.016286609947815528,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.01132525,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,-0.41,-0.01,0.29264081575130274,0.3834994388291684,0.5126384242916914,-0.14587895805383258,0.222247348203827,0.35288116955669424,0.5428199577327936,-0.3032072247240008,0.04556775278755525,0.33673301975299635,0.5342922275777024,-0.22728600707223318,-0.03220066922114212,0.10371268248375518,0.5248618317820524,-0.4422730087216289,0.17737132306908698,0.29557105233828646,0.5278061962878574,-0.2847411319883685,-0.3272457212842209,0.07762348024031965,0.5108411257518445,-0.471696294895373,0.024056400238538708,0.13467107517653043,0.5102431499406298,-0.41319146452194905,0,0,0.5225475590669326,-0.4664252836001796,0.027575400033433412,-0.15732475197016113,0.5188124095194909,-0.3318975677380624,0.010478343453761849,-0.3183432575202974,0.5363971534189387,-0.41337841228052347,-0.03243995672565547,-0.4720010035040598,0.5395232608634503,-0.429324463919025,-0.36982437441094823,-0.4802419499032842,0.52700170164733,0,0.14402205194990098,-0.4742017475338477,0.5314253775144592,-0.4731693583666259,-0.03466729753635406,-0.4780678764177293,0.5417945486505511,-0.5074323724350216,-0.11,-0.47764509620201856,0.5083920051696391,0,-0.11,-0.51,0.4446328740206251,-0.4763196331566055,-0.017282199347815053,0.26068630330343984,0.5079608633822837,-0.29068419024098735,-0.06514533711143766,0.1660172769299717,0.5334007704380754,-0.4493993052814995,-0.046392176736734236,0.19988933357869226,0.5316466751124868,-0.47617961284668053,-0.08364297061634746,0.061400569204679276,0.531775604964863,-0.51,-0.08238709053577986,0.09663532625983823,0.5304148762520688,-0.47379195350298203,-0.0770318265757573,0.026812965227191204,0.5288381772612787,-0.45984733962196955,-0.1419241590571269,0.026565148150618334,0.4603322934044101,-0.51,-0.11,-0.01,0.4636294285064416,-0.51,-0.03234964039460857,-0.3830083597246808,0.5196574811805235,-0.47446362863343794,-0.11,-0.51,0.5275885501867861,0,-0.15290125,-0.51059625,0.5260375321497945,-0.51,-0.11,-0.51,0.4591049516140078,0,-0.04854123100150964,-0.4986272898462002,0.5245013765320454,0,-0.11,-0.51,0.4068468256737313,0,-0.11,-0.51,0.3967181398498556,0,-0.11,-0.51,0.16680848542156843,-0.51,0.11728151906273403,0.29247899663716564,0.5359766953278575,-0.41622155043387704,-0.019888123852907523,0.4010232149146361,0.15119087705585554,-0.49085633640496407,-0.3615404067420048,0.06198708419359526,0.5215604701168957,-0.4761881184686218,-0.06428322681173684,0.026506778362491705,0.5322723524532857,-0.4860449748346925,0.01792945899198877,0.07838424033992761,0.47120181963315966,-0.51,-0.11,-0.01,0.4961321349853562,-0.51,-0.11,0.02638945927833379,0.46484572235164145,-0.46016075484690494,-0.11,-0.01,0.39603756095011056,-0.51,-0.07390512497929609,-0.4001436032998712,0.533105666387724,-0.5058975597938891,-0.02118592013215176,-0.4749398643994252,0.542314674791184,-0.51,-0.11,-0.51,0.5250020658647184,-0.5043583933036574,-0.11,-0.51,0.45693976206831016,-0.498023780750847,-0.3837317138727054,-0.4911094821478978,0.5127182797708265,-0.51,-0.11,-0.51,0.43863864740524683,0,-0.11,-0.51,0.4142498722941745,0,-0.11,-0.51,0.18964610040386976,0,0.01938312564550799,-0.01,0.45552593732285734,-0.4986579999602704,-0.5187620996110734,-0.01,0.5113554194491959,-0.51,-0.11,0.02528981369228464,0.4935408897133533,0,0,0,0.34876322563457796,-0.51,-0.51,-0.01,0.47984953552823095,0,-0.11,0.00940098130513215,0.40280611962716867,0,-0.11,-0.01,0.3749137257795909,0,-0.11,-0.009740500079197658,0.19410009173822357,0,-0.06906791203257674,-0.4948153140447473,0.45305094485238034,0,-0.05647044106317502,-0.51,0.4354790958793179,0,-0.61,-0.51,0.37408443195536706,0,-0.11,-0.51,0.12621241355040333,-0.51,-0.07596708465621319,-0.51,0.405676318517905,0,-0.51057375,-0.51,0.2765128497191578,0,-0.11,-0.51,0.1607050736429129,0,-0.61,-0.51,0.17362852159641443,0,-0.11,0.03645848086357333,0.5434499138565457,0,-0.11,-0.01,0.4189631729050914,0,-0.11,-0.01,0.4107449450596058,0,-0.11,-0.01,0.13504853132097674,0,-0.11,-0.01,0.37009480005642714,0,-0.11,-0.01,0.1793883523667134,0,-0.11,-0.01,0.20972068880002864,0,-0.11,-0.01,0.09,0,-0.11,-0.51,0.46665642893417125,-0.5153408240344879,-0.11,-0.51,0.2954870801347598,0,-1.01,-0.51,0.2151677814742754,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,-0.51,-0.11,-0.51,0,0,0,0,0.1324053235087566,0,-1.01,-0.51,0.09,0,-0.11,-0.01,0.4329245189958532,0,-0.11,-0.01,0.1731435725858678,0,-0.11,-0.01,0.28488077438957016,0,-0.11,-0.01,0.13010894099524936,0,-0.11,-0.010894048947036553,0,0,-0.11,0,0,0,-0.11,-0.022636673804997016,0.1355257131649965,0,-0.11,-0.01,0,0,-0.11,-0.51,0.23747951892374194,0,-0.11,-0.51,0.13467851250640694,0,-0.11,-0.51,0.13167684831852,0,-1.01,-0.51,0.12792299946271554,0,-1.01,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.4848566555636561,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.2103785542311089,0,-1.01,-0.01,0,0,-0.61,-0.01,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0.13440192396104045,0,-1.01,-0.51,0.17992916990960292,0,0,0,0,0,-0.11,-0.51,0,0,-1.01,-0.51,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0.1599909637782498,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.12469975829607813,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.61,0,0,0,-0.11,-0.01,0.09,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,-0.51,-0.61,0,0,0,0,0,0,0,0,0,0,0,0.019959871138342654,0.45732522452227137,-0.18749283697117952,-0.35524560279075806,-0.0226900972846871,0.45667382458265826,-0.3408334409130083,-0.49676770997522435,-0.11,0.45690059758453494,-0.41011137499999994,-0.4741190356574842,-0.10237083697871259,0.435484393301062,-0.394137050385364,-0.510135,-0.03650390506292954,0.4550713382786453,-0.3685731881692783,-0.4045061895918963,-0.06971400351708776,0.4417897935777627,-0.41,-0.48115132137434685,-0.062276882940420455,0.4389320574019337,-0.3761949142461736,-0.51,-0.11,0.29458888988588044,-0.37231875354484456,-0.4783065536009409,-0.4242613434606024,-0.4464813614014021,-0.0296647734924812,-0.51,-0.14676445277885972,-0.4372925727057362,-0.29241139086568524,-0.51,-0.3718136239933959,-0.51,-0.1517356826626824,-0.51,-0.18351778120473602,-0.51,-0.41,-0.4880372287206481,-0.51,-0.51,-0.34365716025479887,-0.51,-0.51,-0.51,-0.36140404988373637,-0.51,-0.45521278585540254,-0.51,-0.3895000278955532,-0.51,-0.11029516649888337,-0.51,-0.41,-0.51001125,-0.061287906619112806,0.38722205502770696,-0.32339335123747703,-0.5114625,-0.17373423198860566,-0.06613914315042688,-0.35802230519273504,-0.5127989207234145,-0.5014586855592087,0.04979442121519631,-0.359262952958882,-0.4819751066057277,-0.11253608576832427,-0.09265328646586943,-0.40144176876683124,-0.51,-0.10643585756367636,0.13897447889744025,-0.3659362211131454,-0.5137941658070581,-0.07137939271295066,-0.11886295155150618,-0.41,-0.51,-0.61,0.038079638170957206,-0.41012374999999995,-0.4876148217112072,-0.11,-0.07622507766338629,-0.3850241532664969,-0.51,-0.15129011376727278,-0.488163591097485,-0.41,-0.51024525,-0.3304191498820684,-0.5241812422958437,-0.41,-0.51059625,-0.11322815556165773,-0.5111393644086679,-0.41,-0.51,-0.15035745795139022,-0.51,-0.36682276773805467,-0.51001125,-0.12410425977235397,-0.51,-0.41,-0.51,-0.11233376215651752,-0.51171,-0.4106975,-0.51,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.010208686282855078,0.33348012166045765,-0.3130708649899601,-0.4947291730072476,-0.14135755969009367,0.34611007443048075,-0.3753673494111635,-0.51,-0.08243757929494289,0.07736781966269776,-0.36756954539095604,-0.49950467383902425,-0.09104129407098423,-0.017470945088423714,-0.41,-0.51,-0.019092761048968877,0.10078332014728288,-0.369341633339684,-0.51076275,-0.11,0.12652719261860754,-0.41,-0.51,-0.10489727613605139,0.06003121517221421,-0.41035673749999996,-0.51,-0.11,-0.01802527022619894,-0.41,-0.51,-0.4003494375548028,-0.47873809223500186,-0.22723692442273352,-0.51,-0.4539151871611749,-0.51,-0.38320867693483035,-0.51,-0.11,-0.51,-0.41,0,-0.10473150328521702,-0.51,-0.41,-0.51,-0.51,-0.51,0,0,0,0,0,0,-0.61,-0.51,-0.39934056599909645,-0.51,-0.1314010148579885,-0.5123043442769339,-0.41,-0.51,-0.11,0.33918924502793796,-0.38235883032197865,-0.51,-0.26351962677782476,-0.15161911278575033,-0.3935123182999622,-0.5115627375,-0.10123728203623622,0.07067502893746627,-0.41125999999999996,-0.510135,-0.10541960476433572,-0.08957869587490903,-0.41,-0.5121220024308143,-0.11,0.09171407298575734,-0.41,-0.511999125,-0.17723690203938286,-0.15152859790489,-0.3944572415818065,-0.51,-0.11,-0.06196697519285927,-0.41,-0.51059625,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.09322242605587053,-0.51,-0.39297515302686264,-0.51,0,0,0,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0.2871033910893278,-0.41,-0.51,-0.11,0.15279626375973498,-0.3661576794484794,-0.51,-0.11,0.09773018504028123,-0.41,-0.51,0,0,0,0,-0.11,0.07602170133410507,-0.41,-0.51,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-1.01,-0.51,-0.3737508849725873,-0.51,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.50290125,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0.06304198400922696,-0.41,-0.51,-0.61,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-1.01,-0.01,0,0,-0.11,0.004445309550698474,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.61,-0.01,-0.41,-0.51,-0.61,0,0,0,-0.61,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.19767322895763348,0.2134778073198876,0.45942201045826203,-0.39445033960574166,-0.08081381300682014,0.07485158038308723,0.44619099738303136,-0.4698499492368978,0.04091182239685957,0.14411508632657116,0.44612643369691224,-0.48026467377903165,-0.61,-0.01,0.42774597314076684,-0.51,-0.22854478350731133,0.11067486369940217,0.38325097339454595,-0.45533828353320815,-0.025015931466330618,-0.01,0.39592093097856274,-0.51,-0.61,-0.01,0.3504189353679502,-0.48132140501158877,-0.11,-0.01,0.2720295293120039,0,-0.022179763229326147,-0.3677223232800336,0.4417818250630232,-0.5042171231150353,-0.0327297394190277,-0.51,0.4535293222880494,0,-0.001175981955526293,-0.51,0.4272721012645532,-0.51,-0.11,-0.51,0.4031316266723392,0,0.009877204561233748,-0.4600395424060536,0.38242290307632854,0,-0.06585264824878745,-0.51,0.33786978591368827,0,-0.07495080500408315,-0.51,0.3401571532027159,0,-0.11,-0.51,0.17784418830913734,0,0.03486758361597166,0.3408134060257614,-0.02161849393809314,-0.5084233623441128,-0.08597483670096612,-0.0817998107788559,0.007818395370785108,-0.5126836268487833,0.013452799989253418,-0.0024223840276273475,-0.020692527138737277,-0.49585289167818747,-0.11,-0.04488244112065287,-0.0384081885716841,-0.5098597404591148,-0.05614729974773613,0.1733426637783159,-0.013808192585581549,-0.5048736415998492,-0.0744784785820767,-0.06701680178536502,-0.08801097562714306,-0.5039390068462107,-0.11,0.02372940224978308,-0.03849193418802772,-0.51,-0.11,-0.0106975,0.012358087165362741,-0.510135,-0.08706645804301441,-0.4924153545675129,0.003347551251836252,-0.506298751132983,-0.09152486912112869,-0.512653292932845,-0.017722912906252556,-0.51,-0.11,-0.493132601625351,-0.04002464406240199,-0.51,-0.11,-0.51,0.036661229465795774,0,-0.11,-0.51,-0.016168597352341,0,-0.08395606753939455,-0.51,0.014729921370964082,-0.51,-0.39131345547849844,-0.4878619548236577,-0.08698864344294155,-0.510135,-0.11,-0.51,0.04507909493115908,0,0.00710286617835601,0.028762116089002844,0.3273374783494413,-0.5021467876775566,-0.11,0.02840482189826589,0.3322254533825074,-0.51,0.23630798306491554,0.016133898465308483,-0.014457149057675957,-0.48343305954629345,-0.031633010729697146,-0.030049414616118417,0.022572127842153983,-0.51,-0.11,-0.01,0.11080225982102185,-0.49885885024694543,-0.11,-0.01,0.06411313520077483,-0.51,-0.11,0.026737205503207864,-0.009244330457623136,-0.51,-0.11,-0.01697553847945564,-0.019451026936059455,-0.5100223717421266,-0.11,-0.4785745671478741,0.35862553406679104,-0.51116775,-0.11,-0.51,0.3146972122666409,0,-0.07274676585221107,-0.5019647222358187,0.013405899569678949,-0.51012375,-0.11,-0.51,0.04630430396371692,-0.51,-0.11,-0.5050511125915866,0.08848930059670936,-0.51,-0.11,-0.51,0.07924166088714782,0,-0.11,-0.51,0.03529410392442518,0,-0.09947567819339344,-0.51,-0.018429941123618145,-0.51,-0.07438602135914521,0.3286064210027776,-0.021488259799975703,-0.51,-0.13501345221205108,-0.09356767162485154,-0.046544302159911434,-0.51059625,-0.08792877075244195,0.07905354421922514,0.0006785992114826194,0,-0.11,-0.01,-0.007676907149337268,-0.51,-0.044059763308765154,0.11749908481381191,-0.02054532020127606,-0.51012375,-0.12200556904119561,-0.05224859254722977,-0.05060416042913138,-0.5085464604269919,-0.11,-0.01,0.04029540180585585,0,-0.11,-0.0156444560853127,0.05488910494700189,0,-0.0881485801494931,-0.51,-0.017970516612184587,-0.512475,-0.5042661444447071,-0.51,0.000240007888268454,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,-0.51,-0.11,-0.51,0.08867475,0,-0.08803344952329825,-0.5106975,-0.07522037182197958,-0.51,-0.11,-0.49904403054006596,0.01571460612290987,0,0,0,0,0,-0.11,-0.01,0.3100243452802066,0,-0.61,-0.01,0.21642482535621582,0,-0.61,-0.01,0.12908924307877678,0,-1.01,-0.01,0,0,-0.61,-0.01,0.24252742379307723,-0.51,-1.01,-0.01,0.1625407546780075,0,-0.11,-0.01,0.1274127492057416,0,-0.11,-0.01,0,-0.51,-0.11,-0.51,0.1804507033402715,0,0,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.003908844272459404,0,-0.11,-0.01,0.08997197903971733,0,-0.11,-0.01,0.09,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0.09,-0.51,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-1.01,-0.51,0,0,-0.61,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.1614919233798325,0,-0.11,-0.01,0.09108648908633986,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,0.08237988451455969,0,0,0,0,0,-0.61,-0.005471394943340262,0.033251444057384255,0,-0.11,-0.01,0,0,-0.11,-0.51,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,-0.00410852238961624,-0.51,-1.01,-0.01,0.09,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.010301822480509714,0.4474845787516805,-0.37934862540586844,-0.5010438505393794,-0.11,0.43908291955842826,-0.37462445764536534,-0.51,-0.11,0.433005467517581,-0.41,-0.51,-0.11,0.289699629096387,-0.41,-0.51,-0.07090709913464088,0.291800305465553,-0.41,-0.484051231730134,-0.11,0.16680193124722045,-0.41,-0.51,-0.11,0.21220232125011174,-0.41,-0.51,-0.11,0.006918549227878058,-0.41,-0.51,-0.44903243637515655,-0.51,-0.3573302480779571,-0.510135,-0.33085683908817465,-0.51,-0.41,-0.51,-0.4315898959952874,-0.4993861637159243,-0.410820125,-0.51,-0.11341409212841883,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11096081899638124,-0.51,-0.41,-0.51,0,0,0,0,-0.11,0.36776671534381666,-0.41,-0.51,-0.61,-0.13465215042569284,-0.4255494936067399,-0.5053671140931675,-0.11501250727564077,-0.11537577115777763,-0.43300391531968524,-0.5014326448657126,-0.13096822196958427,-0.1495873931870328,-0.43446839360673206,-0.51,-0.08907471885338791,0.07300865281167429,-0.41,-0.5114625,-0.61,-0.01,-0.41,-0.51,-0.6045992195402463,-0.09136728490964968,-0.41012374999999995,-0.51,-0.11,-0.01,0,0,-0.4379142307171686,-0.51,-0.49054299638377197,-0.511315125,-0.61,-0.5177806807665347,-0.5185225244508939,-0.510135,-0.51,-0.51,-0.41137385,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.043994646562185484,0.34992426280839767,-0.41013499999999997,-0.511464778125,-0.61,0.19010286831794515,-0.41,-0.51,-0.0754960205064079,0.006240653719127694,-0.412025,-0.51,-0.11,-0.06820123525423108,-0.41,-0.5114632846875,-0.0748015058805502,0.18830114939464493,-0.41,-0.51,-0.11,0.1170824332660065,-0.41,-0.51,-0.11,-0.029176968979253752,-0.41,-0.51,-0.11,-0.0025429547207087896,-0.4200968615998574,-0.51059625,-0.11,-0.51,0,0,0,0,0,0,-0.19686963126088033,-0.5111007244464326,-0.41,-0.51068625,0,0,0,0,0,0,0,0,0,0,0,0,-0.51,-0.51,0,0,0,0,0,0,-0.11,0.18502813978011856,-0.41,-0.51,0,0,0,0,-0.206315125,-0.03768304947565759,-0.41,-0.510135,-0.11,-0.01,-0.41,-0.51,-0.11,0.021152257487808426,-0.41,-0.51,0,0,0,0,-0.11,0,0,-0.51,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.21865528107704385,-0.41,-0.51,-1.01,-0.01,0,0,-0.61,-0.01,0,0,0,0,0,0,-1.01,-0.01,-0.41,-0.51,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,-0.49975869207263585,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.01,0,0,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.61,-0.01,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3166811510397582,0.4359624189782259,0.5418018676145891,0.36470369966655625,0.29419324884736464,0.4423986354094008,0.3317606971275287,0.33943327567980397,0.288159345192176,0.3767856274230892,0.5226329782549893,0.36100202831744715,0.07534779951974613,0.32004594651843243,0.5235223433320959,0.11243881040396761,0.2773118210197036,0.2694862041910874,0.3050114980706809,0.3020378825866879,0.231814504816724,0.24301079353382024,0.24031640478952593,0.3142526292930448,0.07880196077729662,0.22041319387034677,0.21041427610228314,0.34906173761747905,-0.05456218226711365,0.25881771937985965,0.15192314104226812,0.030939466655418225,0.30450554091152543,-0.07753790304470183,0.5286069068384617,0.2897004504390168,0.22516198706604015,-0.09925857091479084,0.5318314980725174,0.2484438095997879,0.10376957921439024,-0.18879763583436876,0.5555104593135153,0.2633781913956554,-0.22979479611199968,-0.4674414620562386,0.530365198475067,0.20874279929864972,0.2700534453285776,-0.19204363962761,0.403674208311372,0.29506009065985955,0.128526949873279,-0.4909479790162804,0.4335619897379442,0.06376348410654302,0.03953709976375976,-0.4357349004054565,0.4938736663416923,-0.01,-0.025693702826915236,-0.51,0.2827721338980009,0.016183935692898513,0.25288714351590624,0.3813779269141381,0.5360809865071274,0.3252493091735768,0.17831252302083184,0.311990876539549,0.25238258661528806,0.3739395847525171,0.1315243403798252,0.3515243976888627,0.5287106579815941,0.28309281870201725,-0.07896216341271718,-0.01,0.5450591578761612,0.12477345330144408,0.15015887292020122,0.21543082451826476,0.28376462226435645,0.3793362845949536,0.029385843987141953,0.07561451079904555,0.13356568711605468,0.33837625245821285,0.053849101787141536,0.11999712563505958,0.49365959708173995,0.12097394692019035,-0.05022627708383613,-0.01,0.46032945657832697,0.02580603877469738,0.09796461946252986,-0.27931616318883495,0.5216043651186865,0.2790650062924831,0.03630423468892346,-0.46364581375906105,0.5306016190220894,0.06238967576039912,-0.11,-0.4275900974084905,0.5393533003505268,0.029014485631184958,-0.07228822702024548,-0.4776127784784539,0.5216842898517113,-0.01,-0.11,-0.4830869710088892,0.3645592017939342,0.022101827204903328,-0.11,-0.51,0.25477034915356495,0.06759024591069288,-0.61,-0.5128204660391517,0.5097013520752952,-0.01,-0.11,-0.51,0.36622594313733925,0,0.2865713771489626,0.36737226254105937,0.29205523514164766,0.2719136873181109,0.13425214372991862,0.3280724766092045,0.2668735450800193,0.2380646521848902,0.19885009078455346,0.1709759335738305,0.1729209697117115,0.18356630040750427,0.15569666990936198,0.21788633060591556,0.4928545248063645,0.11950065439097012,0.20627853260598494,0.19686375967503827,0.18555055955234473,0.28957666479716426,-0.1998983030439703,0.14705074965129605,0.4708746570508489,0.09643770781508078,0.06355736164348172,0.17878017842596589,0.38354108781056623,0.12400625507641237,-0.13701896501815783,0.024586972185965852,0.24796669985432024,-0.01,0.10259107391842281,-0.2044863690553356,0.4985629022645436,0.20639712210766623,0.05239792250883116,-0.3861252511267668,0.49639823970498675,0.026421914063093327,-0.028293124610774118,-0.3649994111131032,0.4249862876872852,0.09242129214274046,-0.11,-0.4846313045562997,0.45894194103278446,0.00472893140110245,-0.06380455363188771,-0.4210561493996313,0.3216450979078571,0.055454191914616716,-0.03653196867725817,-0.48547480668247023,0.4891196492931333,-0.01,-0.11,-0.48956530526430664,0.4103455345332938,-0.01,-0.5164488589205236,-0.51,0.302150421073635,0,0.21742527291025274,0.22837504781163112,0.2277456205673128,0.17120911396826105,0.1278807671173505,0.16061333101571418,0.48852738503194043,0.08566405704412025,0.10203812715124985,0.19222052616074017,0.4931866323340653,0.15979724098768586,0.0035424949950131485,-0.01,0.4979906135309887,0,0.16616632396933867,0.16685997215488596,0.158905281848665,0.2596218708469121,0.008377352839179314,0.1163899955869953,0.11214003337942356,0.23837958454524388,-0.11,-0.01,0.3408893950892425,-0.01,-0.11,0.05746476288559532,0.07114386693199938,0,0.06603269641809026,-0.44308819704535574,0.26423342029095137,0.02502560238257169,-0.13779612518978673,-0.512025,0.42295585447287054,-0.0007830902365602403,-0.025744176649513402,-0.48570294605904124,0.4250238680262516,0.0387415220873811,-0.11,-0.5037151866205296,0.3286624915584932,0,-0.11,-0.51,0.3966397863446333,0,-0.11,-0.51,0.3817776623285872,0,-0.11,-0.51,0.3425101663486122,0,-0.11,-0.51,0.22742932538988234,0,-0.6496005604753852,0.20567245126653924,0.49727491949416563,0.06098862922629922,-0.038594094106991675,-0.01,0.48746833390791966,-0.01,-0.11,-0.01,0.4880852817219594,-0.01,-0.07143075020076727,-0.01,0.45500088855143905,0.028770592573396245,-0.11,0.06913543711190293,0.4814377585382927,0,-0.11,0.034239583550584686,0.3082920484786951,0,-0.11,-0.01,0.40960339410466035,0,-0.11,-0.01,0.17116966867906247,0,-0.04960491871031977,-0.51,0.5489415282765705,-0.01,-0.11,-0.51,0.4155162226825481,0,-0.11,-0.51,0.470861513302008,0,0,-0.51,0.18035545257297536,0,-0.9209454179016413,-0.49251816561411854,0.31185433411485836,0,-0.11,0,0.1290544709978766,0,-0.11,-0.51,0.17353389795179378,-0.01,-0.11,-0.51,0.1366019924433682,0,-0.11,-0.01,0.509052202847016,0,-0.11,-0.01,0.4140316415884596,0,-0.1114625,-0.0129236274434642,0.4985561872812019,0,-0.16,-0.01,0.21234002658523743,0,-0.11,-0.01,0.42035131600033887,0,-1.01,-0.01,0.1363584854548144,0,-0.11,-0.01,0.27308384337838304,0,-1.01,-0.01,0,0,-0.11,-0.51,0.4486503718345472,0,-0.11,-0.51,0.2512499384686348,-0.01,-0.11,-0.51,0.3176092947435851,0,0,0,0,0,-0.11,-0.51,0.12873425962286866,0,-0.61,-0.51,0.13307075630513673,0,0,0,0,0,-0.11,-0.51,0,0,-0.9312106896085046,0.10326864732881766,0.42300629838002074,0,-0.11134427399630811,0.004693154216759138,0.41941827653798425,-0.01,-0.11,-0.01,0.3597911125612604,-0.01,-0.12446870780419662,-0.01,0.10683574387003181,0,-0.11,-0.01,0.2380251554916157,0,-0.61,-0.01,0.18888005139683156,0,-0.11,0.019207832750962217,0.22571595328759617,0,-0.61,0,0,0,-0.61,-0.51,0.37278730200274757,0,0,0,0.35606460323906625,0,-1.01,-0.51,0.19224669535627542,-0.01,-0.61,-0.51,0.17380066764100405,0,-1.0022362953514923,-0.51,0.21990509047022452,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.0826720819061098,0,-1.01,-0.51,0,0,-0.16806725098955097,-0.01,0.24966153497143462,0,-0.11,-0.01,0.27137467920801783,0,-0.11,-0.01,0.15726131954319822,0,0,0,0,0,-1.01,-0.01,0.16972347985049205,0,-0.11,-0.021137500000000004,0.09,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.24611989030660691,0,-0.11,-0.51,0.14872749349804285,0,-0.11,-0.51,0.09,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0.21200477653297653,0.46118634050000307,-0.04126670360371482,0.3131541979275473,0.21428106779733544,0.45598730288639183,-0.07486152916686906,0.2770670481270125,0.048904268053543365,0.4601841130572107,-0.2697275020070945,0.2783151253917781,0.043902031288252194,0.44761967245398454,-0.3066418789856307,0.10662570821672981,0.10749818267822406,0.4527802183093298,-0.1937475813061589,0.2853455405370033,-0.14553476758211295,0.4445717956346415,-0.2550591668253913,0.18950553656249675,0.07361615283801383,0.40926620137791286,-0.38642078287006015,0.1673853387504909,-0.11,0.4057037968118439,-0.4106975,0.02269397875632983,-0.08314013931801975,-0.09480305479398038,-0.009596938728737042,-0.01785127805708299,0.0013771958047079438,-0.12522123863837073,-0.05813334216512948,0.09942934949883032,-0.05958140511809533,-0.26659936241442783,-0.3467654095892855,0.017996884126531103,-0.11,-0.3816603830744671,-0.3468267861973937,0.1207370852289928,-0.06383713818346348,-0.2873595452103508,-0.3359786794295949,-0.013289909487124687,-0.16742982886923097,-0.4806015060743944,-0.3332340573984405,0.0751532627671309,-0.07749545747354535,-0.4530634517689477,-0.3993006289139616,0.06840985529504459,-0.11,-0.51012375,-0.41,-0.014946693372120767,0.058856807814254584,0.39065756635030896,-0.14868328394701302,0.04500178283191379,-0.054500360686787666,-0.0035242223964707074,-0.021815800689394677,-0.004111156529724295,-0.1070895937064294,0.07169174655504261,-0.16699982011863806,0.0067039285830103375,-0.13884254814998565,-0.016555485530598966,-0.21548110003950655,0.06229366830625324,0.16774148184511564,0.06711298923750005,-0.22520660501922646,0.08427036769961224,0.10662964459298883,-0.02197516149284407,-0.23136274322266162,0.009178013729449895,-0.05541428538172229,-0.005580514179637158,-0.3807710095706734,0.0497336475515802,-0.08630873469795963,-0.027858588996831524,-0.38166115591764294,0.02829894305236315,-0.18815569802818216,-0.31535941414626567,-0.2129601603450154,0.06118214536966812,-0.17412427298099667,-0.4966474033962864,-0.24311857410725024,-0.0008077211701693413,-0.10089004813351844,-0.4695471761098655,-0.39571006065085923,-0.024260133336970954,-0.08229941044109981,-0.5140268630944695,-0.3672417180813287,0.028220659726747102,-0.040026294029536946,-0.4226776416075182,-0.36420123429597984,0.07103202520946532,-0.11,-0.5089281338252992,-0.41,-0.01628982387184963,-0.11,-0.51,-0.41,0.1416889098213015,-0.61,-0.5061242599989104,-0.40290125,-0.0002685238949347961,-0.09050936093357488,0.3689682640960073,-0.17686888469086934,0.08001409845835158,-0.11,0.3525805207506132,-0.3140615146997697,0.026964861684983694,0.021176275385403835,0.0646990880628294,-0.16402853000005158,0.03573902751351701,0.03061005519389926,0.04317031991510374,-0.22479525401637107,0.061961396912540406,0.08543172274157529,0.15849510640076458,-0.290337955368867,0.07706416998454649,-0.10461294359707947,0.1765509671251168,-0.28714677621297935,0.021594644917975844,-0.1514096720904723,0.057200329154752885,-0.3518385838961697,0.1264204959792413,0.1343755398501198,0.0118345028464578,-0.315682805417174,-0.014932224368033124,-0.20412704402174955,-0.384049300842327,-0.23660462963956522,-0.032108218147865526,-0.09995930024687824,-0.4963309111133202,-0.36874521210634525,-0.03676799476731745,-0.45091182093953075,-0.4841551834175577,-0.3715873252911686,-0.0486674014992555,-0.5342397856407346,-0.51,-0.41,-0.0026858661623322105,-0.12872611219724223,-0.4561449353262664,-0.4111475,0.011508971865591326,-0.11,-0.5029125,-0.41,0.10312660963572311,-0.08907490378296225,-0.509465139958615,-0.3754678268617211,0.054212792767723096,-0.11,-0.51,-0.41,-0.01,-0.044310589758030434,0.33948832516790806,-0.38374938819747173,0.010387634329169705,-0.02910100851986882,0.0044210562326546686,-0.2527671347835441,0.055535681327715705,-0.03141108252850613,0.012081467658525595,-0.3112840587142201,0.09964167129204535,-0.5126221720475805,-0.041677943247883285,-0.39679195641770926,0.1045138344621651,0.17433593522129012,0.02006054757972627,-0.41,0.03591099385972822,-0.11,0.006948572059332083,-0.39565996890975913,-0.0209191608776931,-0.027315669157090994,-0.041248759219172496,-0.41090911249999995,-0.005961773116946771,-0.060654022301049666,-0.03410735771479401,-0.41012374999999995,0.0287162296620291,-0.08299511372416907,-0.47255125988994123,-0.41,0.049487826468006896,-0.11,-0.5007780212432021,-0.3928572693361203,-0.008484066233088911,-0.11,-0.51,-0.41012374999999995,-0.02165061970668469,-0.11,-0.51,-0.41,0.026903191630372997,-0.08407727984228605,-0.4988662661222356,-0.41,-0.031293190347949244,-0.11,-0.51,-0.41,-0.010257019843344806,-0.11,-0.51,-0.41,-0.05107776235485281,-0.10062012510273405,-0.511814326082912,-0.41012374999999995,-0.017471596655668636,-0.11792345224822595,0.4479091645007962,-0.41,-0.01,-0.9352881331843157,0.37680872795040016,-0.41,-0.017897632599169287,-0.61,0.41810147184129776,-0.41,-0.01,-0.11,0.14430370662197353,-0.41,-0.01,-0.61,0.34176523139234133,-0.41,-0.0076543329217331375,-0.11,-0.01,-0.41,0,-0.11,0.10185732655521562,-0.41,-0.01,-1.01,0.0325086246700509,-0.41,-0.01,-0.61,-0.51,-0.41,0.02163681216073517,-0.11,-0.51,-0.41,-0.011512367102473048,-0.11,-0.51,-0.41,0.07655806565818796,-1.01,-0.51,0,0,-0.11,-0.51,-0.41,0.011550343754343365,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,-0.13360182220530326,0.36183045029714717,-0.41,-0.0106975,-0.11,-0.024313504939832472,-0.41,0.026386120133718945,-0.11,-0.018075896231131497,-0.41,0.043028364620831566,-0.5293144097333974,-0.01,-0.41,-0.01,-0.11,0.060750049439302636,-0.41,-0.01,-0.11,-0.029322228299253503,-0.41,-0.013687247051057425,-0.11,-0.01,-0.41,-0.01,-0.61,0,0,0,-0.11,-0.51,-0.41,0.00787443963839414,-0.11,-0.51,-0.41,-0.012340084116756082,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-1.01,-0.51,0,0,-0.11,0,0,0,-0.5732102684793325,0.32292361716311774,-0.41,-0.01,-0.11,0.027906810620598507,-0.41,-0.01,-0.11,0.040524957901873576,-0.41,-0.01,-0.61,-0.01,-0.41,0,-0.11,0.07774380502719366,-0.41013499999999997,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.61,0,0,0,-0.61,-0.51,-0.40290125,-0.01,-0.11,0,0,-0.01,-0.11,0,0,0,-0.61,0,0,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,-0.11,0.20419351141134637,-0.41,-0.01,-0.61,-0.01976732562353742,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,0,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.0106975,-0.11,-0.51,-0.41,-0.01,0,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.61,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0.23788793283501697,0.3408355173491787,0.24867018316491832,0.24667281713650346,0.1618578829833271,0.22954277652016528,0.43511639939596375,0.1937945313574846,0.19146299103800063,0.20364613865330716,0.47855241947579463,0.15204569567421686,-0.06939031443631714,0.10566222411804779,0.46159372217624806,0.047568922158625924,0.17367950662199788,0.18012800845082466,0.42887221836139006,0.1668902374317824,0.07113522436641083,0.07754576606020473,0.3971693725792565,0.11710119523477673,-0.34900845269671443,0.14296186895966273,0.2791644865104992,0.06437429604314163,0.0023040650842632467,-0.01,0.2610763854600494,-0.01,0.25501710672893335,-0.15350740711565372,0.32810241444279414,0.2026738665756193,-0.06540919820138663,-0.28277287124270817,0.4591565610168432,0.08704952606063802,0.10337143154786158,-0.51,0.45378136199567876,-0.01,-0.06569052414848245,-0.51,0.46713369172062447,0,0.07326191120369438,-0.4924959859261041,0.36815196468437467,0.09143934556654743,-0.029029243307147887,-0.49283464690546525,0.3298891992813667,0.0212297546814963,-0.51,-0.41121128735785434,0.30962899274685096,0.0075494258512136345,-0.11,-0.51,0.3030826368679595,-0.01,0.1854702603462663,0.3776631847573644,0.012535335792547408,0.07390005019375963,-0.0021562042769105796,0.028789822968702826,0.014651723078411947,0.028455401117315184,0.16186476029113445,0.05018408442861318,0.0001900452661103523,0.050634421867861865,-0.014387052785789521,0.016684405898035187,-0.018177494428778453,0.11338698080764484,0.2647147757516254,0.11498838673106307,-0.020233678341832338,0.05741696007732493,-0.060245647954968735,0.04919930348371432,-0.005759530572134365,0.06944882797939607,0.005061893593055734,0.09275374220011562,-0.009043926004783409,0.04635375541297498,-0.4340966217055164,-0.006602849293486523,-0.020575008106401352,-0.027203874398959764,-0.027879953396123706,-0.24222306211797046,-0.008058744280752605,0.021622174266674694,-0.01963848524692293,-0.4574574874368422,-0.029412744347318203,0.10022310028310956,-0.0380735825583743,-0.4762206812129255,-0.029198030797019197,0.009773392358216046,-0.11,-0.5072264693310076,-0.005067154129605602,0.02072459644651487,-0.02394144758237903,-0.4458482383650128,-0.04113372329703679,-0.0022539416382276974,-0.1477197224790826,-0.51,-0.0048572974414312345,-0.01,-0.03670577709574944,-0.4956292605928518,-0.0190851158220222,0.05438142063097971,-0.11,-0.5093883475799836,-0.004267907637320897,0.07209797069101899,0.11734059007433383,0.37231610441358476,0.1771232792196885,0.08821139506042946,-0.07177542311646531,0.06036097769493644,0.3955469772304468,0.023143888616602444,0.023391680306936433,0.1398735670571383,0.03767994806261567,0.09295153078306809,-0.03338822939539804,0.05007544622419376,0.018439526959170695,0.014353840015110243,0.011930921225337076,0.0518269884484696,0.12079198677246952,0.025278877491117617,-0.11,-0.01,0.09843886300806653,0,-0.08905537206652087,0.004317427977329544,0.04141300672939907,-0.0006972271354799206,-0.06632483839278638,-0.011105689664005493,-0.011356263552841878,0.0002497015213572283,0.03296142896047888,-0.39680895281542955,0.3496059976728957,0.030862877816146984,-0.026357172335805812,-0.5106975,0.3034635475079814,0,0,0,0.05256252013531094,-0.01,0.16262395910362362,-0.5019330548970563,0.008455469104840997,-0.006447962569681364,-0.5690787218832017,-0.49882160906774475,0.10303739351002429,0.012430760072879292,-0.11,-0.51,0.07799400144350875,-0.01,-0.51,-0.51,0.04139830066765648,-0.01,-0.015295838052197901,-0.51,-0.00999196742781211,0.050783145966541696,-0.04823043032954965,0.3647130149369969,0.015018011450796759,0.04627768286405905,0.018617634121044717,0.03841978824665483,-0.0015800977889241482,0.056370203336758365,-0.003705177174641177,0.010185274738410846,-0.008209058432428622,0.009848819321522286,-0.2251896319873491,-0.059377461053409755,-0.030110222074493116,0.056611100310415996,-0.06500276480822523,0.11309607640037571,-0.0012502317410096212,0.014035310102803625,-0.61,-0.008122398229159666,-0.00936198698373817,-0.006569607680552675,-0.0810051573379045,-0.01,0.007308211435422632,-0.01,0.00996316793419949,-0.01172125,-0.010625266942283357,0.040007204969420555,0.13945325833715716,-0.4293471591878277,-0.011438195592138014,-0.008324800434731213,-0.11,-0.4978297403633382,-0.01628011078612242,-0.007066846795980021,0.18250995607634968,-0.44241374273310957,-0.02256127058006961,-0.005142404724538826,-0.07460260814036476,-0.5051691159135998,-0.03075401458853936,-0.029567283008712582,-0.1288097658488857,-0.5111344822831325,-0.024531758900652522,0.01667023605791451,-0.5278700631484075,-0.5125875,-0.011968212173349696,0.01620417425460394,-0.050478375768118866,-0.51,-0.010767336428799066,0.05099384408027756,-0.61,-0.51,0.06454343060566431,0,-0.03456670326122389,0.10902722733432445,0.3673336930991746,0,-0.07021332592535409,-0.01,0.34731395792247344,-0.01,-0.11,-0.01,0.40662041886525474,0,-0.11,-0.01,0.09,0,-0.11,0.03147489432845005,0.244839683695452,-0.01,-1.01113625,-0.01,0.19705296006505896,0,-0.11,-0.01,0.15431197023851081,0,-0.61,-0.01,0,0,-0.11,-0.51,0.3805557583290109,0,-0.11,-0.51,0.23302463486117828,0,-1.01,-0.51,0.15977778321761646,0,-0.11,0,0,0,-0.11,-0.51,0.2834784202027254,-0.01,-0.11,-0.51,0.16492758607080518,0,-0.11,-0.510135,0,0,-0.11,0,0,0,-0.11,-0.01,-0.01320491374748143,-0.0062040140673980445,-0.11,-0.01,0.022416390368870175,0,-0.11,-0.01,0.038258944900213344,0,-0.11,-0.01,0.05351236474821189,0,-0.61,0.09526070325098888,-0.01188132279169579,-0.01,-0.11,-0.01,0.09,0,-0.61,0,0,0,-0.11,-0.01,0.09,-0.01,-0.61,-0.51,-0.014180282518138937,-0.0029438284383771344,-0.11,-0.51,0.08583550554613188,0,-0.61,-0.51,0.0497831084907627,-0.01,-0.61,-0.51,0,0,-0.11,-0.51,0.06740183209665893,0,-0.11,0,0,0,-0.61,-0.5093032963715424,0.09,0,-0.61,0,0,0,-0.61,0.05431209885846503,0.23240321037501638,0,-0.11,0.03091537742929147,0.18383781251130416,-0.01,-0.16160875000000002,-0.0036705113227929256,0.015778853423873862,0,-0.11,-0.01,0.061609405991760735,0,-0.06994205541257789,0.00839442407902921,0.0750466832048951,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.05355927991273259,0,0,0,0,0,-0.11,-0.51,0.1675531030108666,0,-1.01,-0.51,0,0,-1.01,-0.51,0.062065004267859686,0,-0.11,-0.51,0,0,-0.11,-0.51,0.10942574674755891,0,-0.11,0,0,0,-0.61,0,0,0,-0.61,-0.51,0,0,-0.11,-0.01,0.009317422252394575,-0.01,-0.61,-0.01,0.07361335717530079,0,-0.11,-0.01,0.018391058607628925,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.05529443000373285,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0,0,-0.11,-0.01,0.07842988641989303,0,-0.11,-0.51,0.07806141577445332,-0.01,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.055456602976090855,0,0,0,0,0,-0.61,-0.51,0,0,-0.11,-1.01,0.07190607444094965,0,0.20813014823552797,0.4527735602031192,-0.29641300047090946,0.2284243790823263,-0.18819774151739124,0.43451585444724833,-0.30037661089500656,0.14464382073306103,0.07609886179668812,0.4456919644462623,-0.3940476570467494,0.021318465521112655,-0.11,0.42342657509880033,-0.40823265055544894,0.017599893618412257,-0.01865344082410241,0.38316845007213013,-0.3641673430476945,0.1615267880048143,-0.11978497338652133,0.3774683275599471,-0.41,0.017974358249704274,0.09239589337873558,0.16367463318940573,-0.41154023749999996,0.040770171111546724,-0.0730263972262021,0.2938324366645594,-0.41,-0.01,-0.03299892128623511,-0.3660073689202793,-0.2231882113127995,0.04584209597364135,-0.06778640172253533,-0.379013345143846,-0.2238829929941579,0.0387861032546777,-0.4105016901753235,-0.4449337072501198,-0.3827074657834134,0.04932924266999163,-0.11,-0.50290125,-0.38511340630786184,0.05637030727874122,-0.5254201442369953,-0.4710499868378525,-0.3764369964938754,-0.022821240581473563,-0.07789947326859226,-0.51,-0.3828173765167198,0.029045822281130597,-0.06502716551210906,-0.4893959189598271,-0.41059625,0.0018173115863298304,-0.07924755291398072,-0.50290125,-0.41,0.009237942863144062,-0.03835030115581477,0.3859212546587933,-0.43909823036582557,0.0312862876070267,-0.069050662910703,-0.007421656983708289,-0.4682317950693993,-0.04333653299117855,-0.05963280741989923,0.004437084543491885,-0.4302649384498097,-0.030516247121437055,-0.07128211773677798,0.0024139430519177687,-0.41543445061405065,-0.0058230354442150994,-0.025037973208691118,0.03838946290316438,-0.42521743273347223,-0.02140373109819576,-0.07177559110654652,-0.04947700256081551,-0.4183208556105146,0.01951208125425932,-0.0318952321526919,-0.020311308487170526,-0.41260872875,0.010762179437079869,-0.0635086362193902,-0.04467230205646864,-0.4225355122843409,-0.02255929543961735,-0.08870129168872862,-0.4453054125008,-0.43445662667632295,0.006613046555452327,-0.0768129533525867,-0.51,-0.42452347271672236,0.008190659214772656,-0.61,-0.51,-0.41213637499999994,0.0010354801898031579,-0.11,-0.51,-0.41,-0.012608283176936637,0.1418027316295975,-0.4854536690735037,-0.41,-0.025680856000817445,-0.11,-0.51,-0.41,-0.011578435984555713,-0.11,-0.5119145503125,-0.41,0.019188968511839332,-0.11,-0.51,0,0,-0.05347622283907973,0.35217076450648094,-0.4003051747222984,0.006305557517329949,-0.51,0.35031030554397263,-0.38775201729658115,-0.01,0.1695041511263384,0.0016325131121556731,-0.4338788452600809,0.002612127927249045,-0.13898399517278406,0.014929796324895217,-0.4280041675823672,-0.0572552870723036,-0.07017724052384575,0.15607823604893217,-0.4102292666210282,0.03504581100038339,-0.0863272962011272,0.17112111789015683,-0.41,-0.01933142241679785,-0.04963791578990741,0.08976325260941914,-0.4143863130826379,-0.007283320518394781,-0.059564834393619176,-0.010038276045026252,-0.41,0.024017209294620694,-0.08245166169158692,-0.43834206041852275,-0.410536625,-0.005040175794390152,-0.0734521829363976,-0.51070875,-0.40105431288056614,-0.03993427347297756,-0.06508218931122135,-0.4849845490387701,-0.41,0.03765420035584341,-0.11,-0.51,-0.41,0.013705586672110684,-0.11,-0.51,-0.41,0.014223849790568925,-0.07787947291113745,-0.51,-0.41115874999999996,0.013526344070620151,-0.11,-0.51,-0.41,0.0430861907439217,-0.11,-0.51,0,0,-0.11,0.34067748336887355,-0.41,-0.01,-0.054827702549495386,-0.021051432645387978,-0.4238255158175019,-0.0028161940646423073,-0.436897397143189,0.06503980359358605,-0.41,-0.02952629200197669,-0.049543688498432395,-0.04918602955332409,-0.41,-0.048895009562726875,-0.09168333700572413,0.012651524083714123,-0.41,-0.007591304358674943,-0.11,-0.013255184034451323,-0.41,0.021333604156967126,-0.11,-0.010840891332811398,-0.41012374999999995,0.015225332323569325,0,0,0,0,-0.11,-0.503344853757012,-0.4306264602457406,-0.04606299196304921,-0.11,-0.51,-0.41,-0.02517804052898493,-0.11,-0.51,-0.41,-0.01011441587127691,-0.08779887323273683,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,-0.00520537019313329,-0.08199352445993066,-0.5114625,-0.41,-0.02609008057667812,0,0,0,0,-0.11,0.38017805983070607,-0.3794368169765096,0.012420544470404698,-0.11,0.23465888970398263,-0.41,-0.01,-0.11,0.18830189219722476,-0.41,-0.01,-0.61,-0.01,0,0,-0.11,0.16448009003334116,-0.41,-0.01,-1.01,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,0,0,0,0,0,-0.61,-0.51,-0.41,0.00751017329010221,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,-0.01,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,0.19379578721289564,-0.41,-0.01,-1.012705115580731,-0.034172921608194115,-0.41068625,-0.03087307324382839,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.011362272825214844,-0.41,0.016336136672144872,-0.61,-0.01,0,0,-0.61,-0.01,-0.41,0,0,0,0,0,-0.61,-0.51,-0.41,-0.0106975,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.14686613393746767,0.24930462319107327,-0.41,-0.0106975,-0.11,0.029988403949349297,-0.41,-0.01,-0.11,0.048796780023731626,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,0.0029624392756414115,-0.41,-0.01,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.016929574784009117,0,0,0,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,-0.41,-0.01,0,0,0,0,-0.11,-0.01,-0.41,-0.01,0,0,0,0,-0.61,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.61,0,-0.41,0,0,0,0,0,-0.6114625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0.314699495117895,0.4496510375703609,0.35877441133514915,-0.1632070515236652,0.2555159301757766,0.33264654766824453,0.532884789414471,-0.2517059704123448,0.1964207122849389,0.28783991625045935,0.537552693943858,-0.27841618314033667,0.10401499000776979,0.17692434278874034,0.5338832778527234,-0.4197792911627595,0.21216446207068634,0.35454302566452484,0.2016949023766344,-0.2734731331585511,0.07364913582792043,0.11179282772435004,0.5050893118158779,-0.4141664516878832,-0.037538738134444014,0.16915146831732725,0.5119639773309829,-0.40708107536522714,-0.02280692036853886,-0.01,0.41155203129375884,-0.4420384046065515,0.12413868580598726,-0.12910387307635604,0.5298971575142207,-0.2860079140607626,-0.4261845774583631,-0.32610391994959564,0.5306925496759825,-0.44297985212565016,-0.025101467213900865,-0.2631145482947838,0.5461210044835711,-0.51,-0.11,-0.45543447969906575,0.5107712436337546,-0.44973043728458906,0.07155188218077185,-0.4755041201729586,0.49060282795917615,-0.4350414615254729,-0.5180050997337612,-0.4660547354255517,0.5321332135844973,-0.51,0.072189691283604,-0.4671651632089921,0.42101766527398177,-0.51,-0.11,-0.51,0.46651366853235365,0,0.10569609604685648,0.2462628424425589,0.5235213534496466,-0.3729818895218706,0.0108427965685794,0.12202689326009387,0.5177348257153259,-0.47794732463905343,0.04182763860326047,0.14752309589875295,0.536920564114821,-0.3861265986905675,-0.45612890593087535,0.027145784810996346,0.51884873590134,-0.51,-0.16691899652893785,0.18747767039605462,0.5403456249469486,-0.42019766322688307,-0.039377058995447425,-0.009629633092497656,0.4886801641676406,-0.51,-0.14951243578388113,0.06766404620499152,0.4778427866112395,0,-0.61,0.010108005854528155,0.42530973395609045,0,0.09733973089401442,-0.47110236539958716,0.541739937455241,-0.472199684776214,-0.06761782134250911,-0.4746978613699876,0.52126575751599,0,-0.35781578296151856,-0.4824072239300176,0.522988651036206,-0.51,-0.11,-0.51,0.4451314038164611,0,-0.11,-0.51,0.524722632920658,-0.51,-0.11,-0.5108988805426857,0.48056267356802407,0,-0.11,-0.51,0.4188105041103758,-0.51,-0.11,-0.51,0.11728611623868823,0,0.21845726483995,0.3241686219881,0.2479020721352618,-0.3310311763266146,0.1109385866716441,0.12724668396521066,0.508292079357888,-0.46255785638607977,0.1888167369355569,0.06384424956197433,0.5247175159860196,-0.49047892990112363,-0.06432256579535317,0.02413658248776017,0.40979959561131146,-0.4878669084876837,-0.055435043801242256,0.3062021199903839,0.21055169610839006,-0.444615264568258,-0.11,0.060019838157427736,0.46029061033437385,0,-0.11386153861530333,0.052549744731007174,0.35086291196493136,0,-0.06311444354150358,-0.01,0.36692376703831125,-0.51,-0.025955640519645592,-0.35787758072953535,0.5176486153359288,-0.51,-0.02152357749514782,-0.51,0.5182746203994862,-0.51,-0.04091377338463153,-0.46835518637651374,0.36878923251679724,-0.4768758533727377,-0.11,-0.51,0.3463297045121998,0,-0.51,-0.51,0.4754552985111248,-0.51,-0.11,-0.50290125,0.3870393041527431,0,-0.0026237330716619503,-0.51,0.34569757587224825,-0.51,-0.11,-0.51,0.13276027936968232,0,0.14591512098298337,0.07950924425722058,0.4659633659197437,-0.4938954360829219,-0.11,-0.01,0.5051074650147596,-0.499102460556043,-0.36264396522338993,0.11685400815724208,0.23444922118804354,-0.49147009277661496,-0.11,-0.01,0.4360838931170921,0,-0.49791427885416095,-0.01,0.4047459308902882,-0.51,-0.5167915446446707,-0.01,0.3211888636944499,-0.51,-0.08363999285164306,-0.01,0.34829723686670694,0,-0.11,-0.01,0.2821512558341962,0,-0.026454205759352895,-0.4754260480060205,0.5033964777136357,-0.510135,-0.11,-0.51,0.4445173740155129,0,-0.11,-0.51059625,0.20840347629831804,-0.510135,-0.11,-0.51,0.24135927976084495,0,-0.11,-0.51,0.27164919997072545,0,-0.11,-0.5097735086684257,0.1353087307221862,0,-0.06887932527631564,-0.5030723162442647,0.045344029296343784,-0.51,-0.11,-0.51,0.02354351811777123,0,-0.9756074438634461,0.057764047929021234,0.5292801088582477,-0.51,-1.01,-0.01,0.3866641379913924,0,-0.07093637568666916,0.035544810329942285,0.39171305537562723,-0.51,-0.11,-0.01,0.09,0,-0.11,-0.01,0.30572703962697506,0,-1.01,-0.01,0.17908940863341427,0,-1.01,-0.01,0.18800246949715152,0,0,0,0,0,-0.11,-0.51,0.3375968041753534,0,-1.01,-0.51,0.20588879594017725,0,-0.11,-0.4983443368409941,0.16481934893438438,-0.51,-0.11,-0.51,0.09,0,-0.61,-0.51,0.1368098839197932,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,-0.11,0.1496169808423194,0,0,-0.10828871757587574,-0.01,0.35240234259090286,-0.51,-0.11,-0.01,0.21350825331552942,0,0,0,0,0,-0.11,-0.01,0.2123857964246825,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.51,0.17740227591036484,0,-1.01,-0.51,0.09,0,-0.61,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.1248795137335765,0.03256067110533337,0.43504396363107967,0,-0.11,-0.01,0.15982219176143816,0,-0.11,-0.01,0.23410624111847503,0,-0.11,-0.01,0,0,-0.11,-0.01,0.19579445449063307,0,-0.11,-0.01,0.2160751324401504,0,-0.61,0.022609755277421047,0.0854798573908761,-0.51,-0.11,0,0,0,-0.11,-0.51,0.220721200276828,0,-0.61,-0.51,0,0,-0.11,0,0,0,-0.61,-0.51,0,0,-0.11,-0.51,0.13596956696195503,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.16093341802339725,0,-0.11,-0.01,0,0,-0.11,-0.01,0.13393409994398284,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.01,0.07981732418148174,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.050718155122781064,0.4587248788716183,-0.12925765656529298,-0.37700194645104124,-0.02536489529497214,0.44736328644727863,-0.2328977876216244,-0.4172876804858652,-0.32318058785436027,0.44858567334556104,-0.332592259014933,-0.43516252553957874,-0.11,0.44534014989692805,-0.40290125,-0.51,-0.009219920852808976,0.4158545587312211,-0.36437173781490695,-0.51,-0.04053869416291427,0.18663137658240359,-0.3924258885968359,-0.48049280524134064,-0.11,0.395344175013851,-0.3770598643691734,-0.51,-0.11,0.23400917420761186,-0.41,-0.5066131772720799,-0.45391620856658293,-0.510135,-0.016446945353409875,-0.51,-0.51,-0.51,-0.08835274657939331,-0.51,-0.61,-0.51,-0.25276518491265,-0.51,-0.11,-0.51,-0.41,-0.51,-0.4958375146335591,-0.51,-0.35359042703874083,-0.51,-0.1516848830338084,-0.51012375,-0.41,-0.51,-0.2571398866493238,-0.51,-0.40233874999999997,-0.5059090544797841,-0.11,-0.51,-0.41,-0.51,-0.08320597326750066,0.3864090753041334,-0.34324075326045783,-0.51068625,-0.1481455619675001,-0.09100785580952872,-0.3781420344025206,-0.4877398864421167,-0.12268117689803947,0.10568341807752443,-0.32767030715449713,-0.47766217321077326,-0.21711253776777223,-0.15878123517301962,-0.36640046595435516,-0.5092930264025191,-0.08637393866514272,0.14663268297211166,-0.38984601641830396,-0.4996358657379508,-0.2420860155197959,-0.1398836013009281,-0.32295416043112757,-0.4808759064234035,-0.1021913315753971,-0.04938423278091532,-0.3897940587895346,-0.50915646463274,-0.11,-0.05216585053610395,-0.4106975,-0.51,-0.5677086725504132,-0.51,-0.21129317335300396,-0.51,-0.1983138509923767,-0.5206159900396502,-0.35627801110742685,-0.51,-0.0829021071203549,-0.51,-0.3364183981240373,-0.51,0,0,0,0,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.05799711494839515,0.37271077556537857,-0.3193667636972741,-0.49274420268034813,-0.61,0.36071046889328245,-0.41,-0.51,-0.37706381574575965,0.06992197575515409,-0.32118857221824204,-0.48000995970166993,-0.11,-0.04806995625183159,-0.41,-0.51,-0.06922444581608586,0.18242367309669125,-0.31861971530800043,-0.4910834464330607,-0.61,0.0786715828305762,0,0,-0.11,0.06796281183320782,-0.41,-0.51,-0.15137594293101253,-0.07118297797146643,-0.41,-0.51,-0.41177314029066875,-0.44543350716179714,-0.299477263763105,-0.51001125,-0.10159319468744983,-0.51,-0.41,-0.511028249485506,-0.14334497611095218,-0.51,-0.3648022014471105,-0.51,-0.61,0,0,0,-0.51,-0.51,-0.367819698342571,-0.51,-0.10505596137590455,-0.51,-0.41,-0.5031383377913496,-0.40438116424444415,-0.5080169018755195,-0.3502219441358003,-0.51,0,0,0,0,-0.11,0.32038633016950474,-0.41,-0.51,-0.09419564082369788,-0.13766611821572583,-0.41,-0.51,-0.11,0.05193680158459661,-0.41,-0.51,-0.16332926639278403,-0.11542725584653811,-0.41069867703124996,-0.507754436583869,-0.08515070680262103,0.0012042967848542863,-0.4106975,-0.51,-0.11,-0.01,-0.41,-0.51,-0.09488078803531004,-0.07410143182076395,-0.41,-0.51,0,0,0,0,-0.61,-0.51,-0.33552001379696167,-0.51,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,0.3206187888401928,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,0.03592910245024458,-0.41,-0.51,-0.11,0,0,0,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,-0.51,0,0,0,0,-0.41523190577783475,-0.51,-0.30218330310737407,-0.51,-1.01,-0.51,-0.41,-0.51,-1.01,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.05245489099560748,-0.41,-0.50479511786705,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,0,0,0,-0.61,0,0,0,-0.11,0,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.07657592799977314,-0.41,-0.51,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0994958326277477,0.26618890480010143,0.46668674549088657,-0.37734528419581803,-0.21344770060336354,0.14061914344591986,0.42766748358693046,-0.3989315109902457,-0.06441447640537999,0.016623186563556408,0.45255100681348004,-0.4403340436001739,-0.11,-0.01,0.40456142549221513,0,-0.4304387643913869,0.09309159282576845,0.3333098742852908,-0.49155186369395915,-0.022399749843164285,-0.01,0.4266980166734091,0,0.03881155099582965,-0.01,0.3193899018006679,-0.51,-0.0648753500949569,-0.01,0.2878635908784428,0,0.15447698490216782,-0.4233581695054571,0.4682539460504864,-0.4792264784199233,-0.11,-0.51,0.42604666353389936,0,-0.0652104619207293,-0.39534197112189234,0.45122013829531715,-0.49191677578507437,-0.11,-0.51,0.420318773564288,-0.51,-0.021348064049695872,-0.46768741922626517,0.3951822664476021,0,-0.11,-0.51,0.3807694147583022,0,-0.11,-0.51,0.23150675539650042,-0.51,-0.11,-0.51,0.24571086988563032,0,0.008805162275186532,0.37995650932072844,0.00017313753521487098,-0.4793621082225716,-0.13649589745225565,0.013293331797684882,-0.018268540128121118,-0.44120911346205466,-0.006837334589497139,0.05094080638283049,-0.00871466874426044,-0.42994223003613885,-0.049446424567191435,-0.025169301051518187,-0.026894103655147286,-0.4659947900587394,-0.4223983439739642,0.1045629214830883,-0.0020447264645359416,-0.4631129588720661,-0.033318048410799245,0.01442556891746868,-0.02884608182987331,-0.49472164005875563,-0.61,0.1026437614287544,-0.0060575982907344296,-0.4893127642401514,-0.06962930233295878,-0.01844385064080093,0.00028712585569497977,-0.51,-0.07781969862819958,-0.45790672898506135,0.0154617054027102,-0.51,-0.07398220310016812,-0.5009102052353562,0.012252707868303816,-0.51,-0.11,-0.51,-0.0036498263754804324,-0.51,-0.11,-0.51,0.07691538420159852,0,-0.11,-0.51,-0.034647468157711796,-0.5069344548539153,-0.11,-0.51,-0.0001971591688260635,-0.51,-0.07221837766138728,-0.51,0.03985674511988463,0,-0.11,-0.51,0.09,0,-0.023185944274476913,0.056564859263420225,0.35274438191136365,-0.5074543451696315,0.009561489701500593,0.05265610138832313,0.36870169225342375,-0.5041716288753504,0.02449328946237554,0.11969930549901679,0.047061411338775214,-0.51068625,-0.04186638690868713,-0.0032035393319119676,0.054569966588875904,-0.51,-0.23013394801575698,0.041736582008854606,0.10484347273677745,0,-0.14150632098799748,-0.01,0.10650003402450309,0,-0.030954687428359662,-0.004926520910042121,0.031585883193693015,-0.51,-0.11,-0.01,0.06215682900358033,-0.51,-0.02486468457543322,-0.4814519804897663,0.2339718601365049,0,-0.11,-0.51,0.3199832501114975,0,-0.11,-0.51,0.060396442742966,-0.51,-0.11,-0.51,0.08535892110707884,0,-0.06579729091305342,-0.51,0.08970805219876304,0,-0.11,-0.497450631665593,0.013844383887628254,-0.51,-0.61,-0.51,0.06737446360137558,0,-0.11,-0.51,0.09,0,-0.11,0.34384994977018496,0.03593710835627587,-0.51,-0.4717714339873274,-0.04161758603465803,0.0029812448965799085,-0.51,-0.014309465919561724,0.05543660195635577,-0.014360600899349027,-0.4991728276702949,-0.61,-0.01,0.005375460266364207,0,-0.0018939059814675405,0.11277518714777154,-0.016013547510237078,-0.5088142396060846,-0.11,-0.0011507227251064652,-0.003412401804037582,-0.51,-0.06778082384727586,-0.020685672619432025,-0.02301755685617526,-0.5056521386183012,-0.11,-0.01,0.089191125,0,0.09667649498934883,-0.4975429044417157,-0.01842516361926258,-0.51,-0.11,-0.51,0.05468189665458673,0,-0.11,-0.51,0.059292991855358655,0,-0.11,-0.51,0.07408509385811515,0,-0.11,-0.51,0.08930249999999999,0,-0.11,-0.51,0.06039501927253233,0,-0.11,-0.51,0.09,0,-0.11,-0.51012375,0.0041409819437753445,-0.5023387500000001,-0.61,-0.01,0.33042656898102796,-0.51,-0.11,-0.01,0.09,0,-0.11,-0.01,0.12932672934939993,0,0,0,0,0,-0.11014062379473527,-0.01,0.21413451405306064,0,-0.11,-0.01,0.09,0,-0.11,0,0,0,-0.61,0,0,0,-0.11,-0.51,0.0940509272855518,0,-0.11,-0.51,0.12892420340274127,0,-1.01,-0.51,0.17051463053974703,0,-0.11,0,0,0,-0.61,0,0.09,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.01,0.05526889451518518,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.23099287722976217,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,0.09521001784164371,0,-0.11,-0.01,0,0,-0.11,-0.01,0.07096409845215135,0,0,0,0,0,-0.11,-0.51,0.12341499147104275,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.09,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.01,0.07925061828332576,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.07249541498568587,0.4426579129766022,-0.4032888149360185,-0.4939807876575655,-0.11,0.4305666449163479,-0.35026317442130506,-0.51,-0.11,0.4290605833773448,-0.3767654882000263,-0.51012375,-0.11,0.250171596762371,-0.41,-0.51,-0.11,0.3414968423566651,-0.41,-0.49082577893811,-0.11,0.2865709422617393,-0.41,-0.503368539645644,-0.11,0.12364232290268203,-0.41,-0.51,-0.11,0.12512247641494859,-0.41,-0.51,-0.11566928906191844,-0.51,-0.41,-0.510135,-0.11,-0.51,-0.41,-0.51,-0.51,-0.51,-0.3560246313229579,-0.51,0,0,0,0,-0.61,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.61,-0.51,0,0,0,0,0,0,-0.11,0.37115338086417565,-0.41,-0.51,-0.61,-0.09190420271720155,-0.41,-0.5108501582746128,-0.11,-0.024621367371219866,-0.4143763145212065,-0.5110242720118281,-0.11,-0.01,-0.41,-0.51,-0.11,0.08600073863590281,-0.41,-0.51,-0.6057962462237971,0,0,0,-0.11,-0.029402023315549187,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11224100360813027,-0.51,-0.41,-0.51,-0.51,-0.51,0,0,-0.12296561308754485,-0.5054579612576734,-0.41,-0.51,0,0,0,0,-0.09507379439137807,-0.51068625,-0.41,-0.51,-0.51,-0.51,0,0,0,0,0,0,0,0,0,0,-0.61,0.3159511357091167,-0.41,-0.5050447953356844,-0.61,0.26976835775221314,-0.41,-0.51,-0.61,0.12620265144804763,-0.41,-0.51,-0.11,-0.07566071907799711,-0.41,-0.51,-0.06959950894599473,0.07050932640426189,-0.41,-0.51,-0.11,0.026582715909383707,-0.41,-0.51,-0.11,0.03413540048877222,-0.41012374999999995,-0.51,-0.11,-0.027193773595478955,-0.41,-0.51,-0.61,-0.51,0,0,-0.11,-0.51,0,0,-0.51,-0.51,0,0,0,0,0,0,-0.61,-0.51,-0.4071856262028749,-0.51,0,0,0,0,0,0,0,-0.51,0,0,0,0,-0.51,0.24480673228900168,-0.41,-0.51,-0.081671523698557,-0.11024223799250435,-0.41,-0.51,-0.09957320535109071,-0.09907202660764677,-0.41,-0.51012375,0,0,0,0,-0.11,0.0024721550464039885,-0.41303749999999995,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.1333237675353456,-0.5114625,-0.41,-0.510135,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0.16226994120505558,-0.41,-0.51,-0.61,-0.01,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.152522206101559,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0,-0.51,-0.61,0,0,0,0,0,0,0,0,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.23423922985988818,0.4240337948396273,0.5118866074354851,0.37720096549815113,0.14602940071401938,0.34877522477197415,0.5116300501118914,0.2969834219746712,0.15936496460994987,0.3806465057445141,0.4822546224002185,0.2864543257226998,-0.049072870683810735,0.1794581063791007,0.501501297710179,0.12386572154297062,0.25489309050087494,0.338273805185998,0.48256136479971806,0.31946274796823576,-0.2019783619955543,0.18668928017824493,0.5135120257415016,0.062444177382862155,0.019638975788791972,0.14582052218445016,0.5170134344927069,0.12228683401615215,-0.012422844549733442,-0.01,0.47312459005546764,-0.01,0.19657138821787984,-0.1361500665299555,0.5146033684393482,0.3029126224760595,0.004331819495986246,-0.2764247966453629,0.5346011625582536,0.25207109124048577,-0.04340355740861959,-0.3783364082406746,0.5384026821636442,0.1543397475240621,-0.11,-0.41241217953695836,0.5165846804197134,-0.01,0.04497478104699762,-0.3213905844635557,0.46993721420966733,0.08791275604510795,-0.06485600490817928,-0.49995778056935863,0.4369955491737232,0.025287727745747487,-0.12484018855815136,-0.510135,0.5126148366604883,0.007446737579018902,-0.06867492615453782,-0.51,0.42046356050027656,0,0.10613724418046108,0.32748022874307164,0.46994846352376934,0.25205766186473555,-0.0815265646346031,0.13510215037030554,0.5217590851126974,0.08759389240688098,-0.03746063454046122,0.14065317489781748,0.506035594436955,0.08443942794932342,-0.041357877084849115,-0.01,0.4922980637376123,-0.01,-0.013423117559342234,0.23029227618299591,0.5158530338170643,0.1988720769057484,-0.11,0.052623881287028655,0.4952306081884758,-0.01,-0.12327031169877196,0.024915207770487717,0.4241240747243592,-0.01,-0.14601993381602085,-0.01,0.33845172481890246,0,-0.017256141491956714,-0.36511190204672606,0.5221991056541379,0.11218034794563315,-0.07470055986422211,-0.51,0.5267672253155093,0.05582630295996332,-0.11,-0.51,0.49723999633698357,0.02582321347191631,-0.11,-0.51,0.45821217867729735,-0.01,-0.0695976883586597,-0.51,0.4922707767885733,-0.00512279456184188,-0.11,-0.51,0.37700931672466137,0,-0.11,-0.51,0.383646187186882,0,-0.61,-0.5064299142788847,0.27854586134893505,0,0.05995282312550508,0.32059255732377984,0.5045541929127738,0.23696581643177791,-0.05134511288169895,0.18239007253546916,0.5107780037537395,0.07129114391814556,0.040254262940181244,0.2820281413605397,0.13094460401806804,0.13427662840927834,0.07264285860830125,0.14035590255103667,0.14322708103884635,0.1959258724129278,0.0794673240398221,0.13503567349154869,0.42232768671472654,-0.01,-0.06103859404269667,-0.01,0.44488091783595307,0,-0.3590919242721647,0.01841524142370643,0.3657036148777509,0.0319799433010374,-0.03517105757933743,-0.01,0.22377786225951585,0,0.0800370875135777,-0.46701131302048693,0.4854232747452563,0.04725675014423991,-0.022429197870908295,-0.51,0.47302559045541637,0,-0.07185907220852487,-0.48399360951088505,0.45383830722043084,-0.01,-0.61,-0.51,0.2950746603235379,0,-0.42972594508233897,-0.51,0.3918075662566692,0,-0.11,-0.51,0.33062797097583985,0,-0.61,-0.51,0.3436246894158954,0,-0.11,-0.51,0.19924942129739356,0,-0.01673148338258714,0.08212249097353141,0.3793333275055772,0.06608121139891332,-0.08091342206130851,0.024049343883709433,0.4479437266557624,-0.01,-0.14548739675158662,0.022776696320695053,0.44744649444135665,0.012461968942119971,-0.61,0.017176960994257,0.3699669536872898,-0.01,-0.10327342118567687,0.05331467099758696,0.41498601380540856,0.028625304402374943,-0.07344923169617237,-0.0014774453233384818,0.36740139284561757,0,-0.11,-0.01,0.3022141616955028,0,-0.11,-0.01,0.21222673692229937,0,-0.13857547770213033,-0.47927451242836977,0.3758685672431942,0.009056306707066598,-0.11,-0.51,0.3920888355601942,0.007669812696976591,-0.61,-0.51,0.27016835214402574,0,-0.61,-0.51,0.227284549591578,0,-0.5320714160015656,-0.51,0.3199225233307976,-0.01,-0.61,-0.51,0.16485909789972586,0,-0.11,-0.51,0.10068368147060748,0,-0.11,-0.51,0.10176812893222635,0,-0.10087711480094602,0.07879612054667924,0.5116675169138217,-0.012262737514409226,-0.11,0.037166544464916663,0.4601975946475763,0,-0.11,-0.01,0.32409675646122565,0,-0.61,-0.01,0.24650893296189302,0,-0.16274807502847313,-0.01,0.47033302543463995,0,-0.11,-0.01,0.21015271079590228,0,-1.01,-0.01,0.19470958519588585,0,0,0,0,0,-0.11,-0.51,0.4754464417608487,0,-0.11,-0.51,0.3419115780212343,-0.01,-0.11,-0.51,0.2612683294867934,0,-0.11,-0.51,0,0,-0.11,-0.51,0.213653487482627,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,-0.01,0.4180061627267484,-0.01,-0.09754346225045088,-0.01,0.23743738414737534,0,-0.61,-0.01565146026906597,0.2990149424222132,0,-1.01,-0.01,0.09,0,-1.01,-0.01,0.22691119891864617,0,-0.11,-0.01,0.1332728374990791,0,0,0,0,0,-0.11,-0.01,0.11880045853709202,0,-0.11,-0.51,0.17532742654062705,0,-0.5516052639860858,-0.51,0.17581161011259916,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.01,0.47990107412808786,0,-0.11,-0.01,0.24501164612265464,0,-0.61,-0.01,0.1281185773110713,0,-0.11,-0.01,0.13379475186200315,0,-0.11,-0.01,0.12564895762798312,0,-0.11,-0.01,0,0,-1.01,-0.01,0.09,0,-0.11,0,0,0,-0.11,-0.51,0.1903506398226405,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09120462047399705,0,-0.11,-0.51,0,0,0,0,0,0,-0.61,0,0,0,-0.61,0,0,0,-0.11,0.010581448848074848,0.16799338169511618,0,-0.61,-0.01,0.09,0,-0.11,-0.01,0.20060103115808164,-0.01,-0.11,0,0,0,-0.11,-0.01,0.17327914463618793,-0.01,0,0,0,0,0,0,0.09,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.5211375,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0.09,0,-0.11,0,0,0,0,0,0,0,0.0926296499412105,0.4617428641795993,-0.2184395728384404,0.16967280371650012,-0.07569792013446,0.4519341368002392,-0.3555684980167186,0.07362377325803302,-0.028078186915889806,0.4509481943870259,-0.3498112764191834,0.04907846134544115,-0.11,0.4273849861574753,-0.41,-0.01,0.13131614204779174,0.33104862858217415,-0.3553782767087739,0.06727490424286554,-0.11,0.4212914685031625,-0.38107371844256915,-0.01,-0.3837655282059761,0.4160763580710383,-0.41,-0.01,-0.11,0.2613904571772652,-0.41,-0.01,-0.14130147660720452,-0.16540437527968777,-0.2505652155896726,-0.10116924077944515,-0.15674656271532256,-0.41967133012385416,-0.29140601900569746,-0.09283365556764253,-0.1595646170192833,-0.4639827471769475,-0.41013499999999997,-0.06664517629996289,-0.15597493459066905,-0.4969376074994216,-0.37633552219172034,-0.07908684888993943,-0.1755479831984161,-0.4200271433369771,-0.34343458962126955,-0.037072545592544415,-0.19020906640011764,-0.51,-0.38495368981523553,-0.09951794783065329,-0.11016889075078354,-0.4896548945009764,-0.3922870448833949,-0.06691368568299547,-0.11,-0.51,-0.41,-0.017077578855402897,-0.08272398347047288,0.3867935948724699,-0.41,-0.019624584830945167,-0.18212318624586923,-0.07745148334447008,-0.2829164418346191,-0.04168909925980866,-0.11325680631930879,-0.0402604511981027,-0.3710024814324628,-0.03927972325343616,-0.15196660859594355,-0.09125180064005645,-0.39350424170718745,-0.06143743500584487,-0.0292591123231714,-0.018858041027134294,-0.3689084544101399,0.016611876053088184,-0.2493250587342463,-0.030352673317608263,-0.3821037060221192,-0.08652968122206853,-0.10216263186650243,0.00805824554701574,-0.39210164221090593,-0.021577911475833413,-0.14369474045454345,-0.03743265848093455,-0.3933387098852418,-0.03482724588521539,-0.249100054041955,-0.3215868742996611,-0.3713548561120565,-0.01848417714049793,-0.09010102214365533,-0.5117831329134528,-0.3779134598606706,-0.06056266267320378,-0.11129195386434824,-0.51,-0.41,-0.11029068613870077,-0.10806589707648045,-0.51,-0.41,-0.0877474270276045,-0.11,-0.4990381319661099,-0.4106975,-0.06756030594584597,-0.09955679737836251,-0.5151421508756506,-0.39162425218608493,-0.08099518636962356,-0.13298901556529222,-0.509748053645491,-0.41,-0.07238421900655201,0,0,0,0,-0.03682688566612538,0.36618688274296357,-0.34198167157695397,0.015714398351412043,-0.61012375,0.3404754419800217,-0.41,-0.01,-0.2093235092144238,0.1265159711674115,-0.3318104710072906,-0.007539847974487024,-0.13985596496051855,-0.015544252030491193,-0.36428654822466044,-0.026373875684188135,-0.14715491405639203,0.1049708248881744,-0.41,-0.0013231454423181192,-0.11,0.16481943274006364,-0.4113260346875,-0.010598367971663625,-0.4095050221920039,-0.0045731249361465,-0.41,-0.018313293489126296,-0.0747548142676888,-0.028624207766212387,-0.41,-0.014849486527787541,-0.17093512019030588,-0.4823975278357314,-0.41074137499999996,-0.012295776581802208,-0.10506837650274223,-0.4706378110904995,-0.41,-0.03202915864057481,-0.11,-0.4782282319272582,-0.3698225677134292,-0.07668385243619558,-0.11383296382147264,-0.5200776282169782,-0.41012374999999995,-0.05015735681774699,-0.0769319631594858,-0.4754148505073367,-0.41,-0.08983928448932696,-0.51,-0.51,-0.41,-0.0380452359881069,-0.11,-0.51,0,0,-0.61,-0.51,-0.41012374999999995,-0.03991193307369714,-0.09449918337293275,0.3325939406804182,-0.41,-0.01,-0.11,-0.0636193520062246,-0.3689177050486106,-0.005809000573356864,-0.09012641983317436,0.012221762697480187,-0.3989830772638069,-0.012897883757054251,-0.19293810503500028,-0.034742368384941026,-0.41,-0.0033885293842422642,-0.44068483519784357,0.16026283762891447,-0.41,-0.012453583310793256,-0.10386481136727412,-0.0787606567636199,-0.41,-0.07913689760166095,-0.10084937147241574,-0.011963938218943183,-0.41,-0.04546027207136596,0,0,0,0,-0.10731311860505498,-0.51,-0.3977459919073538,-0.016601531866983984,-0.11,-0.51,-0.41,-0.06420840450268342,-0.11,-0.51,-0.41,-0.010258791281171875,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41012374999999995,-0.012732078367913994,-0.11,0.3831258520044403,-0.41,-0.01,-1.01,0.22629075239296634,-0.41,-0.01,-1.01,-0.01,0,-0.01,-0.11,0,0,0,-0.11,0.11035670539753327,-0.41,-0.01,0,0,0,0,-0.11,0.030600705735214964,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,-0.035917661615653726,-0.11,-0.51,-0.41,-0.05877000813376265,-0.61,-0.51,-0.41,-0.032417221290800415,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.028810208327871338,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0.249356220754258,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.0106975,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-0.11,0.09726197075398921,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,0.04039907860088079,-0.41,-0.01,-1.01,-0.01,0,0,-0.61,0.04632120347198005,-0.41,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,-0.41068625,-0.034098341080558994,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,-0.01,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.16324898196820248,0.284351662059869,0.44532456060507586,0.19563945471450697,0.040585135003282154,0.14963140574305592,0.45017001716069727,-0.01,-0.18906153904502462,0.10359752337990719,0.41684910182474333,0.02992395592655934,-0.01923571433371251,-0.01,0.41971185009821027,0,0.011040799986698026,0.16496286860872378,0.3421313850201704,0.05848540541682037,-0.06453958157310724,-0.0013780712399703524,0.38823153680677713,-0.01,-0.08667286310937897,-0.01,0.2861665167338197,0.017289711398116102,-0.11,-0.01,0.23240916822736457,-0.01,-0.024575586431996338,-0.4698842630395856,0.4546867784205946,0.07090675353935094,-0.11,-0.4771336063967901,0.40739092243583835,0,-0.48306799919347837,-0.4495570760214533,0.435021569638837,0.016618523779689455,-0.11,-0.51,0.34732610598015784,0,-0.026363059247974677,-0.41602018880376324,0.3876942604790895,0.004752913244654856,-0.11,-0.51,0.37812728119406874,0,-0.07106449547439864,-0.51,0.26003547984030495,0,-0.11,-0.51,0.12960457911220777,0,-0.02676073319376067,0.37830289969898234,-0.010387108281416386,-0.011991210463246187,0.10829994075646343,-0.042806495166351856,-0.026028699452281298,0.01252503377868235,-0.4020309564597959,-0.0022185905870946614,-0.06506018950802939,-0.02116799381199403,-0.02624477668033548,-0.04852625770018031,-0.0594974635678039,0.043659342719014754,0.04083807088076283,0.1292829501203155,-0.03481809115742155,-0.02854203104436616,-0.0963294053606885,-0.04046247826794014,-0.03975032898425928,-0.013420163808577641,-0.11,-0.003791899595808601,0.01699920921842689,0.005173826229348545,0.07614863210262687,-0.016955032451601508,-0.017214464349929386,-0.017452806914725838,-0.054452835489096484,-0.37063294393514934,-0.0009288698961074588,-0.045329626754942016,-0.09830373928766822,-0.5099942873586382,-0.06247278842475388,0.01152160615272134,-0.11233982435605507,-0.51,-0.06278142758416015,0.03386370862817981,-0.11,-0.51,0.0678114066228646,0,-0.10411359985367885,-0.4969612283900701,0.004013048398779985,-0.017090316916378762,-0.61,-0.51,-0.037852038761825635,-0.03713356593756602,-0.11,-0.51,0.08987624999999999,0,0,0,0,0,-0.33653154421033427,0.3417693286972696,0.09922350947712699,0.03783195325889221,-0.07909232416540002,0.06140500354233912,0.2852060070620041,0.028988692590656697,0.099063624304147,0.04546193224054701,-0.0028970178125309813,0.06458760585563803,-0.14465293833376794,-0.02846105900038282,-0.022606636676416453,0.006712225162653058,-0.12491620656001708,0.0076790647040744205,0.09703399179197932,0.0035649819085193067,-0.11,-0.01,0.0988014241385744,-0.01,-0.07218500131711242,-0.05222384577751939,-0.03463820470829282,-0.04829377977933759,-0.07421303147736902,-0.01,0.07347849147666097,0,-0.11,-0.46615527196346584,0.32548162128343017,-0.01,-0.11,-0.4925579377079158,0.25566088913826795,0,-0.5173126671175086,-0.5080130290377147,0.013467272921765147,0,-0.45508941674150455,-0.5117598254584413,-0.014640095240650549,0.11592700565858509,-0.5209377762406574,-0.49465580796367725,0.10471294071578216,0,-0.11,-0.51,0.11051719578351037,0,-0.61,-0.51,0.06217930483805728,0,-0.11,-0.51,0.08969482012499999,0,-0.09144054193138752,0.33692038070393177,-0.017106141179806324,0.015165452551158401,-0.539839445016456,-0.04871360822751998,-0.06288420818991242,-0.008940253978150037,-0.08161958347809511,-0.029702029652005975,-0.04710272063778867,-0.0236573205691636,-0.07629458907920039,-0.02265983767242902,-0.02033093748626183,0.0051798871017491414,0.18351940496987446,0.02118680738728161,-0.01499085390570125,0.010230119049362954,-0.11,-0.01,0.08987624999999999,0,-0.1457220493134386,-0.011983743327848146,-0.03396204583010866,0.017070270868398206,-0.07567869052137746,-0.01,-0.0007827405593831629,-0.01,-0.11,-0.51,-0.0627865184654593,-0.044090892558069375,-0.11,-0.51,0.03339173586997813,0,-0.1538972376352588,-0.5154306618958925,-0.11194125130508228,-0.11201466521177139,-0.11,-0.51,0.06317180052680035,0,-0.11,-0.51,-0.012064972993339093,-0.013637031707818952,-0.11,-0.51,0.08987624999999999,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.010463998521617248,-0.0106975,-0.11,-0.01,0.4014778907454031,-0.01,-0.11,-0.01,0.18476774261118456,0,-0.07266250936659704,0.03358270839917394,0.2579633435709518,0,-0.11,-0.01,0,0,-0.11,-0.01,0.1828065744637043,0,-0.11,-0.01,0,0,-0.11,-0.01,0.12661073071655257,0,0,0,0,0,-0.11,-0.51,0.22646997707156558,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0.15806595396469897,-0.025802170103345862,-0.01,-0.11,-0.043965220122461866,-0.026808433044111582,-0.03256065169917893,-0.61,-0.01,-0.007289771579686712,0,-0.11,0,0,0,-0.11,-0.01,0.09,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.1428607799367694,0,-0.1319613469474408,-0.01,0,0,-0.11,0.02172206407737537,0.02979593102037672,0,-1.01,-0.01,0.09,0,-0.61,-0.01,0.08325567913938779,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.0566931959245091,0,-0.61,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,0.09,0,0.05940469449637269,0.4464443879243112,-0.3994267439279452,0.10135648080608398,-0.038015120959433414,0.4390350534104188,-0.41,0.014652412053724041,-0.11,0.4315837044392773,-0.41,0.04727473744111639,-0.11,0.355275607801045,-0.41012374999999995,-0.01,-0.38368782373044297,0.2337339080660508,-0.410235125,-0.01,-0.11,0.2595966523292283,-0.41,-0.011179855249347373,-0.11,0.27750300763475655,-0.41,-0.01,-0.51,0.10040228563116513,-0.41,-0.01,-0.1594899524701529,-0.5023387500000001,-0.37778151189995984,-0.016360844372811646,-0.13554317211479125,-0.46785131312907374,-0.37535240379218787,-0.08234828462454688,-0.10752704350041363,-0.50173507078125,-0.41,0.052546258259991374,-0.11,-0.51,-0.41,0.00985869585097794,-0.15760790967382163,-0.5023387500000001,-0.41,-0.04371293875217958,-0.61,-0.51,-0.4046171251554014,-0.07485097724377893,-0.11,-0.51,-0.41,-0.0860286528223165,-0.11,-0.51,0,0,-0.07893527018648847,0.3748111928752026,-0.41,-0.013696069623277756,-0.08637685110728353,-0.0710049498776124,-0.43772736600417445,-0.04831306189359199,-0.5033919613023232,0.08486543923884854,-0.41,-0.015286064539406747,-0.11,-0.022395127732389854,-0.41,-0.02045871947241978,-0.4364679256696645,-0.011540002125945619,-0.42183598253668264,0.0159340331769749,-0.11,-0.01787545392695063,-0.41012374999999995,0.048332725488908324,-0.11,-0.01,-0.41,-0.01,0,0,0,0,-0.11000480108526242,-0.47852025763155315,-0.43646627635196533,-0.11067052101593333,-0.11,-0.51,-0.41,0.003138015230112116,-0.20918601757641395,-0.5091380920413973,-0.41,-0.0843969026256268,-0.11,-0.51,-0.41057374999999996,-0.06768266625887716,-0.15478489103508747,-0.51,-0.41,-0.08217748287106581,-0.11,-0.51,-0.41,-0.01,0,0,0,0,0,0,0,0,-0.11,0.33059459685582054,-0.41,0.008733162887499233,-0.11,0.24977806086067328,-0.41,-0.010622036571389307,-0.11,0.019963469262639186,-0.41,-0.014123124549037518,-0.11,-0.06853359829655885,-0.4179878954430456,-0.00010103921789109474,-0.11,0.012477527261499729,-0.41,-0.01,0,0,0,0,-0.11,0.011024557522574762,-0.41,-0.01,-0.44472672680764325,-0.011615978559435094,-0.41,-0.01,-0.11,-0.51,-0.40394070560118533,-0.034943187011876084,-0.11,-0.493461867647946,-0.41,-0.054646581765715296,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.41,-0.01,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.13896572423448564,-0.4256837608296875,-0.01,-0.1532869490032635,-0.08387111521999373,-0.41012374999999995,-0.08405475602722506,-0.11,-0.0034284463550273026,-0.41,-0.012047105907646924,-0.11,-0.01871596986990643,-0.41,-0.015970013099789186,-0.11,-0.07619070108351818,-0.41012374999999995,-0.07573080393576337,-0.11,-0.01,-0.41,0,-0.11,-0.0007918546763591196,-0.41,-0.01,0,0,0,0,-0.10234946984375,-0.51,-0.41,-0.011318612499999998,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0.18091845359568884,-0.41,-0.01,-0.11,-0.01,-0.41068625,-0.01,-0.11,-0.01,-0.41,-0.01,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.61,0.0607599159083512,-0.41,-0.01363285,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.011608750000000001,-0.11,-0.51,-0.41,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.09378850721084,-0.41,-0.01,0,0,0,0,-0.61,-0.01,-0.41,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.61,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.05081295253190295,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.24130092186620222,0.3103818236961311,0.5403705207106809,-0.3708818622183457,-0.1082344288802349,0.037570788441431635,0.5319536145031712,-0.48118576832963994,-0.11,0.03607345866560544,0.49704322939066387,-0.5038943785189671,-0.02908300402442498,-0.01,0.5032572020029521,-0.51,0.07894605588765002,0.09934171464415699,0.3998017696523366,-0.3724605533101582,0.010439590295077135,0.010168017371739791,0.5110648548903929,0,-0.11,-0.01,0.4600377416947133,0,-0.11,-0.01,0.3932097957426877,-0.51,0.10180788597095528,-0.4181114117259074,0.5387003914006082,-0.46744569032967154,-0.06343492871342367,-0.51,0.523228838063758,-0.49091174701936924,-0.11,-0.4770038882698647,0.4443193901839421,0,-0.11,-0.51,0.42812761116468995,0,-0.07043387838640702,-0.47328509068790814,0.5191405401348028,-0.502013858903019,-0.05911845248898964,-0.51,0.3830392740191923,0,-0.09858580377247357,-0.502555132338082,0.4470192839704524,0,-0.11,-0.51,0.134074285806922,0,-0.36002470480860016,0.12287593539522242,0.49589482487893477,-0.48544421863148074,-0.118125746893061,0.08727412681365398,0.5248451233624323,-0.51,-0.07873663890793806,0.07712919740895097,0.5042277230319465,0,-0.61,-0.01,0.44144950296155366,0,-0.11,0.047678252441345194,0.4819364669525924,-0.4819733101544757,-0.11,-0.01,0.4262890684718313,0,-0.08976035188880639,-0.01,0.38986861534272776,-0.51,-0.11,-0.01,0.19128669435944112,0,-0.11,-0.51,0.5214698100883052,-0.51,-0.11,-0.51,0.45075272389478116,0,-0.11,-0.51,0.3939151008435699,0,-0.11,-0.51,0.09653625,0,-0.11,-0.510135,0.3936075660747072,-0.49865173612901015,-0.11,-0.51,0.09,0,-0.11,-0.51,0.16718579061915,0,-0.11,-0.51,0,0,0.09961239464762575,0.09255915324270066,0.5077147941047642,-0.5017972159559311,-0.07277701137921153,-0.01,0.5119872656363486,-0.51,-0.11,0.04356375149716851,0.3017503881683748,-0.51116775,-0.11,-0.01,0.3645747059464452,-0.51,-0.11,0.06062181609562042,0.47020314423901993,0,-0.11,-0.01,0.28477291559652446,0,-0.11,-0.01,0.21427862589953622,-0.51,-0.11,-0.00290125,0.14738039999735258,0,-0.11,-0.51,0.5147386827085431,0,-0.0711133663628832,-0.50290125,0.4307297922570994,0,-0.029237528085509903,-0.4948068175063043,0.06323736786986052,0,-0.11,-0.51,0.12419681019122603,0,-0.11,-0.51,0.42956229850732963,0,-0.11,-0.51,0.13836401395885822,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.4377859377284205,0.053453392975751336,0.3697403143185482,0,-0.11,-0.01,0.3706856247098229,0,-0.11,-0.008267376974559907,0.3120764497728873,0,-0.11,-0.01,0.24133409577801723,0,-0.06820230104774584,-0.01,0.27579360941217623,0,-0.11,-0.01,0.23191875085256664,0,-0.11,-0.01,0.11651105236742015,0,-0.61,-0.01,0.13361918208641332,0,-0.11,-0.51,0.33414199904653785,-0.51,-0.11,-0.51,0.13117015046967462,0,-0.11,-0.51,0.16476846404397244,-0.51,0,0,0,0,-0.51,-0.51,0.161935422092263,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.1664497210392773,-0.01,0.46378200633404165,0,-0.11,-0.01,0.213617683048123,0,-0.11,0.03566347840386487,0,0,-1.01,-0.01,0.09,0,-0.11,-0.01,0.27107146998332543,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.1230579991798614,-0.51,0.2336477379620696,0,-1.01,-0.51,0.17780964742581096,0,-0.61,-0.51,0.09,0,0,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0.09,0,-0.61,-0.01,0.13557075916510702,0,-0.11,-0.01,0.14290594718413116,0,-0.61,0,0.09,0,-0.11,-0.01,0.11425413930180059,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-1.01,-0.51,0,0,0,-0.51,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0.09,0,-1.01,-0.01,0.1218767738910915,0,-0.61,-0.01,0.13570279862205992,0,-0.11,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.51,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.61,-0.51,0,0,-0.11,0,0,0,0,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.005313716437401958,0.4664964106145347,-0.3255197000497829,-0.5097705177836236,-0.09245784358784906,0.4479207913178016,-0.36453300856083093,-0.5115652975909557,-0.61,0.44510229154839265,-0.40233874999999997,-0.5043505236773198,-0.11,0.260669982812757,-0.41,-0.51,-0.11,0.41428928003634563,-0.41,-0.51,-0.05890674351876187,0.3674187250826944,-0.41,-0.51,-0.11,0.22534135961671686,-0.41,-0.51,-0.11,0.10359530946929711,-0.41,-0.51,-0.51,-0.51,-0.3019762986818615,-0.51,-0.1557042030145809,-0.51,-0.41,-0.5115008226928087,-0.2310285392656004,-0.51,-0.41,-0.5163281035915794,-0.11,-0.51,-0.41,0,-0.11507431772133442,-0.51,-0.41,-0.51,0,0,0,0,-0.16445461887381446,-0.51,-0.41012374999999995,-0.510135,0,0,0,0,-0.11,0.3814119231290971,-0.41,-0.500946112600511,-0.14796218631799046,-0.123042246542542,-0.3966448865586031,-0.5085733315028288,-0.11,0.04028490613792578,-0.4106975,-0.5027693102546851,-0.11026282530542174,-0.10945927424736278,-0.39447727897286794,-0.51,-0.11,-0.003740573633103979,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.51,-0.015845706122493322,-0.41,-0.51,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.07098764611184316,0.3539364428292218,-0.41,-0.510135,-0.11,0.15888835873154944,-0.39571433175955933,-0.51,-0.09972476479690526,0.09227642880342626,-0.4107515,-0.51059625,-0.5955418069481341,-0.036793207661381805,-0.41,-0.5106975,-0.11,0.13141795981463222,-0.41,-0.51,-0.11,-0.009351788886322418,-0.41012374999999995,-0.51,-0.11,-0.01001125,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.51,-0.51,-0.4111475,-0.51,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0.2301427799693368,-0.41,-0.51,-0.10384194727953311,-0.034778245189673485,-0.41,-0.51,-0.10398310065575181,-0.06179797226690296,-0.41,-0.51,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,-0.12225641509864466,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,0,0,-0.61,-0.51,-0.41,0,-0.11,-0.01,-0.3694483251038221,-0.51,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,-0.38959593171561074,-0.51,-0.11,-0.51,-0.41,0,-1.0117099999999999,-0.51,-0.41,0,-0.61,-0.51,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,-0.61,-0.01,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.03775019249009795,0.02668205002205136,0.4265214249954552,-0.4803393493706788,-0.11,0.035905856549140504,0.4402168741252452,-0.51,-0.11,-0.01,0.3773588090576128,0,-0.11,-0.01,0.3105764722058106,0,-0.12610661718301214,-0.01,0.36938370335660553,0,-0.11,0.02883346118044936,0.25431070788552895,0,-0.11,0.013149057590521271,0.2650063948362011,0,-0.11,-0.01,0.12589971736314684,0,-0.0694362572707952,-0.43282418302937437,0.40372794837017073,0,-0.11,-0.51,0.37964727533233256,0,-0.11,-0.51,0.3599274443105543,0,-0.11,-0.51,0.19264452297011356,0,-0.11,-0.51068625,0.33263206079003255,-0.51,-0.11,-0.51,0.13173565516308727,0,-0.11,-0.51,0.08940375,0,-0.11,-0.51,0,0,-0.11,0.374163270487583,-0.011058065558244424,-0.51,-0.11913053134667531,-0.08677288727056959,-0.011284583555717768,-0.5096704133982886,-0.11,0.020108145650595245,-0.0625970414103991,-0.510246375,-0.04893000924069934,-0.043634661428884884,-0.043350216816249884,-0.51,-0.11,0.10849423140060287,-0.010371368999907737,-0.51,-0.11,-0.01,-0.004715577352535875,-0.51,-0.11,-0.01,0.0671605389969704,0,-0.11,-0.01,0.08930249999999999,0,-0.07899324475143617,-0.44288037136432534,0.0021313277205789825,-0.51071775,-0.5097966786037782,-0.5128346001233243,-0.04671193719632508,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,0.09,-0.51,-0.11,-0.51,0,0,-0.08622311494601753,-0.51,0.0022182162919970345,0,-0.11,-0.51,0.03297773280019508,0,0,0,0,0,-0.06937390706084354,0.005612276682977613,0.2738073983415293,0,-0.11,-0.01,0.19473841435701553,0,-0.43768996744006955,0.035457607107246845,-0.010750673328337719,-0.51,-0.16,-0.010519555207343175,-0.003422998958384934,-0.51,-0.61,0.01294806166979415,0.11898865625339825,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.06826605492443932,0,-0.11,-0.01,0.09,-0.51,-0.11,-0.51,0.21922203673863544,0,-0.11,-0.51,0.17320645525378542,0,-0.11,-0.51,0.0030278048018329137,-0.51,-0.11,-0.51,0.07501017075810688,0,-0.11,-0.51,0.0868575187313998,0,-0.11,-0.51,0.08940375,0,-0.11,-0.51,0,0,-0.11,-0.51,0.011177359250274478,0,-0.06488407053628512,0.21525959904311898,-0.010391340067198893,-0.51,-0.11,-0.01,0.04586736768144643,-0.51,-0.11,0.022072980548144855,0.0580284788506885,0,-0.11,-0.022665070701203698,-0.0003330230367706126,-0.51,-0.11,-0.0036232919605283806,0.0890278381125,0,-0.11,-0.01,0.08987624999999999,0,-0.15157555276265255,-0.013764906508450168,-0.01489569329050369,-0.51,0,0,0,0,-0.51,-0.51,-0.00193506495532705,-0.51,-0.11,-0.51,0.08987624999999999,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.09,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0.16497516458400832,-0.51,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,-0.51,-0.11,-0.01,0,-0.51,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.4395542444469376,-0.41214649999999997,-0.5088552958213415,-0.11,0.11337131732668979,-0.41059625,-0.51,-0.11,0.28486469165965694,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,0.31003322535046857,-0.40809804327121624,-0.51,-0.11,0.0023788393800207083,-0.41,-0.51,-0.11,0.10654121693654763,-0.41,-0.51,0,0,0,0,-0.61,-0.51,-0.4122996618875,-0.51,-0.4396527140442307,-0.51012375,-0.4046718040831845,-0.51,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.61,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.08343572273276538,0.24707883610678888,-0.41,-0.51,-0.09256119793179426,-0.0746330665223152,-0.42118915015624997,-0.51,-0.11,-0.0619212726789778,-0.41,-0.5127845303696059,-0.11,-0.01,-0.41,-0.51,-0.11,-0.0114625,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.07833460261205441,0.13742414350090798,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,0.015384373376734426,-0.41,-0.51,0,0,0,0,-0.11,0.05997580305169056,-0.41,-0.51,0,0,0,-0.51,0,0,0,0,-0.08530538555440083,-0.01,-0.41012374999999995,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.5302473145428728,0.12410115560484641,-0.41,-0.51,0,0,0,0,-0.11,-0.012025000000000001,-0.41,-0.51,0,0,0,0,0,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.10729302880557225,-0.51,-0.41012374999999995,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3478123724397087,0.4180173813067906,0.5236074212565078,0.3692567079099074,0.30025602447773864,0.4340062317203436,0.36351023507540237,0.3474338517542193,0.2721326134240472,0.39183300729678744,0.53605582498896,0.3757015315345054,0.238803212622175,0.27007552320328154,0.5292569039534175,0.3099096041993125,0.23918226762179257,0.45784719136290136,0.33556798244508806,0.3331559838829155,-0.0618118865357272,0.2982453679246724,0.5223225901581351,0.2624732505606342,0.19671555628936807,0.41386189423832276,0.30307472226260335,0.3045646768729732,0.03793015358522163,0.09254372310299858,0.5079451804673483,0.03298784819158187,0.3420144804054307,-0.05979254731017636,0.5366037350471524,0.4067023585144879,0.18233562471842196,-0.13072114884907823,0.5228615485391885,0.25443538121000525,0.19567512622415761,-0.11581489186878516,0.521392659538565,0.31211543351968135,-0.026815843864521585,-0.3952900887343375,0.5189738178414746,0.06553097262586242,0.19529153127941576,-0.17221288440755064,0.335333454721723,0.43581959328399156,0.12762744382430943,-0.3240839426018238,0.5122605578529809,0.1686123935129718,0.04461907106389961,-0.27463178192448146,0.5316296647695069,0.19083424389242704,-0.11,-0.51,0.5333359824159356,0,0.23472956543772408,0.3855284374953368,0.5384373891083668,0.4307117163840753,0.07817693308135784,0.2895669037644396,0.5291955117318807,0.34866171884307,0.12645162476386948,0.32484648913161285,0.5401739290788741,0.3708245225279452,0.05955895489843265,0.09887862176144993,0.537258255877298,0.11074820676629399,0.21794601127046034,0.3452131274091795,0.5323853511097847,0.3493446378166496,-0.44630899785675127,0.06397757087283348,0.5403472064731971,-0.01,0.0024572821489276114,0.06668570260330439,0.49357816375882746,0.07507763285217256,-0.4627360738424494,0.02661546749668084,0.5211180099838952,0.03441085012350223,0.12581327079469862,-0.2244345402428229,0.5008288483466423,0.2505879746966294,-0.5160435541703405,-0.4098910721138441,0.5267722392411214,0.12357783282811323,-0.06987759303067033,-0.4467220969476329,0.5394807566007245,0.07548313440689632,-0.11,-0.51,0.5091098336286333,-0.01,-0.025894414625895548,-0.4336607910251158,0.541239852333393,0.03225243656038632,-0.11,-0.4827944779987689,0.4890991229211786,0,-0.0636200022541936,-0.4568692114067983,0.5226156872978208,-0.01,-0.08929130882080961,-0.4743612791258617,0.37876341395703284,0,0.2773843037435539,0.32621705445277754,0.5296312171207789,0.2588035903095465,0.019574356808502773,0.26776017228770044,0.536555818896338,0.2197882355007575,0.12366943627365595,0.16623659028006021,0.1666264967338948,0.39462884889558375,-0.04629315130048139,0.14576199246041835,0.5253654040540767,0.09692120123768592,0.12995281404826386,0.2720230694075467,0.48580525146766446,0.20114343040586805,-0.11510665078274107,0.11271569448453111,0.16820746896977876,0.40420816114682023,0.00522095404890402,0.06298506503831124,0.5076159544511611,0.03338693708915843,-0.06482859123328298,0.09503808976679101,0.4425349731661365,-0.01,0.03929361825820662,-0.2951219404935667,0.5210977817764255,0.2905816218127697,-0.049398791337337,-0.4352397216461007,0.5364350332505633,0,-0.067473843245898,-0.4712790104558444,0.2726742626979312,-0.01,-0.0860423662266254,-0.4713902791118119,0.5422539561911217,0,0.25797786341068724,-0.33940142836106135,0.1293326105721261,0.07208013071179387,-0.02206474572680768,-0.51,0.5227378033542767,0,-0.11,-0.4714783188799406,0.5039597110187934,0,-0.06671073555657084,-0.51,0.3559071395035322,0,0.11320979153013226,0.34993354057035064,0.44356007381098544,0.31177812748345896,-0.07623943458896337,0.14112569149134457,0.5239273163360195,0.03391908502012137,-0.40217939685943943,0.15993633703621832,0.5162686231671236,0.10219315445384278,-0.06470749738848575,0.028131103065787033,0.5098325395208732,0,0.0462230420462043,0.16464252428945253,0.5179628951882028,0.020272031906504957,-0.1357571021256567,0.13933441161498536,0.5060095241305154,0,-0.11,-0.01,0.5248082943453697,0,-0.11,-0.01,0.3511112820830202,0,-0.04464486088297472,-0.43830461975843066,0.47648631624891213,0.07738614742549348,-0.0714259512866166,-0.45066278537442395,0.4917818533505266,-0.01,-0.11,-0.4536658700899089,0.4438320005783946,0.03351825191823938,-0.11,-0.51,0.37816150001015963,-0.01,-0.11,-0.51,0.44014687281112136,0.034610364476086924,-0.11,-0.51172125,0.29319012186410287,0,-0.0678481033984727,-0.51,0.4353397779324036,0,-0.51,-0.51,0.3258928495014688,0,-0.07509473156774471,0.14167193768977124,0.46964542413865956,0.03346432109750154,-1.01,-0.01,0.4751720407148216,0.03527670664267188,-0.11,0.036164448766235965,0.5366137116763813,0,-0.11,-0.01,0.34163592273478616,0,-0.07169771015711579,0.023562429089536208,0.5120317667346544,0,-0.07092661944198755,-0.01,0.3850024951062095,0,-1.01,0.07917236683888099,0.37304206572969345,0,-0.111462651875,-0.01,0.1353102275800056,0,-0.5223801184440158,-0.463273740394659,0.5145506468416213,-0.01,-0.11,-0.4657052772195361,0.4501460713221167,-0.01,-0.07122444115010569,-0.51,0.44507389424175725,0,-0.11,0,0.13934778236931575,0,-1.01,-0.51,0.44309677415859605,0,-0.11,-0.51,0.15034198569135265,0,-0.11,-0.51,0.2554113474060517,0,-1.01,-0.51,0,0,-0.15794378416415988,-0.01,0.5275493011146299,0,-1.01,-0.01,0.4288954897806829,0,-0.18393687906855016,-0.021094121050841307,0.43895084786037347,0,-0.11,-0.01,0.25185750940652124,0,-0.11,0.019496725066079627,0.41484416875848235,0,-0.61,-0.01,0.16489393103323954,0,-0.11,-0.01,0.32213810977817703,0,-0.11,-0.01,0.09,0,-1.01,-0.51,0.34433251524668607,0,-0.11,-0.51,0.24615286150917265,0,-0.11,-0.51,0.13512678437803505,0,-0.11,-0.51,0.1285529885441349,0,-0.11,-0.51,0.13735965642262732,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.5228645643879838,-0.01,0.4973759612257861,0.07154392049356684,-0.11,-0.01,0.42196116036126946,0,-0.11,0.03136346695232521,0.40256338535167135,0.06374007954972295,-0.11,-0.01,0.137684490968458,0,-0.61,-0.01,0.4679512270110545,0,-0.11,-0.01,0.18056953034549306,0,-0.11,-0.01,0.18660358504871802,0,-0.11,-0.01,0.09,0,-0.17233288573990407,-0.51,0.351341780222498,0,-0.11,-0.51,0.23072903107823464,0,-0.11,-0.51,0.1340105635089795,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.17831940088023407,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.61,0,0,0,-0.11,-0.01,0.39912710597192463,-0.01,-0.11,-0.01,0.3030610038743655,0,-0.11,-0.01,0.12890981687154748,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.16139516034574455,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,-1.01,-0.51,0.21314174852767875,0,-1.01,-0.51,0,0,-0.12027716140763842,-0.51,0.1647524260073068,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,-1.01,0.12194986757408185,-0.01,0.232417728924688,0.42208619228353284,0.010075204131760766,0.4372479539843327,-0.046406004555616505,0.39586082243915055,-0.13903523468602666,0.23101340805646162,0.03161104033849729,0.41115388627356114,-0.19190157735743057,0.16284783148495868,-0.01808859761560211,0.3536534581836398,-0.29507155083452125,0.03388422764746256,0.05756245057529136,0.4486160451600456,-0.2265473377776665,0.20546441091493645,-0.06904762023342415,0.45346913658481625,-0.32651561619356734,0.09862530385390295,-0.034546036445099126,0.39971304574076655,-0.3975567965800288,0.029909765950390937,-0.013095922969374514,0.4255900236221432,-0.41012374999999995,0,0.058518333612324655,-0.51,-0.3439366341331837,0.4410101608373198,-0.11,-0.48101500453450957,-0.33917055700711823,0.433183229941124,-0.02522614889003602,-0.3354741814216733,-0.29716529816192333,0.4407213304735075,-0.07757429164712076,-0.51,-0.3682739167391248,0.42784106832956,-0.61,-0.46727825721201943,-0.41,0.4315776666171789,-0.15237814559512008,-0.51,-0.3854673616374017,0.42972305912726805,-0.057745891499503446,-0.51,-0.3767325051845565,0.434039985532658,-0.11,-0.51,-0.41,0.31106138202880473,0.04312933397216511,0.391323936845659,-0.15954418654486172,0.20371199243410942,-0.02426195284421503,0.08650378506714866,-0.30003229125089126,0.4270643082092748,-0.04470111025537245,0.049402688266240745,-0.25147101529260285,0.4235019074074391,-0.08521349739195554,-0.010280062362894377,-0.364682218367984,0.4298569098005948,-0.3154471725992811,0.1312289298380086,-0.24988658476605116,0.4163790664958895,-0.04169664905388239,0.12773794559523707,-0.3939513407673302,0.4111584668692388,-0.11,0.019280923707612557,-0.3497114810829174,0.4277462021334889,-0.61,0.03211680747672638,-0.41,0.33133910114729015,-0.2922926718688548,-0.38370750223520406,-0.33266626512972575,0.4360467381756584,-0.09450911311013882,-0.4891031858415773,-0.41,0.41816833804174447,-0.0584148077750447,-0.51,-0.3411708722336695,0.4382041976648559,-0.61,-0.51,-0.41,0.29026782174955407,-0.07365953443197154,-0.51,-0.3861942119349146,0.41616096458363694,-0.11,-0.51,-0.41,0.29115662079172716,-0.09155830569876626,-0.51,-0.41170999999999996,0.328903725510516,-0.11,-0.51,-0.41,0.07589802114427366,0.10556354724347987,0.2991432570814989,-0.11058790564636514,0.42963207341748494,-0.11486578476082579,0.32372111641161494,-0.23369833371045232,0.20262893263426404,0.11111696317490836,0.16896365425342827,-0.21881323831154226,0.4220509718791117,-0.14731731606081358,0.020139464101066186,-0.41,0.40712379115808445,0.01753756869188105,0.2091378027543523,-0.19402585856312654,0.42520389560882443,-0.03876326618679724,0.1540853618599324,-0.3234800232948335,0.4072259491055648,0.0246697929214438,0.15923293732348462,-0.3635093516643627,0.39589804249840077,-0.11,-0.01100011912848206,-0.41,0.35378658567324306,-0.51,-0.51,-0.3892638961766076,0.3854991200026008,-0.0757507005876632,-0.4473556316955295,-0.374404181871451,0.38632412183095344,-0.39472621542173003,-0.51,-0.3863135294920672,0.3759780495223904,-0.11,-0.51,-0.41,0.24191310775244465,-0.08270525874201824,-0.48525229226963595,-0.41,0.3653947971466193,-0.08606798678810101,-0.51,-0.41,0.14971386412304657,-0.11,-0.51,-0.41,0.24976888554712454,-0.11,-0.51,-0.41,0.09278627066600792,-0.013161397523534159,0.3116393105897386,-0.28247100061450264,0.13958291442375476,-0.10898878623218768,0.05911237635601771,-0.30528794318457775,0.37114190026827254,-0.055346380873343655,-0.010264566710530033,-0.41,0.4005404349867325,-0.08551974714717547,0.03437303312496146,-0.41,0.35092493681012116,-0.08678621408353049,0.07419688751249387,-0.41,0.3964627716791717,-0.11,0.04825028215704813,-0.39643767486378545,0.3312356400614984,-0.3837180149461165,0.2289789100546848,-0.3808081180353367,0.15617890053095385,-0.11,-0.01033766817591501,-0.41,0.10329642196678487,-0.45089687319426286,-0.51,-0.41,0.3483085273227247,-0.11,-0.51,-0.41,0.2452715676998381,-0.1029206529171875,-0.51,-0.40290125,0.28066913559565043,-0.11,-0.51,-0.41,-0.01,-0.08137049396424474,-0.51,-0.41,0.10221473722729638,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0.03370060497319886,-0.11,-0.51,-0.41,0.03326075274041998,-0.8882867633309639,0.43588229354585134,-0.3832430684090661,0.013753309754746932,-0.11,0.3336468686729181,-0.41,-0.01,-0.0881137746952165,0.35783593731102165,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,0.3633773173523449,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.51,-0.41,0.2713693588481496,-0.11,-0.51,-0.41,0.038262277133418746,-0.11,-0.51,-0.41,0.23016379286640543,-0.11115875,-0.51,-0.41,0.13744110956497196,-0.11,-0.51,-0.41,-0.01,-1.01,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.16817827203234315,-0.41,-0.01,-0.11115875,-0.027487054045075877,-0.41,0.06333095849847907,-0.11,-0.0205521509325024,-0.41,0.1052127187507449,-0.11,-0.01,0,0,-1.01,-0.01,-0.41,-0.01,-0.11,0,0,0,-0.11,-0.01,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,0.07322767065638987,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0.033791174973499545,0,0,0,0,-0.11,-0.51,-0.41,-0.01,-0.61,-0.51,0,0,-0.11,0.24380187819238788,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,0.009712272486914544,-0.41,-0.01,-1.01,-0.00883273662296381,-0.41,-0.01,-0.11,0.05044089667042024,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.51,-0.36591011130241097,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.0106975,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.13200612881363966,-0.41,0.02928025226941451,-0.61,-0.046200376617503765,-0.41,0.012447792504286322,-0.11,-0.01,-0.41,0,-0.11,0,0,0,-0.11,0.019965647145676675,-0.41,-0.01,-0.61,-0.01,-0.41,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.51,-0.41,-0.01,0,0,0,0,0,0,0,0,-0.11,0,0,0,0.3071015092587679,0.37614553217178154,0.476105073713117,0.33550892876660304,0.07956702402752397,0.42788737386173953,0.2657010067601486,0.24647368372583572,0.08623590813037844,0.3466256691597729,0.46809623009020673,0.25178977206023445,0.00362775515600499,0.4180587738050118,0.15784945466538852,0.14130551159128749,0.18284371122249565,0.3377552381762775,0.27973212755207577,0.28042184870366565,0.061784103137310295,0.39156875603663716,0.13547001012994295,0.08998547749749387,-0.20520207652326117,0.3538852054612733,0.18487513992069235,0.09683064902344009,0.013547567931962094,0.23813353169254506,0.12736102665497817,0.14294114543092443,0.29927755361178027,-0.19842280101075463,0.4758255523033242,0.3381538290732789,-0.0460017389294204,-0.35828712608930974,0.4838554352837784,0.0986653922472318,-0.2884688432734896,-0.34796313850574995,0.4716210600083515,0.15341027876054364,-0.09480480015870435,-0.47089886943042814,0.4724771198997766,0,0.11705057576485844,-0.33922781641764377,0.43927532839123556,0.15689384961083525,-0.11,-0.4733665721824705,0.4600533121798551,0.031273803088146986,-0.06309733929659733,-0.43256950172467473,0.44604282580444043,0,-0.11,-0.51,0.3706391894671246,0,0.17630774909472258,0.3887273593467569,0.2522796754588126,0.1556038945678988,0.13344014956893913,0.18788166889615093,0.33785933455090533,0.17410940035934874,0.19796012970111163,0.07232748828616212,0.17187779511664697,0.1688415559502655,-0.0939970060410414,0.008867104582627018,0.034248500369998734,0.20063630177410105,0.04032969893233456,0.22387364203345894,0.18178158041222905,0.25261741087357514,-0.0656438769793509,0.08276843886615826,0.38369357065479803,-0.01,-0.5765117850160218,0.018960284192249058,0.2800709782295038,0,-0.11,0.03972162896357787,0.3391741652708021,-0.01,-0.11,-0.40953159391332056,0.05747549548676689,0.11295418227554167,-0.11,-0.43517534533434304,0.3718658070962552,-0.003488280428357032,-0.06576749549689262,-0.51,0.3773754802952101,0,-0.11,-0.51,0.26092445903681705,0,-0.11,-0.4807981193387115,0.33712232622740523,0.05401944901089952,-0.11,-0.51,0.30348156613528765,0,-0.11,-0.510135,0.3314101799337368,-0.01,-0.11,-0.51,0.16261099724733952,0,0.19316206881986286,0.22417874126274048,0.45743300518904595,0.18943708396294168,0.008576565638126421,0.12786856115934,0.32589632372762434,0.08974106745239094,0.08704151644766689,0.21866608655938066,0.19673407068269388,0.2017884864674504,-0.51,0.03349731991147477,0.3157105100256258,0,0.18442033862713778,0.23183322930698758,0.1644062486500128,0.17800731678530865,0.023706514649961152,0.03499784212756397,0.1104250010322662,0.015328481208567278,0.004350312372636798,0.017749673910231835,0.3551928207382063,-0.01,-0.11,-0.01,0.21745832991509315,0,0.06861261630716135,-0.51,0.42415824782567435,-0.01,-0.06611349452856194,-0.51,0.41800101865872596,-0.01,0.012395092566997022,-0.4767612276607124,0.3668915185102222,-0.01,-0.11,-0.51,0.27520079932304803,0,-0.11,-0.4780288437745641,0.3559488664964815,0,-0.11,-0.51,0.32143392345637334,0,-0.11,-0.5021118762459702,0.28975908748534085,-0.01,-0.11,-0.51,0.1810381624495548,-0.01,-0.06581027087668662,0.11029375054789728,0.3769868478389623,0.12165379587808277,-0.11,-0.01,0.32591729593882773,-0.01,-0.06797761491201035,0.0511865951281767,0.3897982182547768,-0.01,-0.11,-0.01,0.30017095600019045,0,-0.11,-0.01,0.35706723987375455,-0.01,-0.61,-0.01,0.3680009564451081,-0.01,-0.11,0.017965774742207875,0.14978800913637233,0,-0.61,-0.01,0.1817186673626377,0,-0.5146823744643961,-0.51,0.30368732432671464,-0.01,-0.11,-0.51,0.26856155437409307,0,-0.11,-0.51,0.2857714388019835,0,-0.11,-0.51,0.17907089248693944,0,-0.11,-0.51,0.15602091723239356,-0.01,-0.11,-0.51,0.1455737356180225,0,-0.11,-0.51,0.18566151463187308,0,-0.61,-0.5034831529171875,0.11820606315218923,0,-0.11,0.0777499821296274,0.46292609096033704,-0.01,-0.11,-0.01,0.3118332934736744,0,-0.07206063743010337,-0.01,0.38513534675520344,0,-0.11,-0.01,0.2363055114195574,-0.01,-0.09744216712197798,-0.01,0.3055245741604778,-0.01,-0.11,-0.01,0.21533038649236377,0,-1.01,0.03196095329361288,0.20760986857070576,0,-0.11,-0.01,0,0,-0.11,-0.51,0.34580318267822396,0,-0.61,-0.51,0.09,0,-0.11,-0.51,0.23330510786208392,0,-0.11,-0.51,0,0,-0.61,-0.4647779930777704,0.2732100600396742,0,-0.11,-0.51,0.12256591890845855,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.17278056899117822,-0.01,-0.11,-0.01,0.11705940426823007,-0.01,-0.11,-0.01,0.09709956955272676,0,-0.11,-0.014147414428763072,0.1270095301909415,0,-0.61,-0.01,0.2012304777253007,0,-0.11,0,0,-0.01,0,0,0,0,0,0,0,0,-0.11,-0.51,0.10923679483665757,0,-0.11,-0.51,0,0,-0.11,-0.49224336893716836,0.12854022486459485,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,-0.11,-0.51,0.08034637136337709,-0.01,-0.11,-0.51,0.08931375,0,0,0,0,0,-0.11,-0.01,0.29131602270950696,0,-0.11,-0.01,0.15676859935714382,0,-0.61,-0.01,0.14839066407510146,0,0,0,0.16364947199225857,0,-0.11,-0.01,0.11112370891268851,0,-0.11,-0.01,0.12445811544818818,0,-0.61,-0.01,0.15697531009177484,0,-0.11,-0.01,0,0,-0.61,-0.51,0.15547674132623013,-0.01,-0.11,0,0,0,-0.61,-0.51,0.09,0,0,0,0,0,-0.11,-0.51,0.09465970041290092,0,0,0,0,0,-0.61,-0.51,0,0,-0.61,-0.51,0,0,-0.11,-0.01,0.11927642993711475,0,-0.61,-0.01,0.18680872304596507,0,-0.11,0,0,0,-0.11,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51115875,0.11293436864990959,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.04651690794266615,0.4403697402369511,-0.1904673391375867,0.20611920941439305,-0.390030591832239,0.42173775939922786,-0.3555132598865767,0.09512521666181786,-0.07207222281671913,0.44178510312641217,-0.37382162113870265,0.017174422600268732,-0.11,0.4246654127126668,-0.41059625,-0.01,0.024021617036539197,0.11698149294978662,-0.3077731250170572,0.31789418143906956,-0.11,0.3986550283610975,-0.3803536023703377,-0.01,-0.07486433944749647,0.25109781368274836,-0.3809230426720192,-0.01,-0.11,0.08768240925230952,-0.41,-0.01,-0.61,-0.43825189529109,-0.41,0.2773006164951369,-0.05786071923669027,-0.4686376273460954,-0.41,0.249686790155671,-0.08242627433282834,-0.51,-0.41,0.2513298632610223,-0.11,-0.51,-0.41,0.18489317084024898,-0.11,-0.4756619394794572,-0.41,0.27628809365557644,-0.11,-0.4935953491099133,-0.41,0.19782054999375587,-0.11,-0.51,-0.41,0.1996263167759803,-0.11,-0.51,-0.41,0.08002809818029573,-0.042856466494681104,0.3854632547921304,-0.3669645667279876,0.057365634866443596,-0.0918197735059382,0.01752095845040957,-0.4126218215153183,0.2907640052286984,-0.0753477314695438,-0.011849065555830773,-0.41,0.3076883266728026,-0.11,-0.012532822904582857,-0.41,0.26451768933246766,-0.008795594697277247,0.1367248465036418,-0.3606721618947703,0.282227300548176,-0.61,-0.010018976416583326,-0.39243085675989653,0.2486490140505294,-0.08737224810121276,-0.010995079355593362,-0.41222658874999996,0.27785369407493526,-0.09066859504492684,-0.006926501535220057,-0.41269775,0.0574933286952153,-0.11,-0.47264634223847807,-0.41,0.2589811238642814,-0.11,-0.51,-0.41,0.10083961277817106,-0.11,-0.51,-0.41,0.21870065185523302,-0.11,-0.51,-0.41,0.08241718852058433,-0.07776299952305316,-0.51,-0.41,0.1622929402239165,-0.11,-0.51,-0.41,0.028841107892794315,-0.11,-0.51,-0.41,0.026296284090246265,-0.11,-0.51,-0.41,0.026609704989792274,-0.4364505661785011,0.33265207759920146,-0.4090919083586229,0.05052657244030817,-0.11,0.33907355668371225,-0.41,-0.01,-0.008012871249972943,0.020521509339903363,-0.41144079617811175,0.25814411664630993,-0.0786521355196402,0.06425375821347441,-0.3849847250296846,0.17198824215826064,-0.06604150503134985,0.0657580755701835,-0.33382543672715587,0.1672827543990953,-0.0726955385043266,-0.01082479403414941,-0.41,0.19349360127571238,-0.019909236222745978,0.0814177959269527,-0.41059625,0.16872473576370764,-0.61,0.16545003564975963,-0.41,0.06609023507402494,-0.11,-0.49387790515559665,-0.3884228768745605,0.16878608939648554,-0.11,-0.51,-0.41,0.17119800050655798,-0.11,-0.51,-0.41,0.14582015570381032,-0.11,-0.51,-0.41,0.02988680495567511,-0.11,-0.5064467962819129,-0.41147957052646766,0.09056344202992443,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,-0.1389042629162941,-0.010468825033054827,-0.40921142100579616,0.264851053559345,-0.61,0.02663201807648389,-0.41,0.16924907321302282,-0.08838863456764162,-0.0101640829276551,-0.4042961024258816,0.18610855986449665,-0.08564321127595655,0.007000080663985164,-0.41,0.15481139089850313,-0.04794816100668306,0.11463297646833487,-0.41190202481537425,0.003430410076548372,-0.11,-0.00010586803698599094,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,-0.11,-0.51,-0.41,0.07758722846503721,-0.11,-0.51,-0.41,0.021536529436173027,-0.11,-0.51,-0.41012374999999995,-0.0007324455724813956,-0.11,-0.51,-0.41,0,-0.11,-0.5090450845936729,-0.41,-0.01,0,0,0,0,-0.11,-0.51,-0.41,0.023594322701095433,0,0,0,0,-0.11,0.3171015839408204,-0.41,-0.01,-0.11,0.1610099914141347,-0.41,-0.01,-0.61,0.11179745683128618,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,0.09897835912771251,-0.41,-0.01,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0.04512411832461903,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.61,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.11991697967807385,-0.41,-0.01,-0.61,0,0,0,-0.11,-0.01,-0.41,0,-0.11,0,0,-0.01,-0.11,-0.01,-0.41,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.61,0,0,0,-0.11,0,-0.41,-0.01,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.61,0.07485066067739365,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,0,0,-0.01,-0.11,0,0,0,-0.11,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.61,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0.07771552136514182,-0.41,-0.01,0,0,0,0,-1.01,-0.01,-0.41,0,0,0,0,0,-1.01,-0.01,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0.3076723715838341,0.43354789283193934,0.5109389553512885,-0.09603027059914218,0.20603159951605632,0.3434321729178971,0.5065332839644817,-0.16272815255117742,0.23061152943803806,0.28926358966853327,0.5371068228603604,-0.13986109640289301,0.07282912546033411,0.11542436612613446,0.5391971526015885,-0.3958871938476464,0.1851830615665913,0.2467449321169391,0.508325784036003,-0.17902701736189994,-0.06159701700649854,0.14859699153420536,0.5334471913788736,-0.43677193468933945,-0.307110276551042,0.16478266518976217,0.5403977082054611,-0.39334088207228596,-0.06469668187375134,0.10459881215160416,0.5331862436338972,0,0.18148958183683972,-0.14611741112329504,0.5307027158046516,-0.2046319418172462,0.03480272631945015,-0.29942377379566126,0.5441007594291393,-0.4112203929934588,0.04008820312236949,-0.21199877471273232,0.5342289425622008,-0.4770893727225931,-0.05136109940328514,-0.4250724487052434,0.5116046241983718,-0.47165252581394335,-0.29104871832685186,-0.3608269457865742,0.5255045799585903,-0.37798730060095,-0.02879939768978182,-0.46793834724887884,0.537537728351833,-0.51,-0.011533458763504284,-0.51,0.5082482112696456,-0.4697576263477754,-0.11,-0.51,0.5025107567842939,-0.51,0.12731254592749047,0.17631031064567665,0.5086031209989472,-0.16163104336091305,-0.3606250691961601,0.1849864367712768,0.513487636388033,-0.35542739388340433,0.09312241923479556,0.12515946037868753,0.5381497358901012,-0.46962106655797825,-0.08636963405578094,0.028915807251164535,0.5270814967009095,-0.39346580156760713,0.18219839481429567,0.19294193789183867,0.5441068241844615,-0.4090314912479698,-0.11,0.029149271904011856,0.5159232966798661,-0.51,-0.07592211146686947,-0.01,0.5311469076544105,-0.4362907531974177,-0.11,-0.01,0.4040192560803269,0,0.02320358759251541,-0.437959080490086,0.5337521562481868,-0.48160146051681546,-0.11,-0.4732617014349164,0.5360156223559357,0,-0.11,-0.51,0.5300021924399156,0,-0.11,-0.51,0.49149604047903667,0,0,-0.480854407785129,0.5229390137748499,-0.51,-0.11,-0.51,0.49953579183383734,0,-0.11,-0.51,0.46687666581334325,-0.51,-0.11,-0.51,0.09,0,0.15776008233653166,0.29396207691685433,0.5498484649469166,-0.3797644447476447,0.06609525520608892,0.1770214523777763,0.5252751606331172,-0.44856332936258625,0.05146403551310127,0.28904818687754485,0.1586938583557319,-0.42436885370706645,-0.11,-0.01,0.5248987216791315,-0.51,0.05070870632500192,0.1958557382735377,0.5131928960841967,-0.4359041736888848,-0.11,-0.01,0.5180687240445939,0,-0.06453735820339812,0.02155686268785551,0.3814354384263917,0,-0.61,-0.01,0.45080731603495633,0,-0.3450852034771778,-0.3483429677062163,0.541131781267141,-0.4984313454248457,-0.06292814308440911,-0.4711960807987994,0.5335703140507985,-0.5034029790715989,-0.02385116454819384,-0.51,0.5363621639305899,-0.5023387500000001,-0.07143323233597769,-0.5106975,0.46392181185214915,-0.51,-0.0645225166757823,-0.46922566719328945,0.507471109954057,0,-0.11,-0.51,0.5064571455370662,0,-0.11,-0.4719814586445371,0.35626159177292915,0,-0.11,-0.51,0.22938121301198536,-0.51,0.009625905819196055,0.1675392738618044,0.4785793119605293,-0.4641590871150506,-0.11,0.028526596120517556,0.5130898248733754,-0.51,-0.51,-0.01,0.4817655003700232,-0.51,-0.11,0.024468763227604613,0.4310544085859098,0,0.00036570889961793154,0.027842150090234018,0.5267005092837493,-0.472237455725877,-0.11,-0.01,0.4772705159984895,0,-0.11,0.024562882730668145,0.4483189382977384,0,-0.11,0.013531230927814322,0.2601905759613338,0,-0.06465307150632343,-0.4975014229534705,0.4992633557387441,0,-0.04551587139787531,-0.51,0.3180279392266556,0,-0.09190493830481472,-0.51,0.44957140519762223,-0.51,0,0,0.28513242079304235,0,-0.11,-0.51,0.45503382057775255,-0.51,-0.11,-0.51,0.1598214787769926,0,-0.11,-0.51,0.17607272886910266,0,-0.11,-0.51,0.1513440686956266,0,-0.1537503246688288,-0.01,0.5249900596084152,-0.44300570625086194,-0.11,-0.01,0.4834542217064716,0,-0.11,0.03639170962222786,0.40166666143937546,0,-0.61,-0.01,0.17817426627736216,0,-0.11,0,0.44135821620620774,-0.51,-1.01,-0.01,0,0,-1.01,-0.01,0.138272815519357,0,-0.11,-0.01,0.13716593443171443,0,-0.11,-0.51,0.4518338488873158,0,-0.61,-0.51,0.2974017936587005,0,-0.17955051373759723,-0.51,0.2976148195983858,0,-1.01,-0.51,0.18210802256228129,-0.51,-0.11,-0.51,0.17323099490234686,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.16911061924993642,0.0284440429807042,0.476730950969517,0,-0.11,-0.01,0.3048956155703732,0,-0.11,-0.01,0.3695786280454002,0,-0.11,-0.01,0.20389897003004542,0,-0.635258201982506,-0.01,0.2755872832256065,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.2006975,-0.51,0.2230320352211883,0,-0.61,-0.51,0.17777719693667088,0,-1.01,-0.51,0.09,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.01,0.41795797519202393,0,-0.11,-0.01,0.16029281847920182,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.09,0,-0.11,0.10024216551053505,0,0,-1.01,-0.01,0,0,-0.11,-0.01,0.09,0,0,0,0,0,-0.11,-0.51,0.3166903233598863,0,-0.11,-0.51,0.15918045015393545,-0.51,-1.01,-0.51,0,-0.51,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0.1271210592115936,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,-0.01,0.2061751737617244,0,-0.61,-0.01,0.12783303567976684,-0.51,-1.01,-0.01,0.2135797592684342,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0.10978146913661496,0.44958299608037416,-0.11172874091055493,-0.2919358540824434,-0.11,0.45266601543197427,-0.20031211453734393,-0.46750039242015157,-0.07965021704237935,0.45027461699908944,-0.3428102198032703,-0.4292525209175551,-0.11,0.4397499712853999,-0.41,-0.46759700968187623,0.04844610175334452,0.45987090224042615,-0.25915904644879284,-0.43295939416191714,-0.012145814672141111,0.4488964151753879,-0.41,-0.4359798794128572,-0.45468169834936817,0.44324840132716203,-0.41,-0.51,-0.0856814307148281,0.31222560572509406,-0.37091097655521343,-0.51,-0.3545749913168165,-0.36477565684225544,0.014026496327855657,-0.51070875,-0.32645543916261927,-0.34759264472066176,-0.17153619270072773,-0.510135,-0.35146078696912103,-0.4749046892280625,-0.27788594232484976,-0.47406487590050433,-0.38060459054362883,-0.444397048842162,-0.32531338972218476,-0.51,-0.45524180253371926,-0.47416021575489586,-0.20893142902080478,-0.51,-0.16617685738761453,-0.4693883027302841,-0.329607044596139,-0.51,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.077021185347467,0.3903035220876723,-0.41,-0.4726401555937592,-0.2571254053472382,-0.09020281120084604,-0.2242540866209237,-0.45179611235869993,-0.09748083817110045,-0.02090898845388416,-0.29748638552797274,-0.51068625,-0.1293328670506211,-0.10268707419495503,-0.3666746380948339,-0.49107785773908813,-0.046861503947851164,0.1418707866589316,-0.39072595554856554,-0.4824625791945494,-0.11090305987341709,-0.12814143198002004,-0.41,-0.49892717645201023,-0.10305678053243048,0.0028762669967668693,-0.41,-0.51,-0.11197913523872574,-0.10883066920430509,-0.4106975,-0.51012375,-0.41728871085075697,-0.44046288643196846,-0.2397178505874133,-0.51,-0.1287371483367327,-0.5505250470271049,-0.37407561405825557,-0.5023387500000001,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.51,-0.11687805005948271,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.007582507847556607,0.3592069181298732,-0.32661082896132604,-0.4740945402419481,-0.11,0.3722226263231234,-0.41,-0.47711789914337804,-0.04051779401695472,0.17976770113721285,-0.3593640347169798,-0.48492018305939827,-0.61,0.03090615157943461,-0.41,-0.51,0.046154483150403755,0.12391715075526777,-0.41,-0.4744021897190042,-0.0759286228320454,0.1463297083047704,-0.3944640614179039,-0.5023387500000001,-0.11,0.11647664674509803,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.20804865731846825,-0.47255755008012446,-0.36353659051895293,-0.5107257711174168,-0.51,-0.51,-0.2926856394552819,-0.51,-0.6089677185419426,-0.51,-0.3267723162696458,-0.51,-0.11,-0.51,-0.41,0,-0.51,-0.51,-0.33970290640237366,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.03689249061952275,0.3200566505278878,-0.34746021857050446,-0.5023387500000001,-0.5638481349393003,-0.12081919652333593,-0.41,-0.4948905399177898,-0.11594761753167686,-0.039560103531042154,-0.3997681192244015,-0.51,-0.516202898002759,-0.151951376497011,-0.38830264534188974,-0.51032331375,-0.06757699001084863,-0.049734390020482536,-0.4036407993065836,-0.5023261969891424,-0.11,-0.10593645589213246,-0.41,-0.51,-0.11,-0.018055771856686862,-0.41,-0.51,0,0,0,0,-0.61,-0.51,-0.28652740357929185,-0.51,-0.11367120687141484,-0.51,-0.41,-0.51,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.9303875444137241,0.330815362262759,-0.41,-0.51,-0.200135,-0.01,-0.41,0,-0.11,0.11433978093545269,-0.41,-0.51,-1.01,-0.01,0,0,-0.11,0.10907304940099388,-0.41068625,-0.5106975,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.4211358218498436,-0.51,-0.32391684138466104,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.03029469447238862,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,-0.51,-1.01,-0.01,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.61,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.1127196628297491,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.51,-1.01,0.01966221823507834,-0.41,-0.51,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.5065058438394796,-0.51,-0.32837003856674285,-0.51,-0.11,-0.51,-0.41,-0.51,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2568845677176318,0.35859242687392406,0.44683510077577854,-0.22791836081224287,-0.06338366253945896,0.2673644787084611,0.4652899327830843,-0.4031085234549284,0.04142401010376041,0.026075865623710198,0.4793949309506076,-0.43168133730594266,-0.03097839433615692,-0.01,0.4588181444101375,0,0.12324695296953726,0.05864333433463985,0.470130835754727,-0.38147235345117725,-0.06486466381337815,0.09776414188519361,0.47818546143854435,-0.4720932774138654,-0.06837373999929527,0.022478091728940747,0.3397049734724727,-0.4716596110981405,-0.11,-0.01,0.36225136738376057,0,0.01572877860837544,-0.33415438780689777,0.460971150883203,-0.51,-0.61,-0.43504078188924844,0.47702253384618004,0,-0.06443268757690081,-0.4638346267680894,0.46930462087859864,-0.49199550156779237,-0.09378447873353175,-0.51,0.40850292056267357,-0.4854552826154348,-0.2800340412059834,-0.48594481688013186,0.4169100854465411,-0.51,-0.11,-0.4220598079692155,0.29125269020551603,-0.51,-0.11,-0.51,0.40751689804527325,-0.510135,-0.11,-0.51,0.2096509606140667,0,0.08876595168603726,0.05963456115933192,0.3596134555342798,-0.4732233084214407,0.0013083699039803595,0.04822824224508327,0.4178974080572051,-0.49176559028905514,-0.07105568029625109,0.036683328800064995,0.3332933447806739,-0.4922564977126849,-0.4275487425378318,-0.01,0.4048981206692595,-0.51,-0.11,-0.01,0.42977405856383605,0,-0.5165206281273684,-0.01,0.36025920621138485,0,-0.08033056729205865,-0.01,0.344605281288403,-0.51,-0.11,-0.01,0.24493651356346832,0,-0.06831015261188049,-0.51,0.372479070486121,0,-0.11,-0.51,0.295773624245476,0,-0.0762212611595251,-0.51,0.23764779885815984,0,-0.11,-0.51,0.1652737759222504,0,-0.11,-0.51,0.3205258297840318,0,-0.11,-0.51,0.20787131124686561,0,0,0,0.16237692944644516,0,0,0,0,0,0.014252768580507308,0.029164912992316834,0.44030661435618457,-0.4668220063243932,0.011822875972127576,0.06609683267291627,0.4221946682606766,-0.5111475,-0.02559980670400301,0.016845768089369904,0.2345078084394075,-0.479863559491109,-0.10234946984375,-0.01,0.3699596287405669,-0.51,-0.42486746587504587,0.02512572547343276,0.3921883633574536,-0.51,-0.031097019441147872,-0.01,0.24594107963491985,0,-0.07043720931869223,0.02290085686019257,0.24137911012385405,-0.51,0,0,0,0,-0.06454370599788603,-0.4749772593341938,0.43123834740359074,-0.51,-0.11,-0.51,0.38983719277888884,0,-0.51,-0.51,0.2568792201701006,0,-0.07000732885504049,-0.51,0.15421870404655613,0,-0.11,-0.51,0.3081831220552876,0,-0.11,-0.51,0.21045723625310875,-0.51,-0.06828769278389415,-0.51,0.1630219196241371,0,-0.11,-0.51,0.09,-0.51,-0.029820270578732135,-0.01,0.37526252626494494,0,-0.11,0.021286119213428926,0.32196012720613304,0,-0.11,-0.01,0.26860711793221326,-0.51,-0.11,-0.01,0.12358881219218112,0,-0.07013636890324568,0.020989695829901185,0.30158917099019134,0,-0.11,-0.01,0.2256516119643165,-0.51,-0.11,-0.01,0.22304738901746324,-0.51,0,0,0,0,-0.11,-0.51,0.30051581375744646,0,-0.11,-0.51,0.29887012679787406,0,-0.11,-0.51,0.15550081105328806,0,-0.11,-0.51,0.12776283343586153,0,-0.11,-0.51,0.11899920873937847,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,-0.51,0.08987624999999999,0,-0.11,0.07867194115022423,0.40779516148659734,0,-0.11,-0.01,0.2250945323748046,0,-1.01,-0.01,0.22274776986026135,0,-1.01,-0.01,0.12990714585785124,0,-0.11,-0.01,0.23255835429386973,0,0,0,0,0,-0.11,-0.01,0.09,0,0,0,0,0,-1.01,-0.51,0.13000575113644697,0,-1.01,-0.51,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.01,0.0915114353421821,-0.51,-0.11,-0.01,0.12569835837090074,0,-1.01,-0.01,0.20095129935950076,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-1.01,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0.1533577992098037,0,-0.61,-0.01,0,0,-0.11,-0.01,0.1574825004214711,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.23473305121290644,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.04321412479182323,0.3763797506694914,-0.3730186778566973,-0.4611780717196722,-0.11,0.4283709269351499,-0.3721032356343418,-0.5001298655473938,-0.11,0.44067331827378775,-0.41,-0.51,-0.11,0.3037769656833829,-0.41,-0.51,-0.11,0.38796254217140486,-0.41,-0.5007365562059225,-0.11,0.33022999142548287,-0.41,-0.51,-0.51,0.21389453963839114,-0.41,-0.51,-0.11,0.12807832616092707,-0.41,-0.51,-0.4424493602356887,-0.51,-0.2287563032987208,-0.51,-0.42874729578651294,-0.37512471168645134,-0.41,-0.51,-0.44472509171470953,-0.51,-0.3300126891243834,-0.51,-0.19348872599254507,-0.46941536739482576,-0.41,-0.51,-0.16135326156634328,-0.51,-0.41012374999999995,-0.5032885675492726,-0.4539151871611749,-0.51,-0.38264617274343904,-0.51,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.048411990508011496,0.3823686440543446,-0.41,-0.5023387500000001,-0.15384681770255965,-0.12592380588236526,-0.4068492886404104,-0.5023387500000001,-0.16012375,-0.021797981600040456,-0.4132640627730153,-0.51,-0.1067749153093131,-0.11409009064702072,-0.41,-0.5023544496891397,-0.11,0.11966273095923396,-0.41,-0.51,0,0,0,0,-0.09595972351714435,-0.053089655478673795,-0.41012374999999995,-0.51126,0,0,0,0,-0.26194418013710086,-0.51,-0.41,-0.511258875,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,-0.51,-0.09055166497152213,-0.5148900605738262,-0.41012374999999995,-0.51,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0.3640813371661425,-0.35275228856450325,-0.51012375,-0.11,0.2396722377567106,-0.41,-0.51,-0.036192527723357466,0.15245624361019566,-0.4011419789501459,-0.510111375,-0.11,-0.010785097552304826,-0.41,-0.51,-0.09366214647326208,0.10381832021208665,-0.41,-0.51,-0.51,0.053171351292712415,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.4539151871611749,-0.51,-0.34801152510678746,-0.51,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.23618671939224986,-0.41,-0.51,-0.11,-0.09986208948817848,-0.41,-0.51,-0.11,0.03929281337854533,-0.41,-0.51,-0.61,-0.08553872501604347,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.10882627824482106,-0.05301460124007593,-0.41,-0.51012375,-0.14622696980425506,-0.51,-0.4064966501034838,-0.51012375,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,0.07806824493599784,-0.41,-0.51,-0.11,-0.01,0,-0.51,-0.61,0,0,0,0,0,0,0,-1.01,-0.01,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,-0.41,-0.51,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2682952952557661,0.44497719791640256,0.5302757071103402,0.3792787769551018,0.18165442956282726,0.33395428509795444,0.5411601089942741,0.34314981151606805,0.0015597927314729074,0.32943436737465176,0.5334208404092015,0.35765715172623597,-0.09481315330367243,0.27485734742037415,0.537472391955932,0.09612196848659785,0.09055783794514673,0.31327741244830254,0.5388595905010227,0.27805879432048247,-0.22201148302065402,0.20135299456773673,0.5342148865627785,0.02759954752206207,-0.04446925458928424,0.10511924223060257,0.48969884770615035,0.06521830830000655,-0.4121597890675932,0.06893320468212974,0.5314142505110258,0.029389288578521085,0.19178391116262666,-0.12040762735092965,0.5415256426609915,0.31163303730943526,0.021549639700964948,-0.2712599562745581,0.5280926275608824,0.18493723242495685,0.056656011980523086,-0.3039383944263691,0.5286527486313923,0.13983220458763623,-0.07136214485345829,-0.47093367622537274,0.5349865701474837,0,-0.025463598382676193,-0.4071824131218661,0.5268357704383474,0.062449241362099735,-0.02532915048629343,-0.51,0.5326090405316807,-0.01,-0.06531648601716933,-0.51,0.5065833572351877,0.061081411158040305,-0.11,-0.51,0.473374892765186,-0.01,0.10464722184107997,0.37767656494056423,0.539236565494269,0.33327360838436976,-0.051809301112905395,0.2593142000811175,0.5110460848016678,0.11719363724808395,-0.06681939251675531,0.28267221760247263,0.5227189348292788,0.11946606410953707,-0.3785760733222003,0.028277936019046504,0.5160730451679537,0.07614737728096349,0.12865420360717666,0.19146488000441797,0.5224393952108315,0.16578904716653536,-0.11565619021824823,0.02926007971787769,0.5227847655680482,-0.01,-0.07170163710489225,-0.01,0.5098578146801913,0.025824204754298412,-0.11,-0.01,0.4640217844771372,0,-0.3139416348030844,-0.3772782028778443,0.5318022504602066,0.15617734732222616,-0.11,-0.4740450351630408,0.50554551349466,-0.01,-0.11,-0.3729858119041094,0.5217363463166881,-0.01,-0.10103278659903177,-0.51,0.5244555594832141,0,-0.11,-0.47760697827656956,0.5167498192385708,0.02379645106750706,-0.11,-0.51,0.47777279578365095,-0.01,-0.11,-0.51,0.4642394720247898,0,-0.61,-0.51,0.2218814584186673,0,0.09922899757345001,0.3162002496157954,0.5259564780242388,0.23131604150305524,-0.28139911704734605,0.14253228362186787,0.5295249686534378,0.111684990802394,0.05761796524799594,0.12473967170954949,0.5078236551923478,0.1205287645585454,-0.03443289552722786,0.061884688399316316,0.4796244781504087,0.08348222801855708,0.10016271001558116,0.31233941180813884,0.15228774119627345,0.11080711283810188,-0.11,-0.01,0.5107811998962776,-0.01,-0.39848529026084484,0.06106997715640271,0.5017392997208131,-0.01,-0.06750570728269835,-0.01,0.42227020091963846,-0.01,0.08073606290165948,-0.34623713926564537,0.5096234409972216,0.0794693599585381,-0.06477831282080786,-0.4785093990695608,0.5315189375584845,-0.01,-0.11,-0.48076804207443435,0.5065646988712134,-0.01,-0.11,-0.47004355018845484,0.48322674613607786,-0.01,-0.027194181137282218,-0.4053610393915489,0.17437316453208418,0.02485823038946798,-0.11,-0.51,0.4753833746444018,0,-0.11,-0.48653012823960307,0.4565742079747094,-0.01,-0.11,-0.50290125,0.29065139147712105,0,-0.06434735676550976,0.16159356648785536,0.4953388851548712,0.04304774082577385,-0.44495881610743043,0,0.508079013057978,0,-0.5415549669979021,0.06268941554876588,0.4612325611948101,-0.01,-0.61,-0.01,0.4740437626711474,0.022809858177487,-0.11,0.02550872155380747,0.4918583864488456,-0.01,-0.61,0.025066189272217043,0.458994814656282,0.023144870117617053,-0.08863757887861978,0.026340884300957976,0.37694292439605004,0,-0.11,-0.01,0.24204612746821474,-0.01,-0.06756848333805521,-0.51,0.517269229389943,0.007033898446086215,-0.10090527829171933,-0.48708227091347284,0.4306190366300615,-0.01,-0.11,-0.4840520283375403,0.3368991793588322,0,-0.11,-0.51,0.19990266228513667,0,-0.08199080469115426,-0.51,0.3591034793016664,0,-0.11,-0.51,0.2698488167221096,0,-0.11,-0.51,0.1347496709547042,0,-0.11,-0.51,0.16207091678522345,0,-0.11,0.03533409911763367,0.544943303671596,-0.01,-0.11,-0.01,0.33238658525023285,0,-0.61,0.03427686008973621,0.439006858144459,0,-0.11,-0.01,0.17795045437247214,0,-0.11,-0.01,0.4351035261558882,0,-0.61,-0.01,0.20357723275498027,0,-0.11,-0.01,0.16492344868883815,0,-0.11,-0.01,0.13619190125216118,0,-0.61,-0.51,0.4811874027632403,0,-0.11,-0.51,0.3828377018739489,0,-0.11,-0.51,0.3328281802848114,-0.01,-0.11,-0.51,0,0,-1.01,-0.51,0.1938151171527194,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.01,0.42375356369878436,0,-0.11,-0.01,0.36314609561799815,0,-0.11,-0.01,0.09,-0.01,-0.11,-0.01,0.17640992315653684,-0.01,-0.11,0.07474584277743687,0,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.12879337842127964,0,-0.11,-0.01,0,0,-0.11,-0.51,0.41220427500951035,0,-0.11,-0.51,0.207047675076792,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,-0.61,-0.51,0.1345557718991764,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0.5013163669758238,-0.01,-1.01,-0.01,0.3331754360739884,0,-0.61,-0.01,0.21153019254926567,0,-0.11,-0.01,0.13569241861873266,0,-0.11,-0.01,0.21320966528996466,0,-0.61,-0.01,0,0,-1.01,-0.01,0.09,0,0,0,0,0,-0.11,-0.4748115941874869,0.24673197105923,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0.13546898252028236,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.01,0.20434364487744702,0,-0.11,-0.01,0.2958731716459788,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.09,0,-0.11,0,0,0,-0.61,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0.10650894162792475,0.4604909067760656,-0.10669191310229467,0.21447351914848023,0.029950588807802218,0.4575788124739392,-0.33462180976423206,0.022598888802099037,-0.06478241813996982,0.453731704160838,-0.3300279118698293,0.022148748061022218,-0.11,0.44860314221561676,-0.41,-0.01,-0.027585573619879268,0.4588875725421085,-0.31311003021570843,0.08044361849098726,-0.51,0.4484174295548681,-0.40290125,0.021118804743674002,-0.12106503297189836,0.44539444018132285,-0.41,0.019401497205196024,-0.61,0.37109043660846647,-0.41,-0.01,-0.3005646270748848,-0.1640190864397807,-0.002298790786692443,-0.1409166832135854,-0.2507990067238322,-0.3385205837892947,-0.2012104641804422,-0.1263681452881354,-0.16654219396015055,-0.2592217907407994,-0.30181408127185094,-0.11920703466561695,-0.1606681198785513,-0.3910617392938864,-0.3622117206981115,-0.13234308462250166,-0.18935938112783854,-0.4187965808264627,-0.27446531770062005,-0.13796671510927203,-0.13504579830098754,-0.46409334082558695,-0.39186571548084315,-0.1392303304653495,-0.19860897964281715,-0.44405775736679054,-0.3734796051086644,-0.14332224080495243,-0.1511795003389273,-0.4938803525393314,-0.378877107798227,-0.12534535609693898,-0.3685954182023473,0.38874924432655517,-0.282315197156234,-0.016064340506488035,-0.1904865881791,-0.005346325069990198,-0.15160179136148644,-0.05377783864657323,-0.2287432955578232,-0.015121124876784135,-0.29927243940365145,-0.08841598862247885,-0.20636797058672338,-0.02928703516873611,-0.2487500749277597,-0.07611710388249304,-0.13944495643809413,0.13502570479590137,-0.32902673277841554,-0.02811062914341369,-0.3011920513719954,-0.029418902836041393,-0.3656768457526744,-0.06824939180245178,-0.6029012499999999,-0.015160390610592236,-0.36583907369353363,-0.06965040389424151,-0.61,-0.03482391743717825,-0.38705793424179025,-0.057807471694249796,-0.28516776290571905,-0.2799619157545835,-0.3662761683631854,-0.14586261970653347,-0.31731000228639666,-0.5097219011518644,-0.3419482961442668,-0.1511970235569529,-0.14048157292874033,-0.4505536163719417,-0.3782049107408966,-0.10386573430643417,-0.11,-0.51,-0.41,0,-0.5631919999533739,-0.47060542876287254,-0.41,-0.14675246671136882,0,0,0,0,-0.1084575901756174,-0.51,-0.41,-0.1108140588437244,-0.11,-0.51,-0.41,-0.09378569148825813,-0.20396813294788788,0.3281768153520339,-0.28323034465293756,-0.0005007839804836538,-0.07255651206980182,0.3571462056622426,-0.3492134528280237,0.005374620083521553,-0.06698338301822668,0.12092735285646158,-0.29729760588576826,-0.013958417383146873,-0.04637878370473068,0.022258033613172936,-0.41,-0.046570834308593,-0.33307662215828937,0.13599531755511382,-0.37205206788674744,0.018097824828675543,-0.11,0.16813048013464893,-0.37516779393283206,-0.013165923614659642,-0.19102408504219878,-0.01082399285456103,-0.39330838093363313,-0.035769605602478785,-0.08934145965564197,0.023874958068462026,-0.34965401416754677,-0.01604622719544059,-0.19350707947060958,-0.33402640301899283,-0.3365715794093197,-0.16021718145102903,-0.16012375,-0.4418846934822231,-0.3826339762878907,-0.07663731850687004,-0.16066154678777195,-0.4863493693111079,-0.41,-0.11950113642868306,-0.10181569565491148,-0.51,-0.37711359530663435,-0.09231219506667662,-0.19884549294081522,-0.45089009016426995,-0.41,-0.16486497433307373,-0.11,-0.51,-0.41012374999999995,-0.04471036314666677,-0.11,-0.51,-0.41,-0.044202347567819114,-0.11,-0.51,-0.41,0,-0.61,0.32838757305405814,-0.37829387260136715,-0.01,-0.14887961100866265,-0.059567359772077784,-0.3383418706776418,-0.1003180488598362,-0.09404777428691175,-0.059204060163934084,-0.3751609128693654,-0.061106480563042354,-0.10096330654062748,-0.09671805829686106,-0.38982555114671547,-0.0962006985602224,-0.08387440857317839,0.038489319065834735,-0.41012374999999995,-0.04045212126770849,-0.10032434958709509,-0.0904784247967157,-0.3769105898449403,-0.09024741622316301,-0.10234644409138306,-0.08318080710756126,-0.40299276734374995,-0.06861673704332834,-0.11,-0.01,0,0,-0.1542011879956196,-0.51,-0.41,-0.11717878595857485,-0.21410911775831995,-0.5137027840155987,-0.4011413862609958,-0.13883570826397001,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.20512375,-0.51,-0.41,-0.1223993443660907,-0.11,0.39394142837154855,-0.41,-0.01,-0.61,0.11254407162555213,-0.41,-0.01,-0.11,0.2044216119700581,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,-0.01,-0.61,-0.01,-0.41,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,-0.025574940167432295,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.031439700247352396,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.2087838256120593,0,0,-0.11,-0.012842328528331568,-0.41,-0.03309815298939686,-0.61,-0.01,-0.41,-0.01,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.09784131502645795,-0.01,0,0,0,0,0,0,-0.61,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,-0.01132525,0,0,0,0,0,0,0,0,0,0,0,0,-0.5217212108651826,0.12230436185859524,-0.41,-0.01,-0.11,0,0,0,-1.01,0.031015635245182294,-0.41,-0.01,0,0,0,0,-1.01113625,-0.01,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0,0,-0.61,-0.018868297064187453,-0.41,-0.011831500000000002,0,0,0,0,-1.01,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.15680003217269192,0.30497372142253026,0.45866297433978853,0.2130374700013092,-0.27156806098709974,0.19213732575813022,0.4344918046868096,0.12034136419403377,0.0296658065689117,0.13168425419443414,0.4521877286817647,0.03926340680583474,-0.0007131271487922641,-0.01,0.4261538527040022,0,0.059248264396957635,0.18887367830393087,0.41609123479972443,0.10102656208062985,0.049712736193646245,-0.01,0.2815867433604221,0.020405927946999976,-0.46170266991008946,0.028508809976843914,0.426868203878726,-0.01,-0.11,-0.01,0.3571879044184305,0,0.05771949593571156,-0.431315038713577,0.40835140039625234,0.07280476582674401,-0.07439727768058252,-0.51,0.4473546294650561,0.06938040285320107,-0.06694539638800324,-0.4286362126624128,0.4626670635701253,0.036849630596165465,-0.11,-0.51,0.36863871566591655,0,-0.06528080966711489,-0.51,0.37601188483613607,0.01979373146797532,-0.42410829706391034,-0.47609660525215375,0.3133938295169389,-0.01,-0.11,-0.51,0.40367233450338136,0,-0.61,-0.51,0.18400961132864396,0,0.08395910881962099,0.37118804520195675,-0.00965765122193782,0.007368965904276598,-0.15782511089283036,0.07178652525611319,0.006018415040614164,-0.009763393336504129,-0.005798821488196366,0.04542096668707727,-0.03907997836323082,-0.028763836691803896,-0.19710240511814642,-0.03946791735729422,-0.0396921380479166,-0.039344041303002175,-0.0997689118376231,0.130300663653677,-0.04490515645076874,-0.004849318738486988,-0.05657780177776261,0.004090345572347116,-0.01689075230463561,-0.031304664489543665,-0.1606975,0.016453609093055148,-0.016413184388061303,0.018229141641989337,-0.06088983691447031,-0.015574487542633823,-0.03624404724485446,-0.0357857711577645,-0.15907903544099206,-0.3986568338303925,0.040786025080601945,-0.07399576980661983,-0.61,-0.5074912987795818,-0.05675240154429839,-0.08741837970660951,-0.06883549754936372,-0.5013579555908387,-0.02104871622355379,-0.09872693759587917,-0.0828797479369042,-0.5116767925218053,-0.08292778363675816,-0.08243971460062914,-0.09631227717954254,-0.46753123673117747,-0.06717824934804865,-0.06440312897160798,-0.016483005543498845,-0.5172029186357625,-0.09166231849978934,-0.08578072853690336,-0.11,-0.51,-0.019349340657944192,-0.032812720728806165,-0.61,-0.51,0.03489342211739111,0,-0.03954596281456856,0.09036640110390753,0.37046845465593514,0.008910895436454251,0.01380198162857265,0.0406521027741662,0.37157433461759093,0,-0.0026433170369568743,0.07571167634970638,0.017815862307217732,0.05332360815707973,-0.03815471412481429,-0.00442920056747689,-0.00806118728183565,0.011342466745575349,-0.008163273232234461,0.15451008174341063,0.0243625443239162,0.008139969166028632,-0.11,-0.01,0.09372950025447148,-0.01,-0.20593729939615593,0.048277691115358075,-0.01022175110283571,-0.002266695845764083,-0.44574927679629717,0.011870050009562726,-0.01490724435666084,-0.012361809400823272,-0.03943033337248713,-0.4647431859525525,0.342686290385081,-0.005956290327290031,-0.11,-0.51,0.31419468800959466,0,0.18225529599015391,-0.475630594158307,-0.011197591547631785,-0.0004458699989943896,-0.11,-0.51,0.07876298923939165,0,-0.11678003585592978,-0.51,0.09669018469883878,-0.01,-0.11,-0.51,0.10123348118869668,0,-0.61,-0.51,0.05130081579664571,0,0,0,0,0,-0.11,0.3580685724605627,-0.058744300592402474,-0.009261774251482762,-0.07572312640760209,-0.02424925404503578,-0.03377072605070272,-0.02323726511632349,-0.047183375791031185,0.08172691844708183,-0.021408856829258263,-0.007050499031609567,-0.45930413854073143,-0.04080798629140095,-0.04027229102783282,-0.03620908536098764,0.03469742233607955,0.0777435523720251,-0.028380687723987906,-0.02939768108788232,-0.06232806131206933,-0.030076440422361312,-0.056394599495938745,-0.04326784802374286,-0.060608235982227796,0.02013200207489682,-0.06217245064766433,-0.027922200955599955,-0.11,-0.01,0.089191125,-0.01,-0.11,-0.46769840658743755,0.00034981866649230753,-0.0635845584846953,-0.09599881970288307,-0.51,-0.013898340513710146,-0.02705150933911171,-0.04789380164339923,-0.51,-0.044468350508706865,-0.044371051140929575,-0.11,-0.51,0.08919909903392577,0,-0.11,-0.5061554094476597,0.011953079082720964,-0.01208639546875,-0.11,-0.5106975,0.03392079753112418,0,0,0,0,0,-0.11,-0.51,0.089191125,0,-0.11044027172171579,-0.01,0.4005014289259209,0,-0.11,-0.01,0.09,0,-1.01,0.029741026311436804,0.2153937251621688,0,-0.11,-0.01,0.09,0,0,0,0.10184533004100518,0,-0.11,-0.01,0.09,0,-0.61,-0.01,0.0708580758412837,0,0,0,0,0,-0.11,-0.51,0.21667275285230397,0,-0.11047435348455568,-0.51,0.16521313210844576,0,-1.01,-0.51,0.1292823851310753,0,-0.11,0,0,0,-1.01,-0.51,0.18869512857342086,0,-0.11,-0.51,0,0,-0.11,-0.5028403350432578,0.08608991105897792,0,-0.11,-0.51,0,0,-0.61,-0.01,-0.001750590202632317,0,-0.11,-0.01,0.07754672675906284,0,-0.11,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,-0.012411986729910372,-0.01,0,0,0,0,-0.11,0.012883725900869314,0.06556940704390178,0,0,0,0,0,-0.61,-0.51,0.08206784802869793,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0.03076626352276855,0,0,0,0,0,-0.61,-0.01,0.13449589695545291,0,-0.11,-0.01,0,0,-0.11,-0.01,0.04880692799480254,0,-0.07812083698063857,0,0,0,-0.11,-0.01,0.09,0,-0.61,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0.1232142069463677,0,0,0,0,0,-0.61,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.012025000000000001,0,-0.01,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.03327060330251569,0.44435905523376756,-0.41115874999999996,0.06160343598865524,-0.05006914661131913,0.43128054223650997,-0.40291009916931997,-0.01,-0.07502964833877449,0.43185373085059847,-0.41,0.020404430914518167,-0.4369543977147636,0.3607561598761772,-0.39293011403457395,-0.01,-0.07377312456491783,0.3385088317075184,-0.399874761795618,0.006512973731158075,-0.11,0.20231557898577573,-0.41,-0.01,-0.11,0.25970987942744567,-0.41,-0.01,-0.11,0.033899819903396945,-0.41,-0.01,-0.19873050758909,-0.34081993289915147,-0.2876684318599672,-0.1571229329474324,-0.12811510901111864,-0.4747239859059035,-0.4055999464513347,-0.12860661326406245,-0.1560235630143454,-0.4261614133650429,-0.3747819160560004,-0.127671636451057,-0.11,-0.51,-0.41,0,-0.4027021837705064,-0.4799248229169061,-0.39269621655634446,-0.16075384673194654,-0.61,-0.51,-0.41012374999999995,-0.1547277298773295,-0.51,-0.51,0,0,0,0,0,0,-0.09537572793249954,0.383183341483284,-0.41115874999999996,-0.01,-0.12070138246104689,-0.09120559386138677,-0.5318468843934816,-0.1050110600345501,-0.08844879345938268,-0.0728574098399609,-0.4225828089144827,-0.07345779857313817,-0.10397076593575226,-0.08191157078988354,-0.41971887499999994,-0.05818112342844046,-0.4602900977983298,0.004025205132385962,-0.4107515,-0.04534202800327708,-0.11,-0.106158969197573,-0.41,-0.08123614290315405,-0.19049914236253135,-0.07081652168496838,-0.42186548749999997,-0.04830898610845593,-0.5962777328460768,-0.11745657784333814,-0.41,-0.1150738512380761,-0.15341029465735478,-0.4723393103795402,-0.41,-0.047785990044338436,-0.1627015193304316,-0.51,-0.4646265477437926,-0.10783139605215422,-0.099723777889375,-0.51,-0.4224648624355583,-0.016930532758338366,-0.11,-0.51,-0.41,0,-0.51,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.08260994629467389,0.36565474544826276,-0.4111475,-0.010135,-0.11,0.30893840732165784,-0.41,-0.007852676719619582,-0.056860339472240166,-0.004773442825024248,-0.41,-0.037126555588609694,-0.08975410919852483,-0.01511971155817203,-0.4140985523799037,-0.007988863229536396,-0.51,0.020939474765520466,-0.41013499999999997,-0.003979393494480725,-0.11,0.06837379745111385,-0.41,-0.01,-0.11,-0.04501368523818782,-0.41,-0.044646039253510676,-0.15461466613241798,-0.057780198688521266,-0.41,-0.06171382230581779,-0.51,-0.4672996820772283,-0.41,-0.146449854730954,-0.11,-0.51,-0.41,-0.022352115408160688,0,0,0,0,0,0,0,0,-0.51,-0.51,-0.41,-0.07024858975159746,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.23368082352916988,-0.41,-0.01,-0.10395402055760752,-0.07636787168681577,-0.44336336614348854,-0.0760685183062339,-0.10042639121946147,-0.014839845863983334,-0.4106975,-0.07823183376278754,-0.11,-0.01207665015625,-0.41,-0.0106975,-0.61,0.00004782937996395016,-0.41,-0.017522740596453534,-0.6066419871310362,-0.07768070519084684,-0.41,-0.07875574614347863,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,0.11613291802247505,-0.41,-0.01,-0.11,0.034183762439332986,-0.41,-0.01,-0.61,-0.01,0,0,-1.01,0.032781716784384185,-0.41,-0.01,0,0,0,0,-0.11,0,0,0,0,0,0,0,-1.01,-0.01,0,0,-0.61,-0.51,-0.41,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0.08787525411168343,-0.41,-0.01,-0.11,-0.01,-0.41,-0.01,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.021137500000000004,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.024263223945594617,-0.41,-0.01,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.28284151242042715,0.29775547759853077,0.5399631404506681,-0.3385561624684137,-0.03180915180063224,0.17092393153750202,0.5432604984601164,0,-0.06650321992244192,0.0791026068637983,0.5237051096404556,-0.51,-0.11,0.03565592095313732,0.5395108700856006,-0.51,0.1249687844142067,0.43590633362262016,0.234719562295041,-0.39423389765808137,-0.11,-0.01,0.5129949148782732,0,-0.11,-0.01,0.5204790487907152,-0.51,-0.11,-0.01,0.45246322734226213,0,-0.06901826027276434,-0.3557559642111457,0.5383037039000569,-0.4792808783107033,-0.4283285818825494,-0.51,0.5249858019304214,0,-0.051329658463331554,-0.51,0.5316086799246357,-0.512561625,-0.11,-0.47881207180184826,0.4762103138483593,0,-0.06822417725915716,-0.51,0.5410282189302789,0,-0.11,-0.51,0.49729180584089994,0,-0.11,-0.46699495533464047,0.4553474177833771,0,0,0,0.13537782120776937,0,-0.016727923887235235,0.09480587947977982,0.5224388359776653,-0.4622541628446512,-0.07845755618737124,0.06176670560286667,0.541731557746688,0,-0.04153083330336331,0.02640945170733862,0.5195994779475588,-0.5083927690894566,-0.11,0.009928460684708635,0.4645687741079084,0,-0.06644174885993111,0.02190751072381867,0.5247638870492306,0,-0.11,-0.01,0.4845809257554812,-0.5048799300151393,-0.11,-0.01,0.48436954524879805,-0.51,-0.11,-0.01,0.21058634514883862,0,-0.11,-0.51,0.5296175885222056,0,-0.11,-0.51,0.42607754777292167,0,-0.61,-0.51,0.4618732546865438,0,-0.11,-0.51,0.33644117123503253,0,-0.11,-0.51,0.37746854158409593,0,-0.11,-0.51,0.13591483196612447,0,-0.11,-0.51,0.13621275276232686,0,0,0,0,0,0.036770672247154024,0.1032521714885488,0.5123215366249083,-0.5006478809468082,-0.04301862539344541,-0.01,0.4931743484670757,-0.51,-0.521306988563011,0.026460835493762852,0.4735405737935408,-0.51,-0.11,-0.01,0.4633928496412777,0,-0.06604276333055925,-0.01,0.5029816669707563,0,-0.06869529007001969,-0.01,0.32175795817194947,0,-0.11,-0.01,0.30094213318360485,0,-0.11,-0.01,0.09,0,-0.06915134839260634,-0.46958141647864454,0.5307301579430721,-0.51,-0.08725624597981063,-0.51,0.47578952346263087,-0.51,-0.06840506700798653,-0.4634206675659158,0.3856581654471422,0,-0.11,-0.51,0.13610255183619316,0,-0.11,-0.51,0.3918119206222302,0,-0.11,-0.51,0.20611867812052906,0,-0.11,-0.51,0.26434278290239954,0,-0.11,-0.49079334301687016,0.09,0,-0.0982782962538725,0.059092353889587924,0.5080340115692875,0,-0.11,-0.01,0.46757191519514524,-0.51,-0.08853378010532166,0.13173538252161024,0.459463185025879,0,-0.11,-0.01,0.2695668857655751,0,-0.029968962913722252,-0.01,0.40694819959579476,0,-0.61,-0.01,0.2908501166529637,0,-0.11,-0.01,0.22942970155906983,0,-0.11,-0.01,0.09,0,-0.51,-0.4882653224476336,0.4215410526115306,-0.51,-0.11,-0.48946122378286355,0.26858893444763793,-0.51,-0.11,-0.51,0.21716392500704107,0,-0.11,-0.51,0.1515616388495709,0,-0.11,-0.51,0.26997450260943795,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.10319302363767964,0,-0.11,-0.01,0.4002775748293155,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.21284500692551744,0,-0.11,0,0,0,-1.01,-0.01,0,0,-0.8835790273022723,-0.01,0.09,0,-0.11,0.07463160158888862,0,0,-0.11,0,0,0,-0.11240576092660279,-0.51,0.21246464851612057,0,-1.01,-0.51,0.32246679929643973,-0.51,-0.11,-0.51,0.12955675436658848,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.19233875,0.029109622303494308,0.2381006002496019,0,-0.11,-0.01,0.207943103896001,0,-0.61,-0.01,0.1342303108490381,0,-0.11,0,0,0,-0.11,-0.01,0.21082775085475589,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0.17884963910532867,0,-1.01,-0.01,0,0,-0.11,-0.01,0.09,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.03308474212259015,0.4578191078730964,-0.36376344747951905,-0.4925170231802952,-0.11,0.45440025256121586,-0.39111188366472804,-0.5098632087924516,-0.5354661456861575,0.45609542912467993,-0.41,-0.51,-0.552479764671875,0.40066959029367205,-0.41,-0.51,-0.07204545796738984,0.4517102107795055,-0.41,-0.51,-0.11,0.3345712431958513,-0.41,-0.5055332929611996,-0.11,0.26930906410593514,-0.41,-0.51,-0.11,0.0817878020557288,-0.41,-0.51,-0.40772336790844765,-0.51,-0.10926706266170472,-0.51,-0.14852493868628208,-0.4760549065595051,-0.3648602989461367,-0.51,-0.13239032652273935,-0.4828604869859915,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.4539151871611749,-0.51,-0.3783406368179898,-0.51,0,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0.38571038656613127,-0.3840710610245517,-0.51,-0.61,-0.11848437506455176,-0.37877451790590216,-0.510135,-0.51,0.20192268920207962,-0.41,-0.51,-0.13396712227766294,-0.12203590837867537,-0.3832354140469282,-0.5146555140227402,-0.61,0.06737341622179832,-0.41,-0.511042875,-0.11,0,-0.41,0,-0.11,-0.015565222794101649,-0.41,-0.51,-0.11,-0.02255340759379199,-0.41,0,-0.11934430580047004,-0.45856576934493937,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.36597347848235884,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0.35877479391950534,-0.39205471138408204,-0.509548600448092,-0.11,0.3153662261657762,-0.41,-0.5112625951136084,-0.11,0.10925742239044364,-0.40246024999999996,-0.5129406684181876,-0.11,-0.07426587638114186,-0.41,-0.51,-0.11,0.11725032983294875,-0.41,-0.51012375,-0.11,-0.0006522613921362275,-0.41,-0.51,-0.61,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.51,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.51,-0.09650108820351107,-0.5097194343678705,-0.41,-0.51,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.2580367612763232,-0.41,-0.51,-0.4681725482601984,-0.14146456223063616,-0.35497012627703883,-0.51012375,-0.11,-0.01,-0.41,-0.51,-0.16113623538110855,-0.16109619718740692,-0.41080887499999996,-0.5230920693511638,-0.11,0.0261395148778456,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11802467674733638,-0.51,-0.41,-0.510135,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.21772773661793032,-0.41,-0.51,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,-0.10519086237506295,-0.51,-0.41,-0.51,0,0,0,0,-0.11,0.02862179185732231,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.01605556464342621,0.0774933394622955,0.44218033826049763,-0.49510518291876104,-0.06431055901763047,-0.01,0.46478855846545125,-0.49801710420081335,-0.11,0.10997546073353112,0.43990366218092314,-0.5067933823805708,-0.11,-0.01,0.39546305376508245,0,-0.42521504572509927,-0.01,0.4050261552655336,0,-0.51,-0.01,0.2542710960795904,0,-0.11,0.06067850070905705,0.3171671638643615,0,-0.11,-0.01,0.2535354993904625,-0.51,-0.11,-0.44386452599902404,0.4381208006038599,-0.51,-0.61,-0.51,0.4371566300484671,-0.5075930102485575,-0.11,-0.50335125,0.3710284013917228,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.28286120726256797,0,-0.11,-0.51,0.2524188175072416,0,-0.11,-0.51,0.12720172940708033,0,-0.61,-0.51,0.17489711730463714,0,-0.51,0.37402036256315935,-0.015259874460299118,-0.51,-0.042542827375099325,-0.03999028030547304,-0.025573412974164267,-0.5167499013726221,-0.43772621535705203,0.014592149630055735,-0.006857914934990012,-0.51,-0.16,-0.0297996101655258,0.01429161870498789,-0.51,-0.11,0.0659880635210395,-0.007563470018618149,-0.512529811555805,-0.11,-0.01,-0.014202632178882627,0,-0.61,-0.01431080587270267,-0.010995483059708653,-0.51,-0.51,-0.01,0.08987624999999999,-0.51,-0.11,-0.5070127958779208,0.025514073194371295,-0.51,-0.11,-0.51,0.08737265125621894,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0.07221613314299075,0,-0.11,-0.51,0.060184745392202955,0,-0.11,-0.51,-0.0322482387732946,-0.51012375,0,0,0,0,-0.11,0.015431041874136098,0.3358428339189411,0,-0.4559873224831411,-0.01,0.19774622116081003,0,-0.11,0.10450956344723916,-0.0012663350621304227,-0.5087643714168771,-0.11426424523755555,-0.010968052613807292,0.006115478064378054,-0.51,-0.11,-0.01,0.05682715538618856,-0.51,-0.11,-0.01,0.10098912140487008,0,-0.11,-0.01,0.07188532722954052,0,0,0,0.09,0,-0.11,-0.51,0.2590047971140336,-0.51,-0.11,-0.51,0,0,-0.07064823896740227,-0.5069135236537682,0.0002917087385586744,-0.51,-0.11,-0.51,0.08420144474970798,0,-0.11,-0.51,0.09538717529790834,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,-0.07282745049454781,0.29195180946225574,-0.014936571022613343,-0.51,-0.1863092947781967,-0.01,0.014081705821364763,-0.51,-0.11,0.10174504422695158,-0.010506388111927556,-0.51,0,0,0,0,-0.11,-0.01,-0.0038781726316651013,-0.51,-0.10046832794104427,-0.016112961337225888,-0.008393105284111873,-0.51,-0.11,-0.01,0,0,0,0,0,0,-0.06460032225441667,-0.4823519314657917,-0.04603851655065259,-0.51,0,0,0,0,-0.11,-0.51,0.08987624999999999,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.51,0,-0.51,0,0,0,0,-0.11,-0.01,0.16459380208968227,0,-0.11,0,0,0,-0.11,-0.01,0.09,0,-0.11,0,0,0,-1.01,-0.01,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.011241657895479894,-0.51,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.08931375,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.4281589460941657,-0.3733607539648197,-0.5076279645984094,-0.11,0.361525207455502,-0.41,-0.51,-0.11,0.3672429506150988,-0.41,-0.5080526989876594,-0.11,0.14026834670707644,-0.41012374999999995,-0.5118148066069579,-0.07655087836342944,0.1933983954467557,-0.41,-0.510135,-0.11,0.034786294141446385,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.14943310084831943,-0.5010629928528912,-0.3902512180817564,-0.5155987305564984,-0.11482578191210281,-0.51,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.51,0.3006020494331225,-0.41,-0.51,-0.11640439688486764,-0.1088310686332468,-0.41115874999999996,-0.51,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.12708022287880408,-0.5045211747520758,-0.41,-0.51059625,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.22348438523828995,-0.3946202649435156,-0.51,-0.11,0.18872492089560994,-0.41,-0.51,-0.14209512929452894,-0.06315366311472934,-0.41059625,-0.51,0,0,0,0,-0.11,0.05285469834271704,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0.14041218503044156,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.010285542014424146,-0.41,-0.51,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01701426997695556,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.19217114559527798,0.4015710784137837,0.4841314260564156,0.3085267987628094,0.18261721626340263,0.33901221803382836,0.47621603106209537,0.287951012776419,-0.11092608752189,0.2666747035115058,0.5203244543070604,0.27530329365180156,-0.35242976536636395,0.0365673021339568,0.5472480672210246,0.10890135429562837,0.23178616834088478,0.32743054805950844,0.4789370323533776,0.29804763794011524,-0.06341277393655383,0.18810449874146215,0.5168442597565766,0.11025436709402928,-0.04150425438066825,0.38255291007721076,0.21706234540967215,0.13793839869607452,-0.11,0.02433326646842701,0.5084588439648592,0.025418134372297986,0.12868032704733168,-0.233626696805529,0.23780806959042816,0.3829315507422183,0.06240029929678023,-0.32895320616355944,0.5439283227738517,0.09226033037072838,0.07243608877143656,-0.35763954827867794,0.5457250531887093,0.09365918927250971,-0.11,-0.30430641133074793,0.5328998193459507,0,-0.34045053291821875,-0.4016911604594665,0.5286348366769503,0.09478775665399589,-0.0644690418517325,-0.47456196942169415,0.50485126201676,0,-0.06268271965110818,-0.4369687334693479,0.5305225650711226,0,-0.11,-0.51,0.3642984192697048,0,0.18246089263277593,0.28865514136306697,0.5331979934295615,0.2547518900995549,-0.020568059881971967,0.19298370761385933,0.5316651355912776,0.09362564611420737,-0.015679472924174147,0.03003551408005045,0.5364888460408574,0.18014853417369278,-0.43644797141101743,-0.01,0.5289812680874769,0,-0.02124901297601737,0.08362328009242047,0.42981140705336535,0.1196069574145088,-0.07961051043840815,0.02411297796657272,0.48397431907072075,0,-0.436487740098477,0.027486758460041998,0.46731737642013804,-0.01,-0.11,-0.01,0.44331335929680854,0,-0.05068300491502754,-0.37807943091417306,0.4560676409192919,0.05768648938895081,-0.07632161515078681,-0.51,0.5275646191288323,0,-0.11,-0.5012443775122838,0.5332967371929354,-0.01,-0.0798101766895459,-0.51,0.4556329387486413,0,-0.07046762646104668,-0.48342284140405056,0.5031897890391398,0,-0.07210695646582871,0,0.4209568476829891,0,-0.11,-0.51,0.33953583000438825,0,-0.11,-0.51,0.22915431961500124,0,0.1735510178003315,0.21355209558728172,0.5141511737468079,0.23881273583965995,-0.34751522454072786,0.09449085800889598,0.48192659689056794,0.038852139325748686,0.19058761282573666,0.24245586873592403,0.4527554348758258,0.17443926936863116,-0.0638605012423857,-0.01,0.4759447877013738,0,-0.00015551828252647476,0.20176205031903838,0.0998046607931388,0.163814038356233,-0.06422823710543309,-0.01,0.19876972634052822,0.07133750569700699,-0.11,0.035172955854913826,0.3073314083762967,0,-0.11,-0.01,0.4347274281178678,0,-0.0630307144514971,-0.3454983253773061,0.5055709924138778,0.040336738076244764,-0.11,-0.51,0.5198938195950092,-0.01,-0.06433413347155574,-0.47788450333794175,0.4801389027395744,0.018002032524816677,-0.06509671640842554,-0.51,0.33538332819363614,0,-0.11,-0.51,0.4063424404923068,0.015399481182594587,-0.11629527527247156,-0.51,0.20800133241100785,0,-0.06598924910770218,-0.51,0.36073514679890745,-0.01,-0.11,-0.51,0.28447986592745145,0,-0.1391949042155492,0.11080198213924938,0.3230545125592722,-0.01,-0.11,0.020723213483091175,0.4600237690799946,-0.01,-0.036649489657535526,0.0510917919181454,0.42502592523652294,-0.01,-0.11,-0.01,0.36228599890720964,-0.01,-0.11,-0.01,0.28816625403730356,0.040471843431633965,-0.11,-0.01,0.406793115274644,0,-0.11,-0.00704430006006981,0.30514440091994666,-0.01,-0.11,-0.01,0.26651906765846606,-0.01,-0.029764207728312238,-0.4861408660043698,0.3880382754350044,-0.01,-0.11,-0.5020782877787503,0.31193189662165216,-0.01,-0.1015150107867795,-0.51,0.422055922670934,0,-0.11,-0.51,0.13738601885740692,0,-0.11,-0.51,0.379040675444844,0,-0.11,-0.51,0.19893421984727022,0,-0.11,0,0.20342195473575905,-0.01,-0.11,-0.51,0.1468128160970779,0,-0.1214928226131441,0.07782176671809721,0.4537322669810773,0,-0.07204931957183763,0.031163253379668084,0.42895471029716525,-0.01,-0.11,-0.01,0.4015884629820721,0,-1.01,-0.01,0.09,0,-0.11,0.0361301126280821,0.4424398843131565,0,-0.11,-0.01,0.1646868890886583,0,-1.01,-0.01,0.1355451435512189,0,-0.11,-0.01,0,0,-0.11,-0.43456529526653126,0.3992383922511349,0,-0.11,-0.51,0.24181391895938806,0,-0.11,-0.51,0.27683571705743004,0,-0.61,-0.51,0,0,-0.11,-0.51,0.23841260636096334,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.0263687438099793,0.44857418864734977,0,-0.61,-0.01,0.1763357161745254,0,-0.11,-0.01,0.24563860764807358,0,0,0,0,0,-0.11,-0.01,0.22959202087502825,0,-0.61,-0.01,0.09,0,-0.11,-0.01,0.12941352773060896,0,-0.11,0,0.09,0,-0.1888459686403895,-0.51,0.2961556235345468,0,-0.11,-0.51,0.178309025543881,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.13531899804490366,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.07346376628093451,0.032570127178969434,0.4079179811411532,0,-0.61,-0.01,0.17624431251196973,0,-0.11,-0.01,0.16910711207695162,0,-0.11,-0.01,0.09,0,-0.61,0.0241710898881737,0.17941979069275618,0,-0.11,-0.01,0,0,-0.5876357654137749,0.0213655497062298,0.08283894014261836,0,-0.61,0,0,0,-0.11,-0.51,0.27436224612657867,0,-0.11,0,0.17872276204226498,0,-0.11,-0.51,0.13938291544833842,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.01,0.07441052017739977,0,-0.61,-0.01,0.08931375,0,-0.11,-0.01,0.11090013262830721,0,-0.11,0,0,0,-1.01,-0.01,0.11956578551594475,0,0,0,0,0,-0.11,-0.01,0.08931375,0,0,0,0,0,-0.11,-0.51,0.13349986021100319,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.51,0.09,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0.09976419125298577,0.46426240007931174,-0.049509014661472145,0.24903801189291086,-0.03007538702149867,0.44056731372048874,-0.32337117896621204,0.07438046643893415,-0.07273288149527588,0.46094007636786527,-0.3649197838332924,0.07882929646190055,-0.0842941027333518,0.4459703730233292,-0.3638207729107745,0.02165205185613988,-0.032672098116632374,0.438126169831382,-0.3456013890188268,0.07585029503208857,-0.12267838712998423,0.43557102601540254,-0.36429089608142917,-0.01,-0.11,0.40889170995569796,-0.382475427900676,0.0749444445621601,-0.11,0.3062862408110798,-0.41,-0.01,-0.15763496513388772,-0.21260510871037785,-0.24010616395980325,-0.04168289489069026,-0.1569408173751182,-0.51,-0.22557888588242994,0.01452471808788925,-0.0696988340440132,-0.22471523435462284,-0.2817750275009812,-0.05137230765832561,-0.11,-0.51155025,-0.41,-0.02322533851031564,-0.5432012727547478,-0.5023387500000001,-0.3732865948458565,-0.030584928534251758,-0.05552560851352706,-0.51,-0.41,-0.03371917778374999,-0.0892638802545075,-0.4739000096308114,-0.41,-0.04372653453961233,-0.11,-0.51,-0.41,-0.01,-0.005722496555287761,0.39266066970442537,-0.3584144865824209,-0.010685021567531339,-0.04037975996958138,0.012562040342049897,-0.04203723074655772,-0.0010978865174537328,-0.05217436808902424,0.11868297060121041,-0.24251933612030685,0.021976347800976924,-0.144560650317089,0.015660439982639492,-0.2624311027748754,-0.043755341277521675,0.011178390753315233,0.06872255377030942,-0.31084594188481784,0.003776919057263344,-0.1657891145136849,0.014651697459117345,-0.30228718681330713,-0.03413681893739731,-0.017300833053589093,0.12062968192513591,-0.32969847410223474,-0.016043105320038043,-0.03736697976623962,-0.043269620619084764,-0.33827637194856336,-0.009932170292409517,-0.08532563054241901,-0.4107986947954928,-0.21897571321449577,-0.07061589401633742,-0.11902180614172934,-0.48311459084202774,-0.3294795248974654,-0.08483892289702788,-0.11,-0.47333334580124,-0.39466349383420063,-0.06715847887921318,-0.61,-0.51,-0.41,-0.034309703386817325,-0.11,-0.4904310912393489,-0.37179311001602855,-0.07362753840168162,-0.4594759730017178,-0.51,-0.41,-0.02467038201762627,-0.08844577636308787,-0.51,-0.38489674682681024,-0.0838910644328306,0,0,0,0,-0.013639341455660862,0.3331304357468581,-0.33251168069617587,0.049719752162115285,-0.11,0.3632447310164454,-0.29550186498400266,-0.0025801392328804323,-0.02515587805222113,0.08319468155028356,-0.24728696369760048,0.0171821479025764,-0.04025599338465675,-0.00013674277971355395,-0.380425323053043,0.08655776207302746,-0.03230756745662472,0.21054290064297204,-0.24820300882514496,0.033897317233672696,-0.1718248090867588,0.13959041422727256,-0.36087107075571984,0.00011252379941617432,-0.10063351959564301,0.039546096920988975,-0.34332089375228797,-0.00886389547088688,-0.11,-0.011326455024909064,-0.41,-0.01,0.0663539516090291,-0.3875982151051995,-0.3070394873889653,-0.0925088373111629,-0.61,-0.4795635326349746,-0.36344498861505525,0.006211815573569136,-0.11,-0.4611566546289383,-0.38338172820709676,-0.08438659297961154,0.050251380448552825,-0.51,-0.41,-0.11030108686742403,0.08829093356643866,-0.4847030380224477,-0.41,-0.10403182807161364,-0.51,-0.4592730463236807,-0.41,-0.043775614666319886,-0.11,-0.51,-0.41014625,-0.0783942140975458,-0.06704304240398924,-0.51,-0.3983288050831898,-0.02943599791827211,-0.07068214201868825,0.34834441204863226,-0.41,-0.007882022559293551,-0.34801176746832924,-0.00028125485193745796,-0.37541148384340833,-0.06681936885989613,-0.04831145628421171,-0.04825101205843452,-0.36458278376082365,-0.04950855669394186,-0.6024043895104503,-0.05782981844908465,-0.3920576208976427,-0.03377478426086264,-0.07996996638902366,0.10609284325632219,-0.4099549486954898,-0.02990291699727086,-0.1529125,-0.05122459380558378,-0.390447753589659,-0.03362485589964906,-0.09461437001362402,0.020322231520961312,-0.41,-0.012558491006869791,-0.11,-0.01,-0.41,0,-0.11,-0.4664610347709943,-0.41,-0.05409104100090067,-0.11,-0.51,-0.41,-0.048179915487235714,-0.11,-0.4905462587376324,-0.41,-0.015600306174815271,0,0,0,0,-0.11,-0.51,-0.40004203122441423,-0.0702550804385392,-0.61,-0.51,-0.41,0,0,0,0,0,-0.09589577707402192,-0.51,-0.41,-0.06380893157095144,-0.11,0.43185359274390545,-0.41,-0.013854385343151091,-0.11,0.2687854125263153,-0.41,-0.01,-0.09342397710738702,0.21850551996505804,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.61,-0.01,-0.41,-0.01,-0.11,0,0,0,-0.11,0,0,-0.01,0,0,0,0,-0.1351082067803144,-0.51,-0.36456164221215615,-0.011970518885167272,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,-0.006052838806009284,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0.23794103682042922,-0.40346374999999995,-0.01,-0.11,-0.0369865456877884,-0.41,-0.01,-0.11,-0.01,-0.41,-0.010900519900459718,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,0,0,-1.01,-0.51,-0.41,-0.005970340811983507,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.61,0.1785192384319473,-0.41,-0.01,-0.11,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.51,-0.4069947545606262,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.02693963481019103,0,-0.01,-0.11,-0.01,-0.41,-0.01,-0.11,-0.019341474012969793,-0.41,-0.0250501829575273,-0.11,0,0,0,0,0,-0.41,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.19145223283066357,0.2685842513197607,0.4762176265358324,0.0754204842452758,0.008008039914738758,0.12740942939949962,0.4544617296841087,0.019442694800199646,0.013450508958421634,0.08123096201721819,0.44253958687911826,-0.01,-0.4306774931269573,0.03533883968267359,0.4074339197724703,0,0.1047223682126363,0.0699587665437727,0.37701233242310717,0.04628183505010588,-0.03414320716450588,0.05258187534221541,0.4035327249376656,0.0437893568060943,-0.06498241504644212,0.09729752210787544,0.36956890127900005,0.016037871630014695,-0.11,-0.01,0.2185183860225918,-0.01,-0.02073342514242269,-0.42787972875086766,0.4780022938335301,0.032243022255457915,-0.11,-0.4027296344204688,0.35571391566837596,0.019952080694435416,-0.06451673702075623,-0.51,0.4484727849259615,0,-0.11,-0.51,0.2731932288081509,0,-0.06440538364502717,-0.51,0.38006916052785183,0,-0.11,-0.51,0.3339857523045289,0,-0.11,-0.51,0.3290040245867733,0,-0.11,-0.51,0.14432568917793703,0,0.017899420318586247,0.3706696651530746,-0.01785804449903619,0.007422354442720401,-0.012074970811594282,0.010304173565951168,0.01689937359938462,0.011696572464021926,0.1582133469971534,0.01787008860586948,-0.008260634307310286,0.00919517517720481,-0.3513220965398862,-0.007131910988119636,-0.00828620373428518,-0.008457965450766922,-0.12975187630418272,0.10701336797667749,-0.0027432640500198646,0.029922875997236205,0.01909768963100167,0.05515803871112487,-0.014452628261675171,0.03003778198225751,-0.16559347343122635,0.04906181196259996,-0.018617417805040268,-0.008116392851137213,-0.19144621902191516,-0.016690999056805732,-0.016596463113612053,-0.015907462955882853,-0.02662237949663586,-0.4328513103544215,0.016022298105755645,-0.03193082631121255,-0.06899167598426101,-0.4969782556372077,0.002736983920271094,-0.027403991545829186,-0.11,-0.5057237684179211,-0.02109258999976968,-0.023383971491974496,-0.11,-0.5142699738235323,-0.020747980864688938,-0.021104320371767283,-0.07594599580641923,-0.5039817760851372,-0.026699253555747805,-0.028837208369390775,-0.11,-0.51,0.0340713754275123,0,-0.11,-0.51,0.023849783196695888,-0.01,0,0,0,0,-0.06344173831419408,0.10520944674470817,0.3117859362245593,0.00683462664768854,-0.024746833790125357,-0.00403124450772651,0.24937464041468324,-0.01,-0.11,-0.0045389393278599584,0.041769976563705194,-0.01,-0.1371953878370602,0,0.034526392192732,0,-0.61,-0.01,0.08401117108634956,0.010689508692062252,-0.11,0,0.0676386162655696,0,-0.61,-0.01,0.04264418182160372,-0.01,-0.11,0.010558737772238225,0.03422659112665879,0,-0.06965663144721852,-0.51,0.33541557936936633,0.002226283264403748,-0.11,-0.51,0.30201948115361676,0,-0.11,-0.4937362325333926,0.016827476386713558,-0.003562503150530788,-0.11,-0.51,0.018776773237927563,-0.01,-0.11,-0.51,0.10755671446183887,0,-0.11,-0.51,0.0840556119985279,0,-0.11,-0.51,0.0726977749044098,0,-0.11,-0.51,0,0,-0.0629954675267843,0.3462436659779053,0.00006393266014525882,0.0005597404401014589,0.013428111808046851,0.05604571971370849,-0.03199390788361787,-0.03166986593744428,-0.07035790746284658,0.019439003010599865,-0.012678072197895057,-0.007557002767095861,-0.1575807517412169,-0.01924784992357511,-0.03906575409087747,-0.043049531099614395,-0.02414601163083267,0.11470083170121065,-0.014711798140500543,-0.010126712582025105,0.18557858533476257,0.005635608042794428,-0.017958979741577258,-0.0016505015420344993,-0.11,0.040965512917406875,-0.0164091368369348,-0.017287888348299328,-0.61,-0.01,0.06516666091671165,0,-0.08360886622078059,-0.4950250829592712,-0.008158674616388592,-0.021829836773825925,-0.51,-0.51,-0.03232636874207884,-0.03306312098886228,-0.5977443331780242,-0.51,-0.022039633068904104,-0.02370231588816424,-0.11,-0.51,0.07920027552365486,0,-0.07174084198304806,-0.4772969719845975,-0.02472226929530709,-0.025864777199730377,-0.61,-0.51,0,0,-0.11,-0.51,0.08987624999999999,0,-0.11,-0.51,0.08369569791059496,0,-0.11,-0.01,0.27987979870576174,0,-0.61,-0.01,0.09,0,-0.11,-0.01,0.21403909967515442,0,-0.11,0,0,0,-0.11,-0.01,0.14889959146982393,0,-0.61,0,0,0,-1.01,-0.01,0.08715673542200622,0,0,0,0,0,-0.07412691552373026,-0.51,0.12861659410279463,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.9152125224004836,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,0.05953170462708178,0.018785824369245162,0,-0.11,-0.01,0.04784350710430864,0,-0.11,-0.01,0.04312344053604117,0,-0.11,-0.01,0,0,-0.61,-0.01,0.05173664574184837,0,-0.11,0,0,0,-0.11,-0.01,0.06641951986201296,0,-0.11,-0.01,0,0,-0.61,-0.51,0.06708568783070507,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.61,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0.15174223701260373,0,-0.11,0.028774683419609606,0.09,-0.01,-0.61,-0.01,0.06308261340429386,0,0,0,0,0,-0.11,-0.01,0.0872424733861555,0,0,0,0,0,-0.11,-0.01,0.07313781175341105,-0.01,-0.11,-0.01,0.08234661204106809,0,-0.07579218588993833,-0.51,0,0,-0.11,0,0,0,-0.11,-0.51,0.08677798863380479,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0.03909655511386278,0,-0.11,-0.01,0.09,-0.01,-0.11,-0.01,0.09,0,-0.61,-0.01,0.09,0,-1.01,-0.01,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,-1.01,-0.51,0.09,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,-0.009366286858680163,0.45535128574590933,-0.33960511151694023,0.015567194246888275,-0.11,0.44611736288281645,-0.4106975,-0.01,-0.11,0.4449981674617366,-0.3801881179071988,-0.01,-0.522608178518144,0.3185104929641088,-0.41,-0.01,-0.06719257137607931,0.3942059077735373,-0.3769614084797933,0.01661157560966,-0.11,0.3328810240780567,-0.41012374999999995,-0.01,-0.11,0.2132711306155432,-0.41,0.020981265134853256,-0.51,0.1334568496487835,-0.41,-0.01,-0.17276299730854064,-0.26488340727134957,-0.2653128397146775,-0.09295935075662619,0.0321449368726371,-0.4534929186975362,-0.3264751067129291,-0.09643448923387431,-0.029958495532608174,-0.4680391295382072,-0.3381149117912272,-0.08748340672767681,-0.061652486831392295,-0.4914300839013434,-0.41,-0.06853705645109122,0.043761858712922194,-0.4464870969965665,-0.4049216408039191,-0.10343544972173482,-0.61,-0.4991668650021499,-0.41,-0.10697334482727754,-0.07974536493310104,-0.51,-0.40754667578532955,-0.07195292747512838,-0.006880643093234649,-0.51,-0.41013499999999997,-0.06743061159601683,-0.11,0.37982156704782394,-0.418751182527501,-0.01,-0.1692809681099837,-0.04109923329322344,-0.42210125359267187,-0.03858851227564602,-0.17871693288827165,0.009964463316176116,-0.41,-0.03604739719226982,-0.08960437652428721,0.01586426334387703,-0.420415456203166,-0.06026000797561856,-0.041780313865928335,0.1678685950718099,-0.41784501639279303,-0.009703714720354478,-0.07920985918843954,-0.02168403803867336,-0.4133940291892643,-0.01600850780316843,-0.09073740304570353,0.014508762133698004,-0.41,-0.011018609462213839,-0.11,-0.014929794646526039,-0.41,-0.014281741312194098,0.10187158124187157,-0.4367167501650605,-0.42046283745321694,-0.07035328708528518,-0.11,-0.5104750012549558,-0.4403373752312111,-0.09080489850907329,-0.11,-0.51,-0.41125999999999996,-0.0929437311940707,-0.11,-0.51,-0.41,-0.0166707326856347,-0.11,-0.5101948121428559,-0.41,-0.011676034481054217,0,0,0,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,-0.03714165784499199,0.35411961418614596,-0.39296660768779557,-0.01,-0.11,0.2519956849273452,-0.41012374999999995,-0.01,0.03354432116518776,0.07955588913244296,-0.42556583498406464,0.024728522506962586,-0.05593463539633959,0.08054612226103647,-0.41,-0.010317306569047202,-0.11,0.14794042415874364,-0.41059625,0.004869910391518802,-0.11,0.031599122258568445,-0.41,-0.01,-0.06877060929357945,0.08379222943206441,-0.41,-0.03839124505587955,-0.33632990024348314,-0.029461083495497788,-0.41,-0.01851918027798992,-0.5350492880175062,-0.51,-0.36303680128370197,-0.075476608525948,-0.10791667261815986,-0.4879636112788439,-0.41,-0.10831961736229279,-0.6031342375,-0.5083162309994457,-0.4144107213293008,-0.09310097115968607,-0.11,-0.51,0,0,-0.11,-0.51,-0.41,-0.07611422403571129,0.08804689538821213,-0.51,-0.41,-0.08770341117992547,-0.11,-0.51,-0.41,0,-0.61,-0.51,-0.41,-0.01,-0.11,0.21195971804941743,-0.417301238570606,-0.01,-0.4072832293359194,-0.07218313674487967,-0.4140169219646555,-0.06950903164908524,-0.61,-0.01189737708621966,-0.41,-0.012098612435381309,-0.11,-0.010857481807887875,-0.41,-0.002340395312500001,-0.11,0.014244809519038075,-0.41,-0.01,-0.11,-0.03611640564390328,-0.41384882620254887,-0.03349402108857143,-0.11,0.01687529605666056,-0.41,-0.014030150255914343,-0.11,-0.0122956894694085,-0.41,-0.012722023844632491,-0.61,-0.5114625,-0.4106975,-0.05990066466355874,-0.08824275167942083,-0.5158081074344436,-0.4368326314259338,-0.11598948105855256,0,0,0,0,0,0,0,0,0,0,0,0,-0.51,-0.51070875,-0.41,-0.022472586626856465,0,0,0,0,0,0,0,0,-0.61,0.19824150185488373,-0.38041365408162964,-0.01,-0.11,0,0,0,-1.01,0.07757267788488154,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.00812168315385535,-0.11,-0.51,-0.41,-0.01057375,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,-0.01,0,0,0,0,-0.11,-0.01,-0.41,-0.01,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0,0,0,-0.61,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.61,0.02908005088493206,-0.41,-0.01,-0.11,-0.01,0,0,-0.61,-0.015080638775593038,-0.41,-0.01,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,-0.01,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.19296145978861406,0.36718473402719065,0.5457244560097232,-0.3288412089979608,-0.274715512624245,0.1963363477986785,0.5461161312027879,-0.4285998943495592,0.0418736213989242,0.15395713283456536,0.5153435661086481,-0.44784594623483676,-0.11,-0.01,0.5372515547553222,-0.51,0.01646749706645549,0.06147787232273223,0.5345429278055736,-0.40931794101538,-0.06394780203357459,0.10823269941131897,0.3702772105372478,-0.51,-0.08910097903461389,0.06660313145102821,0.44916370606839895,0,-0.11,-0.01,0.3822494481917274,-0.51,0.014333273622722555,-0.360992373204547,0.5330766231610512,-0.4595373963810505,-0.03510445819184887,-0.46371939388048977,0.5378264355761025,-0.510135,-0.03660505221658666,-0.464140466734803,0.5417336511720361,-0.51,-0.11,-0.51,0.5067197592122507,0,-0.021700991727544403,-0.51,0.4797952447686305,0,-0.11,-0.51,0.42751848815292054,0,-0.06718634749074134,-0.51,0.3899141745026605,0,-0.07462465448918504,-0.51,0.2836000568631397,0,-0.06864018017850332,0.14002666837681113,0.5048647209737552,-0.4755087930311337,-0.17977691277577218,-0.01,0.49587189938674914,-0.51,-0.11,-0.01,0.49491672163059264,-0.51,-0.11,0.027947883129260664,0.48328161300347316,0,-0.11,0.026281290550647818,0.5292999304918966,-0.51,-0.11,-0.0035794124865873907,0.4541871466134624,0,0,0,0.4883168370681338,0,-0.11,-0.01,0.25987452441358133,0,-0.11,-0.51,0.5404578451605213,-0.4971636545663882,-0.06743731111783749,-0.4904118566946669,0.4425319418225637,-0.4935186242889628,-0.11,-0.51,0.4258109154926619,0,-0.11,-0.51,0.24070990805909565,0,-0.06745791233281176,-0.51,0.4330982794075398,0,-0.11,-0.51,0.30001100187326213,0,-0.11,-0.51,0.24988998292913678,0,0,0,0,0,0.07894311182712915,0.09282065411636264,0.49540210002280455,-0.48310311084077756,-0.11,0.06677164614976352,0.47199640517813984,-0.51,-0.08304042270240011,0.01507659264609859,0.4690279614196855,-0.51,0.011838026592737215,0.025487616516337026,0.14523307755316645,-0.4975076809240494,0.01710478996258935,0.06414310408878326,0.24417049422067294,-0.51,-0.025769273191910844,0.026551911117363894,0.30327291084412383,-0.51,-0.030384751505364682,-0.01,0.3685281674259169,-0.51,-0.11,-0.01,0.20885349063606123,0,-0.06622417185396753,-0.4748265345038809,0.48129566008562713,-0.5111475,-0.11,-0.51,0.4562663910320832,-0.51,-0.14802137378091762,-0.51,0.3550986429275997,0,-0.11,-0.51,0.19555829964194418,0,-0.11,-0.51,0.42551997252631707,0,-0.11,-0.51,0.17569382334087397,0,-0.11,-0.51,0.2857126944202805,0,0,0,0,0,-0.61,0.02783811807781844,0.3411904719780147,-0.51,-0.11,-0.0018579646386936918,0.38692722186827827,0,-0.11,0.02073989756398205,0.4204865670924732,0,-0.11,-0.01,0.18420887815737202,0,-0.11,-0.01,0.3663673431337351,0,-0.11,-0.01,0.2662425535745671,0,-0.11,-0.01,0.2719758350683007,0,0,0,0,0,-0.11,-0.51,0.4422177057741515,-0.51,-0.11,-0.51,0.20765815668701798,0,-0.11,-0.51,0.2992748296147827,0,-0.11,-0.51,0.09289708601660555,0,-0.11,-0.4975512341784182,0.09723444618029284,0,-0.11,-0.51,0.12164009568183058,0,-0.11,-0.51,0.12405717154746164,0,-0.11,-0.51,0.07429744971670663,0,-0.06971838347738876,-0.01,0.4732867259411124,-0.51,-0.11,-0.01,0.180397943731642,0,-0.11,-0.01,0.17450576105774213,0,-0.11,0,0,0,-0.11,-0.01,0.23716329205718975,0,-0.61,-0.01,0.09,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.30650725047988503,0,-0.11,0,0,0,-0.11,-0.51,0.13687264806699698,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,-1.01,-0.51,0.09,0,-0.11,-0.01,0.3237528619771751,0,-0.11,-0.01,0.1752910939418097,0,-0.61,-0.01,0.12017066067640302,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,-0.11,-0.51,0.13743803884242384,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.18207712702467155,0,-1.01,0.031041515412703197,0,0,-0.11,-0.01,0.08831258808825228,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.13497560685474305,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,0.09,0,0.022797395470871958,0.45878084580324957,-0.24234537367410516,-0.4925772781723766,-0.035712394920735684,0.44457501268036675,-0.30693235495681287,-0.5088504690933445,-0.08228603552314653,0.45052188499815665,-0.3673860358914426,-0.51,-0.11,0.39053773181471896,-0.41,-0.51,0.01783443047262396,0.4014321581001159,-0.3880464944761335,-0.51,-0.11,0.2730858424866198,-0.41,-0.51,-0.11,0.2434399575733076,-0.41,-0.4975463634741667,-0.61,0.0651368793979705,-0.41,-0.5023387500000001,-0.422729322341903,-0.4558263867934932,-0.2698550226965736,-0.51012375,-0.31711027103702094,-0.49046214662348137,-0.3261822343131689,-0.5023387500000001,-0.21905401248893777,-0.4536225921425251,-0.41,-0.51,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,-0.51,0,0,0,0,-0.15024937995777057,-0.51012375,-0.3948108807659201,-0.518925993569857,0,0,0,0,-0.08351937217484362,0.38436011743630644,-0.41,-0.50296069640625,-0.11,-0.09915790948014679,-0.39434124061204784,-0.5092516290031387,-0.61,-0.06265592705015469,-0.37374838556130846,-0.5152461553119287,0,0,0,0,-0.11,0.1206862975728465,-0.41,-0.5130078094644496,-0.13037504340556352,-0.12945664760959477,-0.41,-0.5023387500000001,-0.11,-0.01,-0.41,0,0,0,0,0,-0.51,-0.51,-0.2344936647283655,-0.51,-0.10291196984375,-0.51,-0.41,0,-0.11,-0.51,0,-0.51,-0.09964239258430173,-0.51,-0.3692302588494629,-0.51,0,0,0,0,-0.11,0,-0.41,0,0,0,0,0,-0.61,-0.51,-0.41012374999999995,-0.51,-0.07443091560337664,0.3114889771229751,-0.39838340674174666,-0.51,-0.11,0.28898416430666396,-0.41,-0.51,-0.024401030969908182,0.02715369706555852,-0.41,-0.51,-0.08863448086712099,-0.047348704226995726,-0.41,-0.5023275,-0.11,0.11468209449771304,-0.3678710971623779,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.026303663528700463,-0.41012374999999995,-0.51,-0.11,-0.01,-0.41,-0.51,-0.10782577581963501,-0.47414923334006687,-0.41,-0.51,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0.15770223532094638,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.0016670521213725427,-0.41,-0.51,0,0,0,0,-0.08448697894846299,-0.0064296691183546376,-0.41,-0.51,0,0,0,0,-0.11,-0.07316094394892204,-0.41,-0.51,0,0,0,0,-0.11,0,0,0,-0.449547454187409,-0.51012375,-0.4106975,-0.51,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.0797158174097128,-0.41,-0.51,0,0,0,0,-1.01,-0.01,0,0,-1.01,-0.01,0,0,-1.01,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11461319574092119,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,-0.41,0,-0.11,-0.01,0,0,0,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.025079570252677416,-0.41,-0.51,-0.61,-0.01,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.04699966582541462,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.06471015291136165,0.16522152386808592,0.41303480655402663,-0.47936057954735933,0.047123719101108345,0.036220313848958414,0.4449694216780497,-0.51,-0.11,0.03474385772531092,0.4482323145194605,-0.5023387500000001,-0.11,-0.01,0.3363327483452378,0,-0.02146247661356627,0.11738546210549085,0.4313548687589201,0,-0.11,-0.01,0.32151323281382266,0,-0.11,-0.0042720449980126005,0.2753368955562433,-0.51,-0.11,-0.01,0.17604101434199668,0,0.00585870877987249,-0.51,0.46229137159919675,-0.51,-0.61,-0.4907624373124836,0.42045294854929877,0,-0.11,-0.51,0.36243305491884475,0,-0.11,-0.51,0.1633620468381361,0,-0.06809476723255697,-0.51,0.33848391981365267,0,-0.11,-0.51,0.15837199314444877,0,-0.11,-0.51,0.2130491146984087,0,0,0,0,0,-0.11,0.37242141542133095,-0.0016853590206898725,-0.503237397518628,-0.10242929886301236,0.02481521910009864,-0.014781341349835775,-0.5065519244935491,-0.03947383275872696,0.10004427552279865,-0.01578826301152773,-0.49941555598978776,-0.08173386344831335,-0.04596370174042115,-0.013442532469975624,-0.5069721700957339,-0.030329396951075498,0.1993486371043747,-0.0015988731162431178,-0.51070875,-0.06893636333196557,-0.020998491317990097,-0.015133617438047035,-0.51,-0.5658478327822564,0.0216671037719808,-0.019614805381452913,-0.51,-0.07439878668333913,-0.01,0.07950549039048749,0,-0.11,-0.512475,0.02571010537120195,-0.51,-0.11,-0.51,0.07613191218849016,0,-0.11,-0.51,0.07621778290110845,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.07609828381174498,0,-0.11,-0.51172125,-0.023984463789808435,-0.51,-0.11,-0.51,0.09,0,0,0,0,0,0.06860033858350024,0.028877988190560706,0.35904701967734565,-0.51068625,-0.11,-0.01,0.30342418015950756,0,-0.11,-0.01,0.04441032004780332,0,-0.11,-0.01,0.06898045616966803,0,-0.51,0,0.1030144584977075,-0.5106975,-0.11,-0.01,0.08640893864048506,0,-0.11,-0.01,0.07082508628619316,0,-0.11,-0.01,0.0749047825520718,0,-0.06451701977931554,-0.51,0.31865579486193096,-0.51,-0.11,-0.4776253046585505,0.21518459177893334,0,-0.61,-0.51,0.05274789694562743,0,-0.11,-0.51,0,0,-0.11,-0.51,0.0907855793306242,0,-0.11,-0.51,0.0853729265490429,0,-0.11,-0.51,0.0866352793190036,0,0,0,0,0,-0.07416981023244618,0.2824166007247772,-0.010230802930655347,-0.51,-0.61,-0.01,0.008662548720690331,0,-0.11,0.02621229978787584,-0.016637131458386783,-0.5023387500000001,-0.11,-0.01,0.08987624999999999,0,-0.11,-0.01,0.03450308623329254,0,-0.11,-0.01,0.07836098164721875,0,-0.51,-0.01,0,0,0,0,0,0,-0.11,-0.51,0.07599157745679513,0,0,0,0,0,-0.11,-0.51,0.0633448096968239,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.08987624999999999,0,-1.01,-0.01,0.12935803603771023,0,-0.11,-0.01,0.09,0,-1.01,-0.01,0.09,0,-0.11,0,0,0,-0.11,-0.01,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,0,0,0,0,0,0,-1.01,-0.01,0.09,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.09,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.12289007696137215,0,0,0,0,0,-0.11,-0.01,0.09,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0.0813242218308703,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.4477264976012963,-0.3715447626543479,-0.49687141302698146,-0.11,0.3523219384937517,-0.41,-0.51,-0.11,0.32321775913976647,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.05062854388755091,0.3081864306530849,-0.41,-0.51068625,-0.04579182523276831,0.04728310349899168,-0.41,-0.51,-0.11,0.07459925640074858,-0.4014472438111304,-0.51,-0.11,-0.01,0,0,-0.61,-0.51,-0.2931432780890009,-0.51,-0.14798249595947605,-0.51,-0.37863179572439065,-0.51,-0.51,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11053648060429488,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.11,0.16913923245859236,-0.41,-0.51,-0.0963103197726519,-0.1213724443178954,-0.4173404998950746,-0.5122080215467456,-0.16,-0.07308186768656288,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.11,0.0925735785088466,-0.41,-0.50360982140625,-0.11,-0.01,-0.41,0,-0.51,-0.01,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.51,0.2704869436018746,-0.41,-0.51,-0.11,0.029369384421684845,-0.41,-0.51,-0.61,-0.01,0,-0.51,-0.61,-0.01,-0.41,-0.51,-0.11,-0.008605511421389872,-0.41,-0.51,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.12151859562453654,-0.51012375,-0.41012374999999995,-0.51068625,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.02243306527069193,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.51,0,0,0,0,0,0,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.12401864761116457,0.36561693592297956,0.5037920054269645,0.277616865834311,0.08964880730316425,0.07004759187393607,0.5428056837399936,0.11614433374075815,-0.08065204907221488,0.20406044109246135,0.5264498401620301,0.13224875908416656,-0.0703084784665055,0.07966533141745483,0.533573925086593,-0.01,-0.005979198369302559,0.1131086333923414,0.5060062677793365,0.2119332669672187,-0.08831607002707292,0.117759529532692,0.4419765790033353,0.020923751006759826,-0.13304142405589034,-0.01,0.5090452554964268,0.026777468695105756,-0.61,-0.01,0.44481669790298933,-0.01,0.058104642219886045,-0.21627497164023787,0.5081213785973394,0.10564793184773712,-0.11,-0.38697418237540837,0.5326888896228031,-0.01,-0.11055304224027364,-0.4690767712581385,0.5383394391110732,0,-0.11,-0.51,0.5097727155817298,0,-0.13341293010980868,-0.4286249027369279,0.5242159034002961,0.045847871345988334,-0.11,-0.4817941165027185,0.4989506204916781,-0.01,-0.11,-0.51,0.4326872076303191,0,-0.11,-0.49898103558435514,0.20092487367377945,0,-0.07316894595118628,0.21718990004469016,0.4775275975652469,0.011982096310913324,-0.5444768877694127,0.16270922840320315,0.5187866930985857,0,-0.11,0.028646827137634175,0.47317384222399217,0.02412357753348883,-0.11,-0.01,0.43857833621806813,0,-0.039769566472384874,0.0739117647858496,0.5052882993027241,0,-0.08987269929713324,-0.01,0.4665135941462137,-0.01,-0.11,0.047581682829398404,0.38217535028013255,-0.01,-0.11,-0.01,0.16995906781828332,0,-0.05535768126222764,-0.46135390749305344,0.5201864847608786,0,-0.61,-0.51,0.4732879163122555,0,-0.11,-0.51,0.4114280286648076,-0.01,-0.11,-0.51,0.3285869528973482,0,-0.11,-0.51,0.4407282295123629,0,-0.11,-0.51,0.24952239626920747,0,-0.11,-0.51,0.186064229923301,0,-0.11,-0.51,0,0,0.015429832789987781,0.05110751367524376,0.4923968207912799,0.0343005468485783,-0.51,0.06184834018490699,0.5185220975908692,-0.01,-0.006428990882035631,0.019993027608087847,0.446081318720523,0.04866237229294153,-0.11,-0.01,0.4373927505051654,0,-0.02498912534326271,-0.01,0.3535935515144495,0.04413152333546938,-0.1319210710505878,0.02482972260348309,0.29607107422052664,-0.01,-0.11,0.007250834263641757,0.40326134421337256,0,-0.11,-0.01,0.20676753218157898,0,-0.11,-0.51,0.5000552389443822,0,-0.5178641134468756,-0.51,0.484341562631033,0,-0.11,-0.51,0.39730669185378226,-0.01,-0.08408965823363058,-0.51,0.2225120096465016,0,-0.11,-0.51,0.37131559614814275,0,-0.11,-0.51,0.09469958015521236,0,-0.51,-0.51,0.2734437836576371,0,-0.11,-0.51,0.09,0,-0.38525360964735766,0.08129790437935569,0.3625187634747723,0,-0.11,0.016245274744153285,0.3806645354002481,-0.005252818987663983,-0.0919256892299759,-0.01,0.3388724461449376,0,-0.51,0.01269098853363704,0.20234964952601506,0,-0.61,-0.01,0.3413691671144279,0,-0.11,-0.01,0.16469705874471985,0,-0.11,-0.01,0.14782323745913595,0,-0.61,-0.01,0.12407003885285366,0,-0.11,-0.51,0.33707488786724543,0,-0.11,0,0.2980432738384184,-0.01,-0.61,-0.51,0.1355565590263304,0,-0.11,-0.51,0.09,0,-0.525377946398849,-0.51,0.17019783105014064,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,0,0,0,0,-0.11,0.035776474620246294,0.4794742068783491,0,-0.11,-0.01,0.13567719320153043,0,-0.11,-0.01,0.17583253727514575,0,0,0,0,0,-0.5213798348196916,0.07490285302838418,0.2461274534581337,0,-0.11,0,0,0,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.51,0.23283314144731204,0,-0.11,-0.51,0.17835605681291314,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.01,0.27908219763470743,0,-0.11,-0.01,0.23032637145907467,0,-1.01,-0.01,0.23368768235593237,0,0,0,0,0,-1.01,-0.01,0,0,-0.11,-0.01,0.1350440147246783,0,0,0,0,0,0,0,0,0,-0.61,-0.51,0.13364852509855835,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.030475872164735997,0.341362560293005,0,-1.01,-0.01,0.19546221661671584,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0.11874289434273383,0,-0.61,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0.09,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.09,0,0,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.03339665749504999,0.4637472417103644,-0.3703353307718685,0.05739629101358457,-0.07015167664031843,0.44993226434691946,-0.38928031945570146,0.0059071183740345475,-0.07548705003915868,0.4482589760519614,-0.41,0.014959838619990362,-0.11,0.35237807458776044,-0.41,-0.01,-0.11,0.43540805420449524,-0.41013499999999997,-0.004668522763290206,-0.11,0.34404541470289957,-0.3899784008563775,0.010012746470853954,-0.11,0.20370835024057107,-0.41,-0.01,-0.11,0.18312856798714033,-0.41,-0.01,-0.2069408410528297,-0.23450613672065554,-0.2720335361198941,-0.13313119697804632,-0.1951677137029408,-0.469552277150415,-0.35141564494442024,-0.11712873347215522,-0.19243125063743644,-0.4655111715288274,-0.36705951063679887,-0.13750490678988442,-0.61,-0.50346375,-0.3826659245881218,-0.11015340339393889,-0.22799050588870934,-0.46706555182628867,-0.40347275,-0.15270929499642594,0,0,0,0,-0.14696420185083336,-0.49420307260366647,-0.41,-0.14400856640962245,0,0,0,0,-0.5065901615661149,0.38705496404308504,-0.41012374999999995,-0.01,-0.1841473878898289,-0.10165727894195285,-0.3106865098278057,-0.10257058522132928,-0.10019192399066454,-0.046631771024482245,-0.41012374999999995,-0.0494931354296461,-0.10685576515940523,-0.0874243106407552,-0.3556157460450046,-0.09256463158002722,-0.520135,0.02075013745174926,-0.41,-0.012754157999921875,-0.1918397969585025,-0.10732366347065261,-0.41011137499999994,-0.10750357957055287,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,0,-0.11,-0.51,-0.39897638856021533,-0.0126517065625,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,-0.41,-0.010699778125,0,0,0,0,-0.11,-0.51,-0.41,-0.01672143952071021,0,0,0,0,-0.11,0.3581161295403222,-0.38458072778173824,-0.01,-0.04445456744564335,0.3141379947104643,-0.41,-0.01,-0.06871923712420133,0.009394577828174079,-0.38787635747843446,-0.016417488294215674,-0.09388084957609591,-0.03096237536631401,-0.41,-0.03965354449252158,-0.11,0.23441495759119538,-0.41,-0.01,-0.078535010830064,0.03920178394513833,-0.41,-0.018222510719900678,-0.11,-0.01,-0.41,0,-0.11,-0.004987436401234456,-0.41012374999999995,-0.00563427149687412,-0.11740031178518953,-0.4570109990134166,-0.3780217502265727,-0.08140638037996942,-0.11,-0.4522815235509073,-0.4037036312916813,-0.0823880339354319,0,0,0,0,-0.11,-0.51,0,0,-0.5555575994175515,-0.4901600823464719,-0.41,-0.03594911066315691,-0.51,-0.51,-0.41,0,0,0,0,0,-0.11833465496939863,-0.51,-0.41012374999999995,-0.11887771063233722,-0.11,0.32013510013676155,-0.41,-0.016276416796929736,-0.14979835988554158,-0.10111094969920288,-0.38041203757708575,-0.10159008450471695,-0.09106501440050396,-0.038366202436814635,-0.41012374999999995,-0.08605088133958087,0,0,0,0,-0.08115832889387137,0.016558620887426444,-0.41,-0.014942051335993457,-0.1044087384023327,-0.07447191068623371,-0.41,-0.07372778022397178,-0.10427532391759864,-0.04008319986771596,-0.41,-0.03914558283412791,-0.11,-0.05440449835479365,-0.41,-0.05326264224290106,-0.51,-0.51,-0.41,0,-0.4720209390725759,-0.51012375,-0.38335373558471264,-0.07437752812558195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,-0.41,0,-0.11,0.20003463956677797,-0.41,-0.01,-0.11,0.03554465940941385,-0.41,-0.01,-1.01,-0.01,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.01,-0.11,-0.01,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,-0.012182639952460939,-0.11,-0.51,-0.41,-0.01,-0.11,-0.51,0,0,-1.01,-0.51,0,-0.01,-0.61,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.08038575815874338,-0.4029039564810424,-0.01,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,-0.11,0,0,0,-0.11,-0.01,-0.41,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.022861412890242364,0.15326835667023017,0.4076868794056146,0.09025208413829994,-0.11,-0.01,0.42917170521191234,0,-0.61,0.02355724144564203,0.40484078287842845,0.006380729603181335,-0.51,-0.01,0.3494375957696766,-0.01,-0.61,0.13897436015231804,0.3900524967513341,-0.01,-0.11,-0.01,0.3629665228318707,-0.01,-0.11,-0.01,0.23047141147071257,0,-0.11,-0.01,0.15543182127159644,0,-0.06567640352796013,-0.4308567869530493,0.4299541624393478,-0.01,-0.11,-0.4635549992794351,0.43905152290021227,-0.01,-0.11,-0.51,0.38620142901125526,0,-0.11,-0.51,0.14102192724383072,0,-0.11,-0.51,0.19311694252594275,0,-0.11,-0.5023164191515685,0.2673520678630555,0,-0.11,-0.49506606319877505,0.2140304939194168,0,0,0,0,0,-0.06191686955391631,0.3777145815755206,-0.012820380905507456,-0.01,-0.08517150154190473,0.017755160343804883,-0.05680368196925262,-0.07189829925047952,-0.4010929766762681,0.0942712031435595,-0.04999439078296564,-0.048293487471483564,-0.05538972471580743,-0.03831234921969255,-0.057891104967139104,-0.07303332644589094,-0.03405071022738312,0.169647192056195,-0.01396167536926832,-0.010877557406699007,0.07695869390892827,-0.020724842016926773,-0.022859455387462375,-0.02296569051570902,-0.11,0.060948358300535715,0.00873970498602166,0,-0.11,-0.014714092420783738,0.029678121486961466,-0.0114772637632419,-0.18176775802124467,-0.3882476120059013,-0.07822910034679877,-0.0784411230166643,-0.06999979381015105,-0.4969753433738035,-0.06237683231420195,-0.06712048633913924,-0.061379780094360646,-0.510246375,-0.04730317667223064,-0.0618035146279451,-0.11,-0.51,-0.04056247613856573,-0.039002695498951884,-0.5367998097973558,-0.51068625,-0.051697132134742016,-0.03178956718125224,-0.51,-0.51,0,0,-0.11,-0.51,0.07213400802596855,0,-0.11,-0.51,0,0,-0.51,0.026207288360476512,0.34687878349925944,-0.01,-0.51,-0.01,0.3060724011602504,-0.0012151320979264663,-0.08614298168379664,0.0608245146726914,-0.015692628327249332,-0.012144659809521785,-0.11,-0.01,0.013184540851625223,0,-0.11,-0.01,0.10331826054783953,0,-0.11,-0.01,0.08326061357500088,0,-0.11,-0.01,0.09,0,-0.11,-0.01,0.0761388725593063,0,-0.11,-0.48181080001677185,0.13857756599044185,-0.01,-0.11,-0.51,0.20032644520143494,0,-0.11,-0.51,0.0756097654773388,0,-0.11,-0.51,0,0,-0.11,-0.51,0.08234806512286706,0,-0.11,-0.51,0.09279692697085011,0,-0.11,-0.51,-0.001281099575986738,-0.01,-0.11,-0.51,0,0,-0.07032085331637869,0.3011750490880616,0.0044327977590537734,-0.01,-0.053482967331591594,-0.05574544133435199,-0.05950160907872724,-0.0489237827778163,-0.07250666288589994,-0.052117588664036915,-0.051794771902076986,-0.05228290161359959,-0.11,-0.028603968727359274,-0.027319235061273005,-0.027154427802918414,-0.11,-0.01,0.01219900770636638,-0.01,-0.08947012127283296,-0.013749635424033225,-0.0317053537510947,-0.015246232919948626,-0.11,-0.01,0.05159625328125,0,0,0,0,0,-0.08840540362723477,-0.51,-0.01465801354917158,-0.015894865115171547,-0.61,-0.51,0.09,0,-0.51,-0.51,0,0,0,0,0,0,-0.11,-0.49142628256875803,-0.00004977927777905129,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.15359803152786755,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0.17448144955788783,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,0,0.12797168750579407,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.11,0,0,0,-0.11,-0.01,0.09,0,-1.01,-0.01,-0.02665362945780752,-0.01,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,-0.11,-0.01,0.05721069032047194,0,-0.11,-0.01,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.088122375,0,-0.11,-0.01,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-1.01,0.08931375,0,-0.11,0.4451877776215243,-0.4021202506854172,0.008850784234640162,-0.11,0.36884483499354637,-0.41,-0.01,-0.08913514084384513,0.3414799664178222,-0.41,-0.01,-0.11,0.03321798768515039,-0.41,-0.01,-0.11,0.34911764455409305,-0.41,-0.01,-0.61,0.10571434655891052,-0.41,-0.01,-0.51,-0.01,0,0,-0.11,-0.01,0,0,-0.61,-0.51,-0.39971402053927724,-0.024383298445432317,-0.11,-0.51,-0.41,-0.043138258248363745,-0.11,-0.50235,-0.41,-0.010135,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0.31748907384930486,-0.41,-0.01,-0.04555265109144563,-0.08395859112279587,-0.4598318442135033,-0.08550061402174544,-0.11,0.0029268126382852293,-0.41,-0.03833900240483726,-0.10378940836936554,-0.09837037430721982,-0.41012374999999995,-0.09840569993320754,-0.09683816410176288,0.014050191265226976,-0.41,-0.02730406408297758,-0.11,-0.03447383069038186,-0.410235125,-0.0317874060179837,-0.11,-0.01,0,0,-0.1059242916176461,-0.06004364186372357,-0.41,-0.06116051598481825,-0.61,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.21784049062411615,-0.41013499999999997,-0.01,-0.11,0.0611439407671278,-0.41,-0.01,-0.0739778802184788,0.047484311370789484,-0.4280709715422446,-0.07390887957761948,-0.11,-0.01,0,0,-0.11,-0.0037163157138314033,-0.41,-0.01,-0.11,-0.005526212574439265,-0.41,-0.01,-0.11,-0.01,-0.41,0,0,0,0,0,-0.11,-0.51,-0.41,-0.01076275,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.07382660424198215,-0.41,-0.01,-0.11,-0.04688817136854363,-0.41170999999999996,-0.04294834693684588,0,0,0,0,0,0,0,0,-0.61,0.014094789172535408,-0.41,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.16012375,-0.51,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.61,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,-0.41,0,-0.61,0,0,0,0,0,0,0,-0.61,-0.01,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.013462033141619562,0.03373632658563049,0.5132165696861148,-0.47017896472986875,-0.08650765250792695,-0.01,0.5163981054926181,-0.51,-0.11,0.07233913014206618,0.5252817855833103,-0.5025685574700742,-0.11,-0.01,0.45718552038521704,-0.51,0.019009993346553303,0.11056384014241594,0.47564931098971286,-0.51,-0.11,-0.01,0.463458312984873,0,-0.11,-0.01,0.41792672429606764,0,-0.11,-0.01,0.19778983750081752,0,-0.06596466158814862,-0.35264226058221504,0.532107255138347,0,-0.11,-0.51,0.45325147258541404,0,-0.11,-0.51,0.4548139104558646,0,-0.61,-0.483692955956764,0.2641419488316147,0,-0.11,-0.48454258324627103,0.3969108034391888,0,-0.11,-0.51,0.202539679515587,0,-0.11,-0.4833737669912306,0.1574764540474234,0,-0.11,-0.51,0,0,-0.06388634253975715,0.030114920122273188,0.49825299713386506,0,-0.07339060176645573,-0.01,0.49723542167194723,0,-0.11,-0.01,0.435193029738438,0,-0.11,-0.01,0.3227541250766663,0,-0.11,0.026624051170397053,0.4762093197473634,0,-0.16012375,-0.01,0.31251572084538676,0,-0.11,-0.01,0.1987298666648557,0,-0.51,-0.01,0.15516116024274879,0,-0.11,0,0.456671353030023,0,-0.11,-0.5084413740861656,0.2364972050404706,0,-0.11,0,0.28980720968265206,0,-0.11,-0.51,0.08987624999999999,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,-0.11,-0.512025,0,0,0,0,0,0,-0.03824828508482819,0.04761893265383789,0.4683224839001816,0,-0.11,-0.01,0.4569154180362018,-0.51,-0.07030747170890492,0.017099072367913602,0.2664641283394304,0,-0.11,-0.01,0.21224220250585749,0,-0.11,-0.01,0.3283547876593746,0,-0.11,-0.01,0.22923113709736134,0,-0.11,-0.01,0.20594746337008257,0,-0.11,-0.01,0.09,0,-0.11,-0.51,0.4048524679972872,-0.51,-0.11,-0.51,0.21045963868202616,0,-0.61,-0.51,0.19147330564366422,0,-0.11,-0.51,0.1764625850703455,0,-0.09281632149509364,-0.51,0.29865314248688,0,-0.11,-0.51,0,0,-0.11,-0.51,0.13229035726467483,0,-0.11,-0.51,0,0,0,0,0.3062389078455024,0,-0.11,0.0116312185105616,0.20318029761986664,0,-0.11,-0.01,0.16935064949589754,0,-0.11,-0.01,0.09,0,-0.51,-0.01,0.23325465430785425,0,-0.11,-0.01,0.09,0,-0.51,-0.01,0.09,0,0,0,0,0,-0.11,-0.51,0.16489884226695747,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,-0.01,0.3015396636486735,0,-0.11,-0.01,0.20148797839070284,0,-0.61,-0.01,0.09,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0.09,0,-1.01113625,-0.51,0.09,0,-0.11,-0.51,0.1650810364735044,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.61,-0.01,0.13435288384407776,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.51,0,0,-0.11415367422307601,-0.51,0,-1.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.17436431726556928,0,-0.11,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,-0.01,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.08035865261258401,0.45216693082125087,-0.3822373219750391,-0.51,-0.11,0.3476392736322079,-0.41,-0.51,-0.04957999835839233,0.42015059334399124,-0.41,-0.51,-0.11,0.0745218612795206,-0.41,-0.51,-0.11,0.3834720067125417,-0.41,-0.51,-0.0821487739108009,0.09835198037922382,-0.41012374999999995,-0.51,-0.11,0.16428570153882377,-0.41,-0.51,-0.11,-0.01,-0.41,0,-0.1006535079559772,-0.51,-0.3245297626032624,-0.51,-0.11,-0.51,-0.41,-0.51,-0.13507101714163813,-0.51,-0.41,-0.51,-0.11078598101184683,-0.51,-0.41,-0.51,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.10181719568733924,0.29298303059645964,-0.41,-0.51,-0.61,-0.14822421879250902,-0.36994950651846115,-0.5130375,-0.11,0.01850358815214294,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.5474542373709494,-0.008501726199371888,-0.39961028219194517,-0.51,-0.11,-0.06056656289608062,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,0,0,0,0,-0.11,-0.51,-0.41,0,-0.1267838305853799,-0.51,-0.41,-0.510135,-0.11,0,-0.41,0,-0.10083306617424452,-0.51,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.20748592484355627,-0.3808533217856772,-0.51,-0.11,0.18139830835487458,-0.41,-0.51,-0.11,0.024613568946826474,-0.41,-0.51,0,0,0,0,-0.11,0.09145252610704524,-0.41,-0.51,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.2646100083517021,-0.51,-0.41,-0.51,-0.51,-0.51,0,0,-0.61,0,0,0,-0.11,-0.51,0,0,-0.51,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.10124803302576861,-0.41,-0.51,0,0,0,0,0,0,0,0,-0.11,-0.059485555647642546,-0.41062775,-0.51,-0.11,-0.043209379253352165,-0.4102397978835009,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.51,-0.51,0,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,-0.16013065196407583,-0.51,-0.41,-0.522322125026911,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,-0.51,0,0,-0.41,-0.51,0,0,0,0,-0.11,0,0,0,-1.01,0,0,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.021422132367524577,-0.41,-1.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0.45953987499727506,-0.51,-0.11,0.019006875636685523,0.35610486136896136,0,-0.11,0.03646396484997943,0.264406150439264,0,-0.11,0.011023031156635806,0.12595426520446223,0,-0.11,0.037506160071764286,0.27619330213689275,0,-0.11,-0.01,0.13050102727095267,0,-0.11,-0.01,0.1312363727844853,0,0,0,0,0,-0.11,-0.51,0.39586305063101174,0,-0.11,-0.51,0.24986975949420118,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.11373196584969658,0,-0.11,-0.51,0.09734210191201938,0,0,0,0,0,-0.11,-0.51,0,0,-0.11,0.2862234221556675,0.01711178481664626,0,-0.057992920864564264,-0.04275458127886933,-0.030710777089863608,-0.51,-0.11,-0.01,0.05541347163815698,-0.51,-0.11,-0.01,-0.017346729611517547,-0.51012375,-0.11,0.044281802554949526,0.010648664406846906,0,-0.11,-0.032734582236144526,-0.03228782636519385,-0.51,-0.61,-0.045470329074222895,-0.045255416815792614,-0.5124489308652083,0,0,0,0,-0.61,-0.51,-0.08415461020012109,-0.51,-0.51,-0.51,0.06895295803216478,0,-0.11,-0.51,0.08987624999999999,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0.09,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,0.019064140710922217,0.23423071184738198,0,-0.11,-0.01,0.2077300283971198,0,-0.11,-0.01,0.0015255400416355593,-0.51,-0.11,-0.01,0.08975362499999999,0,-0.11,-0.01,0.09812372685845526,0,-0.11,-0.01,0.08099321032263596,-0.51,-0.11,-0.01,0,0,-0.11,-0.01973767433317937,-0.018550523033033395,-0.51,-0.11,-0.51,0.14407520298608054,0,-0.11,-0.51,0,0,-0.11,-0.51,0.09,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,-0.11,0.15869875623573843,0.02028778264197855,0,-0.05838048829493646,-0.05887169202863277,-0.053991689075477904,-0.5176838543448555,-0.11,-0.01,0.089191125,0,-0.11,-0.01,0.08987624999999999,0,-0.11,-0.01,0.08987624999999999,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.1815252446909472,-0.51,-0.06629416287315644,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,-0.61,0,0.09,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,-1.01,-0.51,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.01,0,0,-0.11,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.3418884674403859,-0.41,-0.5116087500000001,-0.51,0.07253985377778596,-0.41,-0.51,-0.11,0.16165633191077358,-0.41,-0.51,-0.11,-0.01,0,0,-0.11,0.17865717034450618,-0.41,-0.5125471869770372,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.11,-0.51,0,0,0,0,0,0,0,0,0,0,-0.15114595695845368,-0.51012375,-0.41,-0.51,-0.11,0.0924381501710867,-0.41,-0.51115875,-0.10966604298874567,-0.01,-0.41,0,0,0,0,0,0,0,0,0,-0.11,0.019853501159435197,-0.41,-0.51,-0.11,-0.01,-0.41,-0.51,-0.11,-0.036617585724509745,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0.09099153057536985,-0.41,-0.51,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,-0.41,0,0,0,0,0,-0.61,-0.016919834707693676,-0.41,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.61,-0.040854396232304205,-0.41,-0.51,0,0,0,0,-0.11,-0.51,-0.41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.51,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-0.11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1.01,-0.01,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"initialized}');\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/saves/tabular-sarsa.js","/**\n * Data model that holds what the agent gets to see about the environment\n */\nexport default class AgentObservation {\n    /**\n     *\n     * @param {Array} tileTypes\n     * @param {int} score\n     * @param {Array} position\n     */\n    constructor(tileTypes, score, position) {\n        /**\n         * @type {Array}\n         */\n        this.tileTypes = tileTypes;\n\n        /**\n         * @type {Number}\n         */\n        this.score = score;\n\n        /**\n         *\n         * @type {Array} A vector contained the X and Y of the current agent position\n         */\n        this.position = position;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/environment/AgentObservation.js","/**\n * Data model that holds the environment's full internal state\n */\nexport default class State {\n    /**\n     * @param {Array} tileTypes\n     * @param {Array} position [x,y]\n     * @param {Number} score\n     * @param {Boolean} isComplete\n     */\n    constructor(tileTypes, position, score, isComplete) {\n        /**\n         * @type {Array}\n         */\n        this.tileTypes = tileTypes;\n        /**\n         * @type {Array} position [x,y]\n         */\n        this.position = position;\n        /**\n         * @type {Number}\n         */\n        this.score = score;\n        /**\n         * @type {Boolean}\n         */\n        this.isComplete = isComplete;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/environment/State.js","import State from './State'\nimport {config} from './index'\n\n/**\n * Returns a random initial starting state\n *\n * @returns {State}\n */\nexport const generateInitialState = () => {\n    return new State(\n        generateRandomTileTypes(config.size),\n        [Math.floor(config.size[0] / 2), 0],\n        0,\n        false\n    );\n};\n\n/**\n * Generates a random set of tileTypes for generated random environment states\n *\n * @param {Array} size\n * @returns {Array}\n */\nfunction generateRandomTileTypes(size) {\n    const tileTypes = [];\n    var xLen = size[0];\n    var yLen = size[1];\n    for (var xi = 0; xi < xLen; xi++) {\n        tileTypes[xi] = new Array(yLen);\n        for (var yi = 0; yi < size[1]; yi++) {\n            // tileTypes[xi][yi] = Math.random() < 0.7 ? 0 : 1;\n            tileTypes[xi][yi] = Math.random() < 0.2 ? 1 : 0;\n        }\n    }\n    return tileTypes;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/environment/generateInitialState.js","import {shiftAndTrimMatrix, createMatrix} from './nestedFloatMatrixMath'\n\n// export function convert9x9to5x5(matrix) {\n//     return shiftAndTrimMatrix(matrix, [0, -1], 1, [2, 2])\n// }\n\nvar convert9x9to7x5OutputMatrix = createMatrix([7, 5]);//Object pool to increase performance\nexport function convert9x9to7x5(matrix) {\n    shiftAndTrimMatrix(matrix, [0, -1], 1, [1, 2], convert9x9to7x5OutputMatrix);\n    return convert9x9to7x5OutputMatrix;\n}\n\n// var convert9x9to5x4OutputMatrix = createMatrix([5, 4]);//Object pool to increase performance\n// export function convert9x9to5x4(matrix) {\n//     shiftAndTrimMatrix(matrix, [0, -1], 1, [2, 4], convert9x9to5x4OutputMatrix);\n//     return convert9x9to5x4OutputMatrix;\n// }\n\nvar convert9x9to5x3OutputMatrix = createMatrix([5, 3]);//Object pool to increase performance\nexport function convert9x9to5x3(matrix) {\n    shiftAndTrimMatrix(matrix, [0, -1], 1, [2, 3], convert9x9to5x3OutputMatrix);\n    return convert9x9to5x3OutputMatrix;\n}\n\nvar convert9x9to5x2OutputMatrix = createMatrix([5, 2]);//Object pool to increase performance\nexport function convert9x9to5x2(matrix) {\n    shiftAndTrimMatrix(matrix, [0, -0], 1, [2, 2], convert9x9to5x2OutputMatrix);\n    return convert9x9to5x2OutputMatrix;\n}\n\nvar convert9x9to3x2OutputMatrix = createMatrix([3, 2]);//Object pool to increase performance\nexport function convert9x9to3x2(matrix) {\n    shiftAndTrimMatrix(matrix, [0, -0], 1, [3, 2], convert9x9to3x2OutputMatrix);\n    return convert9x9to3x2OutputMatrix;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/environment/viewportConversions.js","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n\n//import './modules/deep-q-network/neural-network/networkTest'\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// import Matrix from './Matrix'\nimport './neural-network/networkTest'\nimport * as arrayMath from './math/arrayMath'\nimport {getRandomIntWithZeroMin} from './math/random'\nimport NeuralNetwork from './neural-network/NeuralNetwork'\nexport default class Agent {\n    constructor(numberOfStates, numberOfActions, options) {\n        var defaultOptions = {\n            discountFactor: 0.75, //was .075, future reward discount factor\n            randomActionProbability: 0.05,// for epsilon-greedy policy\n            learningRate: 0.01,//was 0.01, value function learning rate\n            experienceRecordInterval: 25,// number of time steps before we add another experience to replay memory\n            experienceSize: 5000,// size of experience replay\n            learningStepsPerIteration: 10,\n            tdErrorClamp: 1.0\n        };\n\n        this._options = Object.assign(defaultOptions, options);\n\n        this._neuralNetwork = new NeuralNetwork(numberOfStates, 100, numberOfActions);//@TODO use state count rather than 100?\n\n        this.numberOfInputs = numberOfStates;\n        this.numberOfActions = numberOfActions;\n\n        this._lastActionStats = {\n            action: 0,\n            wasRandom: false,\n            weights: new Float64Array(numberOfActions),\n            tdError: 0\n        };\n\n        this.exp = []; // experience records\n        this.expi = 0; // where to insert new experience\n\n        this.t = 0;\n\n        this.lastReward = null;\n        this.lastObservation = null;\n        this.currentObservation = null;\n        this.lastAction = null;\n        this.currentAction = null;\n    }\n\n    /**\n     *\n     * @param {Number} lastReward - pass null if this is the first step or you want to skip learning\n     * @param {Array} currentObservation\n     * @returns {*}\n     */\n    learnAndAct(lastReward, currentObservation) {\n        var tdError = 0;\n        if (lastReward !== null) {\n            tdError = this._learn(lastReward);\n        }\n\n        // convert to a Matrix column vector\n        // var state = new Matrix(this.numberOfInputs, 1);\n        // state.setFrom(currentObservation);\n\n        var state = currentObservation;\n\n        let actionWasRandom = false;\n        let actionWeights = null;\n        let action;\n\n\n        // greedy wrt Q function\n        var actionMatrix = this._neuralNetwork.invoke(state);\n\n        actionWeights = actionMatrix;\n        action = arrayMath.getIndexOfMaxValue(actionMatrix); // returns index of argmax action\n\n        //epsilon greedy policy\n        if (Math.random() < this._options.randomActionProbability) {\n            action = getRandomIntWithZeroMin(this.numberOfActions);\n            actionWasRandom = true;\n        }\n\n        // action = 0;\n\n        // console.log(actionWeights);\n\n        // shift state memory\n        this.lastObservation = this.currentObservation;\n        this.lastAction = this.currentAction;\n        this.currentObservation = state;\n        this.currentAction = action;\n\n        var lastActionStats = this._lastActionStats;\n        lastActionStats.action = action;\n        lastActionStats.wasRandom = actionWasRandom;\n        lastActionStats.weights = actionWeights;\n        lastActionStats.tdError = tdError;\n\n        return action;\n    }\n\n    getLastActionStats() {\n        return this._lastActionStats;\n    }\n\n    _learn(r1) {\n        // perform an update on Q function\n        if (this.lastObservation !== null && this.lastReward !== null && this._options.learningRate > 0) {\n\n            // learn from this tuple to get a sense of how \"surprising\" it is to the agent\n            var tdError = this._learnFromExample(this.lastObservation, this.lastAction, this.lastReward, this.currentObservation);\n\n            // decide if we should keep this experience in the replay //@TODO don't use this.t for replays\n            if (this.t % this._options.experienceRecordInterval === 0) {\n                this.exp[this.expi] = [this.lastObservation, this.lastAction, this.lastReward, this.currentObservation];\n                this.expi += 1;\n                if (this.expi > this._options.experienceSize) {\n                    this.expi = 0;\n                } // roll over when we run out\n            }\n            this.t += 1;\n\n            // sample some additional experience from replay memory and learn from it//@TODO re-enable\n            for (var k = 0; k < this._options.learningStepsPerIteration; k++) {\n                var ri = getRandomIntWithZeroMin(this.exp.length);\n                var e = this.exp[ri];\n                this._learnFromExample(e[0], e[1], e[2], e[3])\n            }\n        }\n        this.lastReward = r1; // store for next update\n        return tdError;\n    }\n\n    _learnFromExample(lastObservation, lastAction, lastReward, currentObservation) {\n\n        // goal: Q(s,a) = r + discountFactor * max_a' Q(s',a')\n\n        var actionMatrix = this._neuralNetwork.invoke(currentObservation);\n        var estimatedFutureReward = actionMatrix[arrayMath.getIndexOfMaxValue(actionMatrix)];\n\n        var prediction = this._neuralNetwork.invoke(lastObservation);\n        // var lastActionPredictedReward = prediction[lastAction];\n        //\n        // var tdError = lastActionPredictedReward - lastReward - estimatedFutureReward * this._options.discountFactor;\n        //\n        // if (tdError > this._options.tdErrorClamp) {\n        //     tdError = this._options.tdErrorClamp\n        // } else if (tdError < -this._options.tdErrorClamp) {\n        //     tdError = -this._options.tdErrorClamp\n        // }\n//@TODO td error clamp?\n        var target = prediction.slice();\n        var targetActionValue = lastReward + estimatedFutureReward * this._options.discountFactor;//@TODO uncomment\n        target[lastAction] = targetActionValue;\n\n        // console.log('pred', prediction);\n        // console.log('targ', target);\n        this._neuralNetwork.learn(target);\n        // console.log('npre', this._neuralNetwork.invoke(lastObservation));\n        // console.log('-');\n//@TODO learn only from error output and not others?\n        var error = (prediction[lastAction] - targetActionValue);\n        // console.log('error:' + error);\n        return error; //@TODO chart error?\n    }\n\n    loadFromJson(json) {\n        this._neuralNetwork.loadFromJson(json);\n    }\n\n    saveToJson() {\n        return this._neuralNetwork.saveToJson();\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/deep-q-network/Agent.js","export function getIndexOfMaxValue(array) {\n    var maxValue = array[0];\n    var maxIndex = 0;\n    for (var i = 1, length = array.length; i < length; i++) {\n        var v = array[i];\n        if (v > maxValue) {\n            maxIndex = i;\n            maxValue = v;\n        }\n    }\n    return maxIndex;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/deep-q-network/math/arrayMath.js","/**\n * Returns a random float who's distribution is gaussian.\n *\n * This uses the \"Box-Muller transform\". More info at:\n * http://stackoverflow.com/questions/25582882/javascript-math-random-normal-distribution-gaussian-bell-curve\n *\n * @returns {number}\n */\nexport function gaussRandom() {\n    var u = 1 - Math.random(); // Subtraction to flip [0, 1) to (0, 1].\n    var v = 1 - Math.random();\n    return Math.sqrt( -2.0 * Math.log( u ) ) * Math.cos( 2.0 * Math.PI * v );\n}\n\nexport function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n}\n\nexport function getRandomIntWithZeroMin(max) {\n    return Math.floor(Math.random() * max);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/deep-q-network/math/random.js","import NeuralNetwork from './NeuralNetwork'\nimport shuffleTrain from '../../fast-deep-net/trainer/shuffleTrain'\n\nexport function networkTest(){\n    var trainingSets = [//left, down, right\n        [[0, 0, 0], [-0.01, 0.09, -0.01]],\n        [[0, 0, 1], [-0.01, 0.09, -0.51]],\n        [[0, 1, 0], [-0.01, -0.41, -0.01]],\n        [[0, 1, 1], [-0.01, -0.41, -0.51]],\n        [[1, 0, 0], [-0.51, 0.09, -0.01]],\n        [[1, 0, 1], [-0.51, 0.09, -0.51]],\n        [[1, 1, 0], [-0.51, -0.41, -0.01]],\n        [[1, 1, 1], [-0.51, -0.41, -0.51]],\n    ];\n    var network = new NeuralNetwork(3, 100, 3);\n    shuffleTrain(network, trainingSets, 1000);\n}\n\n// networkTest();\n\n// import shallowNetworkTest from '../../fast-deep-net/network/shallowNetworkTest'\n// shallowNetworkTest();\n// import deepNetworkTest from '../../fast-deep-net/network/deepNetworkTest'\n// deepNetworkTest();\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/deep-q-network/neural-network/networkTest.js","export default class LeakyRelu {\n    xToY(x) {\n        if (x > 0) {\n            return x\n        } else {\n            return 0.01 * x\n        }\n    }\n\n    yToSlope(y) {\n        if (y > 0) {\n            return 1\n        } else {\n            return 0.01;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/fast-deep-net/activation-function/LeakyRelu.js","export default class Linear {\n    xToY(x) {\n        return x;\n    }\n\n    yToSlope(y) {\n        return 1\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/fast-deep-net/activation-function/Linear.js","import OutputLayer from './OutputLayer'\n// import {assertIsNumber} from '../assert/assert'\n\nexport default class HiddenLayer extends OutputLayer {\n    setOutputLayer(outputLayer) {\n        this.outputLayer = outputLayer;\n    }\n\n    backPropagateCalculateErrorGradient() {\n        //Defining these locally speeds up the loop below by reducing object property access\n        var nodeCount = this.nodeCount;\n        var errorGradients = this.errorGradients;\n        var outputs = this.outputs;\n        var activationFunctionDerivative = this.activationFunctionDerivative;\n        var outputLayerNodeCount = this.outputLayer.nodeCount;\n        var outputLayerWeights = this.outputLayer.weights;\n        var outputLayerInputNodeCount = this.outputLayer.inputNodeCount;\n        var outputLayerErrorGradients = this.outputLayer.errorGradients;\n\n        for (var neuronI = 0; neuronI < nodeCount; neuronI++) {\n            var errorWithRespectToOutput = 0;\n            for (var outputI = 0; outputI < outputLayerNodeCount; outputI++) {\n                errorWithRespectToOutput += outputLayerErrorGradients[outputI]\n                    * outputLayerWeights[outputI * outputLayerInputNodeCount + neuronI];\n\n            }\n\n            errorGradients[neuronI] = errorWithRespectToOutput\n                * activationFunctionDerivative(outputs[neuronI]);\n\n            // assertIsNumber(this.errorGradients[neuronI], 'Error gradient');\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/fast-deep-net/layer/HiddenLayer.js","export default class InputLayer {\n    constructor(nodeCount) {\n        this.nodeCount = nodeCount;\n        this.outputs = new Float64Array(nodeCount);//@TODO new array not really used?\n    }\n\n    feedForward(inputs) {\n        this.outputs = inputs;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/fast-deep-net/layer/InputLayer.js","export default function arrayShuffle(array) {\n    let counter = array.length;\n\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        let index = Math.floor(Math.random() * counter);\n\n        // Decrease counter by 1\n        counter--;\n\n        // And swap the last element with it\n        let temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n\n    return array;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/fast-deep-net/math/arrayShuffle.js","import InputLayer from '../layer/InputLayer'\nimport HiddenLayer from '../layer/HiddenLayer'\nimport OutputLayer from '../layer/OutputLayer'\n\nexport default class DeepNetwork {\n    constructor(layerConfig) {\n        this.inputLayer = new InputLayer(layerConfig[0].size);\n\n        if (layerConfig.length !== 3) {\n            throw new Error('Having more or less than 1 hidden layer is not yet supported.')\n        }\n\n        var hiddenConfig = layerConfig[1];\n        this.hiddenLayer = new HiddenLayer(\n            hiddenConfig.size, this.inputLayer, hiddenConfig.activationFunction, hiddenConfig.learningRate\n        );\n\n        var outputConfig = layerConfig[2];\n        this.outputLayer = new OutputLayer(\n            outputConfig.size, this.hiddenLayer, outputConfig.activationFunction, outputConfig.learningRate\n        );\n        this.hiddenLayer.setOutputLayer(this.outputLayer);\n\n        // console.log('hidden weights',this.hiddenLayer.weights);\n        // console.log('output weights',this.outputLayer.weights);\n    }\n\n    invoke(inputs) {\n        // for (var i = 0, len = inputs.length; i < len; i++) {\n        //     if (!isFinite(inputs[i])) {\n        //         throw new Error('Neural network input is not a finite number.');\n        //     }\n        // }\n\n        this.inputLayer.feedForward(inputs);\n        this.hiddenLayer.feedForward();\n        var outputs = this.outputLayer.feedForward();\n\n        for (var i = 0, len = outputs.length; i < len; i++) {\n            if (!isFinite(outputs[i])) {\n                throw new Error('Neural network output is not a finite number.');\n            }\n        }\n\n        return outputs;\n    }\n\n    learn(targetOutputs) {\n        this.outputLayer.backPropagateCalculateErrorGradient(targetOutputs);\n        this.hiddenLayer.backPropagateCalculateErrorGradient();\n        this.outputLayer.backPropagateOptimize();\n        this.hiddenLayer.backPropagateOptimize();\n    }\n\n    loadFromJson(json) {\n        var weights = json.layers[1].weights;\n        for (var i = 0; i < weights.length; i++) { //@TODO do this inside the layers\n            this.hiddenLayer.weights[i] = weights[i];\n        }\n        weights = json.layers[2].weights;\n        for (i = 0; i < weights.length; i++) { //@TODO do this inside the layers\n            this.outputLayer.weights[i] = weights[i];\n        }\n    }\n\n    saveToJson() {//@TODO use more future proof schema\n        return {\n            layers: [\n                {},//placeholder for future input layer info\n                {weights: Array.from(this.hiddenLayer.weights)},//@TODO do this inside the layers\n                {weights: Array.from(this.outputLayer.weights)}//@TODO do this inside the layers\n            ]\n        }; //@TODO do this inside the layers\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/fast-deep-net/network/DeepNetwork.js","import arrayShuffle from '../math/arrayShuffle'\n\nfunction log(epoch, setNumber, inputs, targetOutputs, outputs) {\n    // console.log('inputs:', inputs);\n    var errors = new Array(outputs.length);\n    for (var i = 0, len = outputs.length; i < len; i++) {\n        errors[i] = (targetOutputs[i] - outputs[i]).toFixed(4);\n    }\n    console.log(\n        epoch + ':' + setNumber,\n        'errors', errors,\n        // 'input', inputs, 'targetOutput', targetOutputs, 'output', outputs\n    );\n}\n\nexport default function shuffleTrain(neuralNetwork, trainingSets, maxEpochs) {\n    for (var epoch = 0; epoch < maxEpochs; epoch++) {\n        trainingSets = arrayShuffle(trainingSets);\n\n        for (var setI = 0, setCount = trainingSets.length; setI < setCount; setI++) {\n\n            var set = trainingSets[setI];\n\n            var outputs = neuralNetwork.invoke(set[0]);\n\n            neuralNetwork.learn(set[1]);\n\n            log(epoch, setI, set[0], set[1], outputs);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/fast-deep-net/trainer/shuffleTrain.js","import * as viewportConversions from '../../environment/viewportConversions'\nimport {matrixToFlatArray} from '../../environment/nestedFloatMatrixMath'\nimport {data as savedBrain} from '../../data/saves/tabular-sarsa'\nimport {Agent} from 'tabular-sarsa'\nimport {renderActionResponse, renderReward} from '../../agent/machine-learning/helper/qStateRenderer'\nimport {settings} from '../../App'\nimport {actions} from '../../environment'\nimport RewardCalculator from '../../agent/machine-learning/helper/RewardCalculator'\n\n/**\n * This controls whether we make the agent aware of what it's last action was. Setting this to true causes the agent\n * to get stuck in \"back and forth\" loops much less often but it also unfortunately makes it impossible to load saved\n * brain data in Chrome because chrome returns \"call stack size exceeded\" when parsing the large saved JSON.\n * @type {boolean}\n */\nconst rememberLastAction = false;\n\nconst viewportPixelCount = 5 * 3;\nexport const stateCount = Math.pow(2, viewportPixelCount) * (rememberLastAction ? actions.length : 1);\n\nvar agent = new Agent(stateCount, actions.length);\nlet rewardCalculator = new RewardCalculator();\n\nagent.loadFromJson(savedBrain);//Load the previously saved brain\n/**\n * Takes an array of 0s and 1s and converts the whole thing to a single int\n *\n * @param array\n * @returns {number}\n */\nexport function arrayOfBinariesToInt(array) {\n    var output = 0;\n    for (var i = 0, len = array.length; i < len; i++) {\n        output += array[i] * Math.pow(2, i);\n    }\n    return output;\n}\n\n/**\n * Take an observation object and returns an int that represents the given observation state\n *\n * @param {AgentObservation} observation\n * @param lastAction\n * @returns {number}\n */\nfunction observationToInt(observation, lastAction) {\n    var viewportState = arrayOfBinariesToInt(\n        matrixToFlatArray(\n            viewportConversions.convert9x9to5x3(//Trim down the viewport to reduce the combinatorial explosion\n                observation.tileTypes\n            )\n        )\n    );\n    if (rememberLastAction) {\n        return viewportState * (lastAction + 1);\n    } else {\n        return viewportState;\n    }\n}\n\n\nexport default class TabularSARSA {\n    constructor() {\n        this._lastScore = null;\n        this._lastAction = 0;\n        rewardCalculator = new RewardCalculator();\n    }\n\n    /**\n     * @param {AgentObservation} observation\n     * @TODO clear last actions when is new game\n     * @return {string} action code\n     */\n    getAction(observation) {\n        let reward = rewardCalculator.calcLastReward(observation);\n        var state = observationToInt(observation, this._lastAction);\n        var actionIndex = agent.decide(reward, state);\n        var action = actions[actionIndex];\n        var lastActionStat = agent.getLastActionStats();\n        if (settings.renderingEnabled) {\n            renderActionResponse({weights: lastActionStat.weights, wasRandom: lastActionStat.wasRandomlyChosen});\n            renderReward(reward);\n        }\n        this._lastAction = actionIndex;\n        return action;\n    }\n\n    clearBrain() {\n        agent = new Agent(stateCount, actions.length);\n        rewardCalculator = new RewardCalculator();\n    }\n\n    exportBrain() {\n        return agent.saveToJson();\n    }\n\n    static getName() {\n        return 'ReinforcementLearning - TabularSARSA - ranked 224';\n    }\n\n    static getDescription() {\n        return 'This agent views a 5x3 section of the viewport that can be in ' + stateCount + ' possible states. ' +\n            'It uses the Expected-SARSA algorithm with a table-based Q function.';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/modules/tabular-sarsa-adaptor/TabularSARSA.js","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core.js')();\n\nrequire('./core/core.helpers')(Chart);\nrequire('./platforms/platform.js')(Chart);\nrequire('./core/core.canvasHelpers')(Chart);\nrequire('./core/core.plugin.js')(Chart);\nrequire('./core/core.element')(Chart);\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.layoutService')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.ticks.js')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.title')(Chart);\nrequire('./core/core.legend')(Chart);\nrequire('./core/core.interaction')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./elements/element.arc')(Chart);\nrequire('./elements/element.line')(Chart);\nrequire('./elements/element.point')(Chart);\nrequire('./elements/element.rectangle')(Chart);\n\nrequire('./scales/scale.linearbase.js')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\nwindow.Chart = module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/chart.js\n// module id = 233\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Bar.js\n// module id = 234\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Bubble.js\n// module id = 235\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Doughnut.js\n// module id = 236\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Line.js\n// module id = 237\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.PolarArea.js\n// module id = 238\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Radar.js\n// module id = 239\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear', // scatter should not use a category axis\n\t\t\t\tposition: 'bottom',\n\t\t\t\tid: 'x-axis-1' // need an ID so datasets can reference the scale\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'left',\n\t\t\t\tid: 'y-axis-1'\n\t\t\t}]\n\t\t},\n\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem) {\n\t\t\t\t\treturn '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Register the default config for this type\n\tChart.defaults.scatter = defaultConfig;\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/charts/Chart.Scatter.js\n// module id = 240\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.bar = {\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'category',\n\n\t\t\t\t// Specific to Bar Controller\n\t\t\t\tcategoryPercentage: 0.8,\n\t\t\t\tbarPercentage: 0.9,\n\n\t\t\t\t// grid line settings\n\t\t\t\tgridLines: {\n\t\t\t\t\toffsetGridLines: true\n\t\t\t\t}\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear'\n\t\t\t}]\n\t\t}\n\t};\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Rectangle,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tChart.DatasetController.prototype.initialize.call(this, chart, datasetIndex);\n\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tmeta.stack = dataset.stack;\n\t\t\t// Use this to indicate that this is a bar dataset.\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\t// Correctly calculate the bar width accounting for stacks and the fact that not all bars are visible\n\t\tgetStackCount: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\n\t\t\tvar stacks = [];\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (dsMeta.bar && me.chart.isDatasetVisible(datasetIndex) &&\n\t\t\t\t\t(yScale.options.stacked === false ||\n\t\t\t\t\t(yScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(yScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn stacks.length;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.getMeta().data, function(rectangle, index) {\n\t\t\t\tme.updateElement(rectangle, index, reset);\n\t\t\t}, me);\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar scaleBase = yScale.getBasePixel();\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\trectangle._xScale = xScale;\n\t\t\trectangle._yScale = yScale;\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\tvar ruler = me.getRuler(index); // The index argument for compatible\n\t\t\trectangle._model = {\n\t\t\t\tx: me.calculateBarX(index, me.index, ruler),\n\t\t\t\ty: reset ? scaleBase : me.calculateBarY(index, me.index),\n\n\t\t\t\t// Tooltip\n\t\t\t\tlabel: me.chart.data.labels[index],\n\t\t\t\tdatasetLabel: dataset.label,\n\n\t\t\t\t// Appearance\n\t\t\t\thorizontal: false,\n\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\n\t\t\t\twidth: me.calculateBarWidth(ruler),\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n\t\t\t};\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\tcalculateBarBase: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar base = yScale.getBaseValue();\n\t\t\tvar original = base;\n\n\t\t\tif ((yScale.options.stacked === true) ||\n\t\t\t\t(yScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar datasets = chart.data.datasets;\n\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar currentDs = datasets[i];\n\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === currentDsMeta.stack) {\n\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\n\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, original) : Math.max(currentVal, original);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn yScale.getPixelForValue(base);\n\t\t\t}\n\n\t\t\treturn yScale.getBasePixel();\n\t\t},\n\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar stackCount = me.getStackCount();\n\n\t\t\tvar tickWidth = xScale.width / xScale.ticks.length;\r\n\t\t\tvar categoryWidth = tickWidth * xScale.options.categoryPercentage;\n\t\t\tvar categorySpacing = (tickWidth - (tickWidth * xScale.options.categoryPercentage)) / 2;\n\t\t\tvar fullBarWidth = categoryWidth / stackCount;\n\n\t\t\tvar barWidth = fullBarWidth * xScale.options.barPercentage;\n\t\t\tvar barSpacing = fullBarWidth - (fullBarWidth * xScale.options.barPercentage);\n\n\t\t\treturn {\n\t\t\t\tstackCount: stackCount,\n\t\t\t\ttickWidth: tickWidth,\n\t\t\t\tcategoryWidth: categoryWidth,\n\t\t\t\tcategorySpacing: categorySpacing,\n\t\t\t\tfullBarWidth: fullBarWidth,\n\t\t\t\tbarWidth: barWidth,\n\t\t\t\tbarSpacing: barSpacing\n\t\t\t};\n\t\t},\n\n\t\tcalculateBarWidth: function(ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tif (xScale.options.barThickness) {\n\t\t\t\treturn xScale.options.barThickness;\n\t\t\t}\n\t\t\treturn ruler.barWidth;\r\n\t\t},\n\n\t\t// Get stack index from the given dataset index accounting for stacks and the fact that not all bars are visible\n\t\tgetStackIndex: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar dsMeta, j;\n\t\t\tvar stacks = [meta.stack];\n\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\n\t\t\t\tdsMeta = this.chart.getDatasetMeta(j);\n\t\t\t\tif (dsMeta.bar && this.chart.isDatasetVisible(j) &&\n\t\t\t\t\t(yScale.options.stacked === false ||\n\t\t\t\t\t(yScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(yScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks.length - 1;\n\t\t},\n\n\t\tcalculateBarX: function(index, datasetIndex, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex);\n\t\t\tvar leftTick = xScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n\t\t\tleftTick -= me.chart.isCombo ? (ruler.tickWidth / 2) : 0;\n\n\t\t\treturn leftTick +\n\t\t\t\t(ruler.barWidth / 2) +\n\t\t\t\truler.categorySpacing +\n\t\t\t\t(ruler.barWidth * stackIndex) +\n\t\t\t\t(ruler.barSpacing / 2) +\n\t\t\t\t(ruler.barSpacing * stackIndex);\n\t\t},\n\n\t\tcalculateBarY: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar value = Number(me.getDataset().data[index]);\n\n\t\t\tif (yScale.options.stacked ||\n\t\t\t\t(yScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar base = yScale.getBaseValue();\n\t\t\t\tvar sumPos = base,\n\t\t\t\t\tsumNeg = base;\r\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.bar && dsMeta.yAxisID === yScale.id && me.chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === dsMeta.stack) {\n\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\n\t\t\t\t\t\tif (stackedVal < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedVal || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + value);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + value);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar me = this;\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar metaData = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar i, len;\n\n\t\t\tChart.canvasHelpers.clipArea(me.chart.chart.ctx, me.chart.chartArea);\n\t\t\tfor (i = 0, len = metaData.length; i < len; ++i) {\n\t\t\t\tvar d = dataset.data[i];\n\t\t\t\tif (d !== null && d !== undefined && !isNaN(d)) {\n\t\t\t\t\tmetaData[i].transition(easingDecimal).draw();\n\t\t\t\t}\n\t\t\t}\n\t\t\tChart.canvasHelpers.unclipArea(me.chart.chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\n\t});\n\n\n\t// including horizontalBar in the bar file, instead of a file of its own\n\t// it extends bar (like pie extends doughnut)\n\tChart.defaults.horizontalBar = {\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'bottom'\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\tposition: 'left',\n\t\t\t\ttype: 'category',\n\n\t\t\t\t// Specific to Horizontal Bar Controller\n\t\t\t\tcategoryPercentage: 0.8,\n\t\t\t\tbarPercentage: 0.9,\n\n\t\t\t\t// grid line settings\n\t\t\t\tgridLines: {\n\t\t\t\t\toffsetGridLines: true\n\t\t\t\t}\n\t\t\t}]\n\t\t},\n\t\telements: {\n\t\t\trectangle: {\n\t\t\t\tborderSkipped: 'left'\n\t\t\t}\n\t\t},\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t\t// Pick first xLabel for now\n\t\t\t\t\tvar title = '';\n\n\t\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\t\tif (tooltipItems[0].yLabel) {\n\t\t\t\t\t\t\ttitle = tooltipItems[0].yLabel;\n\t\t\t\t\t\t} else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\n\t\t\t\t\t\t\ttitle = data.labels[tooltipItems[0].index];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn title;\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\t\treturn datasetLabel + ': ' + tooltipItem.xLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\n\t\t// Correctly calculate the bar width accounting for stacks and the fact that not all bars are visible\n\t\tgetStackCount: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\n\t\t\tvar stacks = [];\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (dsMeta.bar && me.chart.isDatasetVisible(datasetIndex) &&\n\t\t\t\t\t(xScale.options.stacked === false ||\n\t\t\t\t\t(xScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(xScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn stacks.length;\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar scaleBase = xScale.getBasePixel();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar rectangleElementOptions = me.chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = xScale;\n\t\t\trectangle._yScale = yScale;\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\tvar ruler = me.getRuler(index); // The index argument for compatible\n\t\t\trectangle._model = {\n\t\t\t\tx: reset ? scaleBase : me.calculateBarX(index, me.index),\n\t\t\t\ty: me.calculateBarY(index, me.index, ruler),\n\n\t\t\t\t// Tooltip\n\t\t\t\tlabel: me.chart.data.labels[index],\n\t\t\t\tdatasetLabel: dataset.label,\n\n\t\t\t\t// Appearance\n\t\t\t\thorizontal: true,\n\t\t\t\tbase: reset ? scaleBase : me.calculateBarBase(me.index, index),\n\t\t\t\theight: me.calculateBarHeight(ruler),\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor),\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleElementOptions.borderSkipped,\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth)\n\t\t\t};\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\tcalculateBarBase: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar base = xScale.getBaseValue();\n\t\t\tvar originalBase = base;\n\n\t\t\tif (xScale.options.stacked ||\n\t\t\t\t(xScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar chart = me.chart;\n\t\t\t\tvar datasets = chart.data.datasets;\n\t\t\t\tvar value = Number(datasets[datasetIndex].data[index]);\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar currentDs = datasets[i];\n\t\t\t\t\tvar currentDsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (currentDsMeta.bar && currentDsMeta.xAxisID === xScale.id && chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === currentDsMeta.stack) {\n\t\t\t\t\t\tvar currentVal = Number(currentDs.data[index]);\n\t\t\t\t\t\tbase += value < 0 ? Math.min(currentVal, originalBase) : Math.max(currentVal, originalBase);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn xScale.getPixelForValue(base);\n\t\t\t}\n\n\t\t\treturn xScale.getBasePixel();\n\t\t},\n\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar stackCount = me.getStackCount();\n\n\t\t\tvar tickHeight = yScale.height / yScale.ticks.length;\n\t\t\tvar categoryHeight = tickHeight * yScale.options.categoryPercentage;\n\t\t\tvar categorySpacing = (tickHeight - (tickHeight * yScale.options.categoryPercentage)) / 2;\n\t\t\tvar fullBarHeight = categoryHeight / stackCount;\n\n\t\t\tvar barHeight = fullBarHeight * yScale.options.barPercentage;\n\t\t\tvar barSpacing = fullBarHeight - (fullBarHeight * yScale.options.barPercentage);\n\n\t\t\treturn {\n\t\t\t\tstackCount: stackCount,\n\t\t\t\ttickHeight: tickHeight,\n\t\t\t\tcategoryHeight: categoryHeight,\n\t\t\t\tcategorySpacing: categorySpacing,\n\t\t\t\tfullBarHeight: fullBarHeight,\n\t\t\t\tbarHeight: barHeight,\n\t\t\t\tbarSpacing: barSpacing\n\t\t\t};\n\t\t},\n\n\t\tcalculateBarHeight: function(ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tif (yScale.options.barThickness) {\n\t\t\t\treturn yScale.options.barThickness;\n\t\t\t}\n\t\t\treturn ruler.barHeight;\n\t\t},\n\n\t\t// Get stack index from the given dataset index accounting for stacks and the fact that not all bars are visible\n\t\tgetStackIndex: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.chart.getDatasetMeta(datasetIndex);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar dsMeta, j;\n\t\t\tvar stacks = [meta.stack];\n\n\t\t\tfor (j = 0; j < datasetIndex; ++j) {\n\t\t\t\tdsMeta = this.chart.getDatasetMeta(j);\n\t\t\t\tif (dsMeta.bar && this.chart.isDatasetVisible(j) &&\n\t\t\t\t\t(xScale.options.stacked === false ||\n\t\t\t\t\t(xScale.options.stacked === true && stacks.indexOf(dsMeta.stack) === -1) ||\n\t\t\t\t\t(xScale.options.stacked === undefined && (dsMeta.stack === undefined || stacks.indexOf(dsMeta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(dsMeta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks.length - 1;\r\n\t\t},\n\n\t\tcalculateBarX: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar value = Number(me.getDataset().data[index]);\n\n\t\t\tif (xScale.options.stacked ||\n\t\t\t\t(xScale.options.stacked === undefined && meta.stack !== undefined)) {\n\t\t\t\tvar base = xScale.getBaseValue();\n\t\t\t\tvar sumPos = base,\n\t\t\t\t\tsumNeg = base;\r\n\n\t\t\t\tfor (var i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tvar ds = me.chart.data.datasets[i];\n\t\t\t\t\tvar dsMeta = me.chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.bar && dsMeta.xAxisID === xScale.id && me.chart.isDatasetVisible(i) &&\n\t\t\t\t\t\tmeta.stack === dsMeta.stack) {\n\t\t\t\t\t\tvar stackedVal = Number(ds.data[index]);\n\t\t\t\t\t\tif (stackedVal < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedVal || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedVal || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (value < 0) {\n\t\t\t\t\treturn xScale.getPixelForValue(sumNeg + value);\n\t\t\t\t}\n\t\t\t\treturn xScale.getPixelForValue(sumPos + value);\n\t\t\t}\n\n\t\t\treturn xScale.getPixelForValue(value);\n\t\t},\n\n\t\tcalculateBarY: function(index, datasetIndex, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex);\n\t\t\tvar topTick = yScale.getPixelForValue(null, index, datasetIndex, me.chart.isCombo);\n\t\t\ttopTick -= me.chart.isCombo ? (ruler.tickHeight / 2) : 0;\n\n\t\t\treturn topTick +\n\t\t\t\t(ruler.barHeight / 2) +\n\t\t\t\truler.categorySpacing +\n\t\t\t\t(ruler.barHeight * stackIndex) +\n\t\t\t\t(ruler.barSpacing / 2) +\n\t\t\t\t(ruler.barSpacing * stackIndex);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.bar.js\n// module id = 241\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.bubble = {\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\t\tposition: 'bottom',\n\t\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tposition: 'left',\n\t\t\t\tid: 'y-axis-0'\n\t\t\t}]\n\t\t},\n\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\t\tvar dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\t\t\t\t\treturn datasetLabel + ': (' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar dsIndex = me.index;\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_xScale: xScale,\n\t\t\t\t_yScale: yScale,\n\t\t\t\t_datasetIndex: dsIndex,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex, me.chart.isCombo),\n\t\t\t\t\ty: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex),\n\t\t\t\t\t// Appearance\n\t\t\t\t\tradius: reset ? 0 : custom.radius ? custom.radius : me.getRadius(data),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Trick to reset the styles of the point\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, pointElementOptions);\n\n\t\t\tvar model = point._model;\n\t\t\tmodel.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\tgetRadius: function(value) {\n\t\t\treturn value.r || this.chart.options.elements.point.radius;\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tChart.DatasetController.prototype.setHoverStyle.call(me, point);\n\n\t\t\t// Radius\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, me.chart.options.elements.point.hoverRadius)) + me.getRadius(dataset.data[index]);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(me, point, me.chart.options.elements.point);\n\n\t\t\tvar dataVal = me.chart.data.datasets[point._datasetIndex].data[point._index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : me.getRadius(dataVal);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.bubble.js\n// module id = 242\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tdefaults = Chart.defaults;\n\n\tdefaults.doughnut = {\n\t\tanimation: {\n\t\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\t\tanimateRotate: true,\n\t\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\t\tanimateScale: false\n\t\t},\n\t\taspectRatio: 1,\n\t\thover: {\n\t\t\tmode: 'single'\n\t\t},\n\t\tlegendCallback: function(chart) {\n\t\t\tvar text = [];\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar labels = data.labels;\n\n\t\t\tif (datasets.length) {\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\t\tif (labels[i]) {\n\t\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext.push('</ul>');\n\t\t\treturn text.join('');\n\t\t},\n\t\tlegend: {\n\t\t\tlabels: {\n\t\t\t\tgenerateLabels: function(chart) {\n\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonClick: function(e, legendItem) {\n\t\t\t\tvar index = legendItem.index;\n\t\t\t\tvar chart = this.chart;\n\t\t\t\tvar i, ilen, meta;\n\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\t// toggle visibility of index if exists\n\t\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tchart.update();\n\t\t\t}\n\t\t},\n\n\t\t// The percentage of the chart that we cut out of the middle.\n\t\tcutoutPercentage: 50,\n\n\t\t// The rotation of the chart, where the first data arc begins.\n\t\trotation: Math.PI * -0.5,\n\n\t\t// The total circumference of the chart.\n\t\tcircumference: Math.PI * 2.0,\n\n\t\t// Need to override these to give a nice default\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdataLabel += value;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn dataLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tdefaults.pie = helpers.clone(defaults.doughnut);\n\thelpers.extend(defaults.pie, {\n\t\tcutoutPercentage: 0\n\t});\n\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart,\n\t\t\t\tchartArea = chart.chartArea,\n\t\t\t\topts = chart.options,\n\t\t\t\tarcOpts = opts.elements.arc,\n\t\t\t\tavailableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\n\t\t\t\tavailableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\n\t\t\t\tminSize = Math.min(availableWidth, availableHeight),\n\t\t\t\toffset = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0\n\t\t\t\t},\n\t\t\t\tmeta = me.getMeta(),\n\t\t\t\tcutoutPercentage = opts.cutoutPercentage,\n\t\t\t\tcircumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart,\n\t\t\t\tchartArea = chart.chartArea,\n\t\t\t\topts = chart.options,\n\t\t\t\tanimationOpts = opts.animation,\n\t\t\t\tcenterX = (chartArea.left + chartArea.right) / 2,\n\t\t\t\tcenterY = (chartArea.top + chartArea.bottom) / 2,\n\t\t\t\tstartAngle = opts.rotation, // non reset case handled later\n\t\t\t\tendAngle = opts.rotation, // non reset case handled later\n\t\t\t\tdataset = me.getDataset(),\n\t\t\t\tcircumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\n\t\t\t\tinnerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius,\n\t\t\t\touterRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius,\n\t\t\t\tvalueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (value / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(elements) {\n\t\t\tvar max = 0,\n\t\t\t\tindex = this.index,\n\t\t\t\tlength = elements.length,\n\t\t\t\tborderWidth,\n\t\t\t\thoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = elements[i]._model ? elements[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = elements[i]._chart ? elements[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.doughnut.js\n// module id = 243\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.line = {\n\t\tshowLines: true,\n\t\tspanGaps: false,\n\n\t\thover: {\n\t\t\tmode: 'label'\n\t\t},\n\n\t\tscales: {\n\t\t\txAxes: [{\n\t\t\t\ttype: 'category',\n\t\t\t\tid: 'x-axis-0'\n\t\t\t}],\n\t\t\tyAxes: [{\n\t\t\t\ttype: 'linear',\n\t\t\t\tid: 'y-axis-0'\n\t\t\t}]\n\t\t}\n\t};\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.getValueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: Chart.elements.Line,\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.getValueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.getValueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t\t// Scale\n\t\t\t\t\tscaleTop: scale.top,\n\t\t\t\t\tscaleBottom: scale.bottom,\n\t\t\t\t\tscaleZero: scale.getBasePixel()\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\t\t\tvar labels = me.chart.data.labels || [];\n\t\t\tvar includeOffset = (labels.length === 1 || dataset.data.length === 1) || me.chart.isCombo;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex, includeOffset);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar i, ilen;\n\n\t\t\t// Transition Point Locations\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].transition(easingDecimal);\n\t\t\t}\n\n\t\t\tChart.canvasHelpers.clipArea(me.chart.chart.ctx, me.chart.chartArea);\n\t\t\t// Transition and Draw the line\n\t\t\tif (lineEnabled(me.getDataset(), me.chart.options)) {\n\t\t\t\tmeta.dataset.transition(easingDecimal).draw();\n\t\t\t}\n\t\t\tChart.canvasHelpers.unclipArea(me.chart.chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (i=0, ilen=points.length; i<ilen; ++i) {\n\t\t\t\tpoints[i].draw(me.chart.chartArea);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.line.js\n// module id = 244\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.polarArea = {\n\n\t\tscale: {\n\t\t\ttype: 'radialLinear',\n\t\t\tlineArc: true, // so that lines are circular\n\t\t\tticks: {\n\t\t\t\tbeginAtZero: true\n\t\t\t}\n\t\t},\n\n\t\t// Boolean - Whether to animate the rotation of the chart\n\t\tanimation: {\n\t\t\tanimateRotate: true,\n\t\t\tanimateScale: true\n\t\t},\n\n\t\tstartAngle: -0.5 * Math.PI,\n\t\taspectRatio: 1,\n\t\tlegendCallback: function(chart) {\n\t\t\tvar text = [];\n\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar labels = data.labels;\n\n\t\t\tif (datasets.length) {\n\t\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\t\tif (labels[i]) {\n\t\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttext.push('</ul>');\n\t\t\treturn text.join('');\n\t\t},\n\t\tlegend: {\n\t\t\tlabels: {\n\t\t\t\tgenerateLabels: function(chart) {\n\t\t\t\t\tvar data = chart.data;\n\t\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonClick: function(e, legendItem) {\n\t\t\t\tvar index = legendItem.index;\n\t\t\t\tvar chart = this.chart;\n\t\t\t\tvar i, ilen, meta;\n\n\t\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\n\t\t\t\tchart.update();\n\t\t\t}\n\t\t},\n\n\t\t// Need to override these to give a nice default\n\t\ttooltips: {\n\t\t\tcallbacks: {\n\t\t\t\ttitle: function() {\n\t\t\t\t\treturn '';\n\t\t\t\t},\n\t\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\t\treturn data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: Chart.elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: getValueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.polarArea.js\n// module id = 245\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.radar = {\n\t\taspectRatio: 1,\n\t\tscale: {\n\t\t\ttype: 'radialLinear'\n\t\t},\n\t\telements: {\n\t\t\tline: {\n\t\t\t\ttension: 0 // no bezier in radar\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: Chart.elements.Line,\n\n\t\tdataElementType: Chart.elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\n\t\t\t\t\t// Scale\n\t\t\t\t\tscaleTop: scale.top,\n\t\t\t\t\tscaleBottom: scale.bottom,\n\t\t\t\t\tscaleZero: scale.getBasePosition()\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tdraw: function(ease) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar easingDecimal = ease || 1;\n\n\t\t\t// Transition Point Locations\n\t\t\thelpers.each(meta.data, function(point) {\n\t\t\t\tpoint.transition(easingDecimal);\n\t\t\t});\n\n\t\t\t// Transition and Draw the line\n\t\t\tmeta.dataset.transition(easingDecimal).draw();\n\n\t\t\t// Draw the points\n\t\t\thelpers.each(meta.data, function(point) {\n\t\t\t\tpoint.draw();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.radius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/controllers/controller.radar.js\n// module id = 246\n// module chunks = 0","/* global window: false */\n'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.animation = {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t};\n\n\tChart.Animation = Chart.Element.extend({\n\t\tcurrentStep: null, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @function Chart.animationService.addAnimation\n\t\t * @param chartInstance {ChartController} the chart to animate\n\t\t * @param animationObject {IAnimation} the animation that we will animate\n\t\t * @param duration {Number} length of animation in ms\n\t\t * @param lazy {Boolean} if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chartInstance, animationObject, duration, lazy) {\n\t\t\tvar me = this;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchartInstance.animating = true;\n\t\t\t}\n\n\t\t\tfor (var index = 0; index < me.animations.length; ++index) {\n\t\t\t\tif (me.animations[index].chartInstance === chartInstance) {\n\t\t\t\t\t// replacing an in progress animation\n\t\t\t\t\tme.animations[index].animationObject = animationObject;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.animations.push({\n\t\t\t\tchartInstance: chartInstance,\n\t\t\t\tanimationObject: animationObject\n\t\t\t});\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (me.animations.length === 1) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\t\t// Cancel the animation for a given chart instance\n\t\tcancelAnimation: function(chartInstance) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animationWrapper) {\n\t\t\t\treturn animationWrapper.chartInstance === chartInstance;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchartInstance.animating = false;\n\t\t\t}\n\t\t},\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tvar i = 0;\n\t\t\twhile (i < me.animations.length) {\n\t\t\t\tif (me.animations[i].animationObject.currentStep === null) {\n\t\t\t\t\tme.animations[i].animationObject.currentStep = 0;\n\t\t\t\t}\n\n\t\t\t\tme.animations[i].animationObject.currentStep += 1 + framesToDrop;\n\n\t\t\t\tif (me.animations[i].animationObject.currentStep > me.animations[i].animationObject.numSteps) {\n\t\t\t\t\tme.animations[i].animationObject.currentStep = me.animations[i].animationObject.numSteps;\n\t\t\t\t}\n\n\t\t\t\tme.animations[i].animationObject.render(me.animations[i].chartInstance, me.animations[i].animationObject);\n\t\t\t\tif (me.animations[i].animationObject.onAnimationProgress && me.animations[i].animationObject.onAnimationProgress.call) {\n\t\t\t\t\tme.animations[i].animationObject.onAnimationProgress.call(me.animations[i].chartInstance, me.animations[i]);\n\t\t\t\t}\n\n\t\t\t\tif (me.animations[i].animationObject.currentStep === me.animations[i].animationObject.numSteps) {\n\t\t\t\t\tif (me.animations[i].animationObject.onAnimationComplete && me.animations[i].animationObject.onAnimationComplete.call) {\n\t\t\t\t\t\tme.animations[i].animationObject.onAnimationComplete.call(me.animations[i].chartInstance, me.animations[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\t// executed the last frame. Remove the animation.\n\t\t\t\t\tme.animations[i].chartInstance.animating = false;\n\n\t\t\t\t\tme.animations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar endTime = Date.now();\n\t\t\tvar dropFrames = (endTime - startTime) / me.frameDuration;\n\n\t\t\tme.dropFrames += dropFrames;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.animation.js\n// module id = 247\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\t// Global Chart canvas helpers object for drawing items to canvas\n\tvar helpers = Chart.canvasHelpers = {};\n\n\thelpers.drawPoint = function(ctx, pointStyle, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (typeof pointStyle === 'object') {\n\t\t\ttype = pointStyle.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (pointStyle) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tChart.helpers.drawRoundedRectangle(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t};\n\n\thelpers.clipArea = function(ctx, clipArea) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(clipArea.left, clipArea.top, clipArea.right - clipArea.left, clipArea.bottom - clipArea.top);\n\t\tctx.clip();\n\t};\n\n\thelpers.unclipArea = function(ctx) {\n\t\tctx.restore();\n\t};\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.canvasHelpers.js\n// module id = 248\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar plugins = Chart.plugins;\n\tvar platform = Chart.platform;\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart.Controller} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\t// Update Scale(s) with options\n\t\tif (newOptions.scale) {\n\t\t\tchart.scale.options = newOptions.scale;\n\t\t} else if (newOptions.scales) {\n\t\t\tnewOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function(scaleOptions) {\n\t\t\t\tchart.scales[scaleOptions.id].options = scaleOptions;\n\t\t\t});\n\t\t}\n\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t}\n\n\t/**\n\t * @class Chart.Controller\n\t * The main controller of a chart.\n\t */\n\tChart.Controller = function(item, config, instance) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tinstance.ctx = context;\n\t\tinstance.canvas = canvas;\n\t\tinstance.config = config;\n\t\tinstance.width = width;\n\t\tinstance.height = height;\n\t\tinstance.aspectRatio = height? width / height : null;\n\n\t\tme.id = helpers.uid();\n\t\tme.chart = instance;\n\t\tme.config = config;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn me;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\n\t\treturn me;\n\t};\n\n\thelpers.extend(Chart.Controller.prototype, /** @lends Chart.Controller.prototype */ {\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me.chart);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.clear(this.chart);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = chart.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && chart.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\t\t\tvar newWidth = Math.floor(helpers.getMaximumWidth(canvas));\n\t\t\tvar newHeight = Math.floor(aspectRatio? newWidth / aspectRatio : helpers.getMaximumHeight(canvas));\n\n\t\t\tif (chart.width === newWidth && chart.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = chart.width = newWidth;\n\t\t\tcanvas.height = chart.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(chart);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales = {};\n\t\t\tvar items = [];\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({options: options.scale, dtype: 'radialLinear', isDefault: true});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\n\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar scale = new scaleClass({\n\t\t\t\t\tid: scaleOptions.id,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.chart.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\n\t\t\t\tscales[scale.id] = scale;\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tif (!meta.type) {\n\t\t\t\t\tmeta.type = dataset.type || me.config.type;\n\t\t\t\t}\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t} else {\n\t\t\t\t\tmeta.controller = new Chart.controllers[meta.type](me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\tif (types.length > 1) {\n\t\t\t\tfor (var i = 1; i < types.length; i++) {\n\t\t\t\t\tif (types[i] !== types[i - 1]) {\n\t\t\t\t\t\tme.isCombo = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(animationDuration, lazy) {\n\t\t\tvar me = this;\n\n\t\t\tupdateConfig(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tlazy: lazy,\n\t\t\t\t\tduration: animationDuration\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(animationDuration, lazy);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tChart.layoutService.update(this, this.chart.width, this.chart.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.getDatasetMeta(i).controller.update();\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\trender: function(duration, lazy) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function() {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\tvar callback = animationOptions && animationOptions.onComplete;\n\t\t\t\tif (callback && callback.call) {\n\t\t\t\t\tcallback.call(me);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation();\n\t\t\t\tanimation.numSteps = (duration || animationOptions.duration) / 16.66; // 60 fps\n\t\t\t\tanimation.easing = animationOptions.easing;\n\n\t\t\t\t// render function\n\t\t\t\tanimation.render = function(chartInstance, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers.easingEffects[animationObject.easing];\n\t\t\t\t\tvar stepDecimal = animationObject.currentStep / animationObject.numSteps;\n\t\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\t\tchartInstance.draw(easeDecimal, stepDecimal, animationObject.currentStep);\n\t\t\t\t};\n\n\t\t\t\t// user events\n\t\t\t\tanimation.onAnimationProgress = animationOptions.onProgress;\n\t\t\t\tanimation.onAnimationComplete = onComplete;\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\t\t\t\tonComplete();\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (easingValue === undefined || easingValue === null) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\n\t\t\t// Finally draw the tooltip\n\t\t\tme.tooltip.transition(easingValue).draw();\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw each dataset via its respective controller (reversed to support proper line stacking)\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (me.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tme.getDatasetMeta(datasetIndex).controller.draw(easingValue);\n\t\t\t\t}\n\t\t\t}, me, true);\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Chart.Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Chart.Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Chart.Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i<ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean'? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.chart.canvas;\n\t\t\tvar meta, i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tmeta = me.getDatasetMeta(i);\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.destroy();\n\t\t\t\t\tmeta.controller = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.clear(me.chart);\n\t\t\t\tplatform.releaseContext(me.chart.ctx);\n\t\t\t\tme.chart.canvas = null;\n\t\t\t\tme.chart.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_chartInstance: me,\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t\tme.tooltip.initialize();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Responsiveness is currently based on the use of an iframe, however this method causes\n\t\t\t// performance issues and could be troublesome when used with ad blockers. So make sure\n\t\t\t// that the user is still able to create a chart without iframe when responsive is false.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i=0, ilen=elements.length; i<ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\tchanged |= tooltip && tooltip.handleEvent(e);\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest.duration, bufferedRequest.lazy);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// On Hover hook\n\t\t\tif (hoverOptions.onHover) {\n\t\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\t\thoverOptions.onHover.call(me, e.native, me.active);\n\t\t\t}\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.controller.js\n// module id = 249\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i=0, ilen=data.length; i<ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\tdraw: function(ease) {\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tvar i, len;\n\t\t\tvar metaData = this.getMeta().data;\n\t\t\tfor (i = 0, len = metaData.length; i < len; ++i) {\n\t\t\t\tmetaData[i].transition(easingDecimal).draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\n\t\t\t\tindex = element._index,\n\t\t\t\tcustom = element.custom || {},\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\n\t\t\t\tmodel = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex],\n\t\t\t\tindex = element._index,\n\t\t\t\tcustom = element.custom || {},\n\t\t\t\tvalueOrDefault = helpers.getValueAtIndexOrDefault,\n\t\t\t\tgetHoverColor = helpers.getHoverColor,\n\t\t\t\tmodel = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i=0; i<count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length-1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.datasetController.js\n// module id = 250\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.elements = {};\n\n\tChart.Element = function(configuration) {\n\t\thelpers.extend(this, configuration);\n\t\tthis.initialize.apply(this, arguments);\n\t};\n\n\thelpers.extend(Chart.Element.prototype, {\n\n\t\tinitialize: function() {\n\t\t\tthis.hidden = false;\n\t\t},\n\n\t\tpivot: function() {\n\t\t\tvar me = this;\n\t\t\tif (!me._view) {\n\t\t\t\tme._view = helpers.clone(me._model);\n\t\t\t}\n\t\t\tme._start = helpers.clone(me._view);\n\t\t\treturn me;\n\t\t},\n\n\t\ttransition: function(ease) {\n\t\t\tvar me = this;\n\n\t\t\tif (!me._view) {\n\t\t\t\tme._view = helpers.clone(me._model);\n\t\t\t}\n\n\t\t\t// No animation -> No Transition\n\t\t\tif (ease === 1) {\n\t\t\t\tme._view = me._model;\n\t\t\t\tme._start = null;\n\t\t\t\treturn me;\n\t\t\t}\n\n\t\t\tif (!me._start) {\n\t\t\t\tme.pivot();\n\t\t\t}\n\n\t\t\thelpers.each(me._model, function(value, key) {\n\n\t\t\t\tif (key[0] === '_') {\n\t\t\t\t\t// Only non-underscored properties\n\t\t\t\t// Init if doesn't exist\n\t\t\t\t} else if (!me._view.hasOwnProperty(key)) {\n\t\t\t\t\tif (typeof value === 'number' && !isNaN(me._view[key])) {\n\t\t\t\t\t\tme._view[key] = value * ease;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t}\n\t\t\t\t// No unnecessary computations\n\t\t\t\t} else if (value === me._view[key]) {\n\t\t\t\t\t// It's the same! Woohoo!\n\t\t\t\t// Color transitions if possible\n\t\t\t\t} else if (typeof value === 'string') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar color = helpers.color(me._model[key]).mix(helpers.color(me._start[key]), ease);\n\t\t\t\t\t\tme._view[key] = color.rgbString();\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tme._view[key] = value;\n\t\t\t\t\t}\n\t\t\t\t// Number transitions\n\t\t\t\t} else if (typeof value === 'number') {\n\t\t\t\t\tvar startVal = me._start[key] !== undefined && isNaN(me._start[key]) === false ? me._start[key] : 0;\n\t\t\t\t\tme._view[key] = ((me._model[key] - startVal) * ease) + startVal;\n\t\t\t\t// Everything else\n\t\t\t\t} else {\n\t\t\t\t\tme._view[key] = value;\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn me;\n\t\t},\n\n\t\ttooltipPosition: function() {\n\t\t\treturn {\n\t\t\t\tx: this._model.x,\n\t\t\t\ty: this._model.y\n\t\t\t};\n\t\t},\n\n\t\thasValue: function() {\n\t\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t\t}\n\t});\n\n\tChart.Element.extend = helpers.inherits;\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.element.js\n// module id = 251\n// module chunks = 0","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nmodule.exports = function(Chart) {\n\t// Global Chart helpers object for utility methods and classes\n\tvar helpers = Chart.helpers = {};\n\n\t// -- Basic js utility methods\n\thelpers.each = function(loopable, callback, self, reverse) {\n\t\t// Check to see if null or undefined firstly.\n\t\tvar i, len;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tcallback.call(self, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tcallback.call(self, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (typeof loopable === 'object') {\n\t\t\tvar keys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tcallback.call(self, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t};\n\thelpers.clone = function(obj) {\n\t\tvar objClone = {};\n\t\thelpers.each(obj, function(value, key) {\n\t\t\tif (helpers.isArray(value)) {\n\t\t\t\tobjClone[key] = value.slice(0);\n\t\t\t} else if (typeof value === 'object' && value !== null) {\n\t\t\t\tobjClone[key] = helpers.clone(value);\n\t\t\t} else {\n\t\t\t\tobjClone[key] = value;\n\t\t\t}\n\t\t});\n\t\treturn objClone;\n\t};\n\thelpers.extend = function(base) {\n\t\tvar setFn = function(value, key) {\n\t\t\tbase[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; i++) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn base;\n\t};\n\t// Need a special merge function to chart configs since they are now grouped\n\thelpers.configMerge = function(_base) {\n\t\tvar base = helpers.clone(_base);\n\t\thelpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\n\t\t\thelpers.each(extension, function(value, key) {\n\t\t\t\tvar baseHasProperty = base.hasOwnProperty(key);\n\t\t\t\tvar baseVal = baseHasProperty ? base[key] : {};\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// Scale config merging is complex. Add our own function here for that\n\t\t\t\t\tbase[key] = helpers.scaleMerge(baseVal, value);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// Used in polar area & radar charts since there is only one scale\n\t\t\t\t\tbase[key] = helpers.configMerge(baseVal, Chart.scaleService.getScaleDefaults(value.type), value);\n\t\t\t\t} else if (baseHasProperty\n\t\t\t\t\t\t&& typeof baseVal === 'object'\n\t\t\t\t\t\t&& !helpers.isArray(baseVal)\n\t\t\t\t\t\t&& baseVal !== null\n\t\t\t\t\t\t&& typeof value === 'object'\n\t\t\t\t\t\t&& !helpers.isArray(value)) {\n\t\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\n\t\t\t\t\tbase[key] = helpers.configMerge(baseVal, value);\n\t\t\t\t} else {\n\t\t\t\t\t// can just overwrite the value in this case\n\t\t\t\t\tbase[key] = value;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn base;\n\t};\n\thelpers.scaleMerge = function(_base, extension) {\n\t\tvar base = helpers.clone(_base);\n\n\t\thelpers.each(extension, function(value, key) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t// These properties are arrays of items\n\t\t\t\tif (base.hasOwnProperty(key)) {\n\t\t\t\t\thelpers.each(value, function(valueObj, index) {\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\n\t\t\t\t\t\tvar axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\n\t\t\t\t\t\tif (index >= base[key].length || !base[key][index].type) {\n\t\t\t\t\t\t\tbase[key].push(helpers.configMerge(axisDefaults, valueObj));\n\t\t\t\t\t\t} else if (valueObj.type && valueObj.type !== base[key][index].type) {\n\t\t\t\t\t\t\t// Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Type is the same\n\t\t\t\t\t\t\tbase[key][index] = helpers.configMerge(base[key][index], valueObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tbase[key] = [];\n\t\t\t\t\thelpers.each(value, function(valueObj) {\n\t\t\t\t\t\tvar axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\n\t\t\t\t\t\tbase[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (base.hasOwnProperty(key) && typeof base[key] === 'object' && base[key] !== null && typeof value === 'object') {\n\t\t\t\t// If we are overwriting an object with an object, do a merge of the properties.\n\t\t\t\tbase[key] = helpers.configMerge(base[key], value);\n\n\t\t\t} else {\n\t\t\t\t// can just overwrite the value in this case\n\t\t\t\tbase[key] = value;\n\t\t\t}\n\t\t});\n\n\t\treturn base;\n\t};\n\thelpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\n\t\tif (value === undefined || value === null) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\tif (helpers.isArray(value)) {\n\t\t\treturn index < value.length ? value[index] : defaultValue;\n\t\t}\n\n\t\treturn value;\n\t};\n\thelpers.getValueOrDefault = function(value, defaultValue) {\n\t\treturn value === undefined ? defaultValue : value;\n\t};\n\thelpers.indexOf = Array.prototype.indexOf?\n\t\tfunction(array, item) {\n\t\t\treturn array.indexOf(item);\n\t\t}:\n\t\tfunction(array, item) {\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (array[i] === item) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (startIndex === undefined || startIndex === null) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (startIndex === undefined || startIndex === null) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.inherits = function(extensions) {\n\t\t// Basic javascript inheritance based on the model created in Backbone.js\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\n\t\treturn ChartElement;\n\t};\n\thelpers.noop = function() {};\n\thelpers.uid = (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}());\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\treturn Math.log(x) / Math.LN10;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\tradialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint,\n\t\t\tcurrent = middlePoint,\n\t\t\tnext = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Easing functions adapted from Robert Penner's easing equations\n\t// http://www.robertpenner.com/easing/\n\tvar easingEffects = helpers.easingEffects = {\n\t\tlinear: function(t) {\n\t\t\treturn t;\n\t\t},\n\t\teaseInQuad: function(t) {\n\t\t\treturn t * t;\n\t\t},\n\t\teaseOutQuad: function(t) {\n\t\t\treturn -1 * t * (t - 2);\n\t\t},\n\t\teaseInOutQuad: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t;\n\t\t\t}\n\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t},\n\t\teaseInCubic: function(t) {\n\t\t\treturn t * t * t;\n\t\t},\n\t\teaseOutCubic: function(t) {\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t},\n\t\teaseInOutCubic: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t;\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t},\n\t\teaseInQuart: function(t) {\n\t\t\treturn t * t * t * t;\n\t\t},\n\t\teaseOutQuart: function(t) {\n\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t},\n\t\teaseInOutQuart: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t * t;\n\t\t\t}\n\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t},\n\t\teaseInQuint: function(t) {\n\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t},\n\t\teaseOutQuint: function(t) {\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t},\n\t\teaseInOutQuint: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * t * t * t * t * t;\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t},\n\t\teaseInSine: function(t) {\n\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t},\n\t\teaseOutSine: function(t) {\n\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t},\n\t\teaseInOutSine: function(t) {\n\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t},\n\t\teaseInExpo: function(t) {\n\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t},\n\t\teaseOutExpo: function(t) {\n\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t},\n\t\teaseInOutExpo: function(t) {\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (t === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t}\n\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t},\n\t\teaseInCirc: function(t) {\n\t\t\tif (t >= 1) {\n\t\t\t\treturn t;\n\t\t\t}\n\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t},\n\t\teaseOutCirc: function(t) {\n\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t},\n\t\teaseInOutCirc: function(t) {\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t}\n\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t},\n\t\teaseInElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1) === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * 0.3;\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t},\n\t\teaseOutElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1) === 1) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * 0.3;\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t},\n\t\teaseInOutElastic: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tvar p = 0;\n\t\t\tvar a = 1;\n\t\t\tif (t === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif ((t /= 1 / 2) === 2) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (!p) {\n\t\t\t\tp = 1 * (0.3 * 1.5);\n\t\t\t}\n\t\t\tif (a < Math.abs(1)) {\n\t\t\t\ta = 1;\n\t\t\t\ts = p / 4;\n\t\t\t} else {\n\t\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t}\n\t\t\tif (t < 1) {\n\t\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t}\n\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t},\n\t\teaseInBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t},\n\t\teaseOutBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t},\n\t\teaseInOutBack: function(t) {\n\t\t\tvar s = 1.70158;\n\t\t\tif ((t /= 1 / 2) < 1) {\n\t\t\t\treturn 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t}\n\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t},\n\t\teaseInBounce: function(t) {\n\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t},\n\t\teaseOutBounce: function(t) {\n\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t}\n\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t},\n\t\teaseInOutBounce: function(t) {\n\t\t\tif (t < 1 / 2) {\n\t\t\t\treturn easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t}\n\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t}\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt,\n\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\tboundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\thelpers.addEvent = function(node, eventType, method) {\n\t\tif (node.addEventListener) {\n\t\t\tnode.addEventListener(eventType, method);\n\t\t} else if (node.attachEvent) {\n\t\t\tnode.attachEvent('on' + eventType, method);\n\t\t} else {\n\t\t\tnode['on' + eventType] = method;\n\t\t}\n\t};\n\thelpers.removeEvent = function(node, eventType, handler) {\n\t\tif (node.removeEventListener) {\n\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t} else if (node.detachEvent) {\n\t\t\tnode.detachEvent('on' + eventType, handler);\n\t\t} else {\n\t\t\tnode['on' + eventType] = helpers.noop;\n\t\t}\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof(styleValue) === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw)? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch)? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tcanvas.style.height = height + 'px';\n\t\tcanvas.style.width = width + 'px';\n\t};\n\t// -- Canvas methods\n\thelpers.clear = function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t};\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\thelpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\t};\n\thelpers.color = function(c) {\n\t\tif (!color) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn c;\n\t\t}\n\n\t\t/* global CanvasGradient */\n\t\tif (c instanceof CanvasGradient) {\n\t\t\treturn color(Chart.defaults.global.defaultColor);\n\t\t}\n\n\t\treturn color(c);\n\t};\n\thelpers.isArray = Array.isArray?\n\t\tfunction(obj) {\n\t\t\treturn Array.isArray(obj);\n\t\t} :\n\t\tfunction(obj) {\n\t\t\treturn Object.prototype.toString.call(obj) === '[object Array]';\n\t\t};\n\t// ! @see http://stackoverflow.com/a/14853974\n\thelpers.arrayEquals = function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen=a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t};\n\thelpers.callCallback = function(fn, args, _tArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\tfn.apply(_tArg, args);\n\t\t}\n\t};\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.helpers.js\n// module id = 252\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\tvar helpers = Chart.helpers;\n\n\t/**\n\t * Helper function to get relative position for an event\n\t * @param {Event|IEvent} event - The event to get the position for\n\t * @param {Chart} chart - The chart\n\t * @returns {Point} the event position\n\t */\n\tfunction getRelativePosition(e, chart) {\n\t\tif (e.native) {\n\t\t\treturn {\n\t\t\t\tx: e.x,\n\t\t\t\ty: e.y\n\t\t\t};\n\t\t}\n\n\t\treturn helpers.getRelativePosition(e, chart);\n\t}\n\n\t/**\n\t * Helper function to traverse all of the visible elements in the chart\n\t * @param chart {chart} the chart\n\t * @param handler {Function} the callback to execute for each visible item\n\t */\n\tfunction parseVisibleItems(chart, handler) {\n\t\tvar datasets = chart.data.datasets;\n\t\tvar meta, i, j, ilen, jlen;\n\n\t\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\t\tvar element = meta.data[j];\n\t\t\t\tif (!element._view.skip) {\n\t\t\t\t\thandler(element);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Helper function to get the items that intersect the event position\n\t * @param items {ChartElement[]} elements to filter\n\t * @param position {Point} the point to be nearest to\n\t * @return {ChartElement[]} the nearest items\n\t */\n\tfunction getIntersectItems(chart, position) {\n\t\tvar elements = [];\n\n\t\tparseVisibleItems(chart, function(element) {\n\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t});\n\n\t\treturn elements;\n\t}\n\n\t/**\n\t * Helper function to get the items nearest to the event position considering all visible items in teh chart\n\t * @param chart {Chart} the chart to look at elements from\n\t * @param position {Point} the point to be nearest to\n\t * @param intersect {Boolean} if true, only consider items that intersect the position\n\t * @param distanceMetric {Function} Optional function to provide the distance between\n\t * @return {ChartElement[]} the nearest items\n\t */\n\tfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar nearestItems = [];\n\n\t\tif (!distanceMetric) {\n\t\t\tdistanceMetric = helpers.distanceBetweenPoints;\n\t\t}\n\n\t\tparseVisibleItems(chart, function(element) {\n\t\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar center = element.getCenterPoint();\n\t\t\tvar distance = distanceMetric(position, center);\n\n\t\t\tif (distance < minDistance) {\n\t\t\t\tnearestItems = [element];\n\t\t\t\tminDistance = distance;\n\t\t\t} else if (distance === minDistance) {\n\t\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\t\tnearestItems.push(element);\n\t\t\t}\n\t\t});\n\n\t\treturn nearestItems;\n\t}\n\n\tfunction indexMode(chart, e, options) {\n\t\tvar position = getRelativePosition(e, chart.chart);\n\t\tvar distanceMetric = function(pt1, pt2) {\n\t\t\treturn Math.abs(pt1.x - pt2.x);\n\t\t};\n\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\t\tvar elements = [];\n\n\t\tif (!items.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex),\n\t\t\t\t\telement = meta.data[items[0]._index];\n\n\t\t\t\t// don't count items that are skipped (null data)\n\t\t\t\tif (element && !element._view.skip) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn elements;\n\t}\n\n\t/**\n\t * @interface IInteractionOptions\n\t */\n\t/**\n\t * If true, only consider items that intersect the point\n\t * @name IInterfaceOptions#boolean\n\t * @type Boolean\n\t */\n\n\t/**\n\t * Contains interaction related functions\n\t * @namespace Chart.Interaction\n\t */\n\tChart.Interaction = {\n\t\t// Helper function for different modes\n\t\tmodes: {\n\t\t\tsingle: function(chart, e) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar elements = [];\n\n\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\telements.push(element);\n\t\t\t\t\t\treturn elements;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn elements.slice(0, 1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @function Chart.Interaction.modes.label\n\t\t\t * @deprecated since version 2.4.0\n\t\t\t */\n\t\t\tlabel: indexMode,\n\n\t\t\t/**\n\t\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t\t * @function Chart.Interaction.modes.index\n\t\t\t * @since v2.4.0\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tindex: indexMode,\n\n\t\t\t/**\n\t\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t\t * @function Chart.Interaction.modes.dataset\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tdataset: function(chart, e, options) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false);\n\n\t\t\t\tif (items.length > 0) {\n\t\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t\t}\n\n\t\t\t\treturn items;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @function Chart.Interaction.modes.x-axis\n\t\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t\t */\n\t\t\t'x-axis': function(chart, e) {\n\t\t\t\treturn indexMode(chart, e, true);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Point mode returns all elements that hit test based on the event position\n\t\t\t * of the event\n\t\t\t * @function Chart.Interaction.modes.intersect\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tpoint: function(chart, e) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\treturn getIntersectItems(chart, position);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * nearest mode returns the element closest to the point\n\t\t\t * @function Chart.Interaction.modes.intersect\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tnearest: function(chart, e, options) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect);\n\n\t\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\t\tif (nearestItems.length > 1) {\n\t\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn ret;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Return only 1 item\n\t\t\t\treturn nearestItems.slice(0, 1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t\t * @function Chart.Interaction.modes.x\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\tx: function(chart, e, options) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar items = [];\n\t\t\t\tvar intersectsItem = false;\n\n\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\t\titems.push(element);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\tintersectsItem = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t\t// that intersect the position, return nothing\n\t\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\t\titems = [];\n\t\t\t\t}\n\t\t\t\treturn items;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t\t * @function Chart.Interaction.modes.y\n\t\t\t * @param chart {chart} the chart we are returning items from\n\t\t\t * @param e {Event} the event we are find things at\n\t\t\t * @param options {IInteractionOptions} options to use\n\t\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t\t */\n\t\t\ty: function(chart, e, options) {\n\t\t\t\tvar position = getRelativePosition(e, chart.chart);\n\t\t\t\tvar items = [];\n\t\t\t\tvar intersectsItem = false;\n\n\t\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\t\titems.push(element);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\t\tintersectsItem = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t\t// that intersect the position, return nothing\n\t\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\t\titems = [];\n\t\t\t\t}\n\t\t\t\treturn items;\n\t\t\t}\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.interaction.js\n// module id = 253\n// module chunks = 0","'use strict';\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.controller = new Chart.Controller(item, config, this);\n\t\treturn this.controller;\n\t};\n\n\t// Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\tresponsive: true,\n\t\t\tresponsiveAnimationDuration: 0,\n\t\t\tmaintainAspectRatio: true,\n\t\t\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\t\t\thover: {\n\t\t\t\tonHover: null,\n\t\t\t\tmode: 'nearest',\n\t\t\t\tintersect: true,\n\t\t\t\tanimationDuration: 400\n\t\t\t},\n\t\t\tonClick: null,\n\t\t\tdefaultColor: 'rgba(0,0,0,0.1)',\n\t\t\tdefaultFontColor: '#666',\n\t\t\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\t\t\tdefaultFontSize: 12,\n\t\t\tdefaultFontStyle: 'normal',\n\t\t\tshowLines: true,\n\n\t\t\t// Element defaults defined in element extensions\n\t\t\telements: {},\n\n\t\t\t// Legend callback string\n\t\t\tlegendCallback: function(chart) {\n\t\t\t\tvar text = [];\n\t\t\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\t\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t\t\t}\n\t\t\t\t\ttext.push('</li>');\n\t\t\t\t}\n\t\t\t\ttext.push('</ul>');\n\n\t\t\t\treturn text.join('');\n\t\t\t}\n\t\t}\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.js\n// module id = 254\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\t// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n\t// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n\t// It is this service's responsibility of carrying out that layout.\n\tChart.layoutService = {\n\t\tdefaults: {},\n\n\t\t// Register a box to a chartInstance. A box is simply a reference to an object that requires layout. eg. Scales, Legend, Plugins.\n\t\taddBox: function(chartInstance, box) {\n\t\t\tif (!chartInstance.boxes) {\n\t\t\t\tchartInstance.boxes = [];\n\t\t\t}\n\t\t\tchartInstance.boxes.push(box);\n\t\t},\n\n\t\tremoveBox: function(chartInstance, box) {\n\t\t\tif (!chartInstance.boxes) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tchartInstance.boxes.splice(chartInstance.boxes.indexOf(box), 1);\n\t\t},\n\n\t\t// The most important function\n\t\tupdate: function(chartInstance, width, height) {\n\n\t\t\tif (!chartInstance) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar layoutOptions = chartInstance.options.layout;\n\t\t\tvar padding = layoutOptions ? layoutOptions.padding : null;\n\n\t\t\tvar leftPadding = 0;\n\t\t\tvar rightPadding = 0;\n\t\t\tvar topPadding = 0;\n\t\t\tvar bottomPadding = 0;\n\n\t\t\tif (!isNaN(padding)) {\n\t\t\t\t// options.layout.padding is a number. assign to all\n\t\t\t\tleftPadding = padding;\n\t\t\t\trightPadding = padding;\n\t\t\t\ttopPadding = padding;\n\t\t\t\tbottomPadding = padding;\n\t\t\t} else {\n\t\t\t\tleftPadding = padding.left || 0;\n\t\t\t\trightPadding = padding.right || 0;\n\t\t\t\ttopPadding = padding.top || 0;\n\t\t\t\tbottomPadding = padding.bottom || 0;\n\t\t\t}\n\n\t\t\tvar leftBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'left';\n\t\t\t});\n\t\t\tvar rightBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'right';\n\t\t\t});\n\t\t\tvar topBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'top';\n\t\t\t});\n\t\t\tvar bottomBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'bottom';\n\t\t\t});\n\n\t\t\t// Boxes that overlay the chartarea such as the radialLinear scale\n\t\t\tvar chartAreaBoxes = helpers.where(chartInstance.boxes, function(box) {\n\t\t\t\treturn box.options.position === 'chartArea';\n\t\t\t});\n\n\t\t\t// Ensure that full width boxes are at the very top / bottom\n\t\t\ttopBoxes.sort(function(a, b) {\n\t\t\t\treturn (b.options.fullWidth ? 1 : 0) - (a.options.fullWidth ? 1 : 0);\n\t\t\t});\n\t\t\tbottomBoxes.sort(function(a, b) {\n\t\t\t\treturn (a.options.fullWidth ? 1 : 0) - (b.options.fullWidth ? 1 : 0);\n\t\t\t});\n\n\t\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t\t// Our canvas looks like the following.\n\t\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t\t// B1 is the bottom axis\n\t\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t\t// an error will be thrown.\n\t\t\t//\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |                  T1 (Full Width)                   |\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |    |    |                 T2                  |    |\n\t\t\t// |    |----|-------------------------------------|----|\n\t\t\t// |    |    | C1 |                           | C2 |    |\n\t\t\t// |    |    |----|                           |----|    |\n\t\t\t// |    |    |                                     |    |\n\t\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t\t// |    |    |                                     |    |\n\t\t\t// |    |    |----|                           |----|    |\n\t\t\t// |    |    | C3 |                           | C4 |    |\n\t\t\t// |    |----|-------------------------------------|----|\n\t\t\t// |    |    |                 B1                  |    |\n\t\t\t// |----------------------------------------------------|\n\t\t\t// |                  B2 (Full Width)                   |\n\t\t\t// |----------------------------------------------------|\n\t\t\t//\n\t\t\t// What we do to find the best sizing, we do the following\n\t\t\t// 1. Determine the minimum size of the chart area.\n\t\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t\t// 6. Refit each axis\n\t\t\t// 7. Position each axis in the final location\n\t\t\t// 8. Tell the chart the final location of the chart area\n\t\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t\t// Step 1\n\t\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t\t// Step 2\n\t\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t\t// Step 3\n\t\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t\t// Step 4\n\t\t\tvar maxChartAreaWidth = chartWidth;\n\t\t\tvar maxChartAreaHeight = chartHeight;\n\t\t\tvar minBoxSizes = [];\n\n\t\t\tfunction getMinimumBoxSize(box) {\n\t\t\t\tvar minSize;\n\t\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize = box.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t\t} else {\n\t\t\t\t\tminSize = box.update(verticalBoxWidth, chartAreaHeight);\n\t\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t\t}\n\n\t\t\t\tminBoxSizes.push({\n\t\t\t\t\thorizontal: isHorizontal,\n\t\t\t\t\tminSize: minSize,\n\t\t\t\t\tbox: box,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\t\tvar maxHorizontalLeftPadding = 0;\n\t\t\tvar maxHorizontalRightPadding = 0;\n\t\t\tvar maxVerticalTopPadding = 0;\n\t\t\tvar maxVerticalBottomPadding = 0;\n\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\t\tif (verticalBox.getPadding) {\n\t\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t\t// be if the axes are drawn at their minimum sizes.\n\t\t\t// Steps 5 & 6\n\t\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\t\tvar totalRightBoxesWidth = rightPadding;\n\t\t\tvar totalTopBoxesHeight = topPadding;\n\t\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t\t// Function to fit a box\n\t\t\tfunction fitBox(box) {\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\t\treturn minBox.box === box;\n\t\t\t\t});\n\n\t\t\t\tif (minBoxSize) {\n\t\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\t\tbox.update(box.options.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\ttotalRightBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\t// Set the Left and Right margins for the horizontal boxes\n\t\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\ttotalTopBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\tfunction finalFitVerticalBox(box) {\n\t\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\t\treturn minSize.box === box;\n\t\t\t\t});\n\n\t\t\t\tvar scaleMargin = {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t\t};\n\n\t\t\t\tif (minBoxSize) {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Let the left layout know the final margin\n\t\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\t\ttotalLeftBoxesWidth = leftPadding;\n\t\t\ttotalRightBoxesWidth = rightPadding;\n\t\t\ttotalTopBoxesHeight = topPadding;\n\t\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\ttotalRightBoxesWidth += box.width;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\ttotalTopBoxesHeight += box.height;\n\t\t\t});\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t\t});\n\n\t\t\t// We may be adding some padding to account for rotated x axis labels\n\t\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t\t// without calling `fit` again\n\t\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t\t});\n\n\t\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t\t});\n\n\t\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\t\tif (!box.options.fullWidth) {\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\t\tif (!box.options.fullWidth) {\n\t\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t\t}\n\n\t\t\t// Step 7 - Position the boxes\n\t\t\tvar left = leftPadding + leftPaddingAddition;\n\t\t\tvar top = topPadding + topPaddingAddition;\n\n\t\t\tfunction placeBox(box) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tbox.left = box.options.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\t\tbox.right = box.options.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\t\tbox.top = top;\n\t\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t\t// Move to next point\n\t\t\t\t\ttop = box.bottom;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbox.left = left;\n\t\t\t\t\tbox.right = left + box.width;\n\t\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t\t// Move to next point\n\t\t\t\t\tleft = box.right;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t\t// Account for chart width and height\n\t\t\tleft += maxChartAreaWidth;\n\t\t\ttop += maxChartAreaHeight;\n\n\t\t\thelpers.each(rightBoxes, placeBox);\n\t\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t\t// Step 8\n\t\t\tchartInstance.chartArea = {\n\t\t\t\tleft: totalLeftBoxesWidth,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t\t};\n\n\t\t\t// Step 9\n\t\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\t\tbox.left = chartInstance.chartArea.left;\n\t\t\t\tbox.top = chartInstance.chartArea.top;\n\t\t\t\tbox.right = chartInstance.chartArea.right;\n\t\t\t\tbox.bottom = chartInstance.chartArea.bottom;\n\n\t\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t\t});\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.layoutService.js\n// module id = 255\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar noop = helpers.noop;\n\n\tChart.defaults.global.legend = {\n\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\n\t\treverse: false,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Helper function to get the box width based on the usePointStyle option\n\t * @param labelopts {Object} the label options on the legend\n\t * @param fontSize {Number} the label font size\n\t * @return {Number} width of the color box area\n\t */\n\tfunction getBoxWidth(labelOpts, fontSize) {\n\t\treturn labelOpts.usePointStyle ?\n\t\t\tfontSize * Math.SQRT2 :\n\t\t\tlabelOpts.boxWidth;\n\t}\n\n\tChart.Legend = Chart.Element.extend({\n\n\t\tinitialize: function(config) {\n\t\t\thelpers.extend(this, config);\n\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\t\tthis.legendHitBoxes = [];\n\n\t\t\t// Are we in doughnut mode which has a different data type\n\t\t\tthis.doughnutMode = false;\n\t\t},\n\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\n\t\t// Any function defined here is inherited by all legend types.\n\t\t// Any function can be extended by the legend type\n\n\t\tbeforeUpdate: noop,\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = margins;\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\t\t\t// Labels\n\t\t\tme.beforeBuildLabels();\n\t\t\tme.buildLabels();\n\t\t\tme.afterBuildLabels();\n\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\t\t},\n\t\tafterUpdate: noop,\n\n\t\t//\n\n\t\tbeforeSetDimensions: noop,\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\n\t\t\t// Reset minSize\n\t\t\tme.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t},\n\t\tafterSetDimensions: noop,\n\n\t\t//\n\n\t\tbeforeBuildLabels: noop,\n\t\tbuildLabels: function() {\n\t\t\tvar me = this;\n\t\t\tvar labelOpts = me.options.labels;\n\t\t\tvar legendItems = labelOpts.generateLabels.call(me, me.chart);\n\n\t\t\tif (labelOpts.filter) {\n\t\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (me.options.reverse) {\n\t\t\t\tlegendItems.reverse();\n\t\t\t}\n\n\t\t\tme.legendItems = legendItems;\n\t\t},\n\t\tafterBuildLabels: noop,\n\n\t\t//\n\n\t\tbeforeFit: noop,\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar labelOpts = opts.labels;\n\t\t\tvar display = opts.display;\n\n\t\t\tvar ctx = me.ctx;\n\n\t\t\tvar globalDefault = Chart.defaults.global,\n\t\t\t\titemOrDefault = helpers.getValueOrDefault,\n\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\n\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\n\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\n\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t\t// Reset hit boxes\n\t\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\t\tvar minSize = me.minSize;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\t\tminSize.height = display ? 10 : 0;\n\t\t\t} else {\n\t\t\t\tminSize.width = display ? 10 : 0;\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Increase sizes here\n\t\t\tif (display) {\n\t\t\t\tctx.font = labelFont;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// Labels\n\n\t\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t\t});\n\n\t\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t\t} else {\n\t\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\t\tvar currentColWidth = 0;\n\t\t\t\t\tvar currentColHeight = 0;\n\t\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Get max width\n\t\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\n\t\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\t\tminSize.width += totalWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\t\tafterFit: noop,\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\n\t\t// Actually draw the legend on the canvas\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar labelOpts = opts.labels;\n\t\t\tvar globalDefault = Chart.defaults.global,\n\t\t\t\tlineDefault = globalDefault.elements.line,\n\t\t\t\tlegendWidth = me.width,\n\t\t\t\tlineWidths = me.lineWidths;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx,\n\t\t\t\t\tcursor,\n\t\t\t\t\titemOrDefault = helpers.getValueOrDefault,\n\t\t\t\t\tfontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\n\t\t\t\t\tfontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\n\t\t\t\t\tfontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\n\t\t\t\t\tfontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\n\t\t\t\t\tlabelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t\t\t// Canvas setup\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\tctx.lineWidth = 0.5;\n\t\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\t\tctx.font = labelFont;\n\n\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize),\n\t\t\t\t\thitboxes = me.legendHitBoxes;\n\n\t\t\t\t// current position\n\t\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set the ctx for the box\n\t\t\t\t\tctx.save();\n\n\t\t\t\t\tctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\t\tctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\t\tctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\t\tctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\t\tctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\t\tctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\t\tvar isLineWidthZero = (itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\t\tctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\t\tChart.canvasHelpers.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.restore();\n\t\t\t\t};\n\t\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\t\tctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\n\n\t\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\t\tctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\n\t\t\t\t\t\tctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Horizontal\n\t\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor = {\n\t\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\t\tline: 0\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tcursor = {\n\t\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\t\tline: 0\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width,\n\t\t\t\t\t\twidth = boxWidth + (fontSize / 2) + textWidth,\n\t\t\t\t\t\tx = cursor.x,\n\t\t\t\t\t\ty = cursor.y;\n\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\t\thitboxes[i].left = x;\n\t\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t\t// Fill the actual label\n\t\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @return {Boolean} true if a change occured\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\t\tvar changed = false;\n\n\t\t\tif (type === 'mousemove') {\n\t\t\t\tif (!opts.onHover) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else if (type === 'click') {\n\t\t\t\tif (!opts.onClick) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Chart event already has relative position in it\n\t\t\tvar x = e.x,\n\t\t\t\ty = e.y;\n\n\t\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t\t// See if we are touching one of the dataset boxes\n\t\t\t\tvar lh = me.legendHitBoxes;\n\t\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t\t// Touching an element\n\t\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\tfunction createNewLegendAndAttach(chartInstance, legendOpts) {\n\t\tvar legend = new Chart.Legend({\n\t\t\tctx: chartInstance.chart.ctx,\n\t\t\toptions: legendOpts,\n\t\t\tchart: chartInstance\n\t\t});\n\t\tchartInstance.legend = legend;\n\t\tChart.layoutService.addBox(chartInstance, legend);\n\t}\n\n\t// Register the legend plugin\n\tChart.plugins.register({\n\t\tbeforeInit: function(chartInstance) {\n\t\t\tvar legendOpts = chartInstance.options.legend;\n\n\t\t\tif (legendOpts) {\n\t\t\t\tcreateNewLegendAndAttach(chartInstance, legendOpts);\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function(chartInstance) {\n\t\t\tvar legendOpts = chartInstance.options.legend;\n\n\t\t\tif (legendOpts) {\n\t\t\t\tlegendOpts = helpers.configMerge(Chart.defaults.global.legend, legendOpts);\n\n\t\t\t\tif (chartInstance.legend) {\n\t\t\t\t\tchartInstance.legend.options = legendOpts;\n\t\t\t\t} else {\n\t\t\t\t\tcreateNewLegendAndAttach(chartInstance, legendOpts);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tChart.layoutService.removeBox(chartInstance, chartInstance.legend);\n\t\t\t\tdelete chartInstance.legend;\n\t\t\t}\n\t\t},\n\t\tafterEvent: function(chartInstance, e) {\n\t\t\tvar legend = chartInstance.legend;\n\t\t\tif (legend) {\n\t\t\t\tlegend.handleEvent(e);\n\t\t\t}\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.legend.js\n// module id = 256\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.plugins = {};\n\n\t/**\n\t * The plugin service singleton\n\t * @namespace Chart.plugins\n\t * @since 2.1.0\n\t */\n\tChart.plugins = {\n\t\t/**\n\t\t * Globally registered plugins.\n\t\t * @private\n\t\t */\n\t\t_plugins: [],\n\n\t\t/**\n\t\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t\t * incremented and descriptors are regenerated during following API calls.\n\t\t * @private\n\t\t */\n\t\t_cacheId: 0,\n\n\t\t/**\n\t\t * Registers the given plugin(s) if not already registered.\n\t\t * @param {Array|Object} plugins plugin instance(s).\n\t\t */\n\t\tregister: function(plugins) {\n\t\t\tvar p = this._plugins;\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\t\tp.push(plugin);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._cacheId++;\n\t\t},\n\n\t\t/**\n\t\t * Unregisters the given plugin(s) only if registered.\n\t\t * @param {Array|Object} plugins plugin instance(s).\n\t\t */\n\t\tunregister: function(plugins) {\n\t\t\tvar p = this._plugins;\n\t\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\t\tvar idx = p.indexOf(plugin);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tp.splice(idx, 1);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._cacheId++;\n\t\t},\n\n\t\t/**\n\t\t * Remove all registered plugins.\n\t\t * @since 2.1.5\n\t\t */\n\t\tclear: function() {\n\t\t\tthis._plugins = [];\n\t\t\tthis._cacheId++;\n\t\t},\n\n\t\t/**\n\t\t * Returns the number of registered plugins?\n\t\t * @returns {Number}\n\t\t * @since 2.1.5\n\t\t */\n\t\tcount: function() {\n\t\t\treturn this._plugins.length;\n\t\t},\n\n\t\t/**\n\t\t * Returns all registered plugin instances.\n\t\t * @returns {Array} array of plugin objects.\n\t\t * @since 2.1.5\n\t\t */\n\t\tgetAll: function() {\n\t\t\treturn this._plugins;\n\t\t},\n\n\t\t/**\n\t\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t\t * returned value can be used, for instance, to interrupt the current action.\n\t\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t\t */\n\t\tnotify: function(chart, hook, args) {\n\t\t\tvar descriptors = this.descriptors(chart);\n\t\t\tvar ilen = descriptors.length;\n\t\t\tvar i, descriptor, plugin, params, method;\n\n\t\t\tfor (i=0; i<ilen; ++i) {\n\t\t\t\tdescriptor = descriptors[i];\n\t\t\t\tplugin = descriptor.plugin;\n\t\t\t\tmethod = plugin[hook];\n\t\t\t\tif (typeof method === 'function') {\n\t\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\t\tparams.push(descriptor.options);\n\t\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\t/**\n\t\t * Returns descriptors of enabled plugins for the given chart.\n\t\t * @returns {Array} [{ plugin, options }]\n\t\t * @private\n\t\t */\n\t\tdescriptors: function(chart) {\n\t\t\tvar cache = chart._plugins || (chart._plugins = {});\n\t\t\tif (cache.id === this._cacheId) {\n\t\t\t\treturn cache.descriptors;\n\t\t\t}\n\n\t\t\tvar plugins = [];\n\t\t\tvar descriptors = [];\n\t\t\tvar config = (chart && chart.config) || {};\n\t\t\tvar defaults = Chart.defaults.global.plugins;\n\t\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar id = plugin.id;\n\t\t\t\tvar opts = options[id];\n\t\t\t\tif (opts === false) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (opts === true) {\n\t\t\t\t\topts = helpers.clone(defaults[id]);\n\t\t\t\t}\n\n\t\t\t\tplugins.push(plugin);\n\t\t\t\tdescriptors.push({\n\t\t\t\t\tplugin: plugin,\n\t\t\t\t\toptions: opts || {}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tcache.descriptors = descriptors;\n\t\t\tcache.id = this._cacheId;\n\t\t\treturn descriptors;\n\t\t}\n\t};\n\n\t/**\n\t * Plugin extension hooks.\n\t * @interface IPlugin\n\t * @since 2.1.0\n\t */\n\t/**\n\t * @method IPlugin#beforeInit\n\t * @desc Called before initializing `chart`.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#afterInit\n\t * @desc Called after `chart` has been initialized and before the first update.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeUpdate\n\t * @desc Called before updating `chart`. If any plugin returns `false`, the update\n\t * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart update.\n\t */\n\t/**\n\t * @method IPlugin#afterUpdate\n\t * @desc Called after `chart` has been updated and before rendering. Note that this\n\t * hook will not be called if the chart update has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeDatasetsUpdate\n \t * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n\t * the datasets update is cancelled until another `update` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} false to cancel the datasets update.\n\t * @since version 2.1.5\n\t */\n\t/**\n\t * @method IPlugin#afterDatasetsUpdate\n\t * @desc Called after the `chart` datasets have been updated. Note that this hook\n\t * will not be called if the datasets update has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @since version 2.1.5\n\t */\n\t/**\n\t * @method IPlugin#beforeLayout\n\t * @desc Called before laying out `chart`. If any plugin returns `false`,\n\t * the layout update is cancelled until another `update` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart layout.\n\t */\n\t/**\n\t * @method IPlugin#afterLayout\n\t * @desc Called after the `chart` has been layed out. Note that this hook will not\n\t * be called if the layout update has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeRender\n\t * @desc Called before rendering `chart`. If any plugin returns `false`,\n\t * the rendering is cancelled until another `render` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart rendering.\n\t */\n\t/**\n\t * @method IPlugin#afterRender\n\t * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n\t * that this hook will not be called if the rendering has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeDraw\n\t * @desc Called before drawing `chart` at every animation frame specified by the given\n\t * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n\t * another `render` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart drawing.\n\t */\n\t/**\n\t * @method IPlugin#afterDraw\n\t * @desc Called after the `chart` has been drawn for the specific easing value. Note\n\t * that this hook will not be called if the drawing has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeDatasetsDraw\n \t * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n\t * the datasets drawing is cancelled until another `render` is triggered.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t * @param {Object} options - The plugin options.\n\t * @returns {Boolean} `false` to cancel the chart datasets drawing.\n\t */\n\t/**\n\t * @method IPlugin#afterDatasetsDraw\n\t * @desc Called after the `chart` datasets have been drawn. Note that this hook\n\t * will not be called if the datasets drawing has been previously cancelled.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#beforeEvent\n \t * @desc Called before processing the specified `event`. If any plugin returns `false`,\n\t * the event will be discarded.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {IEvent} event - The event object.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#afterEvent\n\t * @desc Called after the `event` has been consumed. Note that this hook\n\t * will not be called if the `event` has been previously discarded.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {IEvent} event - The event object.\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#resize\n\t * @desc Called after the chart as been resized.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n\t * @param {Object} options - The plugin options.\n\t */\n\t/**\n\t * @method IPlugin#destroy\n\t * @desc Called after the chart as been destroyed.\n\t * @param {Chart.Controller} chart - The chart instance.\n\t * @param {Object} options - The plugin options.\n\t */\n\n\t/**\n\t * Provided for backward compatibility, use Chart.plugins instead\n\t * @namespace Chart.pluginService\n\t * @deprecated since version 2.1.5\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.pluginService = Chart.plugins;\n\n\t/**\n\t * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n\t * effect, instead simply create/register plugins via plain JavaScript objects.\n\t * @interface Chart.PluginBase\n\t * @deprecated since version 2.5.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.PluginBase = helpers.inherits({});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.plugin.js\n// module id = 257\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.scale = {\n\t\tdisplay: true,\n\t\tposition: 'left',\n\n\t\t// grid line settings\n\t\tgridLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1,\n\t\t\tdrawBorder: true,\n\t\t\tdrawOnChartArea: true,\n\t\t\tdrawTicks: true,\n\t\t\ttickMarkLength: 10,\n\t\t\tzeroLineWidth: 1,\n\t\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\t\toffsetGridLines: false,\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0\n\t\t},\n\n\t\t// scale label\n\t\tscaleLabel: {\n\t\t\t// actual label\n\t\t\tlabelString: '',\n\n\t\t\t// display property\n\t\t\tdisplay: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tbeginAtZero: false,\n\t\t\tminRotation: 0,\n\t\t\tmaxRotation: 50,\n\t\t\tmirror: false,\n\t\t\tpadding: 0,\n\t\t\treverse: false,\n\t\t\tdisplay: true,\n\t\t\tautoSkip: true,\n\t\t\tautoSkipPadding: 0,\n\t\t\tlabelOffset: 0,\n\t\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\t\tcallback: Chart.Ticks.formatters.values\n\t\t}\n\t};\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\tvar globalDefaults = Chart.defaults.global;\n\t\tvar size = getValueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = getValueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = getValueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tChart.Scale = Chart.Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callCallback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks\n\t\t\tme.beforeBuildTicks();\n\t\t\tme.buildTicks();\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\t\t\tme.convertTicksToLabels();\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callCallback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callCallback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callCallback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callCallback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callCallback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callCallback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callCallback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callCallback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callCallback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callCallback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, me.ticks, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation;\n\t\t\t\tvar sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callCallback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callCallback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar scaleLabelFontSize = parseFontOptions(scaleLabelOpts).size * 1.5;\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += scaleLabelFontSize;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += scaleLabelFontSize;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, me.ticks, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * tallestLabelHeightInLines);\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\n\t\t\t\t\tvar firstTick = me.ticks[0];\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, firstTick, tickFont.font);\n\n\t\t\t\t\tvar lastTick = me.ticks[me.ticks.length - 1];\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, lastTick, tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\n\t\t\t\t\t// by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom'? (cosRotation * firstLabelWidth) + 3: (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom'? (cosRotation * lineSpace) + 3: (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\n\t\t\t\t\t// Account for padding\n\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlargestTextWidth += me.options.ticks.padding;\n\t\t\t\t\t}\n\t\t\t\t\tminSize.width += largestTextWidth;\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callCallback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (rawValue === null || typeof(rawValue) === 'undefined') {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof(rawValue) === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (typeof(rawValue) === 'object') {\n\t\t\t\tif ((rawValue instanceof Date) || (rawValue.isValid)) {\n\t\t\t\t\treturn rawValue;\n\t\t\t\t}\n\t\t\t\treturn this.getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t// Used to get the value to display in the tooltip for the data at the given index\n\t\t// function getLabelForIndex(index, datasetIndex)\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t// Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t// Used for tick location, should\n\t\tgetPixelForTick: function(index, includeOffset) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (includeOffset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me.ticks.length - 1)));\n\t\t},\n\n\t\t// Utility for getting the pixel location of a percentage of scale\n\t\tgetPixelForDecimal: function(decimal /* , includeOffset*/) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0:\n\t\t\t\tmin < 0 && max < 0? max :\n\t\t\t\tmin > 0 && max > 0? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = Chart.defaults.global;\n\t\t\tvar optionTicks = options.ticks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar skipRatio;\n\t\t\tvar useAutoskipper = optionTicks.autoSkip;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tvar tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\t\t\tvar borderDash = helpers.getValueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\tvar borderDashOffset = helpers.getValueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\n\t\t\tvar scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\n\t\t\t// Make sure we draw text in the correct color and font\n\t\t\tcontext.fillStyle = tickFontColor;\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\t// Only calculate the skip ratio with the half width of longestRotateLabel if we got an actual rotation\n\t\t\t\t// See #2584\n\t\t\t\tif (isRotated) {\n\t\t\t\t\tlongestRotatedLabel /= 2;\n\t\t\t\t}\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && me.ticks.length > maxTicks) {\n\t\t\t\t\twhile (!skipRatio || me.ticks.length / (skipRatio || 1) > maxTicks) {\n\t\t\t\t\t\tif (!skipRatio) {\n\t\t\t\t\t\t\tskipRatio = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tskipRatio += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!useAutoskipper) {\n\t\t\t\t\tskipRatio = false;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;\n\n\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t// If the callback returned a null or undefined value, do not draw this line\n\t\t\t\tif (label === undefined || label === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar isLastTick = me.ticks.length === index + 1;\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tvar shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= me.ticks.length);\n\t\t\t\tif (shouldSkip && !isLastTick || (label === undefined || label === null)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar lineWidth, lineColor;\n\t\t\t\tif (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\n\t\t\t\tif (isHorizontal) {\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated? 'top':'middle';\n\t\t\t\t\t\ttextAlign = !isRotated? 'center': 'right';\n\t\t\t\t\t\tlabelY = me.top + tl;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated? 'bottom':'middle';\n\t\t\t\t\t\ttextAlign = !isRotated? 'center': 'left';\n\t\t\t\t\t\tlabelY = me.bottom - tl;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines\n\t\t\t\t\tlabelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar tickPadding = optionTicks.padding;\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = me.getPixelForTick(index); // xvalues for grid lines\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\t\t\t\t\tlabelY = me.getPixelForTick(index, gridLines.offsetGridLines);\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = tickFont.font;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tfor (var i = 0, y = 0; i < label.length; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += (tickFont.size * 1.5);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFont.size / 2) : me.top + (scaleLabelFont.size / 2);\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft ? me.left + (scaleLabelFont.size / 2) : me.right - (scaleLabelFont.size / 2);\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.getValueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left,\n\t\t\t\t\tx2 = me.right,\n\t\t\t\t\ty1 = me.top,\n\t\t\t\t\ty2 = me.bottom;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.scale.js\n// module id = 258\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, defaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(defaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar defaults = this.defaults;\n\t\t\tif (defaults.hasOwnProperty(type)) {\n\t\t\t\tdefaults[type] = helpers.extend(defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chartInstance) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chartInstance.scales, function(scale) {\n\t\t\t\tChart.layoutService.addBox(chartInstance, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.scaleService.js\n// module id = 259\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\t/**\n\t * Namespace to hold static tick generation functions\n\t * @namespace Chart.Ticks\n\t */\n\tChart.Ticks = {\n\t\t/**\n\t\t * Namespace to hold generators for different types of ticks\n\t\t * @namespace Chart.Ticks.generators\n\t\t */\n\t\tgenerators: {\n\t\t\t/**\n\t\t\t * Interface for the options provided to the numeric tick generator\n\t\t\t * @interface INumericTickGenerationOptions\n\t\t\t */\n\t\t\t/**\n\t\t\t * The maximum number of ticks to display\n\t\t\t * @name INumericTickGenerationOptions#maxTicks\n\t\t\t * @type Number\n\t\t\t */\n\t\t\t/**\n\t\t\t * The distance between each tick.\n\t\t\t * @name INumericTickGenerationOptions#stepSize\n\t\t\t * @type Number\n\t\t\t * @optional\n\t\t\t */\n\t\t\t/**\n\t\t\t * Forced minimum for the ticks. If not specified, the minimum of the data range is used to calculate the tick minimum\n\t\t\t * @name INumericTickGenerationOptions#min\n\t\t\t * @type Number\n\t\t\t * @optional\n\t\t\t */\n\t\t\t/**\n\t\t\t * The maximum value of the ticks. If not specified, the maximum of the data range is used to calculate the tick maximum\n\t\t\t * @name INumericTickGenerationOptions#max\n\t\t\t * @type Number\n\t\t\t * @optional\n\t\t\t */\n\n\t\t\t/**\n\t\t\t * Generate a set of linear ticks\n\t\t\t * @method Chart.Ticks.generators.linear\n\t\t\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\n\t\t\t * @param dataRange {IRange} the range of the data\n\t\t\t * @returns {Array<Number>} array of tick values\n\t\t\t */\n\t\t\tlinear: function(generationOptions, dataRange) {\n\t\t\t\tvar ticks = [];\n\t\t\t\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t\t\t\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t\t\t\t// for details.\n\n\t\t\t\tvar spacing;\n\t\t\t\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\t\t\t\tspacing = generationOptions.stepSize;\n\t\t\t\t} else {\n\t\t\t\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\t\t\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t\t\t\t}\n\t\t\t\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\t\t\t\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t\t\t\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\t\t\t\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t\t\t\t// If very close to our whole number, use it.\n\t\t\t\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\t\t\t\tniceMin = generationOptions.min;\n\t\t\t\t\t\tniceMax = generationOptions.max;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t\t\t\t// If very close to our rounded value, use it.\n\t\t\t\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\t\t\t\tnumSpaces = Math.round(numSpaces);\n\t\t\t\t} else {\n\t\t\t\t\tnumSpaces = Math.ceil(numSpaces);\n\t\t\t\t}\n\n\t\t\t\t// Put the values into the ticks array\n\t\t\t\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\t\t\t\tfor (var j = 1; j < numSpaces; ++j) {\n\t\t\t\t\tticks.push(niceMin + (j * spacing));\n\t\t\t\t}\n\t\t\t\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\t\t\t\treturn ticks;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Generate a set of logarithmic ticks\n\t\t\t * @method Chart.Ticks.generators.logarithmic\n\t\t\t * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\n\t\t\t * @param dataRange {IRange} the range of the data\n\t\t\t * @returns {Array<Number>} array of tick values\n\t\t\t */\n\t\t\tlogarithmic: function(generationOptions, dataRange) {\n\t\t\t\tvar ticks = [];\n\t\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t\t// the graph\n\t\t\t\tvar tickVal = getValueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\t\t\t\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\t\t\t\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\t\t\t\tvar exp;\n\t\t\t\tvar significand;\n\n\t\t\t\tif (tickVal === 0) {\n\t\t\t\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\t\t\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\t\t\t\tticks.push(tickVal);\n\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\n\t\t\t\t} else {\n\t\t\t\t\texp = Math.floor(helpers.log10(tickVal));\n\t\t\t\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t\t\t\t}\n\n\t\t\t\tdo {\n\t\t\t\t\tticks.push(tickVal);\n\n\t\t\t\t\t++significand;\n\t\t\t\t\tif (significand === 10) {\n\t\t\t\t\t\tsignificand = 1;\n\t\t\t\t\t\t++exp;\n\t\t\t\t\t}\n\n\t\t\t\t\ttickVal = significand * Math.pow(10, exp);\n\t\t\t\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\t\t\t\tvar lastTick = getValueOrDefault(generationOptions.max, tickVal);\n\t\t\t\tticks.push(lastTick);\n\n\t\t\t\treturn ticks;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Namespace to hold formatters for different types of ticks\n\t\t * @namespace Chart.Ticks.formatters\n\t\t */\n\t\tformatters: {\n\t\t\t/**\n\t\t\t * Formatter for value labels\n\t\t\t * @method Chart.Ticks.formatters.values\n\t\t\t * @param value the value to display\n\t\t\t * @return {String|Array} the label to display\n\t\t\t */\n\t\t\tvalues: function(value) {\n\t\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Formatter for linear numeric ticks\n\t\t\t * @method Chart.Ticks.formatters.linear\n\t\t\t * @param tickValue {Number} the value to be formatted\n\t\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t\t * @return {String} string representation of the tickValue parameter\n\t\t\t */\n\t\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t\t// not an integer\n\t\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\t\tvar tickString = '';\n\n\t\t\t\tif (tickValue !== 0) {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t} else {\n\t\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t\t}\n\n\t\t\t\treturn tickString;\n\t\t\t},\n\n\t\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\t\tif (tickValue === 0) {\n\t\t\t\t\treturn '0';\n\t\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\t\treturn tickValue.toExponential();\n\t\t\t\t}\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.ticks.js\n// module id = 260\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tChart.defaults.global.title = {\n\t\tdisplay: false,\n\t\tposition: 'top',\n\t\tfullWidth: true, // marks that this box should take the full width of the canvas (pushing down other boxes)\n\n\t\tfontStyle: 'bold',\n\t\tpadding: 10,\n\n\t\t// actual title\n\t\ttext: ''\n\t};\n\n\tvar noop = helpers.noop;\n\tChart.Title = Chart.Element.extend({\n\n\t\tinitialize: function(config) {\n\t\t\tvar me = this;\n\t\t\thelpers.extend(me, config);\n\n\t\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\t\tme.legendHitBoxes = [];\n\t\t},\n\n\t\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\t\tbeforeUpdate: noop,\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = margins;\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\t\t\t// Labels\n\t\t\tme.beforeBuildLabels();\n\t\t\tme.buildLabels();\n\t\t\tme.afterBuildLabels();\n\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: noop,\n\n\t\t//\n\n\t\tbeforeSetDimensions: noop,\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\n\t\t\t// Reset minSize\n\t\t\tme.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t},\n\t\tafterSetDimensions: noop,\n\n\t\t//\n\n\t\tbeforeBuildLabels: noop,\n\t\tbuildLabels: noop,\n\t\tafterBuildLabels: noop,\n\n\t\t//\n\n\t\tbeforeFit: noop,\n\t\tfit: function() {\n\t\t\tvar me = this,\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\n\t\t\t\topts = me.options,\n\t\t\t\tglobalDefaults = Chart.defaults.global,\n\t\t\t\tdisplay = opts.display,\n\t\t\t\tfontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n\t\t\t\tminSize = me.minSize;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\t\tminSize.height = display ? fontSize + (opts.padding * 2) : 0;\n\t\t\t} else {\n\t\t\t\tminSize.width = display ? fontSize + (opts.padding * 2) : 0;\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\n\t\t},\n\t\tafterFit: noop,\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\tvar pos = this.options.position;\n\t\t\treturn pos === 'top' || pos === 'bottom';\n\t\t},\n\n\t\t// Actually draw the title block on the canvas\n\t\tdraw: function() {\n\t\t\tvar me = this,\n\t\t\t\tctx = me.ctx,\n\t\t\t\tvalueOrDefault = helpers.getValueOrDefault,\n\t\t\t\topts = me.options,\n\t\t\t\tglobalDefaults = Chart.defaults.global;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\n\t\t\t\t\tfontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\t\t\tfontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\t\t\ttitleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\n\t\t\t\t\trotation = 0,\n\t\t\t\t\ttitleX,\n\t\t\t\t\ttitleY,\n\t\t\t\t\ttop = me.top,\n\t\t\t\t\tleft = me.left,\n\t\t\t\t\tbottom = me.bottom,\n\t\t\t\t\tright = me.right,\n\t\t\t\t\tmaxWidth;\n\n\t\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\t\tctx.font = titleFont;\n\n\t\t\t\t// Horizontal\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2); // midpoint of the height\n\t\t\t\t\tmaxWidth = right - left;\n\t\t\t\t} else {\n\t\t\t\t\ttitleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\n\t\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t\t}\n\n\t\t\t\tctx.save();\n\t\t\t\tctx.translate(titleX, titleY);\n\t\t\t\tctx.rotate(rotation);\n\t\t\t\tctx.textAlign = 'center';\n\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\tctx.fillText(opts.text, 0, 0, maxWidth);\n\t\t\t\tctx.restore();\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction createNewTitleBlockAndAttach(chartInstance, titleOpts) {\n\t\tvar title = new Chart.Title({\n\t\t\tctx: chartInstance.chart.ctx,\n\t\t\toptions: titleOpts,\n\t\t\tchart: chartInstance\n\t\t});\n\t\tchartInstance.titleBlock = title;\n\t\tChart.layoutService.addBox(chartInstance, title);\n\t}\n\n\t// Register the title plugin\n\tChart.plugins.register({\n\t\tbeforeInit: function(chartInstance) {\n\t\t\tvar titleOpts = chartInstance.options.title;\n\n\t\t\tif (titleOpts) {\n\t\t\t\tcreateNewTitleBlockAndAttach(chartInstance, titleOpts);\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function(chartInstance) {\n\t\t\tvar titleOpts = chartInstance.options.title;\n\n\t\t\tif (titleOpts) {\n\t\t\t\ttitleOpts = helpers.configMerge(Chart.defaults.global.title, titleOpts);\n\n\t\t\t\tif (chartInstance.titleBlock) {\n\t\t\t\t\tchartInstance.titleBlock.options = titleOpts;\n\t\t\t\t} else {\n\t\t\t\t\tcreateNewTitleBlockAndAttach(chartInstance, titleOpts);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tChart.layoutService.removeBox(chartInstance, chartInstance.titleBlock);\n\t\t\t\tdelete chartInstance.titleBlock;\n\t\t\t}\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.title.js\n// module id = 261\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\tChart.defaults.global.tooltips = {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + tooltipItem.yLabel;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chartInstance) {\n\t\t\t\tvar meta = chartInstance.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t};\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index,\n\t\t\tdatasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = Chart.defaults.global;\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: getValueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: getValueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: getValueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: getValueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: getValueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: getValueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: getValueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: getValueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: getValueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize,\n\t\t\tbodyFontSize = model.bodyFontSize,\n\t\t\tfooterFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chartInstance.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize,\n\t\t\tcaretPadding = vm.caretPadding,\n\t\t\tcornerRadius = vm.cornerRadius,\n\t\t\txAlign = alignment.xAlign,\n\t\t\tyAlign = alignment.yAlign,\n\t\t\tpaddingAndSize = caretSize + caretPadding,\n\t\t\tradiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Chart.Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments),\n\t\t\t\ttitle = callbacks.title.apply(me, arguments),\n\t\t\t\tafterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\t\t\tvar chartInstance = me._chartInstance;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position](active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, chartInstance));\n\t\t\t\t});\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = helpers.getValueOrDefault(tooltipPosition.padding, 2);\n\t\t\t\tmodel.labelColors = labelColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size, opacity) {\n\t\t\tvar vm = this._view;\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar x1, x2, x3;\n\t\t\tvar y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign,\n\t\t\t\tyAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x,\n\t\t\t\tptY = tooltipPoint.y;\n\t\t\tvar width = size.width,\n\t\t\t\theight = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\t// Left or right side\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t}\n\n\t\t\t\ty2 = ptY + (height / 2);\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX + cornerRadius;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx1 = ptX + width - cornerRadius;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = ptX + (width / 2);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tctx.lineTo(x3, y3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize,\n\t\t\t\t\ttitleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar textColor = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\tctx.fillStyle = textColor;\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\thelpers.drawRoundedRectangle(ctx, pt.x, pt.y, tooltipSize.width, tooltipSize.height, vm.cornerRadius);\n\t\t\tctx.fill();\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\tif (this._options.enabled) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Caret\n\t\t\t\tthis.drawCaret(pt, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chartInstance.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tvar model = me._model;\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\n\t\t\t\t// See if our tooltip position changed\n\t\t\t\tchanged |= (model.x !== me._model.x) || (model.y !== me._model.y);\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\n\t\t\tvar nearestElement;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/core/core.tooltip.js\n// module id = 262\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tglobalOpts = Chart.defaults.global;\n\n\tglobalOpts.elements.arc = {\n\t\tbackgroundColor: globalOpts.defaultColor,\n\t\tborderColor: '#fff',\n\t\tborderWidth: 2\n\t};\n\n\tChart.elements.Arc = Chart.Element.extend({\n\t\tinLabelRange: function(mouseX) {\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm) {\n\t\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tinRange: function(chartX, chartY) {\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm) {\n\t\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {\n\t\t\t\t\t\tx: chartX,\n\t\t\t\t\t\ty: chartY\n\t\t\t\t\t}),\n\t\t\t\t\tangle = pointRelativePosition.angle,\n\t\t\t\t\tdistance = pointRelativePosition.distance;\n\n\t\t\t\t// Sanitise angle range\n\t\t\t\tvar startAngle = vm.startAngle;\n\t\t\t\tvar endAngle = vm.endAngle;\n\t\t\t\twhile (endAngle < startAngle) {\n\t\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t\t}\n\t\t\t\twhile (angle > endAngle) {\n\t\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t\t}\n\t\t\t\twhile (angle < startAngle) {\n\t\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\t// Check if within the range of the open/close angle\n\t\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle),\n\t\t\t\t\twithinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tgetCenterPoint: function() {\n\t\t\tvar vm = this._view;\n\t\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\t\treturn {\n\t\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t\t};\n\t\t},\n\t\tgetArea: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\n\t\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\n\t\t\t\trangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\t\t\treturn {\n\t\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw: function() {\n\n\t\t\tvar ctx = this._chart.ctx,\n\t\t\t\tvm = this._view,\n\t\t\t\tsA = vm.startAngle,\n\t\t\t\teA = vm.endAngle;\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\t\tctx.closePath();\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.lineWidth = vm.borderWidth;\n\n\t\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\t\tctx.fill();\n\t\t\tctx.lineJoin = 'bevel';\n\n\t\t\tif (vm.borderWidth) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.arc.js\n// module id = 263\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar globalDefaults = Chart.defaults.global;\n\n\tChart.defaults.global.elements.line = {\n\t\ttension: 0.4,\n\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\tborderWidth: 3,\n\t\tborderColor: globalDefaults.defaultColor,\n\t\tborderCapStyle: 'butt',\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0,\n\t\tborderJoinStyle: 'miter',\n\t\tcapBezierPoints: true,\n\t\tfill: true, // do we fill in the area between the line and its base axis\n\t};\n\n\tChart.elements.Line = Chart.Element.extend({\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar vm = me._view;\n\t\t\tvar spanGaps = vm.spanGaps;\n\t\t\tvar fillPoint = vm.scaleZero;\n\t\t\tvar loop = me._loop;\n\n\t\t\t// Handle different fill modes for cartesian lines\n\t\t\tif (!loop) {\n\t\t\t\tif (vm.fill === 'top') {\n\t\t\t\t\tfillPoint = vm.scaleTop;\n\t\t\t\t} else if (vm.fill === 'bottom') {\n\t\t\t\t\tfillPoint = vm.scaleBottom;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar ctx = me._chart.ctx;\n\t\t\tctx.save();\n\n\t\t\t// Helper function to draw a line to a point\n\t\t\tfunction lineToPoint(previousPoint, point) {\n\t\t\t\tvar pointVM = point._view;\n\t\t\t\tif (point._view.steppedLine === true) {\n\t\t\t\t\tctx.lineTo(pointVM.x, previousPoint._view.y);\n\t\t\t\t\tctx.lineTo(pointVM.x, pointVM.y);\n\t\t\t\t} else if (point._view.tension === 0) {\n\t\t\t\t\tctx.lineTo(pointVM.x, pointVM.y);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextX,\n\t\t\t\t\t\tpreviousPoint._view.controlPointNextY,\n\t\t\t\t\t\tpointVM.controlPointPreviousX,\n\t\t\t\t\t\tpointVM.controlPointPreviousY,\n\t\t\t\t\t\tpointVM.x,\n\t\t\t\t\t\tpointVM.y\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar points = me._children.slice(); // clone array\n\t\t\tvar lastDrawnIndex = -1;\n\n\t\t\t// If we are looping, adding the first point again\n\t\t\tif (loop && points.length) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\tvar index, current, previous, currentVM;\n\n\t\t\t// Fill Line\n\t\t\tif (points.length && vm.fill) {\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\t\t\tcurrent = points[index];\n\t\t\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\t\t\tcurrentVM = current._view;\n\n\t\t\t\t\t// First point moves to it's starting position no matter what\n\t\t\t\t\tif (index === 0) {\n\t\t\t\t\t\tif (loop) {\n\t\t\t\t\t\t\tctx.moveTo(fillPoint.x, fillPoint.y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.moveTo(currentVM.x, fillPoint);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\t\t\tif (currentVM.skip) {\n\t\t\t\t\t\t\t// Only do this if this is the first point that is skipped\n\t\t\t\t\t\t\tif (!spanGaps && lastDrawnIndex === (index - 1)) {\n\t\t\t\t\t\t\t\tif (loop) {\n\t\t\t\t\t\t\t\t\tctx.lineTo(fillPoint.x, fillPoint.y);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tctx.lineTo(previous._view.x, fillPoint);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (lastDrawnIndex !== (index - 1)) {\n\t\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap. If we've never drawn a point, this is a special case.\n\t\t\t\t\t\t\t\t// If the first data point is NaN, then there is no real gap to skip\n\t\t\t\t\t\t\t\tif (spanGaps && lastDrawnIndex !== -1) {\n\t\t\t\t\t\t\t\t\t// We are spanning the gap, so simple draw a line to this point\n\t\t\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t\t\t} else if (loop) {\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, fillPoint);\n\t\t\t\t\t\t\t\t\tctx.lineTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!loop && lastDrawnIndex !== -1) {\n\t\t\t\t\tctx.lineTo(points[lastDrawnIndex]._view.x, fillPoint);\n\t\t\t\t}\n\n\t\t\t\tctx.fillStyle = vm.backgroundColor || globalDefaults.defaultColor;\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t}\n\n\t\t\t// Stroke Line Options\n\t\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t\t// IE 9 and 10 do not support line dash\n\t\t\tif (ctx.setLineDash) {\n\t\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t\t}\n\n\t\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t\t// Stroke Line\n\t\t\tctx.beginPath();\n\t\t\tlastDrawnIndex = -1;\n\n\t\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\t\tcurrent = points[index];\n\t\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\t\tcurrentVM = current._view;\n\n\t\t\t\t// First point moves to it's starting position no matter what\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\t\tlineToPoint(previous, current);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.stroke();\n\t\t\tctx.restore();\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.line.js\n// module id = 264\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tglobalOpts = Chart.defaults.global,\n\t\tdefaultColor = globalOpts.defaultColor;\n\n\tglobalOpts.elements.point = {\n\t\tradius: 3,\n\t\tpointStyle: 'circle',\n\t\tbackgroundColor: defaultColor,\n\t\tborderWidth: 1,\n\t\tborderColor: defaultColor,\n\t\t// Hover\n\t\thitRadius: 1,\n\t\thoverRadius: 4,\n\t\thoverBorderWidth: 1\n\t};\n\n\tfunction xRange(mouseX) {\n\t\tvar vm = this._view;\n\t\treturn vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\n\t}\n\n\tfunction yRange(mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? (Math.pow(mouseY - vm.y, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\n\t}\n\n\tChart.elements.Point = Chart.Element.extend({\n\t\tinRange: function(mouseX, mouseY) {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t\t},\n\n\t\tinLabelRange: xRange,\n\t\tinXRange: xRange,\n\t\tinYRange: yRange,\n\n\t\tgetCenterPoint: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\t\t},\n\t\tgetArea: function() {\n\t\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y,\n\t\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t\t};\n\t\t},\n\t\tdraw: function(chartArea) {\n\t\t\tvar vm = this._view;\n\t\t\tvar model = this._model;\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar pointStyle = vm.pointStyle;\n\t\t\tvar radius = vm.radius;\n\t\t\tvar x = vm.x;\n\t\t\tvar y = vm.y;\n\t\t\tvar color = Chart.helpers.color;\n\t\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\t\tvar ratio = 0;\n\n\t\t\tif (vm.skip) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t\t// Cliping for Points.\n\t\t\t// going out from inner charArea?\n\t\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right*errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom*errMargin < model.y))) {\n\t\t\t\t// Point fade out\n\t\t\t\tif (model.x < chartArea.left) {\n\t\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t\t} else if (chartArea.right*errMargin < model.x) {\n\t\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t\t} else if (chartArea.bottom*errMargin < model.y) {\n\t\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t\t}\n\t\t\t\tratio = Math.round(ratio*100) / 100;\n\t\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t\t}\n\n\t\t\tChart.canvasHelpers.drawPoint(ctx, pointStyle, radius, x, y);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.point.js\n// module id = 265\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar globalOpts = Chart.defaults.global;\n\n\tglobalOpts.elements.rectangle = {\n\t\tbackgroundColor: globalOpts.defaultColor,\n\t\tborderWidth: 0,\n\t\tborderColor: globalOpts.defaultColor,\n\t\tborderSkipped: 'bottom'\n\t};\n\n\tfunction isVertical(bar) {\n\t\treturn bar._view.width !== undefined;\n\t}\n\n\t/**\n\t * Helper function to get the bounds of the bar regardless of the orientation\n\t * @private\n\t * @param bar {Chart.Element.Rectangle} the bar\n\t * @return {Bounds} bounds of the bar\n\t */\n\tfunction getBarBounds(bar) {\n\t\tvar vm = bar._view;\n\t\tvar x1, x2, y1, y2;\n\n\t\tif (isVertical(bar)) {\n\t\t\t// vertical\n\t\t\tvar halfWidth = vm.width / 2;\n\t\t\tx1 = vm.x - halfWidth;\n\t\t\tx2 = vm.x + halfWidth;\n\t\t\ty1 = Math.min(vm.y, vm.base);\n\t\t\ty2 = Math.max(vm.y, vm.base);\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tvar halfHeight = vm.height / 2;\n\t\t\tx1 = Math.min(vm.x, vm.base);\n\t\t\tx2 = Math.max(vm.x, vm.base);\n\t\t\ty1 = vm.y - halfHeight;\n\t\t\ty2 = vm.y + halfHeight;\n\t\t}\n\n\t\treturn {\n\t\t\tleft: x1,\n\t\t\ttop: y1,\n\t\t\tright: x2,\n\t\t\tbottom: y2\n\t\t};\n\t}\n\n\tChart.elements.Rectangle = Chart.Element.extend({\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\t\tvar borderWidth = vm.borderWidth;\n\n\t\t\tif (!vm.horizontal) {\n\t\t\t\t// bar\n\t\t\t\tleft = vm.x - vm.width / 2;\n\t\t\t\tright = vm.x + vm.width / 2;\n\t\t\t\ttop = vm.y;\n\t\t\t\tbottom = vm.base;\n\t\t\t\tsignX = 1;\n\t\t\t\tsignY = bottom > top? 1: -1;\n\t\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t\t} else {\n\t\t\t\t// horizontal bar\n\t\t\t\tleft = vm.base;\n\t\t\t\tright = vm.x;\n\t\t\t\ttop = vm.y - vm.height / 2;\n\t\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\t\tsignX = right > left? 1: -1;\n\t\t\t\tsignY = 1;\n\t\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t\t}\n\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (borderWidth) {\n\t\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\t\tborderWidth = borderWidth > barSize? barSize: borderWidth;\n\t\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\t\tvar borderLeft = left + (borderSkipped !== 'left'? halfStroke * signX: 0);\n\t\t\t\tvar borderRight = right + (borderSkipped !== 'right'? -halfStroke * signX: 0);\n\t\t\t\tvar borderTop = top + (borderSkipped !== 'top'? halfStroke * signY: 0);\n\t\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom'? -halfStroke * signY: 0);\n\t\t\t\t// not become a vertical line?\n\t\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\t\ttop = borderTop;\n\t\t\t\t\tbottom = borderBottom;\n\t\t\t\t}\n\t\t\t\t// not become a horizontal line?\n\t\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\t\tleft = borderLeft;\n\t\t\t\t\tright = borderRight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tctx.fillStyle = vm.backgroundColor;\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.lineWidth = borderWidth;\n\n\t\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t\t// | 1 2 |\n\t\t\t// | 0 3 |\n\t\t\tvar corners = [\n\t\t\t\t[left, bottom],\n\t\t\t\t[left, top],\n\t\t\t\t[right, top],\n\t\t\t\t[right, bottom]\n\t\t\t];\n\n\t\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\t\tif (startCorner === -1) {\n\t\t\t\tstartCorner = 0;\n\t\t\t}\n\n\t\t\tfunction cornerAt(index) {\n\t\t\t\treturn corners[(startCorner + index) % 4];\n\t\t\t}\n\n\t\t\t// Draw rectangle from 'startCorner'\n\t\t\tvar corner = cornerAt(0);\n\t\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\t\tfor (var i = 1; i < 4; i++) {\n\t\t\t\tcorner = cornerAt(i);\n\t\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t\t}\n\n\t\t\tctx.fill();\n\t\t\tif (borderWidth) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm.base - vm.y;\n\t\t},\n\t\tinRange: function(mouseX, mouseY) {\n\t\t\tvar inRange = false;\n\n\t\t\tif (this._view) {\n\t\t\t\tvar bounds = getBarBounds(this);\n\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t\t}\n\n\t\t\treturn inRange;\n\t\t},\n\t\tinLabelRange: function(mouseX, mouseY) {\n\t\t\tvar me = this;\n\t\t\tif (!me._view) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar inRange = false;\n\t\t\tvar bounds = getBarBounds(me);\n\n\t\t\tif (isVertical(me)) {\n\t\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t\t} else {\n\t\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t\t}\n\n\t\t\treturn inRange;\n\t\t},\n\t\tinXRange: function(mouseX) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t},\n\t\tinYRange: function(mouseY) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t},\n\t\tgetCenterPoint: function() {\n\t\t\tvar vm = this._view;\n\t\t\tvar x, y;\n\t\t\tif (isVertical(this)) {\n\t\t\t\tx = vm.x;\n\t\t\t\ty = (vm.y + vm.base) / 2;\n\t\t\t} else {\n\t\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\t\ty = vm.y;\n\t\t\t}\n\n\t\t\treturn {x: x, y: y};\n\t\t},\n\t\tgetArea: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t\t},\n\t\ttooltipPosition: function() {\n\t\t\tvar vm = this._view;\n\t\t\treturn {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\t\t}\n\t});\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/elements/element.rectangle.js\n// module id = 266\n// module chunks = 0","'use strict';\n\n// Chart.Platform implementation for targeting a web browser\nmodule.exports = function(Chart) {\n\tvar helpers = Chart.helpers;\n\n\t// DOM event types -> Chart.js event types.\n\t// Note: only events with different types are mapped.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events\n\tvar eventTypeMap = {\n\t\t// Touch events\n\t\ttouchstart: 'mousedown',\n\t\ttouchmove: 'mousemove',\n\t\ttouchend: 'mouseup',\n\n\t\t// Pointer events\n\t\tpointerenter: 'mouseenter',\n\t\tpointerdown: 'mousedown',\n\t\tpointermove: 'mousemove',\n\t\tpointerup: 'mouseup',\n\t\tpointerleave: 'mouseout',\n\t\tpointerout: 'mouseout'\n\t};\n\n\t/**\n\t * The \"used\" size is the final value of a dimension property after all calculations have\n\t * been performed. This method uses the computed style of `element` but returns undefined\n\t * if the computed style is not expressed in pixels. That can happen in some cases where\n\t * `element` has a size relative to its parent and this last one is not yet displayed,\n\t * for example because of `display: none` on a parent node.\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n\t * @returns {Number} Size in pixels or undefined if unknown.\n\t */\n\tfunction readUsedSize(element, property) {\n\t\tvar value = helpers.getStyle(element, property);\n\t\tvar matches = value && value.match(/(\\d+)px/);\n\t\treturn matches? Number(matches[1]) : undefined;\n\t}\n\n\t/**\n\t * Initializes the canvas style and render size without modifying the canvas display size,\n\t * since responsiveness is handled by the controller.resize() method. The config is used\n\t * to determine the aspect ratio to apply in case no explicit height has been specified.\n\t */\n\tfunction initCanvas(canvas, config) {\n\t\tvar style = canvas.style;\n\n\t\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\t\tvar renderHeight = canvas.getAttribute('height');\n\t\tvar renderWidth = canvas.getAttribute('width');\n\n\t\t// Chart.js modifies some canvas values that we want to restore on destroy\n\t\tcanvas._chartjs = {\n\t\t\tinitial: {\n\t\t\t\theight: renderHeight,\n\t\t\t\twidth: renderWidth,\n\t\t\t\tstyle: {\n\t\t\t\t\tdisplay: style.display,\n\t\t\t\t\theight: style.height,\n\t\t\t\t\twidth: style.width\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Force canvas to display as block to avoid extra space caused by inline\n\t\t// elements, which would interfere with the responsive resize process.\n\t\t// https://github.com/chartjs/Chart.js/issues/2538\n\t\tstyle.display = style.display || 'block';\n\n\t\tif (renderWidth === null || renderWidth === '') {\n\t\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.width = displayWidth;\n\t\t\t}\n\t\t}\n\n\t\tif (renderHeight === null || renderHeight === '') {\n\t\t\tif (canvas.style.height === '') {\n\t\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t\t} else {\n\t\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\t\tif (displayWidth !== undefined) {\n\t\t\t\t\tcanvas.height = displayHeight;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn canvas;\n\t}\n\n\tfunction createEvent(type, chart, x, y, native) {\n\t\treturn {\n\t\t\ttype: type,\n\t\t\tchart: chart,\n\t\t\tnative: native || null,\n\t\t\tx: x !== undefined? x : null,\n\t\t\ty: y !== undefined? y : null,\n\t\t};\n\t}\n\n\tfunction fromNativeEvent(event, chart) {\n\t\tvar type = eventTypeMap[event.type] || event.type;\n\t\tvar pos = helpers.getRelativePosition(event, chart);\n\t\treturn createEvent(type, chart, pos.x, pos.y, event);\n\t}\n\n\tfunction createResizer(handler) {\n\t\tvar iframe = document.createElement('iframe');\n\t\tiframe.className = 'chartjs-hidden-iframe';\n\t\tiframe.style.cssText =\n\t\t\t'display:block;'+\n\t\t\t'overflow:hidden;'+\n\t\t\t'border:0;'+\n\t\t\t'margin:0;'+\n\t\t\t'top:0;'+\n\t\t\t'left:0;'+\n\t\t\t'bottom:0;'+\n\t\t\t'right:0;'+\n\t\t\t'height:100%;'+\n\t\t\t'width:100%;'+\n\t\t\t'position:absolute;'+\n\t\t\t'pointer-events:none;'+\n\t\t\t'z-index:-1;';\n\n\t\t// Prevent the iframe to gain focus on tab.\n\t\t// https://github.com/chartjs/Chart.js/issues/3090\n\t\tiframe.tabIndex = -1;\n\n\t\t// If the iframe is re-attached to the DOM, the resize listener is removed because the\n\t\t// content is reloaded, so make sure to install the handler after the iframe is loaded.\n\t\t// https://github.com/chartjs/Chart.js/issues/3521\n\t\thelpers.addEvent(iframe, 'load', function() {\n\t\t\thelpers.addEvent(iframe.contentWindow || iframe, 'resize', handler);\n\n\t\t\t// The iframe size might have changed while loading, which can also\n\t\t\t// happen if the size has been changed while detached from the DOM.\n\t\t\thandler();\n\t\t});\n\n\t\treturn iframe;\n\t}\n\n\tfunction addResizeListener(node, listener, chart) {\n\t\tvar stub = node._chartjs = {\n\t\t\tticking: false\n\t\t};\n\n\t\t// Throttle the callback notification until the next animation frame.\n\t\tvar notify = function() {\n\t\t\tif (!stub.ticking) {\n\t\t\t\tstub.ticking = true;\n\t\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tif (stub.resizer) {\n\t\t\t\t\t\tstub.ticking = false;\n\t\t\t\t\t\treturn listener(createEvent('resize', chart));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t// Let's keep track of this added iframe and thus avoid DOM query when removing it.\n\t\tstub.resizer = createResizer(notify);\n\n\t\tnode.insertBefore(stub.resizer, node.firstChild);\n\t}\n\n\tfunction removeResizeListener(node) {\n\t\tif (!node || !node._chartjs) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar resizer = node._chartjs.resizer;\n\t\tif (resizer) {\n\t\t\tresizer.parentNode.removeChild(resizer);\n\t\t\tnode._chartjs.resizer = null;\n\t\t}\n\n\t\tdelete node._chartjs;\n\t}\n\n\treturn {\n\t\tacquireContext: function(item, config) {\n\t\t\tif (typeof item === 'string') {\n\t\t\t\titem = document.getElementById(item);\n\t\t\t} else if (item.length) {\n\t\t\t\t// Support for array based queries (such as jQuery)\n\t\t\t\titem = item[0];\n\t\t\t}\n\n\t\t\tif (item && item.canvas) {\n\t\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\t\titem = item.canvas;\n\t\t\t}\n\n\t\t\tif (item instanceof HTMLCanvasElement) {\n\t\t\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tvar context = item.getContext && item.getContext('2d');\n\t\t\t\tif (context instanceof CanvasRenderingContext2D) {\n\t\t\t\t\tinitCanvas(item, config);\n\t\t\t\t\treturn context;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\n\t\treleaseContext: function(context) {\n\t\t\tvar canvas = context.canvas;\n\t\t\tif (!canvas._chartjs) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar initial = canvas._chartjs.initial;\n\t\t\t['height', 'width'].forEach(function(prop) {\n\t\t\t\tvar value = initial[prop];\n\t\t\t\tif (value === undefined || value === null) {\n\t\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t\t} else {\n\t\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\t\tcanvas.style[key] = value;\n\t\t\t});\n\n\t\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t\tcanvas.width = canvas.width;\n\n\t\t\tdelete canvas._chartjs;\n\t\t},\n\n\t\taddEventListener: function(chart, type, listener) {\n\t\t\tvar canvas = chart.chart.canvas;\n\t\t\tif (type === 'resize') {\n\t\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\t\taddResizeListener(canvas.parentNode, listener, chart.chart);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar stub = listener._chartjs || (listener._chartjs = {});\n\t\t\tvar proxies = stub.proxies || (stub.proxies = {});\n\t\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\t\tlistener(fromNativeEvent(event, chart.chart));\n\t\t\t};\n\n\t\t\thelpers.addEvent(canvas, type, proxy);\n\t\t},\n\n\t\tremoveEventListener: function(chart, type, listener) {\n\t\t\tvar canvas = chart.chart.canvas;\n\t\t\tif (type === 'resize') {\n\t\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\t\tremoveResizeListener(canvas.parentNode, listener);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar stub = listener._chartjs || {};\n\t\t\tvar proxies = stub.proxies || {};\n\t\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\t\tif (!proxy) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thelpers.removeEvent(canvas, type, proxy);\n\t\t}\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/platforms/platform.dom.js\n// module id = 267\n// module chunks = 0","'use strict';\n\n// By default, select the browser (DOM) platform.\n// @TODO Make possible to select another platform at build time.\nvar implementation = require('./platform.dom.js');\n\nmodule.exports = function(Chart) {\n\t/**\n\t * @namespace Chart.platform\n\t * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n\t * @since 2.4.0\n\t */\n\tChart.platform = {\n\t\t/**\n\t\t * Called at chart construction time, returns a context2d instance implementing\n\t\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t\t * @param {Object} options - The chart options\n\t\t * @returns {CanvasRenderingContext2D} context2d instance\n\t\t */\n\t\tacquireContext: function() {},\n\n\t\t/**\n\t\t * Called at chart destruction time, releases any resources associated to the context\n\t\t * previously returned by the acquireContext() method.\n\t\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t\t * @returns {Boolean} true if the method succeeded, else false\n\t\t */\n\t\treleaseContext: function() {},\n\n\t\t/**\n\t\t * Registers the specified listener on the given chart.\n\t\t * @param {Chart} chart - Chart from which to listen for event\n\t\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t\t * @param {Function} listener - Receives a notification (an object that implements\n\t\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t\t */\n\t\taddEventListener: function() {},\n\n\t\t/**\n\t\t * Removes the specified listener previously registered with addEventListener.\n\t\t * @param {Chart} chart -Chart from which to remove the listener\n\t\t * @param {String} type - The ({@link IEvent}) type to remove\n\t\t * @param {Function} listener - The listener function to remove from the event target.\n\t\t */\n\t\tremoveEventListener: function() {}\n\t};\n\n\t/**\n\t * @interface IPlatform\n\t * Allows abstracting platform dependencies away from the chart\n\t * @borrows Chart.platform.acquireContext as acquireContext\n\t * @borrows Chart.platform.releaseContext as releaseContext\n\t * @borrows Chart.platform.addEventListener as addEventListener\n\t * @borrows Chart.platform.removeEventListener as removeEventListener\n\t */\n\n\t/**\n\t * @interface IEvent\n\t * @prop {String} type - The event type name, possible values are:\n\t * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n\t * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n\t * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n\t * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n\t * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n\t */\n\n\tChart.helpers.extend(Chart.platform, implementation(Chart));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/platforms/platform.js\n// module id = 268\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\t\t// Implement this so that\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = helpers.indexOf(labels, me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index, datasetIndex, includeOffset) {\n\t\t\tvar me = this;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\n\t\t\tif (value !== undefined && isNaN(index)) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset || me.maxIndex === me.minIndex && includeOffset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (me.options.gridLines.offsetGridLines && includeOffset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index, includeOffset) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (me.options.gridLines.offsetGridLines) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.category.js\n// module id = 269\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Chart.Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t\treturn Math.round(pixel);\n\t\t\t}\n\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\treturn Math.round(pixel);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.linear.js\n// module id = 270\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers,\n\t\tnoop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.linear(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.linearbase.js\n// module id = 271\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Chart.Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tvalues[index] = 100;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Don't need to split positive and negative since the log scale can't handle a 0 crossing\n\t\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = getValueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = getValueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = 1;\n\t\t\t\t\tme.max = 10;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = Chart.Ticks.generators.logarithmic(generationOptions, me);\n\n\t\t\tif (!me.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tticks.reverse();\n\t\t\t}\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar innerDimension;\n\t\t\tvar pixel;\n\n\t\t\tvar start = me.start;\n\t\t\tvar newVal = +me.getRightValue(value);\n\t\t\tvar range;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0\n\t\t\t\tif (newVal === 0) {\n\t\t\t\t\tpixel = me.left;\n\t\t\t\t} else {\n\t\t\t\t\tinnerDimension = me.width;\n\t\t\t\t\tpixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Bottom - top since pixels increase downward on a screen\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tif (start === 0 && !tickOpts.reverse) {\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(me.minNotZero);\n\t\t\t\t\tif (newVal === start) {\n\t\t\t\t\t\tpixel = me.bottom;\n\t\t\t\t\t} else if (newVal === me.minNotZero) {\n\t\t\t\t\t\tpixel = me.bottom - innerDimension * 0.02;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpixel = me.bottom - innerDimension * 0.02 - (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\n\t\t\t\t\t}\n\t\t\t\t} else if (me.end === 0 && tickOpts.reverse) {\n\t\t\t\t\trange = helpers.log10(me.start) - helpers.log10(me.minNotZero);\n\t\t\t\t\tif (newVal === me.end) {\n\t\t\t\t\t\tpixel = me.top;\n\t\t\t\t\t} else if (newVal === me.minNotZero) {\n\t\t\t\t\t\tpixel = me.top + innerDimension * 0.02;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpixel = me.top + innerDimension * 0.02 + (innerDimension * 0.98/ range * (helpers.log10(newVal)-helpers.log10(me.minNotZero)));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trange = helpers.log10(me.end) - helpers.log10(start);\n\t\t\t\t\tinnerDimension = me.height;\n\t\t\t\t\tpixel = me.bottom - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar range = helpers.log10(me.end) - helpers.log10(me.start);\n\t\t\tvar value, innerDimension;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = me.start * Math.pow(10, (pixel - me.left) * range / innerDimension);\n\t\t\t} else {  // todo: if start === 0\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = Math.pow(10, (me.bottom - pixel) * range / innerDimension) / me.start;\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.logarithmic.js\n// module id = 272\n// module chunks = 0","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar globalDefaults = Chart.defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tlineArc: false,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Chart.Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\treturn !scale.options.lineArc ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.getValueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.getValueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.getValueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tl: scale.width,\n\t\t\tr: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i;\n\t\tvar textSize;\n\t\tvar pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty+= spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\t\t\t// Extra 3px out for some label spacing\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = getValueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tctx.font = plFont.font;\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.getValueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.getValueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.lineArc) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.lineArc) {\n\t\t\t\tfit(this);\n\t\t\t} else {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea,\n\t\t\t\tmaxLeft = leftMovement + me.drawingArea,\n\t\t\t\tmaxTop = topMovement + me.drawingArea,\n\t\t\t\tmaxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero? 0:\n\t\t\t\tmin < 0 && max < 0? max :\n\t\t\t\tmin > 0 && max > 0? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar getValueOrDefault = helpers.getValueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || opts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\t\t\t\t\t\tvar yHeight = me.yCenter - yCenterOffset;\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = getValueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\tme.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\tyHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, me.xCenter, yHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (!opts.lineArc) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.radialLinear.js\n// module id = 273\n// module chunks = 0","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof(moment) === 'function' ? moment : window.moment;\n\nmodule.exports = function(Chart) {\n\n\tvar helpers = Chart.helpers;\n\tvar time = {\n\t\tunits: [{\n\t\t\tname: 'millisecond',\n\t\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t\t}, {\n\t\t\tname: 'second',\n\t\t\tsteps: [1, 2, 5, 10, 30]\n\t\t}, {\n\t\t\tname: 'minute',\n\t\t\tsteps: [1, 2, 5, 10, 30]\n\t\t}, {\n\t\t\tname: 'hour',\n\t\t\tsteps: [1, 2, 3, 6, 12]\n\t\t}, {\n\t\t\tname: 'day',\n\t\t\tsteps: [1, 2, 5]\n\t\t}, {\n\t\t\tname: 'week',\n\t\t\tmaxStep: 4\n\t\t}, {\n\t\t\tname: 'month',\n\t\t\tmaxStep: 3\n\t\t}, {\n\t\t\tname: 'quarter',\n\t\t\tmaxStep: 4\n\t\t}, {\n\t\t\tname: 'year',\n\t\t\tmaxStep: false\n\t\t}]\n\t};\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\thour: 'MMM D, hA', // Sept 4, 5PM\n\t\t\t\tday: 'll', // Sep 4 2015\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t}\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\t\tgetLabelMoment: function(datasetIndex, index) {\n\t\t\tif (datasetIndex === null || index === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (typeof this.labelMoments[datasetIndex] !== 'undefined') {\n\t\t\t\treturn this.labelMoments[datasetIndex][index];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tgetLabelDiff: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tif (datasetIndex === null || index === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (me.labelDiffs === undefined) {\n\t\t\t\tme.buildLabelDiffs();\n\t\t\t}\n\n\t\t\tif (typeof me.labelDiffs[datasetIndex] !== 'undefined') {\n\t\t\t\treturn me.labelDiffs[datasetIndex][index];\n\t\t\t}\n\n\t\t\treturn null;\n\t\t},\n\t\tgetMomentStartOf: function(tick) {\n\t\t\tvar me = this;\n\t\t\tif (me.options.time.unit === 'week' && me.options.time.isoWeekday !== false) {\n\t\t\t\treturn tick.clone().startOf('isoWeek').isoWeekday(me.options.time.isoWeekday);\n\t\t\t}\n\t\t\treturn tick.clone().startOf(me.tickUnit);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tme.labelMoments = [];\n\n\t\t\t// Only parse these once. If the dataset does not have data as x,y pairs, we will use\n\t\t\t// these\n\t\t\tvar scaleLabelMoments = [];\n\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\n\t\t\t\thelpers.each(me.chart.data.labels, function(label) {\n\t\t\t\t\tvar labelMoment = me.parseTime(label);\n\n\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscaleLabelMoments.push(labelMoment);\n\t\t\t\t\t}\n\t\t\t\t}, me);\n\n\t\t\t\tme.firstTick = moment.min.call(me, scaleLabelMoments);\n\t\t\t\tme.lastTick = moment.max.call(me, scaleLabelMoments);\n\t\t\t} else {\n\t\t\t\tme.firstTick = null;\n\t\t\t\tme.lastTick = null;\n\t\t\t}\n\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar momentsForDataset = [];\n\t\t\t\tvar datasetVisible = me.chart.isDatasetVisible(datasetIndex);\n\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\n\t\t\t\t\thelpers.each(dataset.data, function(value) {\n\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\n\n\t\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmomentsForDataset.push(labelMoment);\n\n\t\t\t\t\t\t\tif (datasetVisible) {\n\t\t\t\t\t\t\t\t// May have gone outside the scale ranges, make sure we keep the first and last ticks updated\n\t\t\t\t\t\t\t\tme.firstTick = me.firstTick !== null ? moment.min(me.firstTick, labelMoment) : labelMoment;\n\t\t\t\t\t\t\t\tme.lastTick = me.lastTick !== null ? moment.max(me.lastTick, labelMoment) : labelMoment;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, me);\n\t\t\t\t} else {\n\t\t\t\t\t// We have no labels. Use the ones from the scale\n\t\t\t\t\tmomentsForDataset = scaleLabelMoments;\n\t\t\t\t}\n\n\t\t\t\tme.labelMoments.push(momentsForDataset);\n\t\t\t}, me);\n\n\t\t\t// Set these after we've done all the data\n\t\t\tif (me.options.time.min) {\n\t\t\t\tme.firstTick = me.parseTime(me.options.time.min);\n\t\t\t}\n\n\t\t\tif (me.options.time.max) {\n\t\t\t\tme.lastTick = me.parseTime(me.options.time.max);\n\t\t\t}\n\n\t\t\t// We will modify these, so clone for later\n\t\t\tme.firstTick = (me.firstTick || moment()).clone();\n\t\t\tme.lastTick = (me.lastTick || moment()).clone();\n\t\t},\n\t\tbuildLabelDiffs: function() {\n\t\t\tvar me = this;\n\t\t\tme.labelDiffs = [];\n\t\t\tvar scaleLabelDiffs = [];\n\t\t\t// Parse common labels once\n\t\t\tif (me.chart.data.labels && me.chart.data.labels.length > 0) {\n\t\t\t\thelpers.each(me.chart.data.labels, function(label) {\n\t\t\t\t\tvar labelMoment = me.parseTime(label);\n\n\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tscaleLabelDiffs.push(labelMoment.diff(me.firstTick, me.tickUnit, true));\n\t\t\t\t\t}\n\t\t\t\t}, me);\n\t\t\t}\n\n\t\t\thelpers.each(me.chart.data.datasets, function(dataset) {\n\t\t\t\tvar diffsForDataset = [];\n\n\t\t\t\tif (typeof dataset.data[0] === 'object' && dataset.data[0] !== null) {\n\t\t\t\t\thelpers.each(dataset.data, function(value) {\n\t\t\t\t\t\tvar labelMoment = me.parseTime(me.getRightValue(value));\n\n\t\t\t\t\t\tif (labelMoment.isValid()) {\n\t\t\t\t\t\t\tif (me.options.time.round) {\n\t\t\t\t\t\t\t\tlabelMoment.startOf(me.options.time.round);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdiffsForDataset.push(labelMoment.diff(me.firstTick, me.tickUnit, true));\n\t\t\t\t\t\t}\n\t\t\t\t\t}, me);\n\t\t\t\t} else {\n\t\t\t\t\t// We have no labels. Use common ones\n\t\t\t\t\tdiffsForDataset = scaleLabelDiffs;\n\t\t\t\t}\n\n\t\t\t\tme.labelDiffs.push(diffsForDataset);\n\t\t\t}, me);\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\n\t\t\tme.ctx.save();\n\t\t\tvar tickFontSize = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n\t\t\tvar tickFontStyle = helpers.getValueOrDefault(me.options.ticks.fontStyle, Chart.defaults.global.defaultFontStyle);\n\t\t\tvar tickFontFamily = helpers.getValueOrDefault(me.options.ticks.fontFamily, Chart.defaults.global.defaultFontFamily);\n\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\t\t\tme.ctx.font = tickLabelFont;\n\n\t\t\tme.ticks = [];\n\t\t\tme.unitScale = 1; // How much we scale the unit by, ie 2 means 2x unit per step\n\t\t\tme.scaleSizeInUnits = 0; // How large the scale is in the base unit (seconds, minutes, etc)\n\n\t\t\t// Set unit override if applicable\n\t\t\tif (me.options.time.unit) {\n\t\t\t\tme.tickUnit = me.options.time.unit || 'day';\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, 1);\n\t\t\t} else {\n\t\t\t\t// Determine the smallest needed unit of the time\n\t\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\t\t// Crude approximation of what the label length might be\n\t\t\t\tvar tempFirstLabel = me.tickFormatFunction(me.firstTick, 0, []);\n\t\t\t\tvar tickLabelWidth = me.ctx.measureText(tempFirstLabel).width;\n\t\t\t\tvar cosRotation = Math.cos(helpers.toRadians(me.options.ticks.maxRotation));\n\t\t\t\tvar sinRotation = Math.sin(helpers.toRadians(me.options.ticks.maxRotation));\n\t\t\t\ttickLabelWidth = (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t\t\tvar labelCapacity = innerWidth / (tickLabelWidth);\n\n\t\t\t\t// Start as small as possible\n\t\t\t\tme.tickUnit = me.options.time.minUnit;\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\tme.displayFormat = me.options.time.displayFormats[me.tickUnit];\n\n\t\t\t\tvar unitDefinitionIndex = 0;\n\t\t\t\tvar unitDefinition = time.units[unitDefinitionIndex];\n\n\t\t\t\t// While we aren't ideal and we don't have units left\n\t\t\t\twhile (unitDefinitionIndex < time.units.length) {\n\t\t\t\t\t// Can we scale this unit. If `false` we can scale infinitely\n\t\t\t\t\tme.unitScale = 1;\n\n\t\t\t\t\tif (helpers.isArray(unitDefinition.steps) && Math.ceil(me.scaleSizeInUnits / labelCapacity) < helpers.max(unitDefinition.steps)) {\n\t\t\t\t\t\t// Use one of the predefined steps\n\t\t\t\t\t\tfor (var idx = 0; idx < unitDefinition.steps.length; ++idx) {\n\t\t\t\t\t\t\tif (unitDefinition.steps[idx] >= Math.ceil(me.scaleSizeInUnits / labelCapacity)) {\n\t\t\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, unitDefinition.steps[idx]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if ((unitDefinition.maxStep === false) || (Math.ceil(me.scaleSizeInUnits / labelCapacity) < unitDefinition.maxStep)) {\n\t\t\t\t\t\t// We have a max step. Scale this unit\n\t\t\t\t\t\tme.unitScale = helpers.getValueOrDefault(me.options.time.unitStepSize, Math.ceil(me.scaleSizeInUnits / labelCapacity));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Move to the next unit up\n\t\t\t\t\t\t++unitDefinitionIndex;\n\t\t\t\t\t\tunitDefinition = time.units[unitDefinitionIndex];\n\n\t\t\t\t\t\tme.tickUnit = unitDefinition.name;\n\t\t\t\t\t\tvar leadingUnitBuffer = me.firstTick.diff(me.getMomentStartOf(me.firstTick), me.tickUnit, true);\n\t\t\t\t\t\tvar trailingUnitBuffer = me.getMomentStartOf(me.lastTick.clone().add(1, me.tickUnit)).diff(me.lastTick, me.tickUnit, true);\n\t\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true) + leadingUnitBuffer + trailingUnitBuffer;\n\t\t\t\t\t\tme.displayFormat = me.options.time.displayFormats[unitDefinition.name];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar roundedStart;\n\n\t\t\t// Only round the first tick if we have no hard minimum\n\t\t\tif (!me.options.time.min) {\n\t\t\t\tme.firstTick = me.getMomentStartOf(me.firstTick);\n\t\t\t\troundedStart = me.firstTick;\n\t\t\t} else {\n\t\t\t\troundedStart = me.getMomentStartOf(me.firstTick);\n\t\t\t}\n\n\t\t\t// Only round the last tick if we have no hard maximum\n\t\t\tif (!me.options.time.max) {\n\t\t\t\tvar roundedEnd = me.getMomentStartOf(me.lastTick);\n\t\t\t\tvar delta = roundedEnd.diff(me.lastTick, me.tickUnit, true);\n\t\t\t\tif (delta < 0) {\n\t\t\t\t\t// Do not use end of because we need me to be in the next time unit\n\t\t\t\t\tme.lastTick = me.getMomentStartOf(me.lastTick.add(1, me.tickUnit));\n\t\t\t\t} else if (delta >= 0) {\n\t\t\t\t\tme.lastTick = roundedEnd;\n\t\t\t\t}\n\n\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t}\n\n\t\t\t// Tick displayFormat override\n\t\t\tif (me.options.time.displayFormat) {\n\t\t\t\tme.displayFormat = me.options.time.displayFormat;\n\t\t\t}\n\n\t\t\t// first tick. will have been rounded correctly if options.time.min is not specified\n\t\t\tme.ticks.push(me.firstTick.clone());\n\n\t\t\t// For every unit in between the first and last moment, create a moment and add it to the ticks tick\n\t\t\tfor (var i = me.unitScale; i <= me.scaleSizeInUnits; i += me.unitScale) {\n\t\t\t\tvar newTick = roundedStart.clone().add(i, me.tickUnit);\n\n\t\t\t\t// Are we greater than the max time\n\t\t\t\tif (me.options.time.max && newTick.diff(me.lastTick, me.tickUnit, true) >= 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tme.ticks.push(newTick);\n\t\t\t}\n\n\t\t\t// Always show the right tick\n\t\t\tvar diff = me.ticks[me.ticks.length - 1].diff(me.lastTick, me.tickUnit);\n\t\t\tif (diff !== 0 || me.scaleSizeInUnits === 0) {\n\t\t\t\t// this is a weird case. If the <max> option is the same as the end option, we can't just diff the times because the tick was created from the roundedStart\n\t\t\t\t// but the last tick was not rounded.\n\t\t\t\tif (me.options.time.max) {\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.ticks[0], me.tickUnit, true);\n\t\t\t\t} else {\n\t\t\t\t\tme.ticks.push(me.lastTick.clone());\n\t\t\t\t\tme.scaleSizeInUnits = me.lastTick.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.ctx.restore();\n\n\t\t\t// Invalidate label diffs cache\n\t\t\tme.labelDiffs = undefined;\n\t\t},\n\t\t// Get tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar label = me.chart.data.labels && index < me.chart.data.labels.length ? me.chart.data.labels[index] : '';\n\t\t\tvar value = me.chart.data.datasets[datasetIndex].data[index];\n\n\t\t\tif (value !== null && typeof value === 'object') {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\n\t\t\t// Format nicely\n\t\t\tif (me.options.time.tooltipFormat) {\n\t\t\t\tlabel = me.parseTime(label).format(me.options.time.tooltipFormat);\n\t\t\t}\n\n\t\t\treturn label;\n\t\t},\n\t\t// Function to format an individual tick mark\n\t\ttickFormatFunction: function(tick, index, ticks) {\n\t\t\tvar formattedTick = tick.format(this.displayFormat);\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\tif (callback) {\n\t\t\t\treturn callback(formattedTick, index, ticks);\n\t\t\t}\n\t\t\treturn formattedTick;\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.tickMoments = me.ticks;\n\t\t\tme.ticks = me.ticks.map(me.tickFormatFunction, me);\n\t\t},\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar offset = null;\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\toffset = me.getLabelDiff(datasetIndex, index);\n\t\t\t}\n\n\t\t\tif (offset === null) {\n\t\t\t\tif (!value || !value.isValid) {\n\t\t\t\t\t// not already a moment object\n\t\t\t\t\tvalue = me.parseTime(me.getRightValue(value));\n\t\t\t\t}\n\t\t\t\tif (value && value.isValid && value.isValid()) {\n\t\t\t\t\toffset = value.diff(me.firstTick, me.tickUnit, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (offset !== null) {\n\t\t\t\tvar decimal = offset !== 0 ? offset / me.scaleSizeInUnits : offset;\n\n\t\t\t\tif (me.isHorizontal()) {\n\t\t\t\t\tvar valueOffset = (me.width * decimal);\n\t\t\t\t\treturn me.left + Math.round(valueOffset);\n\t\t\t\t}\n\n\t\t\t\tvar heightOffset = (me.height * decimal);\n\t\t\t\treturn me.top + Math.round(heightOffset);\n\t\t\t}\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickMoments[index], null, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar innerDimension = me.isHorizontal() ? me.width : me.height;\n\t\t\tvar offset = (pixel - (me.isHorizontal() ? me.left : me.top)) / innerDimension;\n\t\t\toffset *= me.scaleSizeInUnits;\n\t\t\treturn me.firstTick.clone().add(moment.duration(offset, me.tickUnit).asSeconds(), 'seconds');\n\t\t},\n\t\tparseTime: function(label) {\n\t\t\tvar me = this;\n\t\t\tif (typeof me.options.time.parser === 'string') {\n\t\t\t\treturn moment(label, me.options.time.parser);\n\t\t\t}\n\t\t\tif (typeof me.options.time.parser === 'function') {\n\t\t\t\treturn me.options.time.parser(label);\n\t\t\t}\n\t\t\t// Date objects\n\t\t\tif (typeof label.getMonth === 'function' || typeof label === 'number') {\n\t\t\t\treturn moment(label);\n\t\t\t}\n\t\t\t// Moment support\n\t\t\tif (label.isValid && label.isValid()) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t\t// Custom parsing (return an instance of moment)\n\t\t\tif (typeof me.options.time.format !== 'string' && me.options.time.format.call) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser. See http://nnnick.github.io/Chart.js/docs-v2/#scales-time-scale');\n\t\t\t\treturn me.options.time.format(label);\n\t\t\t}\n\t\t\t// Moment format parsing\n\t\t\treturn moment(label, me.options.time.format);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chart.js/src/scales/scale.time.js\n// module id = 274\n// module chunks = 0","/* MIT license */\r\nvar colorNames = require('color-name');\r\n\r\nmodule.exports = {\r\n   getRgba: getRgba,\r\n   getHsla: getHsla,\r\n   getRgb: getRgb,\r\n   getHsl: getHsl,\r\n   getHwb: getHwb,\r\n   getAlpha: getAlpha,\r\n\r\n   hexString: hexString,\r\n   rgbString: rgbString,\r\n   rgbaString: rgbaString,\r\n   percentString: percentString,\r\n   percentaString: percentaString,\r\n   hslString: hslString,\r\n   hslaString: hslaString,\r\n   hwbString: hwbString,\r\n   keyword: keyword\r\n}\r\n\r\nfunction getRgba(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var abbr =  /^#([a-fA-F0-9]{3})$/,\r\n       hex =  /^#([a-fA-F0-9]{6})$/,\r\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n       keyword = /(\\w+)/;\r\n\r\n   var rgb = [0, 0, 0],\r\n       a = 1,\r\n       match = string.match(abbr);\r\n   if (match) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i] + match[i], 16);\r\n      }\r\n   }\r\n   else if (match = string.match(hex)) {\r\n      match = match[1];\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n      }\r\n   }\r\n   else if (match = string.match(rgba)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = parseInt(match[i + 1]);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(per)) {\r\n      for (var i = 0; i < rgb.length; i++) {\r\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n      }\r\n      a = parseFloat(match[4]);\r\n   }\r\n   else if (match = string.match(keyword)) {\r\n      if (match[1] == \"transparent\") {\r\n         return [0, 0, 0, 0];\r\n      }\r\n      rgb = colorNames[match[1]];\r\n      if (!rgb) {\r\n         return;\r\n      }\r\n   }\r\n\r\n   for (var i = 0; i < rgb.length; i++) {\r\n      rgb[i] = scale(rgb[i], 0, 255);\r\n   }\r\n   if (!a && a != 0) {\r\n      a = 1;\r\n   }\r\n   else {\r\n      a = scale(a, 0, 1);\r\n   }\r\n   rgb[3] = a;\r\n   return rgb;\r\n}\r\n\r\nfunction getHsla(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hsl);\r\n   if (match) {\r\n      var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          s = scale(parseFloat(match[2]), 0, 100),\r\n          l = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, s, l, a];\r\n   }\r\n}\r\n\r\nfunction getHwb(string) {\r\n   if (!string) {\r\n      return;\r\n   }\r\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n   var match = string.match(hwb);\r\n   if (match) {\r\n    var alpha = parseFloat(match[4]);\r\n      var h = scale(parseInt(match[1]), 0, 360),\r\n          w = scale(parseFloat(match[2]), 0, 100),\r\n          b = scale(parseFloat(match[3]), 0, 100),\r\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n      return [h, w, b, a];\r\n   }\r\n}\r\n\r\nfunction getRgb(string) {\r\n   var rgba = getRgba(string);\r\n   return rgba && rgba.slice(0, 3);\r\n}\r\n\r\nfunction getHsl(string) {\r\n  var hsla = getHsla(string);\r\n  return hsla && hsla.slice(0, 3);\r\n}\r\n\r\nfunction getAlpha(string) {\r\n   var vals = getRgba(string);\r\n   if (vals) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHsla(string)) {\r\n      return vals[3];\r\n   }\r\n   else if (vals = getHwb(string)) {\r\n      return vals[3];\r\n   }\r\n}\r\n\r\n// generators\r\nfunction hexString(rgb) {\r\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\r\n              + hexDouble(rgb[2]);\r\n}\r\n\r\nfunction rgbString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return rgbaString(rgba, alpha);\r\n   }\r\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n}\r\n\r\nfunction rgbaString(rgba, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n   }\r\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\r\n           + \", \" + alpha + \")\";\r\n}\r\n\r\nfunction percentString(rgba, alpha) {\r\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n      return percentaString(rgba, alpha);\r\n   }\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n\r\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n}\r\n\r\nfunction percentaString(rgba, alpha) {\r\n   var r = Math.round(rgba[0]/255 * 100),\r\n       g = Math.round(rgba[1]/255 * 100),\r\n       b = Math.round(rgba[2]/255 * 100);\r\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n}\r\n\r\nfunction hslString(hsla, alpha) {\r\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n      return hslaString(hsla, alpha);\r\n   }\r\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n}\r\n\r\nfunction hslaString(hsla, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n   }\r\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\r\n           + alpha + \")\";\r\n}\r\n\r\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n// (hwb have alpha optional & 1 is default value)\r\nfunction hwbString(hwb, alpha) {\r\n   if (alpha === undefined) {\r\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n   }\r\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\r\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n}\r\n\r\nfunction keyword(rgb) {\r\n  return reverseNames[rgb.slice(0, 3)];\r\n}\r\n\r\n// helpers\r\nfunction scale(num, min, max) {\r\n   return Math.min(Math.max(min, num), max);\r\n}\r\n\r\nfunction hexDouble(num) {\r\n  var str = num.toString(16).toUpperCase();\r\n  return (str.length < 2) ? \"0\" + str : str;\r\n}\r\n\r\n\r\n//create a list of reverse color names\r\nvar reverseNames = {};\r\nfor (var name in colorNames) {\r\n   reverseNames[colorNames[name]] = name;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color-string/color-string.js\n// module id = 275\n// module chunks = 0","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color/index.js\n// module id = 276\n// module chunks = 0","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color/~/color-convert/conversions.js\n// module id = 277\n// module chunks = 0","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chartjs-color/~/color-convert/index.js\n// module id = 278\n// module chunks = 0","module.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/color-name/index.js\n// module id = 279\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.css\n// module id = 280\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function (_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/camelize.js\n// module id = 282\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar camelize = require('./camelize');\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/camelizeStyleName.js\n// module id = 283\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/containsNode.js\n// module id = 284\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar invariant = require('./invariant');\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList\n  // in old versions of Safari).\n  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;\n\n  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;\n\n  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;\n\n  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */\nfunction hasArrayNature(obj) {\n  return (\n    // not null/false\n    !!obj && (\n    // arrays are objects, NodeLists are functions in Safari\n    typeof obj == 'object' || typeof obj == 'function') &&\n    // quacks like an array\n    'length' in obj &&\n    // not window\n    !('setInterval' in obj) &&\n    // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    typeof obj.nodeType != 'number' && (\n    // a real array\n    Array.isArray(obj) ||\n    // arguments\n    'callee' in obj ||\n    // HTMLCollection/NodeList\n    'item' in obj)\n  );\n}\n\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */\nfunction createArrayFromMixed(obj) {\n  if (!hasArrayNature(obj)) {\n    return [obj];\n  } else if (Array.isArray(obj)) {\n    return obj.slice();\n  } else {\n    return toArray(obj);\n  }\n}\n\nmodule.exports = createArrayFromMixed;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/createArrayFromMixed.js\n// module id = 285\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/*eslint-disable fb-www/unsafe-html*/\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar createArrayFromMixed = require('./createArrayFromMixed');\nvar getMarkupWrap = require('./getMarkupWrap');\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = Array.from(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/createNodesFromMarkup.js\n// module id = 286\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/*eslint-disable fb-www/unsafe-html */\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\n\nvar shouldWrap = {};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap\n};\n\n// Initialize the SVG elements since we know they'll always need to be wrapped\n// consistently. If they are created inside a <div> they will be initialized in\n// the wrong namespace (and will not display).\nvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\nsvgElements.forEach(function (nodeName) {\n  markupWrap[nodeName] = svgWrap;\n  shouldWrap[nodeName] = true;\n});\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\nmodule.exports = getMarkupWrap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/getMarkupWrap.js\n// module id = 287\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\n\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable.Window && scrollable instanceof scrollable.Window) {\n    return {\n      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,\n      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/getUnboundedScrollPosition.js\n// module id = 288\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/hyphenate.js\n// module id = 289\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar hyphenate = require('./hyphenate');\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/hyphenateStyleName.js\n// module id = 290\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/isNode.js\n// module id = 291\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/isTextNode.js\n// module id = 292\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n */\n\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/memoizeStringOnly.js\n// module id = 293\n// module chunks = 0","var map = {\n\t\"./af\": 62,\n\t\"./af.js\": 62,\n\t\"./ar\": 69,\n\t\"./ar-dz\": 63,\n\t\"./ar-dz.js\": 63,\n\t\"./ar-kw\": 64,\n\t\"./ar-kw.js\": 64,\n\t\"./ar-ly\": 65,\n\t\"./ar-ly.js\": 65,\n\t\"./ar-ma\": 66,\n\t\"./ar-ma.js\": 66,\n\t\"./ar-sa\": 67,\n\t\"./ar-sa.js\": 67,\n\t\"./ar-tn\": 68,\n\t\"./ar-tn.js\": 68,\n\t\"./ar.js\": 69,\n\t\"./az\": 70,\n\t\"./az.js\": 70,\n\t\"./be\": 71,\n\t\"./be.js\": 71,\n\t\"./bg\": 72,\n\t\"./bg.js\": 72,\n\t\"./bn\": 73,\n\t\"./bn.js\": 73,\n\t\"./bo\": 74,\n\t\"./bo.js\": 74,\n\t\"./br\": 75,\n\t\"./br.js\": 75,\n\t\"./bs\": 76,\n\t\"./bs.js\": 76,\n\t\"./ca\": 77,\n\t\"./ca.js\": 77,\n\t\"./cs\": 78,\n\t\"./cs.js\": 78,\n\t\"./cv\": 79,\n\t\"./cv.js\": 79,\n\t\"./cy\": 80,\n\t\"./cy.js\": 80,\n\t\"./da\": 81,\n\t\"./da.js\": 81,\n\t\"./de\": 84,\n\t\"./de-at\": 82,\n\t\"./de-at.js\": 82,\n\t\"./de-ch\": 83,\n\t\"./de-ch.js\": 83,\n\t\"./de.js\": 84,\n\t\"./dv\": 85,\n\t\"./dv.js\": 85,\n\t\"./el\": 86,\n\t\"./el.js\": 86,\n\t\"./en-au\": 87,\n\t\"./en-au.js\": 87,\n\t\"./en-ca\": 88,\n\t\"./en-ca.js\": 88,\n\t\"./en-gb\": 89,\n\t\"./en-gb.js\": 89,\n\t\"./en-ie\": 90,\n\t\"./en-ie.js\": 90,\n\t\"./en-nz\": 91,\n\t\"./en-nz.js\": 91,\n\t\"./eo\": 92,\n\t\"./eo.js\": 92,\n\t\"./es\": 94,\n\t\"./es-do\": 93,\n\t\"./es-do.js\": 93,\n\t\"./es.js\": 94,\n\t\"./et\": 95,\n\t\"./et.js\": 95,\n\t\"./eu\": 96,\n\t\"./eu.js\": 96,\n\t\"./fa\": 97,\n\t\"./fa.js\": 97,\n\t\"./fi\": 98,\n\t\"./fi.js\": 98,\n\t\"./fo\": 99,\n\t\"./fo.js\": 99,\n\t\"./fr\": 102,\n\t\"./fr-ca\": 100,\n\t\"./fr-ca.js\": 100,\n\t\"./fr-ch\": 101,\n\t\"./fr-ch.js\": 101,\n\t\"./fr.js\": 102,\n\t\"./fy\": 103,\n\t\"./fy.js\": 103,\n\t\"./gd\": 104,\n\t\"./gd.js\": 104,\n\t\"./gl\": 105,\n\t\"./gl.js\": 105,\n\t\"./gom-latn\": 106,\n\t\"./gom-latn.js\": 106,\n\t\"./he\": 107,\n\t\"./he.js\": 107,\n\t\"./hi\": 108,\n\t\"./hi.js\": 108,\n\t\"./hr\": 109,\n\t\"./hr.js\": 109,\n\t\"./hu\": 110,\n\t\"./hu.js\": 110,\n\t\"./hy-am\": 111,\n\t\"./hy-am.js\": 111,\n\t\"./id\": 112,\n\t\"./id.js\": 112,\n\t\"./is\": 113,\n\t\"./is.js\": 113,\n\t\"./it\": 114,\n\t\"./it.js\": 114,\n\t\"./ja\": 115,\n\t\"./ja.js\": 115,\n\t\"./jv\": 116,\n\t\"./jv.js\": 116,\n\t\"./ka\": 117,\n\t\"./ka.js\": 117,\n\t\"./kk\": 118,\n\t\"./kk.js\": 118,\n\t\"./km\": 119,\n\t\"./km.js\": 119,\n\t\"./kn\": 120,\n\t\"./kn.js\": 120,\n\t\"./ko\": 121,\n\t\"./ko.js\": 121,\n\t\"./ky\": 122,\n\t\"./ky.js\": 122,\n\t\"./lb\": 123,\n\t\"./lb.js\": 123,\n\t\"./lo\": 124,\n\t\"./lo.js\": 124,\n\t\"./lt\": 125,\n\t\"./lt.js\": 125,\n\t\"./lv\": 126,\n\t\"./lv.js\": 126,\n\t\"./me\": 127,\n\t\"./me.js\": 127,\n\t\"./mi\": 128,\n\t\"./mi.js\": 128,\n\t\"./mk\": 129,\n\t\"./mk.js\": 129,\n\t\"./ml\": 130,\n\t\"./ml.js\": 130,\n\t\"./mr\": 131,\n\t\"./mr.js\": 131,\n\t\"./ms\": 133,\n\t\"./ms-my\": 132,\n\t\"./ms-my.js\": 132,\n\t\"./ms.js\": 133,\n\t\"./my\": 134,\n\t\"./my.js\": 134,\n\t\"./nb\": 135,\n\t\"./nb.js\": 135,\n\t\"./ne\": 136,\n\t\"./ne.js\": 136,\n\t\"./nl\": 138,\n\t\"./nl-be\": 137,\n\t\"./nl-be.js\": 137,\n\t\"./nl.js\": 138,\n\t\"./nn\": 139,\n\t\"./nn.js\": 139,\n\t\"./pa-in\": 140,\n\t\"./pa-in.js\": 140,\n\t\"./pl\": 141,\n\t\"./pl.js\": 141,\n\t\"./pt\": 143,\n\t\"./pt-br\": 142,\n\t\"./pt-br.js\": 142,\n\t\"./pt.js\": 143,\n\t\"./ro\": 144,\n\t\"./ro.js\": 144,\n\t\"./ru\": 145,\n\t\"./ru.js\": 145,\n\t\"./sd\": 146,\n\t\"./sd.js\": 146,\n\t\"./se\": 147,\n\t\"./se.js\": 147,\n\t\"./si\": 148,\n\t\"./si.js\": 148,\n\t\"./sk\": 149,\n\t\"./sk.js\": 149,\n\t\"./sl\": 150,\n\t\"./sl.js\": 150,\n\t\"./sq\": 151,\n\t\"./sq.js\": 151,\n\t\"./sr\": 153,\n\t\"./sr-cyrl\": 152,\n\t\"./sr-cyrl.js\": 152,\n\t\"./sr.js\": 153,\n\t\"./ss\": 154,\n\t\"./ss.js\": 154,\n\t\"./sv\": 155,\n\t\"./sv.js\": 155,\n\t\"./sw\": 156,\n\t\"./sw.js\": 156,\n\t\"./ta\": 157,\n\t\"./ta.js\": 157,\n\t\"./te\": 158,\n\t\"./te.js\": 158,\n\t\"./tet\": 159,\n\t\"./tet.js\": 159,\n\t\"./th\": 160,\n\t\"./th.js\": 160,\n\t\"./tl-ph\": 161,\n\t\"./tl-ph.js\": 161,\n\t\"./tlh\": 162,\n\t\"./tlh.js\": 162,\n\t\"./tr\": 163,\n\t\"./tr.js\": 163,\n\t\"./tzl\": 164,\n\t\"./tzl.js\": 164,\n\t\"./tzm\": 166,\n\t\"./tzm-latn\": 165,\n\t\"./tzm-latn.js\": 165,\n\t\"./tzm.js\": 166,\n\t\"./uk\": 167,\n\t\"./uk.js\": 167,\n\t\"./ur\": 168,\n\t\"./ur.js\": 168,\n\t\"./uz\": 170,\n\t\"./uz-latn\": 169,\n\t\"./uz-latn.js\": 169,\n\t\"./uz.js\": 170,\n\t\"./vi\": 171,\n\t\"./vi.js\": 171,\n\t\"./x-pseudo\": 172,\n\t\"./x-pseudo.js\": 172,\n\t\"./yo\": 173,\n\t\"./yo.js\": 173,\n\t\"./zh-cn\": 174,\n\t\"./zh-cn.js\": 174,\n\t\"./zh-hk\": 175,\n\t\"./zh-hk.js\": 175,\n\t\"./zh-tw\": 176,\n\t\"./zh-tw.js\": 176\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 294;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale ^\\.\\/.*$\n// module id = 294\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._81 = 1;\n  p._65 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._81 === 3) {\n            val = val._65;\n          }\n          if (val._81 === 1) return res(i, val._65);\n          if (val._81 === 2) reject(val._65);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/es6-extensions.js\n// module id = 295\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._10 = null;\n  Promise._97 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._10 = function (promise) {\n    if (\n      promise._81 === 2 && // IS REJECTED\n      rejections[promise._72]\n    ) {\n      if (rejections[promise._72].logged) {\n        onHandled(promise._72);\n      } else {\n        clearTimeout(rejections[promise._72].timeout);\n      }\n      delete rejections[promise._72];\n    }\n  };\n  Promise._97 = function (promise, err) {\n    if (promise._45 === 0) { // not yet handled\n      promise._72 = id++;\n      rejections[promise._72] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._72),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/promise/lib/rejection-tracking.js\n// module id = 296\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== 'production') {\n  var invariant = require('fbjs/lib/invariant');\n  var warning = require('fbjs/lib/warning');\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/checkPropTypes.js\n// module id = 297\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\n\nmodule.exports = function() {\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  function shim() {\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithThrowingShims.js\n// module id = 298\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(\n            false,\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            warning(\n              false,\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `%s` prop on `%s`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n              propFullName,\n              componentName\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithTypeCheckers.js\n// module id = 299\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/lib/ReactPropTypesSecret.js\n// module id = 300\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./lib/ReactDOM');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 301\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ARIADOMPropertyConfig = {\n  Properties: {\n    // Global States and Properties\n    'aria-current': 0, // state\n    'aria-details': 0,\n    'aria-disabled': 0, // state\n    'aria-hidden': 0, // state\n    'aria-invalid': 0, // state\n    'aria-keyshortcuts': 0,\n    'aria-label': 0,\n    'aria-roledescription': 0,\n    // Widget Attributes\n    'aria-autocomplete': 0,\n    'aria-checked': 0,\n    'aria-expanded': 0,\n    'aria-haspopup': 0,\n    'aria-level': 0,\n    'aria-modal': 0,\n    'aria-multiline': 0,\n    'aria-multiselectable': 0,\n    'aria-orientation': 0,\n    'aria-placeholder': 0,\n    'aria-pressed': 0,\n    'aria-readonly': 0,\n    'aria-required': 0,\n    'aria-selected': 0,\n    'aria-sort': 0,\n    'aria-valuemax': 0,\n    'aria-valuemin': 0,\n    'aria-valuenow': 0,\n    'aria-valuetext': 0,\n    // Live Region Attributes\n    'aria-atomic': 0,\n    'aria-busy': 0,\n    'aria-live': 0,\n    'aria-relevant': 0,\n    // Drag-and-Drop Attributes\n    'aria-dropeffect': 0,\n    'aria-grabbed': 0,\n    // Relationship Attributes\n    'aria-activedescendant': 0,\n    'aria-colcount': 0,\n    'aria-colindex': 0,\n    'aria-colspan': 0,\n    'aria-controls': 0,\n    'aria-describedby': 0,\n    'aria-errormessage': 0,\n    'aria-flowto': 0,\n    'aria-labelledby': 0,\n    'aria-owns': 0,\n    'aria-posinset': 0,\n    'aria-rowcount': 0,\n    'aria-rowindex': 0,\n    'aria-rowspan': 0,\n    'aria-setsize': 0\n  },\n  DOMAttributeNames: {},\n  DOMPropertyNames: {}\n};\n\nmodule.exports = ARIADOMPropertyConfig;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ARIADOMPropertyConfig.js\n// module id = 302\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar focusNode = require('fbjs/lib/focusNode');\n\nvar AutoFocusUtils = {\n  focusDOMComponent: function () {\n    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));\n  }\n};\n\nmodule.exports = AutoFocusUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/AutoFocusUtils.js\n// module id = 303\n// module chunks = 0","/**\n * Copyright 2013-present Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar FallbackCompositionState = require('./FallbackCompositionState');\nvar SyntheticCompositionEvent = require('./SyntheticCompositionEvent');\nvar SyntheticInputEvent = require('./SyntheticInputEvent');\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\n\nvar documentMode = null;\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\n/**\n * Opera <= 12 includes TextEvent in window, but does not fire\n * text input events. Rely on keypress instead.\n */\nfunction isPresto() {\n  var opera = window.opera;\n  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\n}\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: 'onBeforeInput',\n      captured: 'onBeforeInputCapture'\n    },\n    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionEnd',\n      captured: 'onCompositionEndCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionStart',\n      captured: 'onCompositionStartCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: 'onCompositionUpdate',\n      captured: 'onCompositionUpdateCapture'\n    },\n    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n}\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case 'topCompositionStart':\n      return eventTypes.compositionStart;\n    case 'topCompositionEnd':\n      return eventTypes.compositionEnd;\n    case 'topCompositionUpdate':\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case 'topKeyUp':\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n    case 'topKeyDown':\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n    case 'topKeyPress':\n    case 'topMouseDown':\n    case 'topBlur':\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n// Track the current IME composition fallback object, if any.\nvar currentComposition = null;\n\n/**\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!currentComposition) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\n      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (currentComposition) {\n        fallbackData = currentComposition.getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case 'topCompositionEnd':\n      return getDataFromCustomEvent(nativeEvent);\n    case 'topKeyPress':\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case 'topTextInput':\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to blacklist it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  // If composition event is available, we extract a string only at\n  // compositionevent, otherwise extract it at fallback events.\n  if (currentComposition) {\n    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n      var chars = currentComposition.getData();\n      FallbackCompositionState.release(currentComposition);\n      currentComposition = null;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case 'topPaste':\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case 'topKeyPress':\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n        return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case 'topCompositionEnd':\n      return useFallbackCompositionData ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);\n\n  event.data = chars;\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];\n  }\n};\n\nmodule.exports = BeforeInputEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/BeforeInputEventPlugin.js\n// module id = 304\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar camelizeStyleName = require('fbjs/lib/camelizeStyleName');\nvar dangerousStyleValue = require('./dangerousStyleValue');\nvar hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');\nvar memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');\nvar warning = require('fbjs/lib/warning');\n\nvar processStyleName = memoizeStringOnly(function (styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar hasShorthandPropertyBug = false;\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  var tempStyle = document.createElement('div').style;\n  try {\n    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n    tempStyle.font = '';\n  } catch (e) {\n    hasShorthandPropertyBug = true;\n  }\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n  var warnedForNaNValue = false;\n\n  var warnHyphenatedStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnBadVendoredStyleName = function (name, owner) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value, owner) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon.%s ' + 'Try \"%s: %s\" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;\n  };\n\n  var warnStyleValueIsNaN = function (name, value, owner) {\n    if (warnedForNaNValue) {\n      return;\n    }\n\n    warnedForNaNValue = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;\n  };\n\n  var checkRenderMessage = function (owner) {\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' Check the render method of `' + name + '`.';\n      }\n    }\n    return '';\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   * @param {ReactDOMComponent} component\n   */\n  var warnValidStyle = function (name, value, component) {\n    var owner;\n    if (component) {\n      owner = component._currentElement._owner;\n    }\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name, owner);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name, owner);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value, owner);\n    }\n\n    if (typeof value === 'number' && isNaN(value)) {\n      warnStyleValueIsNaN(name, value, owner);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   * @return {?string}\n   */\n  createMarkupForStyles: function (styles, component) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styleValue, component);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   * @param {ReactDOMComponent} component\n   */\n  setValueForStyles: function (node, styles, component) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactInstrumentation.debugTool.onHostOperation({\n        instanceID: component._debugID,\n        type: 'update styles',\n        payload: styles\n      });\n    }\n\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styles[styleName], component);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);\n      if (styleName === 'float' || styleName === 'cssFloat') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nmodule.exports = CSSPropertyOperations;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/CSSPropertyOperations.js\n// module id = 305\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\nvar isEventSupported = require('./isEventSupported');\nvar isTextInputElement = require('./isTextInputElement');\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: 'onChange',\n      captured: 'onChangeCapture'\n    },\n    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementInst = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue(false);\n}\n\nfunction startWatchingForChangeEventIE8(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementInst = null;\n}\n\nfunction getTargetInstForChangeEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topChange') {\n    return targetInst;\n  }\n}\nfunction handleEventsForChangeEventIE8(topLevelType, target, targetInst) {\n  if (topLevelType === 'topFocus') {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(target, targetInst);\n  } else if (topLevelType === 'topBlur') {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events.\n  // IE10+ fire input events to often, such when a placeholder\n  // changes or when an input with a placeholder is focused.\n  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 11);\n}\n\n/**\n * (For IE <=11) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp = {\n  get: function () {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function (val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For IE <=11) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetInst) {\n  activeElement = target;\n  activeElementInst = targetInst;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\n  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n  // on DOM elements\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  if (activeElement.attachEvent) {\n    activeElement.attachEvent('onpropertychange', handlePropertyChange);\n  } else {\n    activeElement.addEventListener('propertychange', handlePropertyChange, false);\n  }\n}\n\n/**\n * (For IE <=11) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n\n  if (activeElement.detachEvent) {\n    activeElement.detachEvent('onpropertychange', handlePropertyChange);\n  } else {\n    activeElement.removeEventListener('propertychange', handlePropertyChange, false);\n  }\n\n  activeElement = null;\n  activeElementInst = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For IE <=11) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetInstForInputEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topInput') {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return targetInst;\n  }\n}\n\nfunction handleEventsForInputEventIE(topLevelType, target, targetInst) {\n  if (topLevelType === 'topFocus') {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9-11, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(target, targetInst);\n  } else if (topLevelType === 'topBlur') {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetInstForInputEventIE(topLevelType, targetInst) {\n  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementInst;\n    }\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetInstForClickEvent(topLevelType, targetInst) {\n  if (topLevelType === 'topClick') {\n    return targetInst;\n  }\n}\n\nfunction handleControlledInputBlur(inst, node) {\n  // TODO: In IE, inst is occasionally null. Why?\n  if (inst == null) {\n    return;\n  }\n\n  // Fiber and ReactDOM keep wrapper state in separate places\n  var state = inst._wrapperState || node._wrapperState;\n\n  if (!state || !state.controlled || node.type !== 'number') {\n    return;\n  }\n\n  // If controlled, assign the value attribute to the current value on blur\n  var value = '' + node.value;\n  if (node.getAttribute('value') !== value) {\n    node.setAttribute('value', value);\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    var getTargetInstFunc, handleEventFunc;\n    if (shouldUseChangeEvent(targetNode)) {\n      if (doesChangeEventBubble) {\n        getTargetInstFunc = getTargetInstForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(targetNode)) {\n      if (isInputEventSupported) {\n        getTargetInstFunc = getTargetInstForInputEvent;\n      } else {\n        getTargetInstFunc = getTargetInstForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(targetNode)) {\n      getTargetInstFunc = getTargetInstForClickEvent;\n    }\n\n    if (getTargetInstFunc) {\n      var inst = getTargetInstFunc(topLevelType, targetInst);\n      if (inst) {\n        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);\n        event.type = 'change';\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, targetNode, targetInst);\n    }\n\n    // When blurring, set the value attribute for number inputs\n    if (topLevelType === 'topBlur') {\n      handleControlledInputBlur(targetInst, targetNode);\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ChangeEventPlugin.js\n// module id = 306\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\n\nvar Danger = {\n\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;\n    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;\n    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;\n\n    if (typeof markup === 'string') {\n      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n      oldChild.parentNode.replaceChild(newChild, oldChild);\n    } else {\n      DOMLazyTree.replaceChildWithTree(oldChild, markup);\n    }\n  }\n\n};\n\nmodule.exports = Danger;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/Danger.js\n// module id = 307\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\n\nvar DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];\n\nmodule.exports = DefaultEventPluginOrder;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/DefaultEventPluginOrder.js\n// module id = 308\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: 'onMouseEnter',\n    dependencies: ['topMouseOut', 'topMouseOver']\n  },\n  mouseLeave: {\n    registrationName: 'onMouseLeave',\n    dependencies: ['topMouseOut', 'topMouseOver']\n  }\n};\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   */\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (nativeEventTarget.window === nativeEventTarget) {\n      // `nativeEventTarget` is probably a window object.\n      win = nativeEventTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = nativeEventTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from;\n    var to;\n    if (topLevelType === 'topMouseOut') {\n      from = targetInst;\n      var related = nativeEvent.relatedTarget || nativeEvent.toElement;\n      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;\n    } else {\n      // Moving to a node from outside the window.\n      from = null;\n      to = targetInst;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);\n    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);\n\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);\n    leave.type = 'mouseleave';\n    leave.target = fromNode;\n    leave.relatedTarget = toNode;\n\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);\n    enter.type = 'mouseenter';\n    enter.target = toNode;\n    enter.relatedTarget = fromNode;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);\n\n    return [leave, enter];\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/EnterLeaveEventPlugin.js\n// module id = 309\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\n_assign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/FallbackCompositionState.js\n// module id = 310\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\n\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: 0,\n    acceptCharset: 0,\n    accessKey: 0,\n    action: 0,\n    allowFullScreen: HAS_BOOLEAN_VALUE,\n    allowTransparency: 0,\n    alt: 0,\n    // specifies target context for links with `preload` type\n    as: 0,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: 0,\n    // autoFocus is polyfilled/normalized by AutoFocusUtils\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    capture: HAS_BOOLEAN_VALUE,\n    cellPadding: 0,\n    cellSpacing: 0,\n    charSet: 0,\n    challenge: 0,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    cite: 0,\n    classID: 0,\n    className: 0,\n    cols: HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: 0,\n    content: 0,\n    contentEditable: 0,\n    contextMenu: 0,\n    controls: HAS_BOOLEAN_VALUE,\n    coords: 0,\n    crossOrigin: 0,\n    data: 0, // For `<object />` acts as `src`.\n    dateTime: 0,\n    'default': HAS_BOOLEAN_VALUE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: 0,\n    disabled: HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: 0,\n    encType: 0,\n    form: 0,\n    formAction: 0,\n    formEncType: 0,\n    formMethod: 0,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: 0,\n    frameBorder: 0,\n    headers: 0,\n    height: 0,\n    hidden: HAS_BOOLEAN_VALUE,\n    high: 0,\n    href: 0,\n    hrefLang: 0,\n    htmlFor: 0,\n    httpEquiv: 0,\n    icon: 0,\n    id: 0,\n    inputMode: 0,\n    integrity: 0,\n    is: 0,\n    keyParams: 0,\n    keyType: 0,\n    kind: 0,\n    label: 0,\n    lang: 0,\n    list: 0,\n    loop: HAS_BOOLEAN_VALUE,\n    low: 0,\n    manifest: 0,\n    marginHeight: 0,\n    marginWidth: 0,\n    max: 0,\n    maxLength: 0,\n    media: 0,\n    mediaGroup: 0,\n    method: 0,\n    min: 0,\n    minLength: 0,\n    // Caution; `option.selected` is not updated if `select.multiple` is\n    // disabled with `removeAttribute`.\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: 0,\n    nonce: 0,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    optimum: 0,\n    pattern: 0,\n    placeholder: 0,\n    playsInline: HAS_BOOLEAN_VALUE,\n    poster: 0,\n    preload: 0,\n    profile: 0,\n    radioGroup: 0,\n    readOnly: HAS_BOOLEAN_VALUE,\n    referrerPolicy: 0,\n    rel: 0,\n    required: HAS_BOOLEAN_VALUE,\n    reversed: HAS_BOOLEAN_VALUE,\n    role: 0,\n    rows: HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: HAS_NUMERIC_VALUE,\n    sandbox: 0,\n    scope: 0,\n    scoped: HAS_BOOLEAN_VALUE,\n    scrolling: 0,\n    seamless: HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: 0,\n    size: HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: 0,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: 0,\n    src: 0,\n    srcDoc: 0,\n    srcLang: 0,\n    srcSet: 0,\n    start: HAS_NUMERIC_VALUE,\n    step: 0,\n    style: 0,\n    summary: 0,\n    tabIndex: 0,\n    target: 0,\n    title: 0,\n    // Setting .type throws on non-<input> tags\n    type: 0,\n    useMap: 0,\n    value: 0,\n    width: 0,\n    wmode: 0,\n    wrap: 0,\n\n    /**\n     * RDFa Properties\n     */\n    about: 0,\n    datatype: 0,\n    inlist: 0,\n    prefix: 0,\n    // property is also supported for OpenGraph in meta tags.\n    property: 0,\n    resource: 0,\n    'typeof': 0,\n    vocab: 0,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: 0,\n    autoCorrect: 0,\n    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n    autoSave: 0,\n    // color is for Safari mask-icon link\n    color: 0,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: 0,\n    itemScope: HAS_BOOLEAN_VALUE,\n    itemType: 0,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: 0,\n    itemRef: 0,\n    // results show looking glass icon and recent searches on input\n    // search fields in WebKit/Blink\n    results: 0,\n    // IE-only attribute that specifies security restrictions on an iframe\n    // as an alternative to the sandbox attribute on IE<10\n    security: 0,\n    // IE-only attribute that controls focus behavior\n    unselectable: 0\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {},\n  DOMMutationMethods: {\n    value: function (node, value) {\n      if (value == null) {\n        return node.removeAttribute('value');\n      }\n\n      // Number inputs get special treatment due to some edge cases in\n      // Chrome. Let everything else assign the value attribute as normal.\n      // https://github.com/facebook/react/issues/7253#issuecomment-236074326\n      if (node.type !== 'number' || node.hasAttribute('value') === false) {\n        node.setAttribute('value', '' + value);\n      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {\n        // Don't assign an attribute if validation reports bad\n        // input. Chrome will clear the value. Additionally, don't\n        // operate on inputs that have focus, otherwise Chrome might\n        // strip off trailing decimal places and cause the user's\n        // cursor position to jump to the beginning of the input.\n        //\n        // In ReactDOMInput, we have an onBlur event that will trigger\n        // this function again when focus is lost.\n        node.setAttribute('value', '' + value);\n      }\n    }\n  }\n};\n\nmodule.exports = HTMLDOMPropertyConfig;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/HTMLDOMPropertyConfig.js\n// module id = 311\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactReconciler = require('./ReactReconciler');\n\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n\nfunction instantiateChild(childInstances, child, name, selfDebugID) {\n  // We found a component instance.\n  var keyUnique = childInstances[name] === undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    if (!ReactComponentTreeHook) {\n      ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n    }\n    if (!keyUnique) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n    }\n  }\n  if (child != null && keyUnique) {\n    childInstances[name] = instantiateReactComponent(child, true);\n  }\n}\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // 0 in production and for roots\n  ) {\n    if (nestedChildNodes == null) {\n      return null;\n    }\n    var childInstances = {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {\n        return instantiateChild(childInsts, child, name, selfDebugID);\n      }, childInstances);\n    } else {\n      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n    }\n    return childInstances;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextChildren Flat child element maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID // 0 in production and for roots\n  ) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    if (!nextChildren && !prevChildren) {\n      return;\n    }\n    var name;\n    var prevChild;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n          ReactReconciler.unmountComponent(prevChild, false);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(nextElement, true);\n        nextChildren[name] = nextChildInstance;\n        // Creating mount image now ensures refs are resolved in right order\n        // (see https://github.com/facebook/react/pull/7101 for explanation).\n        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);\n        mountImages.push(nextChildMountImage);\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        prevChild = prevChildren[name];\n        removedNodes[name] = ReactReconciler.getHostNode(prevChild);\n        ReactReconciler.unmountComponent(prevChild, false);\n      }\n    }\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function (renderedChildren, safely) {\n    for (var name in renderedChildren) {\n      if (renderedChildren.hasOwnProperty(name)) {\n        var renderedChild = renderedChildren[name];\n        ReactReconciler.unmountComponent(renderedChild, safely);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactChildReconciler.js\n// module id = 312\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactComponentBrowserEnvironment.js\n// module id = 313\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar React = require('react/lib/React');\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactErrorUtils = require('./ReactErrorUtils');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactNodeTypes = require('./ReactNodeTypes');\nvar ReactReconciler = require('./ReactReconciler');\n\nif (process.env.NODE_ENV !== 'production') {\n  var checkReactTypeSpec = require('./checkReactTypeSpec');\n}\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nvar CompositeTypes = {\n  ImpureClass: 0,\n  PureClass: 1,\n  StatelessFunctional: 2\n};\n\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function () {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  var element = Component(this.props, this.context, this.updater);\n  warnIfInvalidElement(Component, element);\n  return element;\n};\n\nfunction warnIfInvalidElement(Component, element) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;\n  }\n}\n\nfunction shouldConstruct(Component) {\n  return !!(Component.prototype && Component.prototype.isReactComponent);\n}\n\nfunction isPureComponent(Component) {\n  return !!(Component.prototype && Component.prototype.isPureReactComponent);\n}\n\n// Separated into a function to contain deoptimizations caused by try/finally.\nfunction measureLifeCyclePerf(fn, debugID, timerType) {\n  if (debugID === 0) {\n    // Top-level wrappers (see ReactMount) and empty components (see\n    // ReactDOMEmptyComponent) are invisible to hooks and devtools.\n    // Both are implementation details that should go away in the future.\n    return fn();\n  }\n\n  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);\n  try {\n    return fn();\n  } finally {\n    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);\n  }\n}\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponent = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function (element) {\n    this._currentElement = element;\n    this._rootNodeID = 0;\n    this._compositeType = null;\n    this._instance = null;\n    this._hostParent = null;\n    this._hostContainerInfo = null;\n\n    // See ReactUpdateQueue\n    this._updateBatchNumber = null;\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedNodeType = null;\n    this._renderedComponent = null;\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n\n    // ComponentWillUnmount shall only be called once\n    this._calledComponentWillUnmount = false;\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._warnedAboutRefsInRender = false;\n    }\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?object} hostParent\n   * @param {?object} hostContainerInfo\n   * @param {?object} context\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var _this = this;\n\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var publicProps = this._currentElement.props;\n    var publicContext = this._processContext(context);\n\n    var Component = this._currentElement.type;\n\n    var updateQueue = transaction.getUpdateQueue();\n\n    // Initialize the public class\n    var doConstruct = shouldConstruct(Component);\n    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);\n    var renderedElement;\n\n    // Support functional components\n    if (!doConstruct && (inst == null || inst.render == null)) {\n      renderedElement = inst;\n      warnIfInvalidElement(Component, renderedElement);\n      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;\n      inst = new StatelessComponent(Component);\n      this._compositeType = CompositeTypes.StatelessFunctional;\n    } else {\n      if (isPureComponent(Component)) {\n        this._compositeType = CompositeTypes.PureClass;\n      } else {\n        this._compositeType = CompositeTypes.ImpureClass;\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;\n      }\n\n      var propsMutated = inst.props !== publicProps;\n      var componentName = Component.displayName || Component.name || 'Component';\n\n      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\\'s constructor was passed.', componentName, componentName) : void 0;\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = updateQueue;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    var markup;\n    if (inst.unstable_handleError) {\n      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } else {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n\n    if (inst.componentDidMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(function () {\n            return inst.componentDidMount();\n          }, _this._debugID, 'componentDidMount');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n      }\n    }\n\n    return markup;\n  },\n\n  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      ReactCurrentOwner.current = this;\n      try {\n        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);\n    }\n  },\n\n  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {\n    var Component = this._currentElement.type;\n\n    if (doConstruct) {\n      if (process.env.NODE_ENV !== 'production') {\n        return measureLifeCyclePerf(function () {\n          return new Component(publicProps, publicContext, updateQueue);\n        }, this._debugID, 'ctor');\n      } else {\n        return new Component(publicProps, publicContext, updateQueue);\n      }\n    }\n\n    // This can still be an instance in case of factory components\n    // but we'll count this as time spent rendering as the more common case.\n    if (process.env.NODE_ENV !== 'production') {\n      return measureLifeCyclePerf(function () {\n        return Component(publicProps, publicContext, updateQueue);\n      }, this._debugID, 'render');\n    } else {\n      return Component(publicProps, publicContext, updateQueue);\n    }\n  },\n\n  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var markup;\n    var checkpoint = transaction.checkpoint();\n    try {\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    } catch (e) {\n      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint\n      transaction.rollback(checkpoint);\n      this._instance.unstable_handleError(e);\n      if (this._pendingStateQueue) {\n        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);\n      }\n      checkpoint = transaction.checkpoint();\n\n      this._renderedComponent.unmountComponent(true);\n      transaction.rollback(checkpoint);\n\n      // Try again - we've informed the component about the error, so they can render an error message this time.\n      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).\n      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);\n    }\n    return markup;\n  },\n\n  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {\n    var inst = this._instance;\n\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (inst.componentWillMount) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillMount();\n        }, debugID, 'componentWillMount');\n      } else {\n        inst.componentWillMount();\n      }\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n\n    var nodeType = ReactNodeTypes.getType(renderedElement);\n    this._renderedNodeType = nodeType;\n    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n    );\n    this._renderedComponent = child;\n\n    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (debugID !== 0) {\n        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n      }\n    }\n\n    return markup;\n  },\n\n  getHostNode: function () {\n    return ReactReconciler.getHostNode(this._renderedComponent);\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    if (!this._renderedComponent) {\n      return;\n    }\n\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {\n      inst._calledComponentWillUnmount = true;\n\n      if (safely) {\n        var name = this.getName() + '.componentWillUnmount()';\n        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCyclePerf(function () {\n            return inst.componentWillUnmount();\n          }, this._debugID, 'componentWillUnmount');\n        } else {\n          inst.componentWillUnmount();\n        }\n      }\n    }\n\n    if (this._renderedComponent) {\n      ReactReconciler.unmountComponent(this._renderedComponent, safely);\n      this._renderedNodeType = null;\n      this._renderedComponent = null;\n      this._instance = null;\n    }\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = 0;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function (context) {\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    var maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function (context) {\n    var maskedContext = this._maskContext(context);\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function (currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext;\n\n    if (inst.getChildContext) {\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onBeginProcessingChildContext();\n        try {\n          childContext = inst.getChildContext();\n        } finally {\n          ReactInstrumentation.debugTool.onEndProcessingChildContext();\n        }\n      } else {\n        childContext = inst.getChildContext();\n      }\n    }\n\n    if (childContext) {\n      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;\n      if (process.env.NODE_ENV !== 'production') {\n        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');\n      }\n      for (var name in childContext) {\n        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;\n      }\n      return _assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Assert that the context types are valid\n   *\n   * @param {object} typeSpecs Map of context field to a ReactPropType\n   * @param {object} values Runtime values that need to be type-checked\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkContextTypes: function (typeSpecs, values, location) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);\n    }\n  },\n\n  receiveComponent: function (nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);\n    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n    } else {\n      this._updateBatchNumber = null;\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n    var inst = this._instance;\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    var willReceive = false;\n    var nextContext;\n\n    // Determine if the context has changed or not\n    if (this._context === nextUnmaskedContext) {\n      nextContext = inst.context;\n    } else {\n      nextContext = this._processContext(nextUnmaskedContext);\n      willReceive = true;\n    }\n\n    var prevProps = prevParentElement.props;\n    var nextProps = nextParentElement.props;\n\n    // Not a simple state update but a props update\n    if (prevParentElement !== nextParentElement) {\n      willReceive = true;\n    }\n\n    // An update here will schedule an update but immediately set\n    // _pendingStateQueue which will ensure that any state updates gets\n    // immediately reconciled instead of waiting for the next batch.\n    if (willReceive && inst.componentWillReceiveProps) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillReceiveProps(nextProps, nextContext);\n        }, this._debugID, 'componentWillReceiveProps');\n      } else {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n    var shouldUpdate = true;\n\n    if (!this._pendingForceUpdate) {\n      if (inst.shouldComponentUpdate) {\n        if (process.env.NODE_ENV !== 'production') {\n          shouldUpdate = measureLifeCyclePerf(function () {\n            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n          }, this._debugID, 'shouldComponentUpdate');\n        } else {\n          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n        }\n      } else {\n        if (this._compositeType === CompositeTypes.PureClass) {\n          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);\n        }\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;\n    }\n\n    this._updateBatchNumber = null;\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = _assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n    var _this2 = this;\n\n    var inst = this._instance;\n\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n\n    if (inst.componentWillUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCyclePerf(function () {\n          return inst.componentWillUpdate(nextProps, nextState, nextContext);\n        }, this._debugID, 'componentWillUpdate');\n      } else {\n        inst.componentWillUpdate(nextProps, nextState, nextContext);\n      }\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (hasComponentDidUpdate) {\n      if (process.env.NODE_ENV !== 'production') {\n        transaction.getReactMountReady().enqueue(function () {\n          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');\n        });\n      } else {\n        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n      }\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function (transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n\n    var debugID = 0;\n    if (process.env.NODE_ENV !== 'production') {\n      debugID = this._debugID;\n    }\n\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n    } else {\n      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);\n      ReactReconciler.unmountComponent(prevComponentInstance, false);\n\n      var nodeType = ReactNodeTypes.getType(nextRenderedElement);\n      this._renderedNodeType = nodeType;\n      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */\n      );\n      this._renderedComponent = child;\n\n      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (debugID !== 0) {\n          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];\n          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);\n        }\n      }\n\n      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);\n    }\n  },\n\n  /**\n   * Overridden in shallow rendering.\n   *\n   * @protected\n   */\n  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {\n    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\n    var inst = this._instance;\n    var renderedElement;\n\n    if (process.env.NODE_ENV !== 'production') {\n      renderedElement = measureLifeCyclePerf(function () {\n        return inst.render();\n      }, this._debugID, 'render');\n    } else {\n      renderedElement = inst.render();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (renderedElement === undefined && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedElement = null;\n      }\n    }\n\n    return renderedElement;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function () {\n    var renderedElement;\n    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {\n      ReactCurrentOwner.current = this;\n      try {\n        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n      } finally {\n        ReactCurrentOwner.current = null;\n      }\n    } else {\n      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();\n    }\n    !(\n    // TODO: An `isValidNode` function would probably be more appropriate\n    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;\n\n    return renderedElement;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function (ref, component) {\n    var inst = this.getPublicInstance();\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;\n    var publicComponentInstance = component.getPublicInstance();\n    if (process.env.NODE_ENV !== 'production') {\n      var componentName = component && component.getName ? component.getName() : 'a component';\n      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;\n    }\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function (ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function () {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function () {\n    var inst = this._instance;\n    if (this._compositeType === CompositeTypes.StatelessFunctional) {\n      return null;\n    }\n    return inst;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nmodule.exports = ReactCompositeComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactCompositeComponent.js\n// module id = 314\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\n'use strict';\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDefaultInjection = require('./ReactDefaultInjection');\nvar ReactMount = require('./ReactMount');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdates = require('./ReactUpdates');\nvar ReactVersion = require('./ReactVersion');\n\nvar findDOMNode = require('./findDOMNode');\nvar getHostComponentFromComposite = require('./getHostComponentFromComposite');\nvar renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');\nvar warning = require('fbjs/lib/warning');\n\nReactDefaultInjection.inject();\n\nvar ReactDOM = {\n  findDOMNode: findDOMNode,\n  render: ReactMount.render,\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n  version: ReactVersion,\n\n  /* eslint-disable camelcase */\n  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\n  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\n};\n\n// Inject the runtime into a devtools global hook regardless of browser.\n// Allows for debugging when the hook is injected on the page.\nif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n    ComponentTree: {\n      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,\n      getNodeFromInstance: function (inst) {\n        // inst is an internal instance (but could be a composite)\n        if (inst._renderedComponent) {\n          inst = getHostComponentFromComposite(inst);\n        }\n        if (inst) {\n          return ReactDOMComponentTree.getNodeFromInstance(inst);\n        } else {\n          return null;\n        }\n      }\n    },\n    Mount: ReactMount,\n    Reconciler: ReactReconciler\n  });\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\n    // First check if devtools is not installed\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n      // If we're in Chrome or Firefox, provide a download link if not installed.\n      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n        // Firefox does not have the issue with devtools loaded over file://\n        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;\n        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');\n      }\n    }\n\n    var testFunc = function testFn() {};\n    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;\n\n    // If we're in IE8, check to see if we are in compatibility mode and provide\n    // information on preventing compatibility mode\n    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\n\n    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />') : void 0;\n\n    var expectedFeatures = [\n    // shims\n    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];\n\n    for (var i = 0; i < expectedFeatures.length; i++) {\n      if (!expectedFeatures[i]) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;\n        break;\n      }\n    }\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactInstrumentation = require('./ReactInstrumentation');\n  var ReactDOMUnknownPropertyHook = require('./ReactDOMUnknownPropertyHook');\n  var ReactDOMNullInputValuePropHook = require('./ReactDOMNullInputValuePropHook');\n  var ReactDOMInvalidARIAHook = require('./ReactDOMInvalidARIAHook');\n\n  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);\n  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);\n  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);\n}\n\nmodule.exports = ReactDOM;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOM.js\n// module id = 315\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar AutoFocusUtils = require('./AutoFocusUtils');\nvar CSSPropertyOperations = require('./CSSPropertyOperations');\nvar DOMLazyTree = require('./DOMLazyTree');\nvar DOMNamespaces = require('./DOMNamespaces');\nvar DOMProperty = require('./DOMProperty');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactDOMComponentFlags = require('./ReactDOMComponentFlags');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMInput = require('./ReactDOMInput');\nvar ReactDOMOption = require('./ReactDOMOption');\nvar ReactDOMSelect = require('./ReactDOMSelect');\nvar ReactDOMTextarea = require('./ReactDOMTextarea');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactMultiChild = require('./ReactMultiChild');\nvar ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar invariant = require('fbjs/lib/invariant');\nvar isEventSupported = require('./isEventSupported');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar validateDOMNesting = require('./validateDOMNesting');\nvar warning = require('fbjs/lib/warning');\n\nvar Flags = ReactDOMComponentFlags;\nvar deleteListener = EventPluginHub.deleteListener;\nvar getNode = ReactDOMComponentTree.getNodeFromInstance;\nvar listenTo = ReactBrowserEventEmitter.listenTo;\nvar registrationNameModules = EventPluginRegistry.registrationNameModules;\n\n// For quickly matching children type, to test if can be treated as content.\nvar CONTENT_TYPES = { 'string': true, 'number': true };\n\nvar STYLE = 'style';\nvar HTML = '__html';\nvar RESERVED_PROPS = {\n  children: null,\n  dangerouslySetInnerHTML: null,\n  suppressContentEditableWarning: null\n};\n\n// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).\nvar DOC_FRAGMENT_TYPE = 11;\n\nfunction getDeclarationErrorAddendum(internalInstance) {\n  if (internalInstance) {\n    var owner = internalInstance._currentElement._owner || null;\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' This DOM node was rendered by `' + name + '`.';\n      }\n    }\n  }\n  return '';\n}\n\nfunction friendlyStringify(obj) {\n  if (typeof obj === 'object') {\n    if (Array.isArray(obj)) {\n      return '[' + obj.map(friendlyStringify).join(', ') + ']';\n    } else {\n      var pairs = [];\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var keyEscaped = /^[a-z$_][\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\n          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\n        }\n      }\n      return '{' + pairs.join(', ') + '}';\n    }\n  } else if (typeof obj === 'string') {\n    return JSON.stringify(obj);\n  } else if (typeof obj === 'function') {\n    return '[function object]';\n  }\n  // Differs from JSON.stringify in that undefined because undefined and that\n  // inf and nan don't become null\n  return String(obj);\n}\n\nvar styleMutationWarning = {};\n\nfunction checkAndWarnForMutatedStyle(style1, style2, component) {\n  if (style1 == null || style2 == null) {\n    return;\n  }\n  if (shallowEqual(style1, style2)) {\n    return;\n  }\n\n  var componentName = component._tag;\n  var owner = component._currentElement._owner;\n  var ownerName;\n  if (owner) {\n    ownerName = owner.getName();\n  }\n\n  var hash = ownerName + '|' + componentName;\n\n  if (styleMutationWarning.hasOwnProperty(hash)) {\n    return;\n  }\n\n  styleMutationWarning[hash] = true;\n\n  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;\n}\n\n/**\n * @param {object} component\n * @param {?object} props\n */\nfunction assertValidProps(component, props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (voidElementTags[component._tag]) {\n    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;\n    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;\n    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;\n  }\n  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;\n}\n\nfunction enqueuePutListener(inst, registrationName, listener, transaction) {\n  if (transaction instanceof ReactServerRenderingTransaction) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\n    // bubble.\n    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\\'t support the `onScroll` event') : void 0;\n  }\n  var containerInfo = inst._hostContainerInfo;\n  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;\n  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;\n  listenTo(registrationName, doc);\n  transaction.getReactMountReady().enqueue(putListener, {\n    inst: inst,\n    registrationName: registrationName,\n    listener: listener\n  });\n}\n\nfunction putListener() {\n  var listenerToPut = this;\n  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);\n}\n\nfunction inputPostMount() {\n  var inst = this;\n  ReactDOMInput.postMountWrapper(inst);\n}\n\nfunction textareaPostMount() {\n  var inst = this;\n  ReactDOMTextarea.postMountWrapper(inst);\n}\n\nfunction optionPostMount() {\n  var inst = this;\n  ReactDOMOption.postMountWrapper(inst);\n}\n\nvar setAndValidateContentChildDev = emptyFunction;\nif (process.env.NODE_ENV !== 'production') {\n  setAndValidateContentChildDev = function (content) {\n    var hasExistingContent = this._contentDebugID != null;\n    var debugID = this._debugID;\n    // This ID represents the inlined child that has no backing instance:\n    var contentDebugID = -debugID;\n\n    if (content == null) {\n      if (hasExistingContent) {\n        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);\n      }\n      this._contentDebugID = null;\n      return;\n    }\n\n    validateDOMNesting(null, String(content), this, this._ancestorInfo);\n    this._contentDebugID = contentDebugID;\n    if (hasExistingContent) {\n      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);\n      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);\n    } else {\n      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);\n      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);\n      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);\n    }\n  };\n}\n\n// There are so many media events, it makes sense to just\n// maintain a list rather than create a `trapBubbledEvent` for each\nvar mediaEvents = {\n  topAbort: 'abort',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTimeUpdate: 'timeupdate',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting'\n};\n\nfunction trapBubbledEventsLocal() {\n  var inst = this;\n  // If a component renders to null or if another component fatals and causes\n  // the state of the tree to be corrupted, `node` here can be null.\n  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;\n  var node = getNode(inst);\n  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;\n\n  switch (inst._tag) {\n    case 'iframe':\n    case 'object':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];\n      break;\n    case 'video':\n    case 'audio':\n\n      inst._wrapperState.listeners = [];\n      // Create listener for each media event\n      for (var event in mediaEvents) {\n        if (mediaEvents.hasOwnProperty(event)) {\n          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));\n        }\n      }\n      break;\n    case 'source':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];\n      break;\n    case 'img':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];\n      break;\n    case 'form':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];\n      break;\n    case 'input':\n    case 'select':\n    case 'textarea':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];\n      break;\n  }\n}\n\nfunction postUpdateSelectWrapper() {\n  ReactDOMSelect.postUpdateWrapper(this);\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special-case tags.\n\nvar omittedCloseTags = {\n  'area': true,\n  'base': true,\n  'br': true,\n  'col': true,\n  'embed': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n  'source': true,\n  'track': true,\n  'wbr': true\n};\n\nvar newlineEatingTags = {\n  'listing': true,\n  'pre': true,\n  'textarea': true\n};\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nvar voidElementTags = _assign({\n  'menuitem': true\n}, omittedCloseTags);\n\n// We accept any tag to be rendered but since this gets injected into arbitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nvar hasOwnProperty = {}.hasOwnProperty;\n\nfunction validateDangerousTag(tag) {\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;\n    validatedTagCache[tag] = true;\n  }\n}\n\nfunction isCustomComponent(tagName, props) {\n  return tagName.indexOf('-') >= 0 || props.is != null;\n}\n\nvar globalIdCounter = 1;\n\n/**\n * Creates a new React class that is idempotent and capable of containing other\n * React components. It accepts event listeners and DOM properties that are\n * valid according to `DOMProperty`.\n *\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\n *  - DOM properties: `className`, `name`, `title`, etc.\n *\n * The `style` property functions differently from the DOM API. It accepts an\n * object mapping of style properties to values.\n *\n * @constructor ReactDOMComponent\n * @extends ReactMultiChild\n */\nfunction ReactDOMComponent(element) {\n  var tag = element.type;\n  validateDangerousTag(tag);\n  this._currentElement = element;\n  this._tag = tag.toLowerCase();\n  this._namespaceURI = null;\n  this._renderedChildren = null;\n  this._previousStyle = null;\n  this._previousStyleCopy = null;\n  this._hostNode = null;\n  this._hostParent = null;\n  this._rootNodeID = 0;\n  this._domID = 0;\n  this._hostContainerInfo = null;\n  this._wrapperState = null;\n  this._topLevelWrapper = null;\n  this._flags = 0;\n  if (process.env.NODE_ENV !== 'production') {\n    this._ancestorInfo = null;\n    setAndValidateContentChildDev.call(this, null);\n  }\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent';\n\nReactDOMComponent.Mixin = {\n\n  /**\n   * Generates root tag markup then recurses. This method has side effects and\n   * is not idempotent.\n   *\n   * @internal\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {?ReactDOMComponent} the parent component instance\n   * @param {?object} info about the host container\n   * @param {object} context\n   * @return {string} The computed markup.\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    this._rootNodeID = globalIdCounter++;\n    this._domID = hostContainerInfo._idCounter++;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var props = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'audio':\n      case 'form':\n      case 'iframe':\n      case 'img':\n      case 'link':\n      case 'object':\n      case 'source':\n      case 'video':\n        this._wrapperState = {\n          listeners: null\n        };\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'input':\n        ReactDOMInput.mountWrapper(this, props, hostParent);\n        props = ReactDOMInput.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'option':\n        ReactDOMOption.mountWrapper(this, props, hostParent);\n        props = ReactDOMOption.getHostProps(this, props);\n        break;\n      case 'select':\n        ReactDOMSelect.mountWrapper(this, props, hostParent);\n        props = ReactDOMSelect.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.mountWrapper(this, props, hostParent);\n        props = ReactDOMTextarea.getHostProps(this, props);\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n    }\n\n    assertValidProps(this, props);\n\n    // We create tags in the namespace of their parent container, except HTML\n    // tags get no namespace.\n    var namespaceURI;\n    var parentTag;\n    if (hostParent != null) {\n      namespaceURI = hostParent._namespaceURI;\n      parentTag = hostParent._tag;\n    } else if (hostContainerInfo._tag) {\n      namespaceURI = hostContainerInfo._namespaceURI;\n      parentTag = hostContainerInfo._tag;\n    }\n    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {\n      namespaceURI = DOMNamespaces.html;\n    }\n    if (namespaceURI === DOMNamespaces.html) {\n      if (this._tag === 'svg') {\n        namespaceURI = DOMNamespaces.svg;\n      } else if (this._tag === 'math') {\n        namespaceURI = DOMNamespaces.mathml;\n      }\n    }\n    this._namespaceURI = namespaceURI;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var parentInfo;\n      if (hostParent != null) {\n        parentInfo = hostParent._ancestorInfo;\n      } else if (hostContainerInfo._tag) {\n        parentInfo = hostContainerInfo._ancestorInfo;\n      }\n      if (parentInfo) {\n        // parentInfo should always be present except for the top-level\n        // component when server rendering\n        validateDOMNesting(this._tag, null, this, parentInfo);\n      }\n      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);\n    }\n\n    var mountImage;\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var el;\n      if (namespaceURI === DOMNamespaces.html) {\n        if (this._tag === 'script') {\n          // Create the script via .innerHTML so its \"parser-inserted\" flag is\n          // set to true and it does not execute\n          var div = ownerDocument.createElement('div');\n          var type = this._currentElement.type;\n          div.innerHTML = '<' + type + '></' + type + '>';\n          el = div.removeChild(div.firstChild);\n        } else if (props.is) {\n          el = ownerDocument.createElement(this._currentElement.type, props.is);\n        } else {\n          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.\n          // See discussion in https://github.com/facebook/react/pull/6896\n          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240\n          el = ownerDocument.createElement(this._currentElement.type);\n        }\n      } else {\n        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);\n      }\n      ReactDOMComponentTree.precacheNode(this, el);\n      this._flags |= Flags.hasCachedChildNodes;\n      if (!this._hostParent) {\n        DOMPropertyOperations.setAttributeForRoot(el);\n      }\n      this._updateDOMProperties(null, props, transaction);\n      var lazyTree = DOMLazyTree(el);\n      this._createInitialChildren(transaction, props, context, lazyTree);\n      mountImage = lazyTree;\n    } else {\n      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\n      var tagContent = this._createContentMarkup(transaction, props, context);\n      if (!tagContent && omittedCloseTags[this._tag]) {\n        mountImage = tagOpen + '/>';\n      } else {\n        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\n      }\n    }\n\n    switch (this._tag) {\n      case 'input':\n        transaction.getReactMountReady().enqueue(inputPostMount, this);\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'textarea':\n        transaction.getReactMountReady().enqueue(textareaPostMount, this);\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'select':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'button':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n      case 'option':\n        transaction.getReactMountReady().enqueue(optionPostMount, this);\n        break;\n    }\n\n    return mountImage;\n  },\n\n  /**\n   * Creates markup for the open tag and all attributes.\n   *\n   * This method has side effects because events get registered.\n   *\n   * Iterating over object properties is faster than iterating over arrays.\n   * @see http://jsperf.com/obj-vs-arr-iteration\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @return {string} Markup of opening tag.\n   */\n  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\n    var ret = '<' + this._currentElement.type;\n\n    for (var propKey in props) {\n      if (!props.hasOwnProperty(propKey)) {\n        continue;\n      }\n      var propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (propValue) {\n          enqueuePutListener(this, propKey, propValue, transaction);\n        }\n      } else {\n        if (propKey === STYLE) {\n          if (propValue) {\n            if (process.env.NODE_ENV !== 'production') {\n              // See `_updateDOMProperties`. style block\n              this._previousStyle = propValue;\n            }\n            propValue = this._previousStyleCopy = _assign({}, props.style);\n          }\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);\n        }\n        var markup = null;\n        if (this._tag != null && isCustomComponent(this._tag, props)) {\n          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\n          }\n        } else {\n          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n        }\n        if (markup) {\n          ret += ' ' + markup;\n        }\n      }\n    }\n\n    // For static pages, no need to put React ID and checksum. Saves lots of\n    // bytes.\n    if (transaction.renderToStaticMarkup) {\n      return ret;\n    }\n\n    if (!this._hostParent) {\n      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();\n    }\n    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);\n    return ret;\n  },\n\n  /**\n   * Creates markup for the content between the tags.\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @param {object} context\n   * @return {string} Content markup.\n   */\n  _createContentMarkup: function (transaction, props, context) {\n    var ret = '';\n\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        ret = innerHTML.__html;\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        // TODO: Validate that text is allowed as a child of this node\n        ret = escapeTextContentForBrowser(contentToUse);\n        if (process.env.NODE_ENV !== 'production') {\n          setAndValidateContentChildDev.call(this, contentToUse);\n        }\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        ret = mountImages.join('');\n      }\n    }\n    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\n') {\n      // text/html ignores the first character in these tags if it's a newline\n      // Prefer to break application/xml over text/html (for now) by adding\n      // a newline specifically to get eaten by the parser. (Alternately for\n      // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n      // \\r is normalized out by HTMLTextAreaElement#value.)\n      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n      // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n      return '\\n' + ret;\n    } else {\n      return ret;\n    }\n  },\n\n  _createInitialChildren: function (transaction, props, context, lazyTree) {\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      // TODO: Validate that text is allowed as a child of this node\n      if (contentToUse != null) {\n        // Avoid setting textContent when the text is empty. In IE11 setting\n        // textContent on a text area will cause the placeholder to not\n        // show within the textarea until it has been focused and blurred again.\n        // https://github.com/facebook/react/issues/6731#issuecomment-254874553\n        if (contentToUse !== '') {\n          if (process.env.NODE_ENV !== 'production') {\n            setAndValidateContentChildDev.call(this, contentToUse);\n          }\n          DOMLazyTree.queueText(lazyTree, contentToUse);\n        }\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        for (var i = 0; i < mountImages.length; i++) {\n          DOMLazyTree.queueChild(lazyTree, mountImages[i]);\n        }\n      }\n    }\n  },\n\n  /**\n   * Receives a next element and updates the component.\n   *\n   * @internal\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   */\n  receiveComponent: function (nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n    this.updateComponent(transaction, prevElement, nextElement, context);\n  },\n\n  /**\n   * Updates a DOM component after it has already been allocated and\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevElement\n   * @param {ReactElement} nextElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevElement, nextElement, context) {\n    var lastProps = prevElement.props;\n    var nextProps = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'input':\n        lastProps = ReactDOMInput.getHostProps(this, lastProps);\n        nextProps = ReactDOMInput.getHostProps(this, nextProps);\n        break;\n      case 'option':\n        lastProps = ReactDOMOption.getHostProps(this, lastProps);\n        nextProps = ReactDOMOption.getHostProps(this, nextProps);\n        break;\n      case 'select':\n        lastProps = ReactDOMSelect.getHostProps(this, lastProps);\n        nextProps = ReactDOMSelect.getHostProps(this, nextProps);\n        break;\n      case 'textarea':\n        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);\n        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);\n        break;\n    }\n\n    assertValidProps(this, nextProps);\n    this._updateDOMProperties(lastProps, nextProps, transaction);\n    this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\n    switch (this._tag) {\n      case 'input':\n        // Update the wrapper around inputs *after* updating props. This has to\n        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations\n        // raise warnings and prevent the new value from being assigned.\n        ReactDOMInput.updateWrapper(this);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.updateWrapper(this);\n        break;\n      case 'select':\n        // <select> value update needs to occur after <option> children\n        // reconciliation\n        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\n        break;\n    }\n  },\n\n  /**\n   * Reconciles the properties by detecting differences in property values and\n   * updating the DOM as necessary. This function is probably the single most\n   * critical path for performance optimization.\n   *\n   * TODO: Benchmark whether checking for changed values in memory actually\n   *       improves performance (especially statically positioned elements).\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\n   *       do not change for a given reconciliation.\n   * TODO: Benchmark areas that can be improved with caching.\n   *\n   * @private\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {?DOMElement} node\n   */\n  _updateDOMProperties: function (lastProps, nextProps, transaction) {\n    var propKey;\n    var styleName;\n    var styleUpdates;\n    for (propKey in lastProps) {\n      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        var lastStyle = this._previousStyleCopy;\n        for (styleName in lastStyle) {\n          if (lastStyle.hasOwnProperty(styleName)) {\n            styleUpdates = styleUpdates || {};\n            styleUpdates[styleName] = '';\n          }\n        }\n        this._previousStyleCopy = null;\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (lastProps[propKey]) {\n          // Only call deleteListener if there was a listener previously or\n          // else willDeleteListener gets called when there wasn't actually a\n          // listener (e.g., onClick={null})\n          deleteListener(this, propKey);\n        }\n      } else if (isCustomComponent(this._tag, lastProps)) {\n        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);\n      }\n    }\n    for (propKey in nextProps) {\n      var nextProp = nextProps[propKey];\n      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        if (nextProp) {\n          if (process.env.NODE_ENV !== 'production') {\n            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\n            this._previousStyle = nextProp;\n          }\n          nextProp = this._previousStyleCopy = _assign({}, nextProp);\n        } else {\n          this._previousStyleCopy = null;\n        }\n        if (lastProp) {\n          // Unset styles on `lastProp` but not on `nextProp`.\n          for (styleName in lastProp) {\n            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `lastProp`.\n          for (styleName in nextProp) {\n            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n          styleUpdates = nextProp;\n        }\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (nextProp) {\n          enqueuePutListener(this, propKey, nextProp, transaction);\n        } else if (lastProp) {\n          deleteListener(this, propKey);\n        }\n      } else if (isCustomComponent(this._tag, nextProps)) {\n        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {\n          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        var node = getNode(this);\n        // If we're updating to null or undefined, we should remove the property\n        // from the DOM node instead of inadvertently setting to a string. This\n        // brings us in line with the same behavior we have on initial render.\n        if (nextProp != null) {\n          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\n        } else {\n          DOMPropertyOperations.deleteValueForProperty(node, propKey);\n        }\n      }\n    }\n    if (styleUpdates) {\n      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);\n    }\n  },\n\n  /**\n   * Reconciles the children with the various properties that affect the\n   * children content.\n   *\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   */\n  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\n    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\n    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\n    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\n\n    // Note the use of `!=` which checks for null or undefined.\n    var lastChildren = lastContent != null ? null : lastProps.children;\n    var nextChildren = nextContent != null ? null : nextProps.children;\n\n    // If we're switching from children to content/html or vice versa, remove\n    // the old content\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n    if (lastChildren != null && nextChildren == null) {\n      this.updateChildren(null, transaction, context);\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n      this.updateTextContent('');\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n      }\n    }\n\n    if (nextContent != null) {\n      if (lastContent !== nextContent) {\n        this.updateTextContent('' + nextContent);\n        if (process.env.NODE_ENV !== 'production') {\n          setAndValidateContentChildDev.call(this, nextContent);\n        }\n      }\n    } else if (nextHtml != null) {\n      if (lastHtml !== nextHtml) {\n        this.updateMarkup('' + nextHtml);\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);\n      }\n    } else if (nextChildren != null) {\n      if (process.env.NODE_ENV !== 'production') {\n        setAndValidateContentChildDev.call(this, null);\n      }\n\n      this.updateChildren(nextChildren, transaction, context);\n    }\n  },\n\n  getHostNode: function () {\n    return getNode(this);\n  },\n\n  /**\n   * Destroys all event registrations for this instance. Does not remove from\n   * the DOM. That must be done by the parent.\n   *\n   * @internal\n   */\n  unmountComponent: function (safely) {\n    switch (this._tag) {\n      case 'audio':\n      case 'form':\n      case 'iframe':\n      case 'img':\n      case 'link':\n      case 'object':\n      case 'source':\n      case 'video':\n        var listeners = this._wrapperState.listeners;\n        if (listeners) {\n          for (var i = 0; i < listeners.length; i++) {\n            listeners[i].remove();\n          }\n        }\n        break;\n      case 'html':\n      case 'head':\n      case 'body':\n        /**\n         * Components like <html> <head> and <body> can't be removed or added\n         * easily in a cross-browser way, however it's valuable to be able to\n         * take advantage of React's reconciliation for styling and <title>\n         * management. So we just document it and throw in dangerous cases.\n         */\n        !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;\n        break;\n    }\n\n    this.unmountChildren(safely);\n    ReactDOMComponentTree.uncacheNode(this);\n    EventPluginHub.deleteAllListeners(this);\n    this._rootNodeID = 0;\n    this._domID = 0;\n    this._wrapperState = null;\n\n    if (process.env.NODE_ENV !== 'production') {\n      setAndValidateContentChildDev.call(this, null);\n    }\n  },\n\n  getPublicInstance: function () {\n    return getNode(this);\n  }\n\n};\n\n_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\n\nmodule.exports = ReactDOMComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMComponent.js\n// module id = 316\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar validateDOMNesting = require('./validateDOMNesting');\n\nvar DOC_NODE_TYPE = 9;\n\nfunction ReactDOMContainerInfo(topLevelWrapper, node) {\n  var info = {\n    _topLevelWrapper: topLevelWrapper,\n    _idCounter: 1,\n    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,\n    _node: node,\n    _tag: node ? node.nodeName.toLowerCase() : null,\n    _namespaceURI: node ? node.namespaceURI : null\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;\n  }\n  return info;\n}\n\nmodule.exports = ReactDOMContainerInfo;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMContainerInfo.js\n// module id = 317\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar ReactDOMEmptyComponent = function (instantiate) {\n  // ReactCompositeComponent uses this:\n  this._currentElement = null;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n  this._hostContainerInfo = null;\n  this._domID = 0;\n};\n_assign(ReactDOMEmptyComponent.prototype, {\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    var domID = hostContainerInfo._idCounter++;\n    this._domID = domID;\n    this._hostParent = hostParent;\n    this._hostContainerInfo = hostContainerInfo;\n\n    var nodeValue = ' react-empty: ' + this._domID + ' ';\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var node = ownerDocument.createComment(nodeValue);\n      ReactDOMComponentTree.precacheNode(this, node);\n      return DOMLazyTree(node);\n    } else {\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd insert a comment node, but since this is a situation\n        // where React won't take over (static pages), we can simply return\n        // nothing.\n        return '';\n      }\n      return '<!--' + nodeValue + '-->';\n    }\n  },\n  receiveComponent: function () {},\n  getHostNode: function () {\n    return ReactDOMComponentTree.getNodeFromInstance(this);\n  },\n  unmountComponent: function () {\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n});\n\nmodule.exports = ReactDOMEmptyComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMEmptyComponent.js\n// module id = 318\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactDOMFeatureFlags = {\n  useCreateElement: true,\n  useFiber: false\n};\n\nmodule.exports = ReactDOMFeatureFlags;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMFeatureFlags.js\n// module id = 319\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\n/**\n * Operations used to process updates to DOM nodes.\n */\nvar ReactDOMIDOperations = {\n\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {\n    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);\n    DOMChildrenOperations.processUpdates(node, updates);\n  }\n};\n\nmodule.exports = ReactDOMIDOperations;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMIDOperations.js\n// module id = 320\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnCheckedLink = false;\nvar didWarnValueDefaultValue = false;\nvar didWarnCheckedDefaultChecked = false;\nvar didWarnControlledToUncontrolled = false;\nvar didWarnUncontrolledToControlled = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMInput.updateWrapper(this);\n  }\n}\n\nfunction isControlled(props) {\n  var usesChecked = props.type === 'checkbox' || props.type === 'radio';\n  return usesChecked ? props.checked != null : props.value != null;\n}\n\n/**\n * Implements an <input> host component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = {\n  getHostProps: function (inst, props) {\n    var value = LinkedValueUtils.getValue(props);\n    var checked = LinkedValueUtils.getChecked(props);\n\n    var hostProps = _assign({\n      // Make sure we set .type before any other properties (setting .value\n      // before .type means .value is lost in IE11 and below)\n      type: undefined,\n      // Make sure we set .step before .value (setting .value before .step\n      // means .value is rounded on mount, based upon step precision)\n      step: undefined,\n      // Make sure we set .min & .max before .value (to ensure proper order\n      // in corner cases such as min or max deriving from value, e.g. Issue #7170)\n      min: undefined,\n      max: undefined\n    }, props, {\n      defaultChecked: undefined,\n      defaultValue: undefined,\n      value: value != null ? value : inst._wrapperState.initialValue,\n      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n\n      var owner = inst._currentElement._owner;\n\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.checkedLink !== undefined && !didWarnCheckedLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnCheckedLink = true;\n      }\n      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnCheckedDefaultChecked = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnValueDefaultValue = true;\n      }\n    }\n\n    var defaultValue = props.defaultValue;\n    inst._wrapperState = {\n      initialChecked: props.checked != null ? props.checked : props.defaultChecked,\n      initialValue: props.value != null ? props.value : defaultValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst),\n      controlled: isControlled(props)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var controlled = isControlled(props);\n      var owner = inst._currentElement._owner;\n\n      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnUncontrolledToControlled = true;\n      }\n      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;\n        didWarnControlledToUncontrolled = true;\n      }\n    }\n\n    // TODO: Shouldn't this be getChecked(props)?\n    var checked = props.checked;\n    if (checked != null) {\n      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);\n    }\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      if (value === 0 && node.value === '') {\n        node.value = '0';\n        // Note: IE9 reports a number inputs as 'text', so check props instead.\n      } else if (props.type === 'number') {\n        // Simulate `input.valueAsNumber`. IE9 does not support it\n        var valueAsNumber = parseFloat(node.value, 10) || 0;\n\n        // eslint-disable-next-line\n        if (value != valueAsNumber) {\n          // Cast `value` to a string to ensure the value is set correctly. While\n          // browsers typically do this as necessary, jsdom doesn't.\n          node.value = '' + value;\n        }\n        // eslint-disable-next-line\n      } else if (value != node.value) {\n        // Cast `value` to a string to ensure the value is set correctly. While\n        // browsers typically do this as necessary, jsdom doesn't.\n        node.value = '' + value;\n      }\n    } else {\n      if (props.value == null && props.defaultValue != null) {\n        // In Chrome, assigning defaultValue to certain input types triggers input validation.\n        // For number inputs, the display value loses trailing decimal points. For email inputs,\n        // Chrome raises \"The specified value <x> is not a valid email address\".\n        //\n        // Here we check to see if the defaultValue has actually changed, avoiding these problems\n        // when the user is inputting text\n        //\n        // https://github.com/facebook/react/issues/7253\n        if (node.defaultValue !== '' + props.defaultValue) {\n          node.defaultValue = '' + props.defaultValue;\n        }\n      }\n      if (props.checked == null && props.defaultChecked != null) {\n        node.defaultChecked = !!props.defaultChecked;\n      }\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\n    // Detach value from defaultValue. We won't do anything if we're working on\n    // submit or reset inputs as those values & defaultValues are linked. They\n    // are not resetable nodes so this operation doesn't matter and actually\n    // removes browser-default values (eg \"Submit Query\") when no value is\n    // provided.\n\n    switch (props.type) {\n      case 'submit':\n      case 'reset':\n        break;\n      case 'color':\n      case 'date':\n      case 'datetime':\n      case 'datetime-local':\n      case 'month':\n      case 'time':\n      case 'week':\n        // This fixes the no-show issue on iOS Safari and Android Chrome:\n        // https://github.com/facebook/react/issues/7233\n        node.value = '';\n        node.value = node.defaultValue;\n        break;\n      default:\n        node.value = node.value;\n        break;\n    }\n\n    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug\n    // this is needed to work around a chrome bug where setting defaultChecked\n    // will sometimes influence the value of checked (even after detachment).\n    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416\n    // We need to temporarily unset name to avoid disrupting radio button groups.\n    var name = node.name;\n    if (name !== '') {\n      node.name = '';\n    }\n    node.defaultChecked = !node.defaultChecked;\n    node.defaultChecked = !node.defaultChecked;\n    if (name !== '') {\n      node.name = name;\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  // Here we use asap to wait until all updates have propagated, which\n  // is important when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n\n  var name = props.name;\n  if (props.type === 'radio' && name != null) {\n    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);\n    var queryRoot = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = queryRoot.parentNode;\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form, let's just use the global\n    // `querySelectorAll` to ensure we don't miss anything.\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n    for (var i = 0; i < group.length; i++) {\n      var otherNode = group[i];\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React radio buttons with non-React ones.\n      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);\n      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n    }\n  }\n\n  return returnValue;\n}\n\nmodule.exports = ReactDOMInput;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMInput.js\n// module id = 321\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar React = require('react/lib/React');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMSelect = require('./ReactDOMSelect');\n\nvar warning = require('fbjs/lib/warning');\nvar didWarnInvalidOptionChildren = false;\n\nfunction flattenChildren(children) {\n  var content = '';\n\n  // Flatten children and warn if they aren't strings or numbers;\n  // invalid types are ignored.\n  React.Children.forEach(children, function (child) {\n    if (child == null) {\n      return;\n    }\n    if (typeof child === 'string' || typeof child === 'number') {\n      content += child;\n    } else if (!didWarnInvalidOptionChildren) {\n      didWarnInvalidOptionChildren = true;\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;\n    }\n  });\n\n  return content;\n}\n\n/**\n * Implements an <option> host component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, hostParent) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;\n    }\n\n    // Look up whether this option is 'selected'\n    var selectValue = null;\n    if (hostParent != null) {\n      var selectParent = hostParent;\n\n      if (selectParent._tag === 'optgroup') {\n        selectParent = selectParent._hostParent;\n      }\n\n      if (selectParent != null && selectParent._tag === 'select') {\n        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);\n      }\n    }\n\n    // If the value is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      var value;\n      if (props.value != null) {\n        value = props.value + '';\n      } else {\n        value = flattenChildren(props.children);\n      }\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === value;\n      }\n    }\n\n    inst._wrapperState = { selected: selected };\n  },\n\n  postMountWrapper: function (inst) {\n    // value=\"\" should make a value attribute (#6219)\n    var props = inst._currentElement.props;\n    if (props.value != null) {\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      node.setAttribute('value', props.value);\n    }\n  },\n\n  getHostProps: function (inst, props) {\n    var hostProps = _assign({ selected: undefined, children: undefined }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      hostProps.selected = inst._wrapperState.selected;\n    }\n\n    var content = flattenChildren(props.children);\n\n    if (content) {\n      hostProps.children = content;\n    }\n\n    return hostProps;\n  }\n\n};\n\nmodule.exports = ReactDOMOption;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMOption.js\n// module id = 322\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar getNodeForCharacterOffset = require('./getNodeForCharacterOffset');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n  // divs do not seem to expose properties, triggering a \"Permission denied\n  // error\" if any of its properties are accessed. The only seemingly possible\n  // way to avoid erroring is to access a property that typically works for\n  // non-anonymous divs and catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    currentRange.startContainer.nodeType;\n    currentRange.endContainer.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (offsets.end === undefined) {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programmatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMSelection.js\n// module id = 323\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar DOMLazyTree = require('./DOMLazyTree');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar invariant = require('fbjs/lib/invariant');\nvar validateDOMNesting = require('./validateDOMNesting');\n\n/**\n * Text nodes violate a couple assumptions that React makes about components:\n *\n *  - When mounting text into the DOM, adjacent text nodes are merged.\n *  - Text nodes cannot be assigned a React root ID.\n *\n * This component is used to wrap strings between comment nodes so that they\n * can undergo the same reconciliation that is applied to elements.\n *\n * TODO: Investigate representing React components in the DOM with text nodes.\n *\n * @class ReactDOMTextComponent\n * @extends ReactComponent\n * @internal\n */\nvar ReactDOMTextComponent = function (text) {\n  // TODO: This is really a ReactText (ReactNode), not a ReactElement\n  this._currentElement = text;\n  this._stringText = '' + text;\n  // ReactDOMComponentTree uses these:\n  this._hostNode = null;\n  this._hostParent = null;\n\n  // Properties\n  this._domID = 0;\n  this._mountIndex = 0;\n  this._closingComment = null;\n  this._commentNodes = null;\n};\n\n_assign(ReactDOMTextComponent.prototype, {\n\n  /**\n   * Creates the markup for this text node. This node is not intended to have\n   * any features besides containing text content.\n   *\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup for this text node.\n   * @internal\n   */\n  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {\n    if (process.env.NODE_ENV !== 'production') {\n      var parentInfo;\n      if (hostParent != null) {\n        parentInfo = hostParent._ancestorInfo;\n      } else if (hostContainerInfo != null) {\n        parentInfo = hostContainerInfo._ancestorInfo;\n      }\n      if (parentInfo) {\n        // parentInfo should always be present except for the top-level\n        // component when server rendering\n        validateDOMNesting(null, this._stringText, this, parentInfo);\n      }\n    }\n\n    var domID = hostContainerInfo._idCounter++;\n    var openingValue = ' react-text: ' + domID + ' ';\n    var closingValue = ' /react-text ';\n    this._domID = domID;\n    this._hostParent = hostParent;\n    if (transaction.useCreateElement) {\n      var ownerDocument = hostContainerInfo._ownerDocument;\n      var openingComment = ownerDocument.createComment(openingValue);\n      var closingComment = ownerDocument.createComment(closingValue);\n      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());\n      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));\n      if (this._stringText) {\n        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));\n      }\n      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));\n      ReactDOMComponentTree.precacheNode(this, openingComment);\n      this._closingComment = closingComment;\n      return lazyTree;\n    } else {\n      var escapedText = escapeTextContentForBrowser(this._stringText);\n\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd wrap this between comment nodes for the reasons stated\n        // above, but since this is a situation where React won't take over\n        // (static pages), we can simply return the text as it is.\n        return escapedText;\n      }\n\n      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';\n    }\n  },\n\n  /**\n   * Updates this component by updating the text content.\n   *\n   * @param {ReactText} nextText The next text content\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  receiveComponent: function (nextText, transaction) {\n    if (nextText !== this._currentElement) {\n      this._currentElement = nextText;\n      var nextStringText = '' + nextText;\n      if (nextStringText !== this._stringText) {\n        // TODO: Save this as pending props and use performUpdateIfNecessary\n        // and/or updateComponent to do the actual update for consistency with\n        // other component types?\n        this._stringText = nextStringText;\n        var commentNodes = this.getHostNode();\n        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);\n      }\n    }\n  },\n\n  getHostNode: function () {\n    var hostNode = this._commentNodes;\n    if (hostNode) {\n      return hostNode;\n    }\n    if (!this._closingComment) {\n      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);\n      var node = openingComment.nextSibling;\n      while (true) {\n        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;\n        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {\n          this._closingComment = node;\n          break;\n        }\n        node = node.nextSibling;\n      }\n    }\n    hostNode = [this._hostNode, this._closingComment];\n    this._commentNodes = hostNode;\n    return hostNode;\n  },\n\n  unmountComponent: function () {\n    this._closingComment = null;\n    this._commentNodes = null;\n    ReactDOMComponentTree.uncacheNode(this);\n  }\n\n});\n\nmodule.exports = ReactDOMTextComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMTextComponent.js\n// module id = 324\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueLink = false;\nvar didWarnValDefaultVal = false;\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMTextarea.updateWrapper(this);\n  }\n}\n\n/**\n * Implements a <textarea> host component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = {\n  getHostProps: function (inst, props) {\n    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.  We could add a check in setTextContent\n    // to only set the value if/when the value differs from the node value (which would\n    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.\n    // The value can be a boolean or object so that's why it's forced to be a string.\n    var hostProps = _assign({}, props, {\n      value: undefined,\n      defaultValue: undefined,\n      children: '' + inst._wrapperState.initialValue,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return hostProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n      if (props.valueLink !== undefined && !didWarnValueLink) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;\n        didWarnValueLink = true;\n      }\n      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;\n        didWarnValDefaultVal = true;\n      }\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    var initialValue = value;\n\n    // Only bother fetching default value if we're going to use it\n    if (value == null) {\n      var defaultValue = props.defaultValue;\n      // TODO (yungsters): Remove support for children content in <textarea>.\n      var children = props.children;\n      if (children != null) {\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;\n        }\n        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;\n        if (Array.isArray(children)) {\n          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;\n          children = children[0];\n        }\n\n        defaultValue = '' + children;\n      }\n      if (defaultValue == null) {\n        defaultValue = '';\n      }\n      initialValue = defaultValue;\n    }\n\n    inst._wrapperState = {\n      initialValue: '' + initialValue,\n      listeners: null,\n      onChange: _handleChange.bind(inst)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      var newValue = '' + value;\n\n      // To avoid side effects (such as losing text selection), only set value if changed\n      if (newValue !== node.value) {\n        node.value = newValue;\n      }\n      if (props.defaultValue == null) {\n        node.defaultValue = newValue;\n      }\n    }\n    if (props.defaultValue != null) {\n      node.defaultValue = props.defaultValue;\n    }\n  },\n\n  postMountWrapper: function (inst) {\n    // This is in postMount because we need access to the DOM node, which is not\n    // available until after the component has mounted.\n    var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n    var textContent = node.textContent;\n\n    // Only set node.value if textContent is equal to the expected\n    // initial value. In IE10/IE11 there is a bug where the placeholder attribute\n    // will populate textContent as well.\n    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/\n    if (textContent === inst._wrapperState.initialValue) {\n      node.value = textContent;\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMTextarea;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMTextarea.js\n// module id = 325\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\nfunction getLowestCommonAncestor(instA, instB) {\n  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;\n\n  var depthA = 0;\n  for (var tempA = instA; tempA; tempA = tempA._hostParent) {\n    depthA++;\n  }\n  var depthB = 0;\n  for (var tempB = instB; tempB; tempB = tempB._hostParent) {\n    depthB++;\n  }\n\n  // If A is deeper, crawl up.\n  while (depthA - depthB > 0) {\n    instA = instA._hostParent;\n    depthA--;\n  }\n\n  // If B is deeper, crawl up.\n  while (depthB - depthA > 0) {\n    instB = instB._hostParent;\n    depthB--;\n  }\n\n  // Walk in lockstep until we find a match.\n  var depth = depthA;\n  while (depth--) {\n    if (instA === instB) {\n      return instA;\n    }\n    instA = instA._hostParent;\n    instB = instB._hostParent;\n  }\n  return null;\n}\n\n/**\n * Return if A is an ancestor of B.\n */\nfunction isAncestor(instA, instB) {\n  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;\n\n  while (instB) {\n    if (instB === instA) {\n      return true;\n    }\n    instB = instB._hostParent;\n  }\n  return false;\n}\n\n/**\n * Return the parent instance of the passed-in instance.\n */\nfunction getParentInstance(inst) {\n  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;\n\n  return inst._hostParent;\n}\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nfunction traverseTwoPhase(inst, fn, arg) {\n  var path = [];\n  while (inst) {\n    path.push(inst);\n    inst = inst._hostParent;\n  }\n  var i;\n  for (i = path.length; i-- > 0;) {\n    fn(path[i], 'captured', arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], 'bubbled', arg);\n  }\n}\n\n/**\n * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n * should would receive a `mouseEnter` or `mouseLeave` event.\n *\n * Does not invoke the callback on the nearest common ancestor because nothing\n * \"entered\" or \"left\" that element.\n */\nfunction traverseEnterLeave(from, to, fn, argFrom, argTo) {\n  var common = from && to ? getLowestCommonAncestor(from, to) : null;\n  var pathFrom = [];\n  while (from && from !== common) {\n    pathFrom.push(from);\n    from = from._hostParent;\n  }\n  var pathTo = [];\n  while (to && to !== common) {\n    pathTo.push(to);\n    to = to._hostParent;\n  }\n  var i;\n  for (i = 0; i < pathFrom.length; i++) {\n    fn(pathFrom[i], 'bubbled', argFrom);\n  }\n  for (i = pathTo.length; i-- > 0;) {\n    fn(pathTo[i], 'captured', argTo);\n  }\n}\n\nmodule.exports = {\n  isAncestor: isAncestor,\n  getLowestCommonAncestor: getLowestCommonAncestor,\n  getParentInstance: getParentInstance,\n  traverseTwoPhase: traverseTwoPhase,\n  traverseEnterLeave: traverseEnterLeave\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDOMTreeTraversal.js\n// module id = 326\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactUpdates = require('./ReactUpdates');\nvar Transaction = require('./Transaction');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function () {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\n_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  }\n});\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function (callback, a, b, c, d, e) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      return callback(a, b, c, d, e);\n    } else {\n      return transaction.perform(callback, null, a, b, c, d, e);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDefaultBatchingStrategy.js\n// module id = 327\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ARIADOMPropertyConfig = require('./ARIADOMPropertyConfig');\nvar BeforeInputEventPlugin = require('./BeforeInputEventPlugin');\nvar ChangeEventPlugin = require('./ChangeEventPlugin');\nvar DefaultEventPluginOrder = require('./DefaultEventPluginOrder');\nvar EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');\nvar HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\nvar ReactDOMComponent = require('./ReactDOMComponent');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactDOMEmptyComponent = require('./ReactDOMEmptyComponent');\nvar ReactDOMTreeTraversal = require('./ReactDOMTreeTraversal');\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactEventListener = require('./ReactEventListener');\nvar ReactInjection = require('./ReactInjection');\nvar ReactReconcileTransaction = require('./ReactReconcileTransaction');\nvar SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');\nvar SelectEventPlugin = require('./SelectEventPlugin');\nvar SimpleEventPlugin = require('./SimpleEventPlugin');\n\nvar alreadyInjected = false;\n\nfunction inject() {\n  if (alreadyInjected) {\n    // TODO: This is currently true because these injections are shared between\n    // the client and the server package. They should be built independently\n    // and not share any injection state. Then this problem will be solved.\n    return;\n  }\n  alreadyInjected = true;\n\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);\n  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);\n\n  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {\n    return new ReactDOMEmptyComponent(instantiate);\n  });\n\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n}\n\nmodule.exports = {\n  inject: inject\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactDefaultInjection.js\n// module id = 328\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue(false);\n}\n\nvar ReactEventEmitterMixin = {\n\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   */\n  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactEventEmitterMixin.js\n// module id = 330\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar PooledClass = require('./PooledClass');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar getEventTarget = require('./getEventTarget');\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\n/**\n * Find the deepest React component completely containing the root of the\n * passed-in instance (for use when entire React trees are nested within each\n * other). If React trees are not nested, returns null.\n */\nfunction findParent(inst) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  while (inst._hostParent) {\n    inst = inst._hostParent;\n  }\n  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);\n  var container = rootNode.parentNode;\n  return ReactDOMComponentTree.getClosestInstanceFromNode(container);\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\n_assign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);\n  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = targetInst;\n  do {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = ancestor && findParent(ancestor);\n  } while (ancestor);\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    targetInst = bookKeeping.ancestors[i];\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} element Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} element Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactEventListener.js\n// module id = 331\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactHostComponent = require('./ReactHostComponent');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar ReactInjection = {\n  Component: ReactComponentEnvironment.injection,\n  DOMProperty: DOMProperty.injection,\n  EmptyComponent: ReactEmptyComponent.injection,\n  EventPluginHub: EventPluginHub.injection,\n  EventPluginUtils: EventPluginUtils.injection,\n  EventEmitter: ReactBrowserEventEmitter.injection,\n  HostComponent: ReactHostComponent.injection,\n  Updates: ReactUpdates.injection\n};\n\nmodule.exports = ReactInjection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactInjection.js\n// module id = 332\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar adler32 = require('./adler32');\n\nvar TAG_END = /\\/?>/;\nvar COMMENT_START = /^<\\!\\-\\-/;\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function (markup) {\n    var checksum = adler32(markup);\n\n    // Add checksum (handle both parent tags, comments and self-closing tags)\n    if (COMMENT_START.test(markup)) {\n      return markup;\n    } else {\n      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n    }\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function (markup, element) {\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactMarkupChecksum.js\n// module id = 333\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactChildReconciler = require('./ReactChildReconciler');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar flattenChildren = require('./flattenChildren');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Make an update for markup to be rendered and inserted at a supplied index.\n *\n * @param {string} markup Markup that renders into an element.\n * @param {number} toIndex Destination index.\n * @private\n */\nfunction makeInsertMarkup(markup, afterNode, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'INSERT_MARKUP',\n    content: markup,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: toIndex,\n    afterNode: afterNode\n  };\n}\n\n/**\n * Make an update for moving an existing element to another index.\n *\n * @param {number} fromIndex Source index of the existing element.\n * @param {number} toIndex Destination index of the element.\n * @private\n */\nfunction makeMove(child, afterNode, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'MOVE_EXISTING',\n    content: null,\n    fromIndex: child._mountIndex,\n    fromNode: ReactReconciler.getHostNode(child),\n    toIndex: toIndex,\n    afterNode: afterNode\n  };\n}\n\n/**\n * Make an update for removing an element at an index.\n *\n * @param {number} fromIndex Index of the element to remove.\n * @private\n */\nfunction makeRemove(child, node) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'REMOVE_NODE',\n    content: null,\n    fromIndex: child._mountIndex,\n    fromNode: node,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Make an update for setting the markup of a node.\n *\n * @param {string} markup Markup that renders into an element.\n * @private\n */\nfunction makeSetMarkup(markup) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'SET_MARKUP',\n    content: markup,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Make an update for setting the text content.\n *\n * @param {string} textContent Text content to set.\n * @private\n */\nfunction makeTextContent(textContent) {\n  // NOTE: Null values reduce hidden classes.\n  return {\n    type: 'TEXT_CONTENT',\n    content: textContent,\n    fromIndex: null,\n    fromNode: null,\n    toIndex: null,\n    afterNode: null\n  };\n}\n\n/**\n * Push an update, if any, onto the queue. Creates a new queue if none is\n * passed and always returns the queue. Mutative.\n */\nfunction enqueue(queue, update) {\n  if (update) {\n    queue = queue || [];\n    queue.push(update);\n  }\n  return queue;\n}\n\n/**\n * Processes any enqueued updates.\n *\n * @private\n */\nfunction processQueue(inst, updateQueue) {\n  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);\n}\n\nvar setChildrenForInstrumentation = emptyFunction;\nif (process.env.NODE_ENV !== 'production') {\n  var getDebugID = function (inst) {\n    if (!inst._debugID) {\n      // Check for ART-like instances. TODO: This is silly/gross.\n      var internal;\n      if (internal = ReactInstanceMap.get(inst)) {\n        inst = internal;\n      }\n    }\n    return inst._debugID;\n  };\n  setChildrenForInstrumentation = function (children) {\n    var debugID = getDebugID(this);\n    // TODO: React Native empty components are also multichild.\n    // This means they still get into this method but don't have _debugID.\n    if (debugID !== 0) {\n      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {\n        return children[key]._debugID;\n      }) : []);\n    }\n  };\n}\n\n/**\n * ReactMultiChild are capable of reconciling multiple children.\n *\n * @class ReactMultiChild\n * @internal\n */\nvar ReactMultiChild = {\n\n  /**\n   * Provides common functionality for components that must reconcile multiple\n   * children. This is used by `ReactDOMComponent` to mount, update, and\n   * unmount child components.\n   *\n   * @lends {ReactMultiChild.prototype}\n   */\n  Mixin: {\n\n    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\n      if (process.env.NODE_ENV !== 'production') {\n        var selfDebugID = getDebugID(this);\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n        }\n      }\n      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n    },\n\n    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {\n      var nextChildren;\n      var selfDebugID = 0;\n      if (process.env.NODE_ENV !== 'production') {\n        selfDebugID = getDebugID(this);\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n          return nextChildren;\n        }\n      }\n      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);\n      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);\n      return nextChildren;\n    },\n\n    /**\n     * Generates a \"mount image\" for each of the supplied children. In the case\n     * of `ReactDOMComponent`, a mount image is a string of markup.\n     *\n     * @param {?object} nestedChildren Nested child maps.\n     * @return {array} An array of mounted representations.\n     * @internal\n     */\n    mountChildren: function (nestedChildren, transaction, context) {\n      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\n      this._renderedChildren = children;\n\n      var mountImages = [];\n      var index = 0;\n      for (var name in children) {\n        if (children.hasOwnProperty(name)) {\n          var child = children[name];\n          var selfDebugID = 0;\n          if (process.env.NODE_ENV !== 'production') {\n            selfDebugID = getDebugID(this);\n          }\n          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);\n          child._mountIndex = index++;\n          mountImages.push(mountImage);\n        }\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        setChildrenForInstrumentation.call(this, children);\n      }\n\n      return mountImages;\n    },\n\n    /**\n     * Replaces any rendered children with a text content string.\n     *\n     * @param {string} nextContent String of content.\n     * @internal\n     */\n    updateTextContent: function (nextContent) {\n      var prevChildren = this._renderedChildren;\n      // Remove any rendered children.\n      ReactChildReconciler.unmountChildren(prevChildren, false);\n      for (var name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name)) {\n          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n        }\n      }\n      // Set new text content.\n      var updates = [makeTextContent(nextContent)];\n      processQueue(this, updates);\n    },\n\n    /**\n     * Replaces any rendered children with a markup string.\n     *\n     * @param {string} nextMarkup String of markup.\n     * @internal\n     */\n    updateMarkup: function (nextMarkup) {\n      var prevChildren = this._renderedChildren;\n      // Remove any rendered children.\n      ReactChildReconciler.unmountChildren(prevChildren, false);\n      for (var name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name)) {\n          !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;\n        }\n      }\n      var updates = [makeSetMarkup(nextMarkup)];\n      processQueue(this, updates);\n    },\n\n    /**\n     * Updates the rendered children with new children.\n     *\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     */\n    updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      // Hook used by React ART\n      this._updateChildren(nextNestedChildrenElements, transaction, context);\n    },\n\n    /**\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @final\n     * @protected\n     */\n    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      var prevChildren = this._renderedChildren;\n      var removedNodes = {};\n      var mountImages = [];\n      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);\n      if (!nextChildren && !prevChildren) {\n        return;\n      }\n      var updates = null;\n      var name;\n      // `nextIndex` will increment for each child in `nextChildren`, but\n      // `lastIndex` will be the last index visited in `prevChildren`.\n      var nextIndex = 0;\n      var lastIndex = 0;\n      // `nextMountIndex` will increment for each newly mounted child.\n      var nextMountIndex = 0;\n      var lastPlacedNode = null;\n      for (name in nextChildren) {\n        if (!nextChildren.hasOwnProperty(name)) {\n          continue;\n        }\n        var prevChild = prevChildren && prevChildren[name];\n        var nextChild = nextChildren[name];\n        if (prevChild === nextChild) {\n          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n          prevChild._mountIndex = nextIndex;\n        } else {\n          if (prevChild) {\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n            // The `removedNodes` loop below will actually remove the child.\n          }\n          // The child must be instantiated before it's mounted.\n          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));\n          nextMountIndex++;\n        }\n        nextIndex++;\n        lastPlacedNode = ReactReconciler.getHostNode(nextChild);\n      }\n      // Remove children that are no longer present.\n      for (name in removedNodes) {\n        if (removedNodes.hasOwnProperty(name)) {\n          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));\n        }\n      }\n      if (updates) {\n        processQueue(this, updates);\n      }\n      this._renderedChildren = nextChildren;\n\n      if (process.env.NODE_ENV !== 'production') {\n        setChildrenForInstrumentation.call(this, nextChildren);\n      }\n    },\n\n    /**\n     * Unmounts all rendered children. This should be used to clean up children\n     * when this component is unmounted. It does not actually perform any\n     * backend operations.\n     *\n     * @internal\n     */\n    unmountChildren: function (safely) {\n      var renderedChildren = this._renderedChildren;\n      ReactChildReconciler.unmountChildren(renderedChildren, safely);\n      this._renderedChildren = null;\n    },\n\n    /**\n     * Moves a child component to the supplied index.\n     *\n     * @param {ReactComponent} child Component to move.\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild: function (child, afterNode, toIndex, lastIndex) {\n      // If the index of `child` is less than `lastIndex`, then it needs to\n      // be moved. Otherwise, we do not need to move it because a child will be\n      // inserted or moved before `child`.\n      if (child._mountIndex < lastIndex) {\n        return makeMove(child, afterNode, toIndex);\n      }\n    },\n\n    /**\n     * Creates a child component.\n     *\n     * @param {ReactComponent} child Component to create.\n     * @param {string} mountImage Markup to insert.\n     * @protected\n     */\n    createChild: function (child, afterNode, mountImage) {\n      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);\n    },\n\n    /**\n     * Removes a child component.\n     *\n     * @param {ReactComponent} child Child to remove.\n     * @protected\n     */\n    removeChild: function (child, node) {\n      return makeRemove(child, node);\n    },\n\n    /**\n     * Mounts a child with the supplied name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to mount.\n     * @param {string} name Name of the child.\n     * @param {number} index Index at which to insert the child.\n     * @param {ReactReconcileTransaction} transaction\n     * @private\n     */\n    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {\n      child._mountIndex = index;\n      return this.createChild(child, afterNode, mountImage);\n    },\n\n    /**\n     * Unmounts a rendered child.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to unmount.\n     * @private\n     */\n    _unmountChild: function (child, node) {\n      var update = this.removeChild(child, node);\n      child._mountIndex = null;\n      return update;\n    }\n\n  }\n\n};\n\nmodule.exports = ReactMultiChild;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactMultiChild.js\n// module id = 334\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid owner.\n * @final\n */\nfunction isValidOwner(object) {\n  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\n}\n\n/**\n * ReactOwners are capable of storing references to owned components.\n *\n * All components are capable of //being// referenced by owner components, but\n * only ReactOwner components are capable of //referencing// owned components.\n * The named reference is known as a \"ref\".\n *\n * Refs are available when mounted and updated during reconciliation.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return (\n *         <div onClick={this.handleClick}>\n *           <CustomComponent ref=\"custom\" />\n *         </div>\n *       );\n *     },\n *     handleClick: function() {\n *       this.refs.custom.handleClick();\n *     },\n *     componentDidMount: function() {\n *       this.refs.custom.initialize();\n *     }\n *   });\n *\n * Refs should rarely be used. When refs are used, they should only be done to\n * control data that is not handled by React's data flow.\n *\n * @class ReactOwner\n */\nvar ReactOwner = {\n  /**\n   * Adds a component by ref to an owner component.\n   *\n   * @param {ReactComponent} component Component to reference.\n   * @param {string} ref Name by which to refer to the component.\n   * @param {ReactOwner} owner Component on which to record the ref.\n   * @final\n   * @internal\n   */\n  addComponentAsRefTo: function (component, ref, owner) {\n    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;\n    owner.attachRef(ref, component);\n  },\n\n  /**\n   * Removes a component by ref from an owner component.\n   *\n   * @param {ReactComponent} component Component to dereference.\n   * @param {string} ref Name of the ref to remove.\n   * @param {ReactOwner} owner Component on which the ref is recorded.\n   * @final\n   * @internal\n   */\n  removeComponentAsRefFrom: function (component, ref, owner) {\n    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;\n    var ownerPublicInstance = owner.getPublicInstance();\n    // Check that `component`'s owner is still alive and that `component` is still the current ref\n    // because we do not want to detach the ref if another component stole it.\n    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {\n      owner.detachRef(ref);\n    }\n  }\n\n};\n\nmodule.exports = ReactOwner;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactOwner.js\n// module id = 335\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactPropTypesSecret.js\n// module id = 336\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar Transaction = require('./Transaction');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function () {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n   *   restores the previous value.\n   */\n  close: function (previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function () {\n    this.reactMountReady.notifyAll();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\nif (process.env.NODE_ENV !== 'production') {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction(useCreateElement) {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactDOMTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = useCreateElement;\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap procedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return ReactUpdateQueue;\n  },\n\n  /**\n   * Save current transaction state -- if the return value from this method is\n   * passed to `rollback`, the transaction will be reset to that state.\n   */\n  checkpoint: function () {\n    // reactMountReady is the our only stateful wrapper\n    return this.reactMountReady.checkpoint();\n  },\n\n  rollback: function (checkpoint) {\n    this.reactMountReady.rollback(checkpoint);\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\n\n_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactReconcileTransaction.js\n// module id = 337\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactOwner = require('./ReactOwner');\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function (instance, element) {\n  if (element === null || typeof element !== 'object') {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  var prevRef = null;\n  var prevOwner = null;\n  if (prevElement !== null && typeof prevElement === 'object') {\n    prevRef = prevElement.ref;\n    prevOwner = prevElement._owner;\n  }\n\n  var nextRef = null;\n  var nextOwner = null;\n  if (nextElement !== null && typeof nextElement === 'object') {\n    nextRef = nextElement.ref;\n    nextOwner = nextElement._owner;\n  }\n\n  return prevRef !== nextRef ||\n  // If owner changes but we have an unchanged function ref, don't update refs\n  typeof nextRef === 'string' && nextOwner !== prevOwner;\n};\n\nReactRef.detachRefs = function (instance, element) {\n  if (element === null || typeof element !== 'object') {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactRef.js\n// module id = 338\n// module chunks = 0","/**\n * Copyright 2014-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\nvar Transaction = require('./Transaction');\nvar ReactInstrumentation = require('./ReactInstrumentation');\nvar ReactServerUpdateQueue = require('./ReactServerUpdateQueue');\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [];\n\nif (process.env.NODE_ENV !== 'production') {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\nvar noopCallbackQueue = {\n  enqueue: function () {}\n};\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.useCreateElement = false;\n  this.updateQueue = new ReactServerUpdateQueue(this);\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap procedures.\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return noopCallbackQueue;\n  },\n\n  /**\n   * @return {object} The queue to collect React async events.\n   */\n  getUpdateQueue: function () {\n    return this.updateQueue;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {},\n\n  checkpoint: function () {},\n\n  rollback: function () {}\n};\n\n_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactServerRenderingTransaction.js\n// module id = 339\n// module chunks = 0","/**\n * Copyright 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\nvar warning = require('fbjs/lib/warning');\n\nfunction warnNoop(publicInstance, callerName) {\n  if (process.env.NODE_ENV !== 'production') {\n    var constructor = publicInstance.constructor;\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;\n  }\n}\n\n/**\n * This is the update queue used for server rendering.\n * It delegates to ReactUpdateQueue while server rendering is in progress and\n * switches to ReactNoopUpdateQueue after the transaction has completed.\n * @class ReactServerUpdateQueue\n * @param {Transaction} transaction\n */\n\nvar ReactServerUpdateQueue = function () {\n  function ReactServerUpdateQueue(transaction) {\n    _classCallCheck(this, ReactServerUpdateQueue);\n\n    this.transaction = transaction;\n  }\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n\n\n  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {\n    return false;\n  };\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);\n    }\n  };\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueForceUpdate(publicInstance);\n    } else {\n      warnNoop(publicInstance, 'forceUpdate');\n    }\n  };\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object|function} completeState Next state.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);\n    } else {\n      warnNoop(publicInstance, 'replaceState');\n    }\n  };\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object|function} partialState Next partial state to be merged with state.\n   * @internal\n   */\n\n\n  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {\n    if (this.transaction.isInTransaction()) {\n      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);\n    } else {\n      warnNoop(publicInstance, 'setState');\n    }\n  };\n\n  return ReactServerUpdateQueue;\n}();\n\nmodule.exports = ReactServerUpdateQueue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactServerUpdateQueue.js\n// module id = 340\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nmodule.exports = '15.5.4';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/ReactVersion.js\n// module id = 341\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar NS = {\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace'\n};\n\n// We use attributes for everything SVG so let's avoid some duplication and run\n// code instead.\n// The following are all specified in the HTML config already so we exclude here.\n// - class (as className)\n// - color\n// - height\n// - id\n// - lang\n// - max\n// - media\n// - method\n// - min\n// - name\n// - style\n// - target\n// - type\n// - width\nvar ATTRS = {\n  accentHeight: 'accent-height',\n  accumulate: 0,\n  additive: 0,\n  alignmentBaseline: 'alignment-baseline',\n  allowReorder: 'allowReorder',\n  alphabetic: 0,\n  amplitude: 0,\n  arabicForm: 'arabic-form',\n  ascent: 0,\n  attributeName: 'attributeName',\n  attributeType: 'attributeType',\n  autoReverse: 'autoReverse',\n  azimuth: 0,\n  baseFrequency: 'baseFrequency',\n  baseProfile: 'baseProfile',\n  baselineShift: 'baseline-shift',\n  bbox: 0,\n  begin: 0,\n  bias: 0,\n  by: 0,\n  calcMode: 'calcMode',\n  capHeight: 'cap-height',\n  clip: 0,\n  clipPath: 'clip-path',\n  clipRule: 'clip-rule',\n  clipPathUnits: 'clipPathUnits',\n  colorInterpolation: 'color-interpolation',\n  colorInterpolationFilters: 'color-interpolation-filters',\n  colorProfile: 'color-profile',\n  colorRendering: 'color-rendering',\n  contentScriptType: 'contentScriptType',\n  contentStyleType: 'contentStyleType',\n  cursor: 0,\n  cx: 0,\n  cy: 0,\n  d: 0,\n  decelerate: 0,\n  descent: 0,\n  diffuseConstant: 'diffuseConstant',\n  direction: 0,\n  display: 0,\n  divisor: 0,\n  dominantBaseline: 'dominant-baseline',\n  dur: 0,\n  dx: 0,\n  dy: 0,\n  edgeMode: 'edgeMode',\n  elevation: 0,\n  enableBackground: 'enable-background',\n  end: 0,\n  exponent: 0,\n  externalResourcesRequired: 'externalResourcesRequired',\n  fill: 0,\n  fillOpacity: 'fill-opacity',\n  fillRule: 'fill-rule',\n  filter: 0,\n  filterRes: 'filterRes',\n  filterUnits: 'filterUnits',\n  floodColor: 'flood-color',\n  floodOpacity: 'flood-opacity',\n  focusable: 0,\n  fontFamily: 'font-family',\n  fontSize: 'font-size',\n  fontSizeAdjust: 'font-size-adjust',\n  fontStretch: 'font-stretch',\n  fontStyle: 'font-style',\n  fontVariant: 'font-variant',\n  fontWeight: 'font-weight',\n  format: 0,\n  from: 0,\n  fx: 0,\n  fy: 0,\n  g1: 0,\n  g2: 0,\n  glyphName: 'glyph-name',\n  glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n  glyphOrientationVertical: 'glyph-orientation-vertical',\n  glyphRef: 'glyphRef',\n  gradientTransform: 'gradientTransform',\n  gradientUnits: 'gradientUnits',\n  hanging: 0,\n  horizAdvX: 'horiz-adv-x',\n  horizOriginX: 'horiz-origin-x',\n  ideographic: 0,\n  imageRendering: 'image-rendering',\n  'in': 0,\n  in2: 0,\n  intercept: 0,\n  k: 0,\n  k1: 0,\n  k2: 0,\n  k3: 0,\n  k4: 0,\n  kernelMatrix: 'kernelMatrix',\n  kernelUnitLength: 'kernelUnitLength',\n  kerning: 0,\n  keyPoints: 'keyPoints',\n  keySplines: 'keySplines',\n  keyTimes: 'keyTimes',\n  lengthAdjust: 'lengthAdjust',\n  letterSpacing: 'letter-spacing',\n  lightingColor: 'lighting-color',\n  limitingConeAngle: 'limitingConeAngle',\n  local: 0,\n  markerEnd: 'marker-end',\n  markerMid: 'marker-mid',\n  markerStart: 'marker-start',\n  markerHeight: 'markerHeight',\n  markerUnits: 'markerUnits',\n  markerWidth: 'markerWidth',\n  mask: 0,\n  maskContentUnits: 'maskContentUnits',\n  maskUnits: 'maskUnits',\n  mathematical: 0,\n  mode: 0,\n  numOctaves: 'numOctaves',\n  offset: 0,\n  opacity: 0,\n  operator: 0,\n  order: 0,\n  orient: 0,\n  orientation: 0,\n  origin: 0,\n  overflow: 0,\n  overlinePosition: 'overline-position',\n  overlineThickness: 'overline-thickness',\n  paintOrder: 'paint-order',\n  panose1: 'panose-1',\n  pathLength: 'pathLength',\n  patternContentUnits: 'patternContentUnits',\n  patternTransform: 'patternTransform',\n  patternUnits: 'patternUnits',\n  pointerEvents: 'pointer-events',\n  points: 0,\n  pointsAtX: 'pointsAtX',\n  pointsAtY: 'pointsAtY',\n  pointsAtZ: 'pointsAtZ',\n  preserveAlpha: 'preserveAlpha',\n  preserveAspectRatio: 'preserveAspectRatio',\n  primitiveUnits: 'primitiveUnits',\n  r: 0,\n  radius: 0,\n  refX: 'refX',\n  refY: 'refY',\n  renderingIntent: 'rendering-intent',\n  repeatCount: 'repeatCount',\n  repeatDur: 'repeatDur',\n  requiredExtensions: 'requiredExtensions',\n  requiredFeatures: 'requiredFeatures',\n  restart: 0,\n  result: 0,\n  rotate: 0,\n  rx: 0,\n  ry: 0,\n  scale: 0,\n  seed: 0,\n  shapeRendering: 'shape-rendering',\n  slope: 0,\n  spacing: 0,\n  specularConstant: 'specularConstant',\n  specularExponent: 'specularExponent',\n  speed: 0,\n  spreadMethod: 'spreadMethod',\n  startOffset: 'startOffset',\n  stdDeviation: 'stdDeviation',\n  stemh: 0,\n  stemv: 0,\n  stitchTiles: 'stitchTiles',\n  stopColor: 'stop-color',\n  stopOpacity: 'stop-opacity',\n  strikethroughPosition: 'strikethrough-position',\n  strikethroughThickness: 'strikethrough-thickness',\n  string: 0,\n  stroke: 0,\n  strokeDasharray: 'stroke-dasharray',\n  strokeDashoffset: 'stroke-dashoffset',\n  strokeLinecap: 'stroke-linecap',\n  strokeLinejoin: 'stroke-linejoin',\n  strokeMiterlimit: 'stroke-miterlimit',\n  strokeOpacity: 'stroke-opacity',\n  strokeWidth: 'stroke-width',\n  surfaceScale: 'surfaceScale',\n  systemLanguage: 'systemLanguage',\n  tableValues: 'tableValues',\n  targetX: 'targetX',\n  targetY: 'targetY',\n  textAnchor: 'text-anchor',\n  textDecoration: 'text-decoration',\n  textRendering: 'text-rendering',\n  textLength: 'textLength',\n  to: 0,\n  transform: 0,\n  u1: 0,\n  u2: 0,\n  underlinePosition: 'underline-position',\n  underlineThickness: 'underline-thickness',\n  unicode: 0,\n  unicodeBidi: 'unicode-bidi',\n  unicodeRange: 'unicode-range',\n  unitsPerEm: 'units-per-em',\n  vAlphabetic: 'v-alphabetic',\n  vHanging: 'v-hanging',\n  vIdeographic: 'v-ideographic',\n  vMathematical: 'v-mathematical',\n  values: 0,\n  vectorEffect: 'vector-effect',\n  version: 0,\n  vertAdvY: 'vert-adv-y',\n  vertOriginX: 'vert-origin-x',\n  vertOriginY: 'vert-origin-y',\n  viewBox: 'viewBox',\n  viewTarget: 'viewTarget',\n  visibility: 0,\n  widths: 0,\n  wordSpacing: 'word-spacing',\n  writingMode: 'writing-mode',\n  x: 0,\n  xHeight: 'x-height',\n  x1: 0,\n  x2: 0,\n  xChannelSelector: 'xChannelSelector',\n  xlinkActuate: 'xlink:actuate',\n  xlinkArcrole: 'xlink:arcrole',\n  xlinkHref: 'xlink:href',\n  xlinkRole: 'xlink:role',\n  xlinkShow: 'xlink:show',\n  xlinkTitle: 'xlink:title',\n  xlinkType: 'xlink:type',\n  xmlBase: 'xml:base',\n  xmlns: 0,\n  xmlnsXlink: 'xmlns:xlink',\n  xmlLang: 'xml:lang',\n  xmlSpace: 'xml:space',\n  y: 0,\n  y1: 0,\n  y2: 0,\n  yChannelSelector: 'yChannelSelector',\n  z: 0,\n  zoomAndPan: 'zoomAndPan'\n};\n\nvar SVGDOMPropertyConfig = {\n  Properties: {},\n  DOMAttributeNamespaces: {\n    xlinkActuate: NS.xlink,\n    xlinkArcrole: NS.xlink,\n    xlinkHref: NS.xlink,\n    xlinkRole: NS.xlink,\n    xlinkShow: NS.xlink,\n    xlinkTitle: NS.xlink,\n    xlinkType: NS.xlink,\n    xmlBase: NS.xml,\n    xmlLang: NS.xml,\n    xmlSpace: NS.xml\n  },\n  DOMAttributeNames: {}\n};\n\nObject.keys(ATTRS).forEach(function (key) {\n  SVGDOMPropertyConfig.Properties[key] = 0;\n  if (ATTRS[key]) {\n    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];\n  }\n});\n\nmodule.exports = SVGDOMPropertyConfig;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SVGDOMPropertyConfig.js\n// module id = 342\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getActiveElement = require('fbjs/lib/getActiveElement');\nvar isTextInputElement = require('./isTextInputElement');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelect',\n      captured: 'onSelectCapture'\n    },\n    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']\n  }\n};\n\nvar activeElement = null;\nvar activeElementInst = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n// Track whether a listener exists for this plugin. If none exist, we do\n// not extract events. See #3639.\nvar hasListener = false;\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    if (!hasListener) {\n      return null;\n    }\n\n    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case 'topFocus':\n        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {\n          activeElement = targetNode;\n          activeElementInst = targetInst;\n          lastSelection = null;\n        }\n        break;\n      case 'topBlur':\n        activeElement = null;\n        activeElementInst = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case 'topMouseDown':\n        mouseDown = true;\n        break;\n      case 'topContextMenu':\n      case 'topMouseUp':\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case 'topSelectionChange':\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case 'topKeyDown':\n      case 'topKeyUp':\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    if (registrationName === 'onSelect') {\n      hasListener = true;\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SelectEventPlugin.js\n// module id = 343\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticAnimationEvent = require('./SyntheticAnimationEvent');\nvar SyntheticClipboardEvent = require('./SyntheticClipboardEvent');\nvar SyntheticEvent = require('./SyntheticEvent');\nvar SyntheticFocusEvent = require('./SyntheticFocusEvent');\nvar SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\nvar SyntheticDragEvent = require('./SyntheticDragEvent');\nvar SyntheticTouchEvent = require('./SyntheticTouchEvent');\nvar SyntheticTransitionEvent = require('./SyntheticTransitionEvent');\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar SyntheticWheelEvent = require('./SyntheticWheelEvent');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getEventCharCode = require('./getEventCharCode');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Turns\n * ['abort', ...]\n * into\n * eventTypes = {\n *   'abort': {\n *     phasedRegistrationNames: {\n *       bubbled: 'onAbort',\n *       captured: 'onAbortCapture',\n *     },\n *     dependencies: ['topAbort'],\n *   },\n *   ...\n * };\n * topLevelEventsToDispatchConfig = {\n *   'topAbort': { sameConfig }\n * };\n */\nvar eventTypes = {};\nvar topLevelEventsToDispatchConfig = {};\n['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {\n  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n  var onEvent = 'on' + capitalizedEvent;\n  var topEvent = 'top' + capitalizedEvent;\n\n  var type = {\n    phasedRegistrationNames: {\n      bubbled: onEvent,\n      captured: onEvent + 'Capture'\n    },\n    dependencies: [topEvent]\n  };\n  eventTypes[event] = type;\n  topLevelEventsToDispatchConfig[topEvent] = type;\n});\n\nvar onClickListeners = {};\n\nfunction getDictionaryKey(inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n}\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nvar SimpleEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case 'topAbort':\n      case 'topCanPlay':\n      case 'topCanPlayThrough':\n      case 'topDurationChange':\n      case 'topEmptied':\n      case 'topEncrypted':\n      case 'topEnded':\n      case 'topError':\n      case 'topInput':\n      case 'topInvalid':\n      case 'topLoad':\n      case 'topLoadedData':\n      case 'topLoadedMetadata':\n      case 'topLoadStart':\n      case 'topPause':\n      case 'topPlay':\n      case 'topPlaying':\n      case 'topProgress':\n      case 'topRateChange':\n      case 'topReset':\n      case 'topSeeked':\n      case 'topSeeking':\n      case 'topStalled':\n      case 'topSubmit':\n      case 'topSuspend':\n      case 'topTimeUpdate':\n      case 'topVolumeChange':\n      case 'topWaiting':\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case 'topKeyPress':\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case 'topKeyDown':\n      case 'topKeyUp':\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case 'topBlur':\n      case 'topFocus':\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case 'topClick':\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case 'topDoubleClick':\n      case 'topMouseDown':\n      case 'topMouseMove':\n      case 'topMouseUp':\n      // TODO: Disabled elements should not respond to mouse events\n      /* falls through */\n      case 'topMouseOut':\n      case 'topMouseOver':\n      case 'topContextMenu':\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case 'topDrag':\n      case 'topDragEnd':\n      case 'topDragEnter':\n      case 'topDragExit':\n      case 'topDragLeave':\n      case 'topDragOver':\n      case 'topDragStart':\n      case 'topDrop':\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case 'topTouchCancel':\n      case 'topTouchEnd':\n      case 'topTouchMove':\n      case 'topTouchStart':\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case 'topAnimationEnd':\n      case 'topAnimationIteration':\n      case 'topAnimationStart':\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n      case 'topTransitionEnd':\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n      case 'topScroll':\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case 'topWheel':\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case 'topCopy':\n      case 'topCut':\n      case 'topPaste':\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;\n    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    // Mobile Safari does not fire properly bubble click events on\n    // non-interactive elements, which means delegated click listeners do not\n    // fire. The workaround for this bug involves attaching an empty click\n    // listener on the target node.\n    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n      var key = getDictionaryKey(inst);\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      if (!onClickListeners[key]) {\n        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);\n      }\n    }\n  },\n\n  willDeleteListener: function (inst, registrationName) {\n    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n      var key = getDictionaryKey(inst);\n      onClickListeners[key].remove();\n      delete onClickListeners[key];\n    }\n  }\n\n};\n\nmodule.exports = SimpleEventPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SimpleEventPlugin.js\n// module id = 344\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface\n * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent\n */\nvar AnimationEventInterface = {\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);\n\nmodule.exports = SyntheticAnimationEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticAnimationEvent.js\n// module id = 345\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticClipboardEvent.js\n// module id = 346\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar CompositionEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\n\nmodule.exports = SyntheticCompositionEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticCompositionEvent.js\n// module id = 347\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticDragEvent.js\n// module id = 348\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar FocusEventInterface = {\n  relatedTarget: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\nmodule.exports = SyntheticFocusEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticFocusEvent.js\n// module id = 349\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar InputEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\n\nmodule.exports = SyntheticInputEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticInputEvent.js\n// module id = 350\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventCharCode = require('./getEventCharCode');\nvar getEventKey = require('./getEventKey');\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function (event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function (event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function (event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticKeyboardEvent.js\n// module id = 351\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticTouchEvent.js\n// module id = 352\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent\n */\nvar TransitionEventInterface = {\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);\n\nmodule.exports = SyntheticTransitionEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticTransitionEvent.js\n// module id = 353\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function (event) {\n    return 'deltaX' in event ? event.deltaX :\n    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n  deltaY: function (event) {\n    return 'deltaY' in event ? event.deltaY :\n    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY :\n    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/SyntheticWheelEvent.js\n// module id = 354\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar MOD = 65521;\n\n// adler32 is not cryptographically strong, and is only used to sanity check that\n// markup generated on the server matches the markup generated on the client.\n// This implementation (a modified version of the SheetJS version) has been optimized\n// for our use case, at the expense of conforming to the adler32 specification\n// for non-ascii inputs.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  var i = 0;\n  var l = data.length;\n  var m = l & ~0x3;\n  while (i < m) {\n    var n = Math.min(i + 4096, m);\n    for (; i < n; i += 4) {\n      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n    }\n    a %= MOD;\n    b %= MOD;\n  }\n  for (; i < l; i++) {\n    b += a += data.charCodeAt(i);\n  }\n  a %= MOD;\n  b %= MOD;\n  return a | b << 16;\n}\n\nmodule.exports = adler32;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/adler32.js\n// module id = 355\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar warning = require('fbjs/lib/warning');\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\nvar styleWarnings = {};\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @param {ReactDOMComponent} component\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value, component) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    if (process.env.NODE_ENV !== 'production') {\n      // Allow '0' to pass through without warning. 0 is already special and\n      // doesn't require units, so we don't need to warn about it.\n      if (component && value !== '0') {\n        var owner = component._currentElement._owner;\n        var ownerName = owner ? owner.getName() : null;\n        if (ownerName && !styleWarnings[ownerName]) {\n          styleWarnings[ownerName] = {};\n        }\n        var warned = false;\n        if (ownerName) {\n          var warnings = styleWarnings[ownerName];\n          warned = warnings[name];\n          if (!warned) {\n            warnings[name] = true;\n          }\n        }\n        if (!warned) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;\n        }\n      }\n    }\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/dangerousStyleValue.js\n// module id = 356\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstanceMap = require('./ReactInstanceMap');\n\nvar getHostComponentFromComposite = require('./getHostComponentFromComposite');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {?DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (process.env.NODE_ENV !== 'production') {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (componentOrElement.nodeType === 1) {\n    return componentOrElement;\n  }\n\n  var inst = ReactInstanceMap.get(componentOrElement);\n  if (inst) {\n    inst = getHostComponentFromComposite(inst);\n    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;\n  }\n\n  if (typeof componentOrElement.render === 'function') {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;\n  } else {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;\n  }\n}\n\nmodule.exports = findDOMNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/findDOMNode.js\n// module id = 357\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n * @param {number=} selfDebugID Optional debugID of the current internal instance.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\n  // We found a component instance.\n  if (traverseContext && typeof traverseContext === 'object') {\n    var result = traverseContext;\n    var keyUnique = result[name] === undefined;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ReactComponentTreeHook) {\n        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n      }\n      if (!keyUnique) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n      }\n    }\n    if (keyUnique && child != null) {\n      result[name] = child;\n    }\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children, selfDebugID) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n\n  if (process.env.NODE_ENV !== 'production') {\n    traverseAllChildren(children, function (traverseContext, child, name) {\n      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\n    }, result);\n  } else {\n    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  }\n  return result;\n}\n\nmodule.exports = flattenChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/flattenChildren.js\n// module id = 358\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar getEventCharCode = require('./getEventCharCode');\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  'Esc': 'Escape',\n  'Spacebar': ' ',\n  'Left': 'ArrowLeft',\n  'Up': 'ArrowUp',\n  'Right': 'ArrowRight',\n  'Down': 'ArrowDown',\n  'Del': 'Delete',\n  'Win': 'OS',\n  'Menu': 'ContextMenu',\n  'Apps': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'MozPrintableKey': 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getEventKey.js\n// module id = 359\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\n/* global Symbol */\n\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getIteratorFn.js\n// module id = 360\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\n\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getNodeForCharacterOffset.js\n// module id = 361\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n  prefixes['ms' + styleProp] = 'MS' + eventName;\n  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();\n\n  return prefixes;\n}\n\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\nvar vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n};\n\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\nvar prefixedEventNames = {};\n\n/**\n * Element to check for prefixes on.\n */\nvar style = {};\n\n/**\n * Bootstrap if a DOM exists.\n */\nif (ExecutionEnvironment.canUseDOM) {\n  style = document.createElement('div').style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  }\n\n  // Same as above\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  var prefixMap = vendorPrefixes[eventName];\n\n  for (var styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\n    }\n  }\n\n  return '';\n}\n\nmodule.exports = getVendorPrefixedEventName;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/getVendorPrefixedEventName.js\n// module id = 362\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextContentForBrowser(value) + '\"';\n}\n\nmodule.exports = quoteAttributeValueForBrowser;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/quoteAttributeValueForBrowser.js\n// module id = 363\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactMount = require('./ReactMount');\n\nmodule.exports = ReactMount.renderSubtreeIntoContainer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/lib/renderSubtreeIntoContainer.js\n// module id = 364\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-scripts/config/polyfills.js\n// module id = 365\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-scripts/~/whatwg-fetch/fetch.js\n// module id = 366\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\nvar ReactElement = require('./ReactElement');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar traverseAllChildren = require('./traverseAllChildren');\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.func = forEachFunction;\n  this.context = forEachContext;\n  this.count = 0;\n}\nForEachBookKeeping.prototype.destructor = function () {\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n  this.result = mapResult;\n  this.keyPrefix = keyPrefix;\n  this.func = mapFunction;\n  this.context = mapContext;\n  this.count = 0;\n}\nMapBookKeeping.prototype.destructor = function () {\n  this.result = null;\n  this.keyPrefix = null;\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (ReactElement.isValidElement(mappedChild)) {\n      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n  count: countChildren,\n  toArray: toArray\n};\n\nmodule.exports = ReactChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactChildren.js\n// module id = 369\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant'),\n    _assign = require('object-assign');\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\n\n\nvar injectedMixins = [];\n\n/**\n * Composite components are higher-level components that compose other composite\n * or host components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will be available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: 'DEFINE_MANY',\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: 'DEFINE_MANY',\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: 'DEFINE_MANY',\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: 'DEFINE_MANY',\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: 'DEFINE_MANY',\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: 'DEFINE_MANY_MERGED',\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: 'DEFINE_MANY_MERGED',\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: 'DEFINE_MANY_MERGED',\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @required\n   */\n  render: 'DEFINE_ONCE',\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: 'DEFINE_MANY',\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: 'DEFINE_MANY',\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: 'DEFINE_ONCE',\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: 'DEFINE_MANY',\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: 'DEFINE_MANY',\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: 'OVERRIDE_BASE'\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function (Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function (Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function (Constructor, childContextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, childContextTypes, 'childContext');\n    }\n    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);\n  },\n  contextTypes: function (Constructor, contextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, contextTypes, 'context');\n    }\n    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function (Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function (Constructor, propTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, propTypes, 'prop');\n    }\n    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n  },\n  statics: function (Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  },\n  autobind: function () {} };\n\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but only in __DEV__\n      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;\n    }\n  }\n}\n\nfunction validateMethodOverride(isAlreadyDefined, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    !(specPolicy === 'OVERRIDE_BASE') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (isAlreadyDefined) {\n    !(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classes.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    if (process.env.NODE_ENV !== 'production') {\n      var typeofSpec = typeof spec;\n      var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n      process.env.NODE_ENV !== 'production' ? warning(isMixinValid, '%s: You\\'re attempting to include a mixin that is either null ' + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec) : void 0;\n    }\n\n    return;\n  }\n\n  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;\n  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;\n\n  var proto = Constructor.prototype;\n  var autoBindPairs = proto.__reactAutoBindPairs;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above.\n      continue;\n    }\n\n    var property = spec[name];\n    var isAlreadyDefined = proto.hasOwnProperty(name);\n    validateMethodOverride(isAlreadyDefined, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n      if (shouldAutoBind) {\n        autoBindPairs.push(name, property);\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride.\n          !(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === 'DEFINE_MANY_MERGED') {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === 'DEFINE_MANY') {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (process.env.NODE_ENV !== 'production') {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = name in RESERVED_SPEC_KEYS;\n    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;\n\n    var isInherited = name in Constructor;\n    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (process.env.NODE_ENV !== 'production') {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    boundMethod.bind = function (newThis) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;\n      } else if (!args.length) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  var pairs = component.__reactAutoBindPairs;\n  for (var i = 0; i < pairs.length; i += 2) {\n    var autoBindKey = pairs[i];\n    var method = pairs[i + 1];\n    component[autoBindKey] = bindAutoBindMethod(component, method);\n  }\n}\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function (newState, callback) {\n    this.updater.enqueueReplaceState(this, newState);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback, 'replaceState');\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function () {\n    return this.updater.isMounted(this);\n  }\n};\n\nvar ReactClassComponent = function () {};\n_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\nvar didWarnDeprecated = false;\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function (spec) {\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(didWarnDeprecated, '%s: React.createClass is deprecated and will be removed in version 16. ' + 'Use plain JavaScript classes instead. If you\\'re not yet ready to ' + 'migrate, create-react-class is available on npm as a ' + 'drop-in replacement.', spec && spec.displayName || 'A Component') : void 0;\n      didWarnDeprecated = true;\n    }\n\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function (props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (initialState === undefined && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function (mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactClass.js\n// module id = 370\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @private\n */\nvar createDOMFactory = ReactElement.createFactory;\nif (process.env.NODE_ENV !== 'production') {\n  var ReactElementValidator = require('./ReactElementValidator');\n  createDOMFactory = ReactElementValidator.createFactory;\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n * This is also accessible via `React.DOM`.\n *\n * @public\n */\nvar ReactDOMFactories = {\n  a: createDOMFactory('a'),\n  abbr: createDOMFactory('abbr'),\n  address: createDOMFactory('address'),\n  area: createDOMFactory('area'),\n  article: createDOMFactory('article'),\n  aside: createDOMFactory('aside'),\n  audio: createDOMFactory('audio'),\n  b: createDOMFactory('b'),\n  base: createDOMFactory('base'),\n  bdi: createDOMFactory('bdi'),\n  bdo: createDOMFactory('bdo'),\n  big: createDOMFactory('big'),\n  blockquote: createDOMFactory('blockquote'),\n  body: createDOMFactory('body'),\n  br: createDOMFactory('br'),\n  button: createDOMFactory('button'),\n  canvas: createDOMFactory('canvas'),\n  caption: createDOMFactory('caption'),\n  cite: createDOMFactory('cite'),\n  code: createDOMFactory('code'),\n  col: createDOMFactory('col'),\n  colgroup: createDOMFactory('colgroup'),\n  data: createDOMFactory('data'),\n  datalist: createDOMFactory('datalist'),\n  dd: createDOMFactory('dd'),\n  del: createDOMFactory('del'),\n  details: createDOMFactory('details'),\n  dfn: createDOMFactory('dfn'),\n  dialog: createDOMFactory('dialog'),\n  div: createDOMFactory('div'),\n  dl: createDOMFactory('dl'),\n  dt: createDOMFactory('dt'),\n  em: createDOMFactory('em'),\n  embed: createDOMFactory('embed'),\n  fieldset: createDOMFactory('fieldset'),\n  figcaption: createDOMFactory('figcaption'),\n  figure: createDOMFactory('figure'),\n  footer: createDOMFactory('footer'),\n  form: createDOMFactory('form'),\n  h1: createDOMFactory('h1'),\n  h2: createDOMFactory('h2'),\n  h3: createDOMFactory('h3'),\n  h4: createDOMFactory('h4'),\n  h5: createDOMFactory('h5'),\n  h6: createDOMFactory('h6'),\n  head: createDOMFactory('head'),\n  header: createDOMFactory('header'),\n  hgroup: createDOMFactory('hgroup'),\n  hr: createDOMFactory('hr'),\n  html: createDOMFactory('html'),\n  i: createDOMFactory('i'),\n  iframe: createDOMFactory('iframe'),\n  img: createDOMFactory('img'),\n  input: createDOMFactory('input'),\n  ins: createDOMFactory('ins'),\n  kbd: createDOMFactory('kbd'),\n  keygen: createDOMFactory('keygen'),\n  label: createDOMFactory('label'),\n  legend: createDOMFactory('legend'),\n  li: createDOMFactory('li'),\n  link: createDOMFactory('link'),\n  main: createDOMFactory('main'),\n  map: createDOMFactory('map'),\n  mark: createDOMFactory('mark'),\n  menu: createDOMFactory('menu'),\n  menuitem: createDOMFactory('menuitem'),\n  meta: createDOMFactory('meta'),\n  meter: createDOMFactory('meter'),\n  nav: createDOMFactory('nav'),\n  noscript: createDOMFactory('noscript'),\n  object: createDOMFactory('object'),\n  ol: createDOMFactory('ol'),\n  optgroup: createDOMFactory('optgroup'),\n  option: createDOMFactory('option'),\n  output: createDOMFactory('output'),\n  p: createDOMFactory('p'),\n  param: createDOMFactory('param'),\n  picture: createDOMFactory('picture'),\n  pre: createDOMFactory('pre'),\n  progress: createDOMFactory('progress'),\n  q: createDOMFactory('q'),\n  rp: createDOMFactory('rp'),\n  rt: createDOMFactory('rt'),\n  ruby: createDOMFactory('ruby'),\n  s: createDOMFactory('s'),\n  samp: createDOMFactory('samp'),\n  script: createDOMFactory('script'),\n  section: createDOMFactory('section'),\n  select: createDOMFactory('select'),\n  small: createDOMFactory('small'),\n  source: createDOMFactory('source'),\n  span: createDOMFactory('span'),\n  strong: createDOMFactory('strong'),\n  style: createDOMFactory('style'),\n  sub: createDOMFactory('sub'),\n  summary: createDOMFactory('summary'),\n  sup: createDOMFactory('sup'),\n  table: createDOMFactory('table'),\n  tbody: createDOMFactory('tbody'),\n  td: createDOMFactory('td'),\n  textarea: createDOMFactory('textarea'),\n  tfoot: createDOMFactory('tfoot'),\n  th: createDOMFactory('th'),\n  thead: createDOMFactory('thead'),\n  time: createDOMFactory('time'),\n  title: createDOMFactory('title'),\n  tr: createDOMFactory('tr'),\n  track: createDOMFactory('track'),\n  u: createDOMFactory('u'),\n  ul: createDOMFactory('ul'),\n  'var': createDOMFactory('var'),\n  video: createDOMFactory('video'),\n  wbr: createDOMFactory('wbr'),\n\n  // SVG\n  circle: createDOMFactory('circle'),\n  clipPath: createDOMFactory('clipPath'),\n  defs: createDOMFactory('defs'),\n  ellipse: createDOMFactory('ellipse'),\n  g: createDOMFactory('g'),\n  image: createDOMFactory('image'),\n  line: createDOMFactory('line'),\n  linearGradient: createDOMFactory('linearGradient'),\n  mask: createDOMFactory('mask'),\n  path: createDOMFactory('path'),\n  pattern: createDOMFactory('pattern'),\n  polygon: createDOMFactory('polygon'),\n  polyline: createDOMFactory('polyline'),\n  radialGradient: createDOMFactory('radialGradient'),\n  rect: createDOMFactory('rect'),\n  stop: createDOMFactory('stop'),\n  svg: createDOMFactory('svg'),\n  text: createDOMFactory('text'),\n  tspan: createDOMFactory('tspan')\n};\n\nmodule.exports = ReactDOMFactories;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactDOMFactories.js\n// module id = 371\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPropTypeLocationNames.js\n// module id = 372\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _require = require('./ReactElement'),\n    isValidElement = _require.isValidElement;\n\nvar factory = require('prop-types/factory');\n\nmodule.exports = factory(isValidElement);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPropTypes.js\n// module id = 373\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactPureComponent(props, context, updater) {\n  // Duplicated from ReactComponent.\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = ReactComponent.prototype;\nReactPureComponent.prototype = new ComponentDummy();\nReactPureComponent.prototype.constructor = ReactPureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(ReactPureComponent.prototype, ReactComponent.prototype);\nReactPureComponent.prototype.isPureReactComponent = true;\n\nmodule.exports = ReactPureComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/ReactPureComponent.js\n// module id = 374\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar nextDebugID = 1;\n\nfunction getNextDebugID() {\n  return nextDebugID++;\n}\n\nmodule.exports = getNextDebugID;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/getNextDebugID.js\n// module id = 377\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;\n  return children;\n}\n\nmodule.exports = onlyChild;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/onlyChild.js\n// module id = 378\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar REACT_ELEMENT_TYPE = require('./ReactElementSymbol');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * This is inlined from ReactElement since this file is shared between\n * isomorphic and renderers. We could extract this to a\n *\n */\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (component && typeof component === 'object' && component.key != null) {\n    // Explicit key\n    return KeyEscapeUtils.escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' ||\n  // The following is inlined from ReactElement. This means we can optimize\n  // some checks. React Fiber also inlines this logic for similar purposes.\n  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          var mapsAsChildrenAddendum = '';\n          if (ReactCurrentOwner.current) {\n            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();\n            if (mapsAsChildrenOwnerName) {\n              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';\n            }\n          }\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/traverseAllChildren.js\n// module id = 379\n// module chunks = 0","class Agent {\n    /**\n     * @param {int} numberOfPossibleStates\n     * @param {int} numberOfPossibleActions\n     * @param {Object} [options]\n     */\n    constructor(numberOfPossibleStates, numberOfPossibleActions, options = {}) {\n        this._actionCount = numberOfPossibleActions;\n        this._stateCount = numberOfPossibleStates;\n\n        this._options = Object.assign(\n            {   //Default options\n                learningEnabled: true, //set to false to disable all learning for higher execution speeds\n                learningRate: 0.1,//alpha - how much new experiences overwrite previous ones\n                explorationProbability: 0.05,//epsilon - the probability of taking random actions in the Epsilon Greedy policy\n                discountFactor: 0.9,//discountFactor - future rewards are multiplied by this\n            },\n            options\n        );\n\n        //Stores the expected reward for a given state and action. Is a 2D table stored as a flat array for higher speed\n        this._q = new Float64Array(this._stateCount * this._actionCount);\n\n        //Stores 0 if we haven't seen a reward for this state-action before, stores 1 if we have\n        this._initializedQ = new Int8Array(this._stateCount * this._actionCount);\n\n        //Some values used in the SARSA algorithm. We pre-calculate them here for higher speed\n        this._oneMinusEpsilon = 1 - this._options.explorationProbability;\n        this._epsilonDividedByActionCount = this._options.explorationProbability / this._actionCount;\n\n        //Properties used to store statistics about the last action for reporting reasons\n        this._qOfLastState = new Float64Array(this._actionCount);\n        this._lastActionWasRandom = false;\n\n        //The last state and action we saw\n        this._lastState = 0;\n        this._lastAction = 0;\n    }\n\n    /**\n     * Learn from the last reward, decide on the next action to take, and return the next action\n     *\n     * @param {float|null} lastReward if we are on the very first step, pass null here, otherwise pass a float\n     * @param {int} state\n     * @returns {int} the action that the agent decided to take\n     */\n    decide(lastReward, state) {\n        if (lastReward !== null && this._options.learningEnabled === true) {\n            //Learn from the current step\n            this._learnFromStateActionRewardState(this._lastState, this._lastAction, lastReward, state);\n        }\n\n        this._lastActionWasRandom = false;\n\n        var greatistExpectedReward = this._q[state * this._actionCount];\n        var actionWithGreatistExpectedReward = 0;\n        for (var actionI = 0; actionI < this._actionCount; actionI++) {\n            var expectedRewardOfThisAction = this._q[state * this._actionCount + actionI]\n\n            //Log the last action weights. Charting these can be useful\n            this._qOfLastState[actionI] = expectedRewardOfThisAction;\n\n            if (expectedRewardOfThisAction > greatistExpectedReward) {\n                greatistExpectedReward = expectedRewardOfThisAction;\n                actionWithGreatistExpectedReward = actionI;\n            }\n        }\n\n        this._lastAction = actionWithGreatistExpectedReward;\n\n        //Epsilon greedy exploration policy - take random exploration actios with a probability of epsilon\n        if (Math.random() < this._options.explorationProbability) {\n            this._lastAction = Math.floor(Math.random() * this._actionCount);\n            this._lastActionWasRandom = true;\n        }\n\n        this._lastState = state;\n\n        return this._lastAction;\n    }\n\n    /**\n     * The SARSA algorithm with an epsilon greedy policy\n     *\n     * @param {int} state\n     * @param {int} action\n     * @param {float} reward\n     * @param {int} nextState\n     * @private\n     */\n    _learnFromStateActionRewardState(state, action, reward, nextState) {\n        var currentStateActionKey = state * this._actionCount + action;\n        var qOfCurrentStateAction = this._q[currentStateActionKey];\n\n        if (qOfCurrentStateAction === 0.00\n            && this._initializedQ[currentStateActionKey] !== 1\n        ) {\n            //Use first seen reward for a state-action as the initial value to speed up initial learning\n            this._initializedQ[currentStateActionKey] = 1;//1 for true\n            this._q[currentStateActionKey] = reward;\n            return;\n        }\n\n        var nextStateKeyPrepend = nextState * this._actionCount;\n        var maxQofNextStateAction = this._q[nextStateKeyPrepend];\n        var sumQofNextStateActions = this._q[nextStateKeyPrepend];\n        for (var i = nextStateKeyPrepend + 1, max = nextStateKeyPrepend + this._actionCount; i < max; i++) {\n            var thisValue = this._q[i];\n            sumQofNextStateActions += thisValue;\n            if (thisValue > maxQofNextStateAction) {\n                maxQofNextStateAction = thisValue;\n            }\n        }\n\n        //Update the Q table by using the SARSA algorithm with an \"epsilon greedy\" policy\n        this._q[currentStateActionKey] += this._options.learningRate * (\n                reward\n                + this._options.discountFactor * (\n                    maxQofNextStateAction * this._oneMinusEpsilon +\n                    sumQofNextStateActions * this._epsilonDividedByActionCount\n                )\n                - qOfCurrentStateAction\n            );\n    }\n\n    /**\n     * Returns some additional info about the last action that was taking. Useful for graphs and reports\n     *\n     * @returns {{action: (number|*), weights: Float64Array, wasRandomlyChosen: boolean}}\n     */\n    getLastActionStats() {\n        return {\n            action: this._lastAction,\n            wasRandomlyChosen: this._lastActionWasRandom,\n            weights: this._qOfLastState\n        }\n    }\n\n    /**\n     * Saves everything the agent has learned to a JSON-serializable object and returns it\n     *\n     * @returns {{q: Array, initializedQ: Array}}\n     */\n    saveToJson() {\n        var q = [];\n        var initializedQ = [];\n        for (var i = 0, len = this._stateCount * this._actionCount; i < len; i++) {\n            q[i] = this._q[i];\n            initializedQ[i] = this._initializedQ[i];\n        }\n        return {q: q, initializedQ: initializedQ};\n    }\n\n    /**\n     * Loads a previously saved agent\n     *\n     * @param {{q: Array, initializedQ: Array}} json\n     */\n    loadFromJson(json) {\n        for (var i = 0, len = this._stateCount * this._actionCount; i < len; i++) {\n            this._q[i] = json.q[i];\n            this._initializedQ[i] = json.initializedQ[i];\n        }\n    }\n}\n\nmodule.exports.Agent = Agent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/tabular-sarsa/src/index.js\n// module id = 380\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 381\n// module chunks = 0","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function (copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function (a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function (a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar standardReleaser = function (instance) {\n  var Klass = this;\n  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances.\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function (CopyConstructor, pooler) {\n  // Casting as any so that flow ignores the actual implementation and trusts\n  // it to match the type we declared\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fourArgumentPooler: fourArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/lib/PooledClass.js\n// module id = 368\n// module chunks = 0"],"sourceRoot":""}